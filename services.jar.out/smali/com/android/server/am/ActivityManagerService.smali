.class public final Lcom/android/server/am/ActivityManagerService;
.super Landroid/app/ActivityManagerNative;
.source "ActivityManagerService.java"

# interfaces
.implements Lcom/android/server/Watchdog$Monitor;
.implements Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/server/am/ActivityManagerService$AppTaskImpl;,
        Lcom/android/server/am/ActivityManagerService$SleepTokenImpl;,
        Lcom/android/server/am/ActivityManagerService$LocalService;,
        Lcom/android/server/am/ActivityManagerService$MemItem;,
        Lcom/android/server/am/ActivityManagerService$ItemMatcher;,
        Lcom/android/server/am/ActivityManagerService$ScreenStatusReceiver;,
        Lcom/android/server/am/ActivityManagerService$PreBootContinuation;,
        Lcom/android/server/am/ActivityManagerService$NeededUriGrants;,
        Lcom/android/server/am/ActivityManagerService$IntentFirewallInterface;,
        Lcom/android/server/am/ActivityManagerService$PermissionController;,
        Lcom/android/server/am/ActivityManagerService$ProcessInfoService;,
        Lcom/android/server/am/ActivityManagerService$Lifecycle;,
        Lcom/android/server/am/ActivityManagerService$CpuBinder;,
        Lcom/android/server/am/ActivityManagerService$DbBinder;,
        Lcom/android/server/am/ActivityManagerService$GraphicsBinder;,
        Lcom/android/server/am/ActivityManagerService$MemBinder;,
        Lcom/android/server/am/ActivityManagerService$MainHandler;,
        Lcom/android/server/am/ActivityManagerService$UiHandler;,
        Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;,
        Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;,
        Lcom/android/server/am/ActivityManagerService$Identity;,
        Lcom/android/server/am/ActivityManagerService$GrantUri;,
        Lcom/android/server/am/ActivityManagerService$Association;,
        Lcom/android/server/am/ActivityManagerService$ForegroundToken;,
        Lcom/android/server/am/ActivityManagerService$BadProcessInfo;,
        Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;
    }
.end annotation


# static fields
.field static final ACTION_DUALSCREEN_FIXED_SCREEN_MODE:Ljava/lang/String; = "com.samsung.android.dualscreen.action.FIXED_SCREEN_MODE"

.field static final ACTION_LOCK_TASK_MODE:Ljava/lang/String; = "com.samsung.android.action.LOCK_TASK_MODE"

.field private static final ACTION_POWER_OFF_ALARM:Ljava/lang/String; = "org.codeaurora.alarm.action.POWER_OFF_ALARM"

.field private static ACTIVITY_RESUME_BOOSTER_TIMEOUT:I = 0x0

.field static final ALLOW_FULL_ONLY:I = 0x2

.field static final ALLOW_NON_FULL:I = 0x0

.field static final ALLOW_NON_FULL_IN_PROFILE:I = 0x1

.field private static final AMS_POLICY_ENFORCING:Ljava/lang/String; = "persist.security.ams.enforcing"

.field static final APP_BOOST_DEACTIVATE_MSG:I = 0x3a

.field static final APP_BOOST_MESSAGE_DELAY:I = 0xbb8

.field static final APP_BOOST_TIMEOUT:I = 0x9c4

.field static final APP_STATE_BROADCAST_STOP_MSG:I = 0x190

.field static final APP_SWITCH_DELAY_TIME:J = 0x1388L

.field private static final ATTR_CREATED_TIME:Ljava/lang/String; = "createdTime"

.field private static final ATTR_MODE_FLAGS:Ljava/lang/String; = "modeFlags"

.field private static final ATTR_PREFIX:Ljava/lang/String; = "prefix"

.field private static final ATTR_SOURCE_PKG:Ljava/lang/String; = "sourcePkg"

.field private static final ATTR_SOURCE_USER_ID:Ljava/lang/String; = "sourceUserId"

.field private static final ATTR_TARGET_PKG:Ljava/lang/String; = "targetPkg"

.field private static final ATTR_TARGET_USER_ID:Ljava/lang/String; = "targetUserId"

.field private static final ATTR_URI:Ljava/lang/String; = "uri"

.field private static final ATTR_USER_HANDLE:Ljava/lang/String; = "userHandle"

.field static final BATTERY_STATS_TIME:J = 0x1b7740L

.field private static final BBC_AGENT:Ljava/lang/String; = "com.samsung.android.bbc.bbcagent"

.field static final BROADCAST_BG_TIMEOUT:I

.field private static final BROADCAST_DHA_DEBUG_ON:Ljava/lang/String; = "com.android.server.am.BROADCAST_DHA_DEBUG_ON"

.field private static final BROADCAST_DO_TRIM:Ljava/lang/String; = "com.android.server.am.BROADCAST_DO_TRIM"

.field static final BROADCAST_FG_TIMEOUT:I

.field private static final BROADCAST_SET_DHA_PARAMETER:Ljava/lang/String; = "com.android.server.am.BROADCAST_SET_DHA_PARAMETER"

.field private static final BROADCAST_SET_TRIM_TH:Ljava/lang/String; = "com.android.server.am.BROADCAST_SET_TRIM_TH"

.field static final CALLED_PRE_BOOTS_FILENAME:Ljava/lang/String; = "called_pre_boots.dat"

.field static final CANCEL_HEAVY_NOTIFICATION_MSG:I = 0x19

.field static final CHECK_EXCESSIVE_WAKE_LOCKS_MSG:I = 0x1b

.field static final CHECK_PERMISSION_SHAREDUID:I = 0x3

.field static final CLEAR_DNS_CACHE_MSG:I = 0x1c

.field static final COLLECT_CPU_DATA:I = 0x2

.field static final COLLECT_PSS_BG_MSG:I = 0x1

.field static final CONTENT_PROVIDER_PUBLISH_TIMEOUT:I = 0x2710

.field static final CONTENT_PROVIDER_PUBLISH_TIMEOUT_MSG:I = 0x3b

.field static final CONTINUE_USER_SWITCH_MSG:I = 0x23

.field static final CPU_MIN_CHECK_DURATION:I = 0x493e0

.field static final DEBUG_DUALSCREEN:Z

.field static final DEFAULT_KILL_MAX_MEM_THRESHOLD:J = 0x25800000L

.field static final DEFAULT_KILL_MAX_SIZE:I = 0x1b

.field static final DEFAULT_KILL_MIN_ADJ:I = 0xa

.field static final DEFAULT_KILL_MIN_MEM_THRESHOLD:J = 0x12c00000L

.field static final DEFAULT_KILL_MIN_SIZE:I = 0x5

.field static DEFERRED_Q_ENABLED:Z = false

.field static final DELETE_DUMPHEAP_MSG:I = 0x34

.field static final DENIED_PERMISSION_BY_AASA:I = 0x4

.field static final DENIED_PERMISSION_BY_CM:I = 0x2

.field static final DENIED_PERMISSION_BY_SPDRULES:I = 0x5

.field static final DISABLE_ACTIVITY_SWITCH_BOOSTER:I = 0x3e7

.field static final DISMISS_DIALOG_MSG:I = 0x30

.field static final DISPATCH_PROCESSES_CHANGED:I = 0x1f

.field static final DISPATCH_PROCESS_DIED:I = 0x20

.field static final DISPATCH_UIDS_CHANGED_MSG:I = 0x36

.field static final DO_PENDING_ACTIVITY_LAUNCHES_MSG:I = 0x15

.field static final DROPBOX_MAX_SIZE:I = 0x40000

.field private static final DTS_ACTIONCODE_CHECK_PACKAGE_AVAILABILITY:I = 0x65

.field private static final DTS_ACTIONCODE_EDIT_WHITELIST:I = 0x64

.field private static final DTS_ACTIONCODE_GET_WHITELIST:I = 0x66

.field public static final DUAL_SCREEN_TYPE_MAX:I = 0x4

.field static final DUMP_MEM_BUCKETS:[J

.field static final DUMP_MEM_OOM_ADJ:[I

.field static final DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

.field static final DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

.field static final DUMP_PRIORITY_DATA_TO_DISK:I = 0x3

.field static final DVFS_TAIL_INIT:I = 0x0

.field static final DVFS_TAIL_RUN:I = 0x1

.field static final EMPTY_STRING_ARRAY:[Ljava/lang/String;

.field static final ENTER_ANIMATION_COMPLETE_MSG:I = 0x2c

.field public static final FEATURE_ENABLE_APPFREEZER:Z = false

.field static final FINALIZE_PENDING_INTENT_MSG:I = 0x17

.field static final FINISH_BOOTING_MSG:I = 0x2d

.field static final FIRST_ACTIVITY_STACK_MSG:I = 0x64

.field static final FIRST_BROADCAST_QUEUE_MSG:I = 0xc8

.field static final FIRST_COMPAT_MODE_MSG:I = 0x12c

.field static final FIRST_SUPERVISOR_STACK_MSG:I = 0x64

.field static final FOREGROUND_PROFILE_CHANGED_MSG:I = 0x35

.field static final FULL_PSS_LOWERED_INTERVAL:I = 0x1d4c0

.field static final FULL_PSS_MIN_INTERVAL:I = 0x927c0

.field static final GC_BACKGROUND_PROCESSES_MSG:I = 0x5

.field static final GC_MIN_INTERVAL:I = 0xea60

.field static final GC_TIMEOUT:I

.field static final GOLDEN_LIST_ARRAY:[Ljava/lang/String;

.field static final GRANTED_PERMISSION:I = 0x1

.field static final IMMERSIVE_MODE_LOCK_MSG:I = 0x25

.field static final INSTRUMENTATION_KEY_DISPATCHING_TIMEOUT:I

.field static final IS_USER_BUILD:Z

.field static final KEY_DISPATCHING_TIMEOUT:I

.field static final KILL_APPLICATION_MSG:I = 0x16

.field static final KNOX_CONTENTPROVIDER_BLACKLIST_ARRAY:[Ljava/lang/String;

.field private static final KSM_SHARED:I = 0x0

.field private static final KSM_SHARING:I = 0x1

.field private static final KSM_UNSHARED:I = 0x2

.field private static final KSM_VOLATILE:I = 0x3

.field static final LAST_DONE_VERSION:I = 0x2710

.field static final LAST_PREBOOT_DELIVERED_FILE_VERSION:I = 0x2710

.field static final LIBC_DEBUG_ENABLED:Z

.field static final LIBC_DEBUG_MUL:I

.field static final LOCK_SCREEN_HIDDEN:I = 0x0

.field static final LOCK_SCREEN_LEAVING:I = 0x1

.field static final LOCK_SCREEN_SHOWN:I = 0x2

.field static final MARS_EXCUTE_POLICY_MSG:I = 0x385

.field static final MAX_BG_SPLIT_QUEUE_NUM:I = 0x3

.field private static final MAX_DUP_SUPPRESSED_STACKS:I = 0x1388

.field static final MAX_PERSISTED_URI_GRANTS:I = 0x80

.field static final MAX_RUNNING_USERS:I = 0x3

.field static final MONITOR_CPU_MAX_TIME:J = 0xfffffffL

.field static final MONITOR_CPU_MIN_TIME:J = 0x3e8L

.field static final MONITOR_CPU_USAGE:Z = true

.field static final MONITOR_THREAD_CPU_USAGE:Z = false

.field static final MY_PID:I

.field static final NOTIFY_CLEARTEXT_NETWORK_MSG:I = 0x32

.field static final NOTIFY_TASK_STACK_CHANGE_LISTENERS_DELAY:I = 0x3e8

.field static final NOTIFY_TASK_STACK_CHANGE_LISTENERS_MSG:I = 0x31

.field static final PENDING_ASSIST_EXTRAS_LONG_TIMEOUT:I = 0x7d0

.field static final PENDING_ASSIST_EXTRAS_TIMEOUT:I = 0x1f4

.field static final PENDING_UNFIX_TASK_CALLED_BY_FINISHACTIVITY:I = 0x0

.field static final PENDING_UNFIX_TASK_CALLED_BY_FINISHACTIVITYAFFINITY:I = 0x1

.field static final PENDING_UNFIX_TASK_CALLED_BY_MOVETASKTOBACK:I = 0x2

.field static final PERMISSION_DUALSCREEN_FIXED_SCREEN_MODE:Ljava/lang/String; = "com.samsung.android.dualscreen.permission.FIXED_SCREEN_MODE"

.field static final PERMISSION_LOCK_TASK_MODE:Ljava/lang/String; = "com.samsung.android.permission.LOCK_TASK_MODE"

.field private static final PERSISTENT_MASK:I = 0x9

.field static final PERSIST_URI_GRANTS_MSG:I = 0x26

.field static final POST_DUMP_HEAP_NOTIFICATION_MSG:I = 0x33

.field static final POST_HEAVY_NOTIFICATION_MSG:I = 0x18

.field static final POWER_CHECK_DELAY:I = 0xdbba0

.field private static final POWER_OFF_ALARM:Ljava/lang/String; = "powerOffAlarm"

.field static final PROC_START_TIMEOUT:I

.field static final PROC_START_TIMEOUT_MSG:I = 0x14

.field static final PROC_START_TIMEOUT_WITH_WRAPPER:I = 0x124f80

.field static final REBOOT_SAFE_MODE:I = 0x3e8

.field static final RELEASE_DVFS_LOCK:I = 0x3c

.field static final REPORT_MEM_USAGE_MSG:I = 0x21

.field static final REPORT_TIME_TRACKER_MSG:I = 0x37

.field static final REPORT_USER_SWITCH_COMPLETE_MSG:I = 0x38

.field static final REPORT_USER_SWITCH_MSG:I = 0x22

.field static final REPORT_VRAPP_ERROR_MSG:I = 0x3d

.field static final REQUEST_ALL_PSS_MSG:I = 0x27

.field static final RTCC_ASYNC:I = 0x1

.field static final RTCC_TRIGGER_MSG:I = 0x3f

.field static final SEND_LOCALE_TO_MOUNT_DAEMON_MSG:I = 0x2f

.field static final SERVICE_TIMEOUT_MSG:I = 0xc

.field static final SERVICE_USAGE_INTERACTION_TIME:I = 0x1b7740

.field static final SHIP_BUILD:Z

.field static final SHOW_CMALERTDIALOG_MSG:I = 0x41

.field static final SHOW_CMPERMISSION_ERROR_MSG:I = 0x40

.field static final SHOW_COMPAT_MODE_DIALOG_MSG:I = 0x1e

.field static final SHOW_ERROR_MSG:I = 0x1

.field static final SHOW_FACTORY_ERROR_MSG:I = 0x3

.field static final SHOW_FINGERPRINT_ERROR_MSG:I = 0xf

.field private static final SHOW_KNOX_SECURITY_TOAST:I = 0x259

.field static final SHOW_NOT_RESPONDING_MSG:I = 0x2

.field static final SHOW_STRICT_MODE_VIOLATION_MSG:I = 0x1a

.field static final SHOW_UID_ERROR_MSG:I = 0xe

.field static final SHUTDOWN_UI_AUTOMATION_CONNECTION_MSG:I = 0x39

.field static SNN_MERGE_DUPLICATE_ENABLED:Z = false

.field static SNN_PRIORITY_ENABLED:Z = false

.field static final STARTCANCELBYTEMPERATURE:I = 0x1f4

.field static final START_PROFILES_MSG:I = 0x28

.field static final START_USER_SWITCH_MSG:I = 0x2e

.field static final STOCK_PM_FLAGS:I = 0x400

.field private static final SYSTEM_DEBUGGABLE:Ljava/lang/String; = "ro.debuggable"

.field static final SYSTEM_USER_CURRENT_MSG:I = 0x2b

.field static final SYSTEM_USER_START_MSG:I = 0x2a

.field static final TAG:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_ACROSS_KNOX:Ljava/lang/String; = "ACROSSKNOX PERMISSION CHECK"

.field private static final TAG_BACKUP:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_BROADCAST:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_CLEANUP:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_CONFIGURATION:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_FOCUS:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_IMMERSIVE:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_LOCKSCREEN:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_LOCKTASK:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_LRU:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_MU:Ljava/lang/String; = "ActivityManager_MU"

.field private static final TAG_OOM_ADJ:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_POWER:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_PROCESSES:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_PROCESS_OBSERVERS:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_PROVIDER:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_PSS:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_RECENTS:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_SCREENOFF_TOKEN_MAINSCREEN:Ljava/lang/String; = "MainScreenOff"

.field private static final TAG_SCREENOFF_TOKEN_SUBSCREEN:Ljava/lang/String; = "SubScreenOff"

.field private static final TAG_SERVICE:Ljava/lang/String; = "ActivityManager"

.field static final TAG_SPLIT_INTENT:Ljava/lang/String; = "splitIntent"

.field private static final TAG_STACK:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_SWITCH:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_UID_OBSERVERS:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_URI_GRANT:Ljava/lang/String; = "uri-grant"

.field private static final TAG_URI_GRANTS:Ljava/lang/String; = "uri-grants"

.field private static final TAG_URI_PERMISSION:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_VISIBILITY:Ljava/lang/String; = "ActivityManager"

.field private static final TAG_VISIBLE_BEHIND:Ljava/lang/String; = "ActivityManager"

.field static final TOP_STATE_APP:I = 0x3

.field static final TOP_STATE_HOME:I = 0x1

.field static final TOP_STATE_IS_CREATING:I = 0x0

.field static final TOP_STATE_RECENTS_APP:I = 0x2

.field static final UPDATE_CONFIGURATION_MSG:I = 0x4

.field static final UPDATE_HTTP_PROXY_MSG:I = 0x1d

.field static final UPDATE_MULTIWINDOW_STYLE:I = 0x2bc

.field static final UPDATE_TIME:I = 0x29

.field static final UPDATE_TIME_ZONE:I = 0xd

.field static final USAGE_STATS_INTERACTION_INTERVAL:J = 0x5265c00L

.field static final USER_SWITCH_TIMEOUT:I = 0x7d0

.field static final USER_SWITCH_TIMEOUT_MSG:I = 0x24

.field static final WAIT_FOR_DEBUGGER_MSG:I = 0x6

.field static final WAKE_LOCK_MIN_CHECK_DURATION:I = 0x493e0

.field static final WHITE_LIST_ARRAY:[Ljava/lang/String;

.field private static final WIDGET_INFO_FILE:Ljava/lang/String; = "appwidgets.xml"

.field private static final bDBQEnabled:Z = true

.field private static final bDCSEnabled:Z = true

.field private static final bDSSEnabled:Z = true

.field private static final bDTSEnabled:Z = true

.field static curTopState:I

.field static golden_list_key:I

.field private static final is3LMAllowed:Z

.field static final killProcessGroupHandler:Landroid/os/Handler;

.field private static final mAMSLog:Landroid/content/pm/AMSLogger;

.field static final mActivityTrigger:Lcom/android/internal/app/ActivityTrigger;

.field static mCMErrorPackageName:Ljava/lang/String;

.field static mCMErrorPackageUID:I

.field static mCMErrorPermissionName:Ljava/lang/String;

.field static mCMManagedPermissionError:I

.field static mCMMessageByApp:Ljava/util/HashSet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashSet",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field private static mCurCSCver:Ljava/lang/String;

.field static mDVFSHelperTailRun:I

.field static mIsSPDError:Z

.field static mIsSPDErrorPackage:Ljava/lang/String;

.field static mIsSPDErrorUID:I

.field public static mKnoxInfo:Landroid/os/Bundle;

.field static final mRTCCTriggerFile:Ljava/io/File;

.field static mSystemUIAppThread:Landroid/app/IApplicationThread;

.field static mSystemUIProcessRecord:Lcom/android/server/am/ProcessRecord;

.field static mSytemUIPid:I

.field private static final sCallerIdentity:Ljava/lang/ThreadLocal;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/lang/ThreadLocal",
            "<",
            "Lcom/android/server/am/ActivityManagerService$Identity;",
            ">;"
        }
    .end annotation
.end field

.field static white_list_key:I


# instance fields
.field private final ACTIVITY_PROC_NAME:I

.field private final APPLICATION_PROC_NAME:I

.field private final DELAY_UNTIL_FINISH:J

.field final GL_ES_VERSION:I

.field private final PERIOD_INTERVAL:J

.field private SNN_CPUTH:I

.field private SNN_CPU_COLLECT_DATA_INTERVAL:J

.field private SNN_CPU_FRAME_INTENSITY_RATIO:I

.field private SNN_DELAY_APP_LAUNCH:I

.field private SNN_DELAY_UNIT:I

.field private SNN_IO_WAIT_TH:I

.field private SNN_LAST_SERVICE_START:I

.field private SNN_MAX_DELAY:I

.field SUPPORT_APPLOCK:Z

.field private bActivityBoosterOn:Z

.field private cpuCheckTimer:Landroid/os/CountDownTimer;

.field private final isElasticEnabled:Z

.field itsOnProcessObserver:Landroid/app/IProcessObserver;

.field private knoxVersionInfo:Landroid/os/Bundle;

.field mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

.field mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

.field final mActiveUids:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/am/UidRecord;",
            ">;"
        }
    .end annotation
.end field

.field mAdjSeq:I

.field mAllowLowerMemLevel:Z

.field private final mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashSet",
            "<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field mAlwaysFinishActivities:Z

.field mApi:Lcom/itsoninc/android/ItsOnOemApi;

.field mAppBindArgs:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Ljava/lang/String;",
            "Landroid/os/IBinder;",
            ">;"
        }
    .end annotation
.end field

.field private mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

.field final mAppOpsService:Lcom/android/server/AppOpsService;

.field mAppSwitchesAllowedTime:J

.field private mApplicationPolicy:Landroid/app/enterprise/ApplicationPolicy;

.field final mAssociations:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Landroid/util/ArrayMap",
            "<",
            "Landroid/content/ComponentName;",
            "Landroid/util/SparseArray",
            "<",
            "Landroid/util/ArrayMap",
            "<",
            "Ljava/lang/String;",
            "Lcom/android/server/am/ActivityManagerService$Association;",
            ">;>;>;>;"
        }
    .end annotation
.end field

.field mAutoStopProfiler:Z

.field final mAvailProcessChanges:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;",
            ">;"
        }
    .end annotation
.end field

.field final mAvailUidChanges:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/UidRecord$ChangeItem;",
            ">;"
        }
    .end annotation
.end field

.field private mBBCOverridePath:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Ljava/lang/Integer;",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field mBServiceAppThreshold:I

.field mBackWindowDisplayId:I

.field mBackupAppName:Ljava/lang/String;

.field mBackupTarget:Lcom/android/server/am/BackupRecord;

.field final mBadProcesses:Lcom/android/internal/app/ProcessMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/internal/app/ProcessMap",
            "<",
            "Lcom/android/server/am/ActivityManagerService$BadProcessInfo;",
            ">;"
        }
    .end annotation
.end field

.field private mBatteryOverheatLevel:I

.field final mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

.field mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

.field final mBgHandler:Landroid/os/Handler;

.field mBgSplitBroadcastQueue:[Lcom/android/server/am/BroadcastQueue;

.field mBgSplitQueueFinishedNum:I

.field mBgSplitQueueNum:I

.field mBgSplitQueueOnlyRun:Z

.field private mBoostStartTime:J

.field mBootAnimationComplete:Z

.field private mBootPartialWakeLock:Landroid/os/PowerManager$WakeLock;

.field mBooted:Z

.field mBooting:Z

.field private mBroadcastFilterComparator:Ljava/util/Comparator;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Comparator",
            "<",
            "Lcom/android/server/am/BroadcastFilter;",
            ">;"
        }
    .end annotation
.end field

.field final mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

.field mCallFinishBooting:Z

.field private mCfmsService:Landroid/os/ICustomFrequencyManager;

.field private mCheckSIOPLevelList:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Ljava/lang/String;",
            "Ljava/lang/Boolean;",
            ">;"
        }
    .end annotation
.end field

.field mCheckedForSetup:Z

.field mCompatModeDialog:Lcom/android/server/am/CompatModeDialog;

.field final mCompatModePackages:Lcom/android/server/am/CompatModePackages;

.field mConfiguration:Landroid/content/res/Configuration;

.field mConfigurationSeq:I

.field mConfigurationSeqs:[I

.field mConfigurations:Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList",
            "<",
            "Landroid/content/res/Configuration;",
            ">;"
        }
    .end annotation
.end field

.field mContext:Landroid/content/Context;

.field mController:Landroid/app/IActivityController;

.field mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;

.field private mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

.field private mCurResumedPackage:Ljava/lang/String;

.field private mCurResumedUid:I

.field mCurUserSwitchCallback:Ljava/lang/Object;

.field private mCurrentPackage:Ljava/lang/String;

.field mCurrentProfileIds:[I

.field mCurrentUserId:I

.field mDTSHelper:Landroid/os/DTSHelper;

.field mDVFSHelper:Landroid/os/DVFSHelper;

.field mDVFSHelperForBUS:Landroid/os/DVFSHelper;

.field mDVFSHelperForBUSTail:Landroid/os/DVFSHelper;

.field mDVFSHelperForCore:Landroid/os/DVFSHelper;

.field mDVFSHelperForCoreTail:Landroid/os/DVFSHelper;

.field mDVFSHelperForGPU:Landroid/os/DVFSHelper;

.field mDVFSHelperForGPUTail:Landroid/os/DVFSHelper;

.field mDVFSHelperTail:Landroid/os/DVFSHelper;

.field mDbqHelper:Landroid/os/DbqHelper;

.field mDcsHelper:Landroid/os/DcsHelper;

.field mDebugApp:Ljava/lang/String;

.field mDebugTransient:Z

.field mDeferredBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

.field mDeviceOwnerName:Ljava/lang/String;

.field mDidAppSwitch:Z

.field mDidDexOpt:Z

.field mDidUpdate:Z

.field mDssHelper:Landroid/os/DssHelper;

.field mDualScreenPolicy:Lcom/android/server/am/DualScreenPolicy;

.field private final mDvfsHelperLock:Ljava/lang/Object;

.field public mEmergencyMgr:Lcom/sec/android/emergencymode/EmergencyManager;

.field mEnableBServicePropagation:Z

.field mFactoryTest:I

.field mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

.field mFocusedActivity:Lcom/android/server/am/ActivityRecord;

.field private mForegroundPackageName:Ljava/lang/String;

.field final mForegroundPackages:Lcom/android/internal/app/ProcessMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/internal/app/ProcessMap",
            "<",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;>;"
        }
    .end annotation
.end field

.field final mForegroundProcesses:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/am/ActivityManagerService$ForegroundToken;",
            ">;"
        }
    .end annotation
.end field

.field mFrontActivities:[Lcom/android/server/am/ActivityRecord;

.field mFullPssPending:Z

.field final mGrabedIntentSenderRecords:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Lcom/android/server/am/PendingIntentRecord$Key;",
            "Lcom/android/server/am/PendingIntentRecord;",
            ">;"
        }
    .end annotation
.end field

.field private final mGrantFile:Landroid/util/AtomicFile;

.field private mGrantPermissionsActivityName:Ljava/lang/String;

.field private final mGrantedUriPermissions:Landroid/util/SparseArray;
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Landroid/util/ArrayMap",
            "<",
            "Lcom/android/server/am/ActivityManagerService$GrantUri;",
            "Lcom/android/server/am/UriPermission;",
            ">;>;"
        }
    .end annotation
.end field

.field final mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

.field final mHandlerThread:Lcom/android/server/ServiceThread;

.field mHasRecents:Z

.field mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

.field mHomeProcess:Lcom/android/server/am/ProcessRecord;

.field private mIOWaitPercentage:I

.field mInitBgSplitQueueNum:I

.field private mInstaller:Lcom/android/server/pm/Installer;

.field public mIntentFirewall:Lcom/android/server/firewall/IntentFirewall;

.field final mIntentSenderRecords:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Lcom/android/server/am/PendingIntentRecord$Key;",
            "Ljava/lang/ref/WeakReference",
            "<",
            "Lcom/android/server/am/PendingIntentRecord;",
            ">;>;"
        }
    .end annotation
.end field

.field mIsBackWindowShown:Z

.field private mIsBoosted:Z

.field private mIsCommingFromLockScreenPath:Z

.field mIsKeyguardWaitingForActivityDrawnRequested:Z

.field mIsSupportManualScreenPinning:Z

.field final mIsolatedProcesses:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field public mKeyguardGoingAway:Z

.field mKillMaxCnt:I

.field mKillMemMaxThreshold:J

.field mKillMemMinThreshold:J

.field mKillMinAdj:I

.field mKillMinCnt:I

.field mLastAddedTaskActivity:Landroid/content/pm/ActivityInfo;

.field mLastAddedTaskComponent:Landroid/content/ComponentName;

.field mLastAddedTaskUid:I

.field final mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

.field private mLastFocusedUserId:I

.field mLastFullPssTime:J

.field mLastIdleTime:J

.field mLastMemUsageReportTime:J

.field mLastMemoryLevel:I

.field mLastNumProcesses:I

.field mLastPowerCheckRealtime:J

.field mLastPowerCheckUptime:J

.field mLastWriteTime:J

.field mLaunchWarningShown:Z

.field final mLaunchingProviders:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ContentProviderRecord;",
            ">;"
        }
    .end annotation
.end field

.field mLocalDeviceIdleController:Lcom/android/server/DeviceIdleController$LocalService;

.field mLocalPowerManager:Landroid/os/PowerManagerInternal;

.field public mLockScreenShown:I

.field mLockTaskPackages:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<[",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field mLowRamStartTime:J

.field mLowRamTimeSinceLastIdle:J

.field private mLpnetManager:Lcom/android/server/LpnetManagerService;

.field mLruProcessActivityStart:I

.field mLruProcessServiceStart:I

.field final mLruProcesses:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field mLruSeq:I

.field public mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

.field mMemWatchDumpFile:Ljava/lang/String;

.field mMemWatchDumpPid:I

.field mMemWatchDumpProcName:Ljava/lang/String;

.field mMemWatchDumpUid:I

.field final mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/internal/app/ProcessMap",
            "<",
            "Landroid/util/Pair",
            "<",
            "Ljava/lang/Long;",
            "Ljava/lang/String;",
            ">;>;"
        }
    .end annotation
.end field

.field mMinBServiceAgingTime:I

.field public mMinimizeAllPenWindowRequested:Z

.field mMultiWindowPolicy:Lcom/android/server/am/MultiWindowPolicy;

.field mNewNumAServiceProcs:I

.field mNewNumServiceProcs:I

.field mNextIsolatedProcessUid:I

.field mNumCachedHiddenProcs:I

.field mNumNonCachedProcs:I

.field mNumServiceProcs:I

.field mOnBattery:Z

.field mOpenGlTraceApp:Ljava/lang/String;

.field mOrigDebugApp:Ljava/lang/String;

.field mOrigWaitForDebugger:Z

.field private mOverheatTextId:I

.field final mPendingAssistExtras:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;",
            ">;"
        }
    .end annotation
.end field

.field final mPendingProcessChanges:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;",
            ">;"
        }
    .end annotation
.end field

.field final mPendingPssProcesses:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field final mPendingUidChanges:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/UidRecord$ChangeItem;",
            ">;"
        }
    .end annotation
.end field

.field mPendingUnfixTask:I

.field private mPermissionRequestActivities:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field private mPersistDownloadablePkgs:Ljava/util/HashSet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashSet",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field final mPersistentStartingProcesses:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field private mPersonaManager:Lcom/android/server/pm/PersonaManagerService;

.field final mPidsSelfLocked:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field private mPreviousPackage:Ljava/lang/String;

.field mPreviousProcess:Lcom/android/server/am/ProcessRecord;

.field mPreviousProcessVisibleTime:J

.field mPrioritiseProcess:Lcom/android/server/am/PrioritizeLRUProcess;

.field final mProcessCpuMutexFree:Ljava/util/concurrent/atomic/AtomicBoolean;

.field final mProcessCpuThread:Ljava/lang/Thread;

.field final mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

.field final mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/internal/app/ProcessMap",
            "<",
            "Ljava/lang/Long;",
            ">;"
        }
    .end annotation
.end field

.field mProcessLimit:I

.field mProcessLimitOverride:I

.field final mProcessList:Lcom/android/server/am/ProcessList;

.field final mProcessNames:Lcom/android/internal/app/ProcessMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/internal/app/ProcessMap",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field final mProcessObservers:Landroid/os/RemoteCallbackList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/os/RemoteCallbackList",
            "<",
            "Landroid/app/IProcessObserver;",
            ">;"
        }
    .end annotation
.end field

.field final mProcessStats:Lcom/android/server/am/ProcessStatsService;

.field final mProcessesOnHold:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field mProcessesReady:Z

.field final mProcessesToGc:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field mProfileApp:Ljava/lang/String;

.field mProfileFd:Landroid/os/ParcelFileDescriptor;

.field mProfileFile:Ljava/lang/String;

.field mProfileProc:Lcom/android/server/am/ProcessRecord;

.field mProfileType:I

.field final mProviderMap:Lcom/android/server/am/ProviderMap;

.field mReceiverLogThresholdMs:J

.field final mReceiverResolver:Lcom/android/server/IntentResolver;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/server/IntentResolver",
            "<",
            "Lcom/android/server/am/BroadcastFilter;",
            "Lcom/android/server/am/BroadcastFilter;",
            ">;"
        }
    .end annotation
.end field

.field final mRecentTasks:Lcom/android/server/am/RecentTasks;

.field mRecentsProcess:Lcom/android/server/am/ProcessRecord;

.field final mRegisteredReceivers:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/am/ReceiverList;",
            ">;"
        }
    .end annotation
.end field

.field final mRemovedProcesses:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field final mReplacedPackages:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field private mResolveInfoComparator:Ljava/util/Comparator;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Comparator",
            "<",
            "Landroid/content/pm/ResolveInfo;",
            ">;"
        }
    .end annotation
.end field

.field private mResolvePrioritySorter:Ljava/util/Comparator;

.field private mRestrictionPolicy:Landroid/app/enterprise/RestrictionPolicy;

.field private mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

.field private mSIOPLevel:I

.field private mSMPackagesList:Ljava/util/HashSet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashSet",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field private final mSMPkgsListLock:Ljava/lang/Object;

.field mSafeMode:Z

.field mSamplingInterval:I

.field mSamsungHomeComponentName:Landroid/content/ComponentName;

.field final mScaledAppNames:Ljava/util/Map;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Map",
            "<",
            "Ljava/lang/String;",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field private volatile mScreenOn:Z

.field mScreenState:[I

.field mSecBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

.field final mServices:Lcom/android/server/am/ActiveServices;

.field private mShowDialogs:Z

.field mShuttingDown:Z

.field final mSleepTokens:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Landroid/app/ActivityManagerInternal$SleepToken;",
            ">;"
        }
    .end annotation
.end field

.field private mSleeping:Z

.field public mSmartAdjustManager:Lcom/android/server/am/SmartAdjustManager;

.field mSplitNum:[I

.field mSplitStart:Z

.field mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

.field mStartedUserArray:[I

.field final mStartedUsers:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/am/UserState;",
            ">;"
        }
    .end annotation
.end field

.field final mStickyBroadcasts:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Landroid/util/ArrayMap",
            "<",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList",
            "<",
            "Landroid/content/Intent;",
            ">;>;>;"
        }
    .end annotation
.end field

.field private final mStrictModeBuffer:Ljava/lang/StringBuilder;

.field final mStringBuilder:Ljava/lang/StringBuilder;

.field mSystemReady:Z

.field mSystemServiceManager:Lcom/android/server/SystemServiceManager;

.field final mSystemThread:Landroid/app/ActivityThread;

.field mTargetDismiss:Landroid/content/Intent;

.field mTargetUserId:I

.field final mTaskPersister:Lcom/android/server/am/TaskPersister;

.field private mTaskStackListeners:Landroid/os/RemoteCallbackList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/os/RemoteCallbackList",
            "<",
            "Landroid/app/ITaskStackListener;",
            ">;"
        }
    .end annotation
.end field

.field mTestPssMode:Z

.field mThumbnailHeight:I

.field mThumbnailWidth:I

.field final mTmpLong:[J

.field mTopAction:Ljava/lang/String;

.field mTopComponent:Landroid/content/ComponentName;

.field mTopData:Ljava/lang/String;

.field mTopProcessState:I

.field mTraceDateFormat:Ljava/text/SimpleDateFormat;

.field mTrackingAssociations:Z

.field final mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

.field final mUidObservers:Landroid/os/RemoteCallbackList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/os/RemoteCallbackList",
            "<",
            "Landroid/app/IUidObserver;",
            ">;"
        }
    .end annotation
.end field

.field final mUpdateLock:Landroid/os/UpdateLock;

.field mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

.field private mUserIsMonkey:Z

.field final mUserLru:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field private mUserManager:Lcom/android/server/pm/UserManagerService;

.field mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

.field final mUserSwitchObservers:Landroid/os/RemoteCallbackList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/os/RemoteCallbackList",
            "<",
            "Landroid/app/IUserSwitchObserver;",
            ">;"
        }
    .end annotation
.end field

.field mVRApplicationPolicy:Lcom/android/server/am/VRApplicationPolicy;

.field mVirtualScreenPolicy:Lcom/android/server/am/VirtualScreenPolicy;

.field mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

.field mWaitForDebugger:Z

.field mWaitingUpdate:Z

.field private mWakefulness:I

.field private final mWidgetList:Ljava/lang/Object;

.field public mWidgetOnHomescreen:Ljava/util/HashSet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashSet",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field mWindowManager:Lcom/android/server/wm/WindowManagerService;

.field private mWms:Lcom/android/server/wallpaper/WallpaperManagerService;


# direct methods
.method static constructor <clinit>()V
    .locals 8

    .prologue
    const/4 v7, 0x2

    const/4 v6, -0x1

    const/4 v5, 0x0

    const/4 v1, 0x1

    const/4 v2, 0x0

    .line 479
    sget-boolean v0, Lcom/samsung/android/dualscreen/DualScreenManager;->DEBUG_AM:Z

    sput-boolean v0, Lcom/android/server/am/ActivityManagerService;->DEBUG_DUALSCREEN:Z

    .line 541
    const-string/jumbo v0, "user"

    sget-object v3, Landroid/os/Build;->TYPE:Ljava/lang/String;

    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    sput-boolean v0, Lcom/android/server/am/ActivityManagerService;->IS_USER_BUILD:Z

    .line 543
    const-string v0, ""

    const-string/jumbo v3, "libc.debug.malloc"

    invoke-static {v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_0

    const-string v0, "0"

    const-string/jumbo v3, "libc.debug.malloc"

    invoke-static {v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_0

    move v0, v1

    :goto_0
    sput-boolean v0, Lcom/android/server/am/ActivityManagerService;->LIBC_DEBUG_ENABLED:Z

    .line 546
    sget-boolean v0, Lcom/android/server/am/ActivityManagerService;->LIBC_DEBUG_ENABLED:Z

    if-eqz v0, :cond_1

    const/16 v0, 0xa

    :goto_1
    sput v0, Lcom/android/server/am/ActivityManagerService;->LIBC_DEBUG_MUL:I

    .line 554
    sget v0, Lcom/android/server/am/ActivityManagerService;->LIBC_DEBUG_MUL:I

    mul-int/lit16 v0, v0, 0x2710

    sput v0, Lcom/android/server/am/ActivityManagerService;->PROC_START_TIMEOUT:I

    .line 566
    sget v0, Lcom/android/server/am/ActivityManagerService;->LIBC_DEBUG_MUL:I

    mul-int/lit16 v0, v0, 0x1388

    sput v0, Lcom/android/server/am/ActivityManagerService;->GC_TIMEOUT:I

    .line 590
    sget v0, Lcom/android/server/am/ActivityManagerService;->LIBC_DEBUG_MUL:I

    mul-int/lit16 v0, v0, 0x2710

    sput v0, Lcom/android/server/am/ActivityManagerService;->BROADCAST_FG_TIMEOUT:I

    .line 591
    const v0, 0xea60

    sget v3, Lcom/android/server/am/ActivityManagerService;->LIBC_DEBUG_MUL:I

    mul-int/2addr v0, v3

    sput v0, Lcom/android/server/am/ActivityManagerService;->BROADCAST_BG_TIMEOUT:I

    .line 593
    sput-boolean v1, Lcom/android/server/am/ActivityManagerService;->DEFERRED_Q_ENABLED:Z

    .line 594
    sput-boolean v1, Lcom/android/server/am/ActivityManagerService;->SNN_PRIORITY_ENABLED:Z

    .line 595
    sput-boolean v2, Lcom/android/server/am/ActivityManagerService;->SNN_MERGE_DUPLICATE_ENABLED:Z

    .line 611
    sget v0, Lcom/android/server/am/ActivityManagerService;->LIBC_DEBUG_MUL:I

    mul-int/lit16 v0, v0, 0x4e20

    sput v0, Lcom/android/server/am/ActivityManagerService;->KEY_DISPATCHING_TIMEOUT:I

    .line 615
    const v0, 0xea60

    sget v3, Lcom/android/server/am/ActivityManagerService;->LIBC_DEBUG_MUL:I

    mul-int/2addr v0, v3

    sput v0, Lcom/android/server/am/ActivityManagerService;->INSTRUMENTATION_KEY_DISPATCHING_TIMEOUT:I

    .line 658
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v0

    sput v0, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    .line 661
    invoke-static {}, Landroid/content/pm/AMSLogger;->getLogger()Landroid/content/pm/AMSLogger;

    move-result-object v0

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->mAMSLog:Landroid/content/pm/AMSLogger;

    .line 663
    new-array v0, v1, [Ljava/lang/String;

    const-string v3, "com.google.android.gsf"

    aput-object v3, v0, v2

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->KNOX_CONTENTPROVIDER_BLACKLIST_ARRAY:[Ljava/lang/String;

    .line 666
    new-array v0, v2, [Ljava/lang/String;

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 668
    const/16 v0, 0xb

    new-array v0, v0, [Ljava/lang/String;

    const-string v3, "com.sec.android.app.sbrowser"

    aput-object v3, v0, v2

    const-string v3, "com.sec.android.gallery3d"

    aput-object v3, v0, v1

    const-string v3, "com.sec.android.app.music"

    aput-object v3, v0, v7

    const/4 v3, 0x3

    const-string v4, "com.samsung.everglades.video"

    aput-object v4, v0, v3

    const/4 v3, 0x4

    const-string v4, "com.google.android.gm"

    aput-object v4, v0, v3

    const/4 v3, 0x5

    const-string v4, "com.google.android.gms"

    aput-object v4, v0, v3

    const/4 v3, 0x6

    const-string v4, "com.samsung.indexservice"

    aput-object v4, v0, v3

    const/4 v3, 0x7

    const-string v4, "com.android.vending"

    aput-object v4, v0, v3

    const/16 v3, 0x8

    const-string v4, "com.android.contacts"

    aput-object v4, v0, v3

    const/16 v3, 0x9

    const-string v4, "com.sec.android.app.camera"

    aput-object v4, v0, v3

    const/16 v3, 0xa

    const-string v4, "com.android.mms"

    aput-object v4, v0, v3

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->WHITE_LIST_ARRAY:[Ljava/lang/String;

    .line 675
    const-string/jumbo v0, "ro.config.dha_whl_key"

    const-string v3, "255"

    invoke-static {v0, v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0

    sput v0, Lcom/android/server/am/ActivityManagerService;->white_list_key:I

    .line 677
    const/4 v0, 0x6

    new-array v0, v0, [Ljava/lang/String;

    const-string v3, "com.sec.android.app.myfiles"

    aput-object v3, v0, v2

    const-string v3, "com.samsung.android.app.memo"

    aput-object v3, v0, v1

    const-string v3, "com.sec.android.app.popupcalculator"

    aput-object v3, v0, v7

    const/4 v3, 0x3

    const-string v4, "com.sec.android.app.clockpackage"

    aput-object v4, v0, v3

    const/4 v3, 0x4

    const-string v4, "com.sec.android.app.voicenote"

    aput-object v4, v0, v3

    const/4 v3, 0x5

    const-string v4, "com.sec.android.mimage.sstudio"

    aput-object v4, v0, v3

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->GOLDEN_LIST_ARRAY:[Ljava/lang/String;

    .line 682
    const-string/jumbo v0, "ro.config.dha_gdl_key"

    const-string v3, "63"

    invoke-static {v0, v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0

    sput v0, Lcom/android/server/am/ActivityManagerService;->golden_list_key:I

    .line 714
    sput-boolean v2, Lcom/android/server/am/ActivityManagerService;->mIsSPDError:Z

    .line 715
    const-string v0, ""

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->mIsSPDErrorPackage:Ljava/lang/String;

    .line 716
    sput v6, Lcom/android/server/am/ActivityManagerService;->mIsSPDErrorUID:I

    .line 717
    sput v6, Lcom/android/server/am/ActivityManagerService;->mCMManagedPermissionError:I

    .line 718
    sput-object v5, Lcom/android/server/am/ActivityManagerService;->mCMErrorPermissionName:Ljava/lang/String;

    .line 719
    sput v6, Lcom/android/server/am/ActivityManagerService;->mCMErrorPackageUID:I

    .line 720
    const-string v0, ""

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->mCMErrorPackageName:Ljava/lang/String;

    .line 721
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->mCMMessageByApp:Ljava/util/HashSet;

    .line 771
    new-instance v0, Ljava/io/File;

    const-string v3, "/sys/class/rtcc/rtcc_trigger"

    invoke-direct {v0, v3}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->mRTCCTriggerFile:Ljava/io/File;

    .line 801
    sput v2, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperTailRun:I

    .line 1466
    new-instance v0, Ljava/lang/ThreadLocal;

    invoke-direct {v0}, Ljava/lang/ThreadLocal;-><init>()V

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    .line 1874
    sput-object v5, Lcom/android/server/am/ActivityManagerService;->mSystemUIProcessRecord:Lcom/android/server/am/ProcessRecord;

    .line 1875
    sput v6, Lcom/android/server/am/ActivityManagerService;->mSytemUIPid:I

    .line 1876
    sput-object v5, Lcom/android/server/am/ActivityManagerService;->mSystemUIAppThread:Landroid/app/IApplicationThread;

    .line 1994
    new-instance v0, Lcom/android/internal/app/ActivityTrigger;

    invoke-direct {v0}, Lcom/android/internal/app/ActivityTrigger;-><init>()V

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->mActivityTrigger:Lcom/android/internal/app/ActivityTrigger;

    .line 2040
    sput-object v5, Lcom/android/server/am/ActivityManagerService;->mKnoxInfo:Landroid/os/Bundle;

    .line 2076
    const-string/jumbo v0, "true"

    const-string/jumbo v3, "ro.product_ship"

    const-string/jumbo v4, "false"

    invoke-static {v3, v4}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    sput-boolean v0, Lcom/android/server/am/ActivityManagerService;->SHIP_BUILD:Z

    .line 4610
    new-instance v0, Lcom/android/server/am/ActivityManagerService$4;

    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->get()Lcom/android/internal/os/BackgroundThread;

    move-result-object v3

    invoke-virtual {v3}, Landroid/os/HandlerThread;->getLooper()Landroid/os/Looper;

    move-result-object v3

    invoke-direct {v0, v3}, Lcom/android/server/am/ActivityManagerService$4;-><init>(Landroid/os/Looper;)V

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->killProcessGroupHandler:Landroid/os/Handler;

    .line 16727
    sput-object v5, Lcom/android/server/am/ActivityManagerService;->mCurCSCver:Ljava/lang/String;

    .line 20459
    const/16 v0, 0x17

    new-array v0, v0, [J

    fill-array-data v0, :array_0

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J

    .line 20486
    const/16 v0, 0xe

    new-array v0, v0, [I

    fill-array-data v0, :array_1

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    .line 20495
    const/16 v0, 0xe

    new-array v0, v0, [Ljava/lang/String;

    const-string v3, "Native"

    aput-object v3, v0, v2

    const-string v3, "System"

    aput-object v3, v0, v1

    const-string v3, "Persistent"

    aput-object v3, v0, v7

    const/4 v3, 0x3

    const-string v4, "Persistent Service"

    aput-object v4, v0, v3

    const/4 v3, 0x4

    const-string v4, "Foreground"

    aput-object v4, v0, v3

    const/4 v3, 0x5

    const-string v4, "Visible"

    aput-object v4, v0, v3

    const/4 v3, 0x6

    const-string v4, "Perceptible"

    aput-object v4, v0, v3

    const/4 v3, 0x7

    const-string v4, "Heavy Weight"

    aput-object v4, v0, v3

    const/16 v3, 0x8

    const-string v4, "Backup"

    aput-object v4, v0, v3

    const/16 v3, 0x9

    const-string v4, "A Services"

    aput-object v4, v0, v3

    const/16 v3, 0xa

    const-string v4, "Home"

    aput-object v4, v0, v3

    const/16 v3, 0xb

    const-string v4, "Previous"

    aput-object v4, v0, v3

    const/16 v3, 0xc

    const-string v4, "B Services"

    aput-object v4, v0, v3

    const/16 v3, 0xd

    const-string v4, "Cached"

    aput-object v4, v0, v3

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    .line 20503
    const/16 v0, 0xe

    new-array v0, v0, [Ljava/lang/String;

    const-string/jumbo v3, "native"

    aput-object v3, v0, v2

    const-string/jumbo v2, "sys"

    aput-object v2, v0, v1

    const-string/jumbo v1, "pers"

    aput-object v1, v0, v7

    const/4 v1, 0x3

    const-string/jumbo v2, "persvc"

    aput-object v2, v0, v1

    const/4 v1, 0x4

    const-string/jumbo v2, "fore"

    aput-object v2, v0, v1

    const/4 v1, 0x5

    const-string/jumbo v2, "vis"

    aput-object v2, v0, v1

    const/4 v1, 0x6

    const-string/jumbo v2, "percept"

    aput-object v2, v0, v1

    const/4 v1, 0x7

    const-string/jumbo v2, "heavy"

    aput-object v2, v0, v1

    const/16 v1, 0x8

    const-string v2, "backup"

    aput-object v2, v0, v1

    const/16 v1, 0x9

    const-string/jumbo v2, "servicea"

    aput-object v2, v0, v1

    const/16 v1, 0xa

    const-string/jumbo v2, "home"

    aput-object v2, v0, v1

    const/16 v1, 0xb

    const-string/jumbo v2, "prev"

    aput-object v2, v0, v1

    const/16 v1, 0xc

    const-string/jumbo v2, "serviceb"

    aput-object v2, v0, v1

    const/16 v1, 0xd

    const-string v2, "cached"

    aput-object v2, v0, v1

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

    .line 28375
    const/16 v0, 0xbb8

    sput v0, Lcom/android/server/am/ActivityManagerService;->ACTIVITY_RESUME_BOOSTER_TIMEOUT:I

    return-void

    :cond_0
    move v0, v2

    .line 543
    goto/16 :goto_0

    :cond_1
    move v0, v1

    .line 546
    goto/16 :goto_1

    .line 20459
    nop

    :array_0
    .array-data 8
        0x1400
        0x1c00
        0x2800
        0x3c00
        0x5000
        0x7800
        0xa000
        0x14000
        0x1e000
        0x28000
        0x32000
        0x3e800
        0x4b000
        0x57800
        0x64000
        0x7d000
        0x96000
        0xc8000
        0x100000
        0x200000
        0x500000
        0xa00000
        0x1400000
    .end array-data

    .line 20486
    :array_1
    .array-data 4
        -0x11
        -0x10
        -0xc
        -0xb
        0x0
        0x1
        0x2
        0x3
        0x4
        0x5
        0x6
        0x7
        0x8
        0xf
    .end array-data
.end method

.method public constructor <init>(Landroid/content/Context;)V
    .locals 12
    .param p1, "systemContext"    # Landroid/content/Context;

    .prologue
    .line 3386
    invoke-direct {p0}, Landroid/app/ActivityManagerNative;-><init>()V

    .line 596
    new-instance v0, Lcom/android/server/am/PrioritizeLRUProcess;

    invoke-direct {v0}, Lcom/android/server/am/PrioritizeLRUProcess;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPrioritiseProcess:Lcom/android/server/am/PrioritizeLRUProcess;

    .line 597
    new-instance v0, Ljava/lang/String;

    invoke-direct {v0}, Ljava/lang/String;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackageName:Ljava/lang/String;

    .line 599
    const/16 v0, 0x12c

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->SNN_DELAY_APP_LAUNCH:I

    .line 600
    const/16 v0, 0x23

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->SNN_CPUTH:I

    .line 601
    const/16 v0, 0x28

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->SNN_DELAY_UNIT:I

    .line 602
    const/16 v0, 0xc8

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->SNN_LAST_SERVICE_START:I

    .line 603
    const/16 v0, 0x12c

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->SNN_CPU_FRAME_INTENSITY_RATIO:I

    .line 604
    const/16 v0, 0xaf0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->SNN_MAX_DELAY:I

    .line 605
    const/4 v0, 0x5

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->SNN_IO_WAIT_TH:I

    .line 606
    const-wide/16 v0, 0x3e8

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->SNN_CPU_COLLECT_DATA_INTERVAL:J

    .line 618
    const/4 v0, -0x1

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mSIOPLevel:I

    .line 619
    const/4 v0, -0x1

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryOverheatLevel:I

    .line 620
    const/4 v0, -0x1

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mOverheatTextId:I

    .line 621
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCheckSIOPLevelList:Ljava/util/HashMap;

    .line 625
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBBCOverridePath:Ljava/util/HashMap;

    .line 629
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->bActivityBoosterOn:Z

    .line 703
    const-wide/32 v0, 0x12c00000

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mKillMemMinThreshold:J

    .line 704
    const-wide/32 v0, 0x25800000

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mKillMemMaxThreshold:J

    .line 705
    const/4 v0, 0x5

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mKillMinCnt:I

    .line 706
    const/16 v0, 0x1b

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mKillMaxCnt:I

    .line 707
    const/16 v0, 0xa

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mKillMinAdj:I

    .line 752
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mIsBoosted:Z

    .line 753
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mBoostStartTime:J

    .line 766
    new-instance v0, Landroid/os/RemoteCallbackList;

    invoke-direct {v0}, Landroid/os/RemoteCallbackList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskStackListeners:Landroid/os/RemoteCallbackList;

    .line 775
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mApplicationPolicy:Landroid/app/enterprise/ApplicationPolicy;

    .line 776
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRestrictionPolicy:Landroid/app/enterprise/RestrictionPolicy;

    .line 777
    const-string v0, ""

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPreviousPackage:Ljava/lang/String;

    .line 778
    const-string v0, ""

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentPackage:Ljava/lang/String;

    .line 784
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mShowDialogs:Z

    .line 787
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mEmergencyMgr:Lcom/sec/android/emergencymode/EmergencyManager;

    .line 791
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelper:Landroid/os/DVFSHelper;

    .line 792
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperForGPU:Landroid/os/DVFSHelper;

    .line 793
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperForBUS:Landroid/os/DVFSHelper;

    .line 794
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperForCore:Landroid/os/DVFSHelper;

    .line 795
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperTail:Landroid/os/DVFSHelper;

    .line 796
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperForGPUTail:Landroid/os/DVFSHelper;

    .line 797
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperForBUSTail:Landroid/os/DVFSHelper;

    .line 798
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperForCoreTail:Landroid/os/DVFSHelper;

    .line 802
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mIsCommingFromLockScreenPath:Z

    .line 803
    new-instance v0, Ljava/lang/Object;

    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDvfsHelperLock:Ljava/lang/Object;

    .line 813
    const/4 v0, 0x3

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    .line 814
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueFinishedNum:I

    .line 817
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSplitStart:Z

    .line 818
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueOnlyRun:Z

    .line 819
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mInitBgSplitQueueNum:I

    .line 824
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mReceiverLogThresholdMs:J

    .line 840
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mSMPackagesList:Ljava/util/HashSet;

    .line 841
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mScreenOn:Z

    .line 842
    new-instance v0, Ljava/lang/Object;

    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mSMPkgsListLock:Ljava/lang/Object;

    .line 846
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

    .line 849
    new-instance v0, Ljava/lang/Object;

    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWidgetList:Ljava/lang/Object;

    .line 850
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWidgetOnHomescreen:Ljava/util/HashSet;

    .line 869
    const/4 v0, 0x7

    new-array v0, v0, [Lcom/android/server/am/BroadcastQueue;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .line 873
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->isElasticEnabled:Z

    .line 882
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPersistDownloadablePkgs:Ljava/util/HashSet;

    .line 928
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    .line 963
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLockTaskPackages:Landroid/util/SparseArray;

    .line 970
    new-instance v0, Ljava/text/SimpleDateFormat;

    const-string/jumbo v1, "dd_MMM_HH_mm_ss.SSS"

    invoke-direct {v0, v1}, Ljava/text/SimpleDateFormat;-><init>(Ljava/lang/String;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTraceDateFormat:Ljava/text/SimpleDateFormat;

    .line 1003
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingAssistExtras:Ljava/util/ArrayList;

    .line 1009
    new-instance v0, Lcom/android/server/am/ProcessList;

    invoke-direct {v0}, Lcom/android/server/am/ProcessList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 1017
    new-instance v0, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v0}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    .line 1028
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    .line 1034
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    .line 1039
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    .line 1044
    new-instance v0, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v0}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    .line 1071
    new-instance v0, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v0}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/internal/app/ProcessMap;

    .line 1080
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    .line 1092
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    .line 1099
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    .line 1105
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    .line 1110
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    .line 1116
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    .line 1121
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    .line 1127
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    .line 1132
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    .line 1137
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    .line 1142
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastFullPssTime:J

    .line 1148
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mFullPssPending:Z

    .line 1178
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    .line 1183
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    .line 1188
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    .line 1193
    const/4 v0, 0x1

    new-array v0, v0, [I

    const/4 v1, 0x0

    const/4 v2, 0x0

    aput v2, v0, v1

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    .line 1199
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mReplacedPackages:Ljava/util/ArrayList;

    .line 1205
    new-instance v0, Landroid/os/RemoteCallbackList;

    invoke-direct {v0}, Landroid/os/RemoteCallbackList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    .line 1222
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    .line 1229
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mGrabedIntentSenderRecords:Ljava/util/HashMap;

    .line 1239
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    .line 1249
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStrictModeBuffer:Ljava/lang/StringBuilder;

    .line 1255
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    .line 1263
    new-instance v0, Lcom/android/server/am/ActivityManagerService$1;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$1;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    .line 1319
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    .line 1352
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    .line 1359
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    .line 1360
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 1369
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    .line 1395
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    .line 1499
    new-instance v0, Landroid/content/res/Configuration;

    invoke-direct {v0}, Landroid/content/res/Configuration;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    .line 1521
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    .line 1525
    new-instance v0, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;

    invoke-direct {v0}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConfigurations:Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;

    .line 1526
    const/4 v0, 0x4

    new-array v0, v0, [I

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeqs:[I

    .line 1531
    const/4 v0, 0x4

    new-array v0, v0, [Lcom/android/server/am/ActivityRecord;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFrontActivities:[Lcom/android/server/am/ActivityRecord;

    .line 1536
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mSamsungHomeComponentName:Landroid/content/ComponentName;

    .line 1544
    const/4 v0, -0x1

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingUnfixTask:I

    .line 1561
    new-instance v0, Ljava/lang/StringBuilder;

    const/16 v1, 0x100

    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(I)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStringBuilder:Ljava/lang/StringBuilder;

    .line 1567
    const-string v0, "android.intent.action.MAIN"

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;

    .line 1569
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    .line 1570
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    .line 1571
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 1572
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 1573
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    .line 1574
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mWaitingUpdate:Z

    .line 1575
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mDidUpdate:Z

    .line 1576
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    .line 1577
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchWarningShown:Z

    .line 1611
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    .line 1617
    const/4 v0, 0x2

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mTopProcessState:I

    .line 1640
    const/4 v0, 0x1

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    .line 1647
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mSleepTokens:Ljava/util/ArrayList;

    .line 1655
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    .line 1660
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    .line 1665
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    .line 1670
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    .line 1676
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    .line 1682
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    .line 1688
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I

    .line 1689
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mNewNumAServiceProcs:I

    .line 1690
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    .line 1698
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    .line 1704
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    .line 1715
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    .line 1720
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamTimeSinceLastIdle:J

    .line 1725
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    .line 1730
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    .line 1731
    const/4 v0, -0x1

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    .line 1738
    new-instance v0, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v0}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    .line 1757
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    .line 1759
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 1760
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 1761
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    .line 1762
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    .line 1763
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    .line 1764
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    .line 1765
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 1766
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    .line 1767
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    .line 1770
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mSamplingInterval:I

    .line 1771
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mAutoStopProfiler:Z

    .line 1772
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    .line 1773
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    .line 1774
    new-instance v0, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v0}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    .line 1780
    const/4 v0, 0x1

    new-array v0, v0, [J

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTmpLong:[J

    .line 1800
    new-instance v0, Landroid/os/RemoteCallbackList;

    invoke-direct {v0}, Landroid/os/RemoteCallbackList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    .line 1801
    const/4 v0, 0x5

    new-array v0, v0, [Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 1803
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    .line 1804
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAvailProcessChanges:Ljava/util/ArrayList;

    .line 1806
    new-instance v0, Landroid/os/RemoteCallbackList;

    invoke-direct {v0}, Landroid/os/RemoteCallbackList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    .line 1807
    const/4 v0, 0x5

    new-array v0, v0, [Lcom/android/server/am/UidRecord$ChangeItem;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    .line 1809
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingUidChanges:Ljava/util/ArrayList;

    .line 1810
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAvailUidChanges:Ljava/util/ArrayList;

    .line 1825
    new-instance v0, Lcom/android/internal/os/ProcessCpuTracker;

    const/4 v1, 0x0

    invoke-direct {v0, v1}, Lcom/android/internal/os/ProcessCpuTracker;-><init>(Z)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    .line 1827
    new-instance v0, Ljava/util/concurrent/atomic/AtomicLong;

    const-wide/16 v4, 0x0

    invoke-direct {v0, v4, v5}, Ljava/util/concurrent/atomic/AtomicLong;-><init>(J)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    .line 1828
    new-instance v0, Ljava/util/concurrent/atomic/AtomicBoolean;

    const/4 v1, 0x1

    invoke-direct {v0, v1}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>(Z)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuMutexFree:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 1830
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastWriteTime:J

    .line 1836
    new-instance v0, Landroid/os/UpdateLock;

    const-string/jumbo v1, "immersive"

    invoke-direct {v0, v1}, Landroid/os/UpdateLock;-><init>(Ljava/lang/String;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUpdateLock:Landroid/os/UpdateLock;

    .line 1841
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    .line 1843
    sget v0, Lcom/android/server/am/ProcessList;->INIT_EMPTY_APPS:I

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    .line 1844
    const/4 v0, -0x1

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessLimitOverride:I

    .line 1851
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mScaledAppNames:Ljava/util/Map;

    .line 1855
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    .line 1857
    const/16 v0, -0x2710

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    .line 1860
    const/4 v0, 0x1

    new-array v0, v0, [I

    const/4 v1, 0x0

    const/4 v2, 0x0

    aput v2, v0, v1

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    .line 1865
    new-instance v0, Landroid/util/SparseIntArray;

    invoke-direct {v0}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    .line 1870
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mVRApplicationPolicy:Lcom/android/server/am/VRApplicationPolicy;

    .line 2009
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J

    .line 2012
    const-string/jumbo v0, "ro.sys.fw.bservice_age"

    const/16 v1, 0x1388

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mMinBServiceAgingTime:I

    .line 2015
    const-string/jumbo v0, "ro.sys.fw.bservice_limit"

    const/4 v1, 0x5

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mBServiceAppThreshold:I

    .line 2018
    const-string/jumbo v0, "ro.sys.fw.bservice_enable"

    const/4 v1, 0x0

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mEnableBServicePropagation:Z

    .line 2023
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mMinimizeAllPenWindowRequested:Z

    .line 2024
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mKeyguardGoingAway:Z

    .line 2025
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mGrantPermissionsActivityName:Ljava/lang/String;

    .line 2026
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPermissionRequestActivities:Ljava/util/ArrayList;

    .line 2042
    invoke-static {}, Landroid/os/PersonaManager;->getKnoxInfo()Landroid/os/Bundle;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->knoxVersionInfo:Landroid/os/Bundle;

    .line 2043
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWms:Lcom/android/server/wallpaper/WallpaperManagerService;

    .line 2066
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mSmartAdjustManager:Lcom/android/server/am/SmartAdjustManager;

    .line 2068
    invoke-static {}, Lcom/android/internal/app/AppLockPolicy;->isSupportAppLock()Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->SUPPORT_APPLOCK:Z

    .line 2073
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    .line 3094
    new-instance v0, Lcom/android/server/am/ActivityManagerService$2;

    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v1

    invoke-virtual {v1}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    move-result-object v1

    invoke-direct {v0, p0, v1}, Lcom/android/server/am/ActivityManagerService$2;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Looper;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgHandler:Landroid/os/Handler;

    .line 6147
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCfmsService:Landroid/os/ICustomFrequencyManager;

    .line 9640
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mIsKeyguardWaitingForActivityDrawnRequested:Z

    .line 9642
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTargetDismiss:Landroid/content/Intent;

    .line 15344
    const/4 v0, 0x4

    new-array v0, v0, [I

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mScreenState:[I

    .line 15401
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mIsBackWindowShown:Z

    .line 15402
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackWindowDisplayId:I

    .line 16935
    const-wide/16 v0, 0x7530

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->DELAY_UNTIL_FINISH:J

    .line 16936
    const-wide/16 v0, 0x7d0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->PERIOD_INTERVAL:J

    .line 28796
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMultiWindowPolicy:Lcom/android/server/am/MultiWindowPolicy;

    .line 28800
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDualScreenPolicy:Lcom/android/server/am/DualScreenPolicy;

    .line 28804
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mVirtualScreenPolicy:Lcom/android/server/am/VirtualScreenPolicy;

    .line 28821
    new-instance v0, Lcom/android/server/am/ActivityManagerService$38;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$38;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastFilterComparator:Ljava/util/Comparator;

    .line 28831
    new-instance v0, Lcom/android/server/am/ActivityManagerService$39;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$39;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mResolveInfoComparator:Ljava/util/Comparator;

    .line 28841
    new-instance v0, Lcom/android/server/am/ActivityManagerService$40;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$40;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mResolvePrioritySorter:Ljava/util/Comparator;

    .line 29204
    const/4 v0, 0x1

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->ACTIVITY_PROC_NAME:I

    .line 29205
    const/4 v0, 0x2

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->APPLICATION_PROC_NAME:I

    .line 29410
    new-instance v0, Lcom/android/server/am/ActivityManagerService$41;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$41;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->itsOnProcessObserver:Landroid/app/IProcessObserver;

    .line 3387
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 3388
    invoke-static {}, Landroid/os/FactoryTest;->getMode()I

    move-result v0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    .line 3389
    invoke-static {}, Landroid/app/ActivityThread;->currentActivityThread()Landroid/app/ActivityThread;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    .line 3391
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Memory class: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 3393
    new-instance v0, Lcom/android/server/ServiceThread;

    const-string v1, "ActivityManager"

    const/4 v2, -0x2

    const/4 v4, 0x0

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/ServiceThread;-><init>(Ljava/lang/String;IZ)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandlerThread:Lcom/android/server/ServiceThread;

    .line 3395
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandlerThread:Lcom/android/server/ServiceThread;

    invoke-virtual {v0}, Lcom/android/server/ServiceThread;->start()V

    .line 3396
    new-instance v0, Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandlerThread:Lcom/android/server/ServiceThread;

    invoke-virtual {v1}, Lcom/android/server/ServiceThread;->getLooper()Landroid/os/Looper;

    move-result-object v1

    invoke-direct {v0, p0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Looper;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 3397
    new-instance v0, Lcom/android/server/am/ActivityManagerService$UiHandler;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$UiHandler;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 3400
    new-instance v0, Lcom/android/server/am/BroadcastQueue;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-string/jumbo v3, "foreground"

    sget v1, Lcom/android/server/am/ActivityManagerService;->BROADCAST_FG_TIMEOUT:I

    int-to-long v4, v1

    const/4 v6, 0x0

    const/4 v7, 0x2

    move-object v1, p0

    invoke-direct/range {v0 .. v7}, Lcom/android/server/am/BroadcastQueue;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Ljava/lang/String;JZI)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .line 3402
    new-instance v0, Lcom/android/server/am/BroadcastQueue;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-string v3, "background"

    sget v1, Lcom/android/server/am/ActivityManagerService;->BROADCAST_BG_TIMEOUT:I

    int-to-long v4, v1

    const/4 v6, 0x1

    const/4 v7, 0x3

    move-object v1, p0

    invoke-direct/range {v0 .. v7}, Lcom/android/server/am/BroadcastQueue;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Ljava/lang/String;JZI)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .line 3408
    new-instance v0, Lcom/android/server/am/BroadcastQueue;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-string/jumbo v3, "sec"

    sget v1, Lcom/android/server/am/ActivityManagerService;->BROADCAST_FG_TIMEOUT:I

    div-int/lit8 v1, v1, 0x2

    int-to-long v4, v1

    const/4 v6, 0x0

    const/4 v7, 0x1

    move-object v1, p0

    invoke-direct/range {v0 .. v7}, Lcom/android/server/am/BroadcastQueue;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Ljava/lang/String;JZI)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mSecBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .line 3410
    new-instance v0, Lcom/android/server/am/BroadcastQueue;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-string/jumbo v3, "deferred"

    sget v1, Lcom/android/server/am/ActivityManagerService;->BROADCAST_BG_TIMEOUT:I

    int-to-long v4, v1

    const/4 v6, 0x1

    const/4 v7, 0x5

    move-object v1, p0

    invoke-direct/range {v0 .. v7}, Lcom/android/server/am/BroadcastQueue;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Ljava/lang/String;JZI)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDeferredBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .line 3412
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    const/4 v1, 0x0

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mSecBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    aput-object v2, v0, v1

    .line 3413
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    const/4 v1, 0x1

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    aput-object v2, v0, v1

    .line 3414
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    const/4 v1, 0x2

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mDeferredBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    aput-object v2, v0, v1

    .line 3415
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    const/4 v1, 0x3

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    aput-object v2, v0, v1

    .line 3421
    const/4 v0, 0x3

    new-array v0, v0, [Lcom/android/server/am/BroadcastQueue;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgSplitBroadcastQueue:[Lcom/android/server/am/BroadcastQueue;

    .line 3422
    const/4 v9, 0x0

    .local v9, "i":I
    :goto_0
    const/4 v0, 0x3

    if-ge v9, v0, :cond_0

    .line 3423
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "backgroundsplit_"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 3424
    .local v3, "splitQueueName":Ljava/lang/String;
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mBgSplitBroadcastQueue:[Lcom/android/server/am/BroadcastQueue;

    new-instance v0, Lcom/android/server/am/BroadcastQueue;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    sget v1, Lcom/android/server/am/ActivityManagerService;->BROADCAST_BG_TIMEOUT:I

    int-to-long v4, v1

    const/4 v6, 0x1

    const/4 v7, 0x4

    move-object v1, p0

    invoke-direct/range {v0 .. v7}, Lcom/android/server/am/BroadcastQueue;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Ljava/lang/String;JZI)V

    aput-object v0, v11, v9

    .line 3426
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    add-int/lit8 v1, v9, 0x4

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBgSplitBroadcastQueue:[Lcom/android/server/am/BroadcastQueue;

    aget-object v2, v2, v9

    aput-object v2, v0, v1

    .line 3422
    add-int/lit8 v9, v9, 0x1

    goto :goto_0

    .line 3429
    .end local v3    # "splitQueueName":Ljava/lang/String;
    :cond_0
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->getMaxCpus()I

    move-result v0

    const/4 v1, 0x3

    if-le v0, v1, :cond_2

    .line 3430
    const/4 v0, 0x3

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    .line 3434
    :goto_1
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    add-int/lit8 v0, v0, 0x1

    new-array v0, v0, [I

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    .line 3435
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mInitBgSplitQueueNum:I

    .line 3440
    const/4 v9, 0x0

    :goto_2
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v0, v0

    if-ge v9, v0, :cond_3

    .line 3441
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object v0, v0, v9

    if-eqz v0, :cond_1

    .line 3442
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object v0, v0, v9

    add-int/lit8 v1, v9, 0x1

    invoke-virtual {v0, v1}, Lcom/android/server/am/BroadcastQueue;->setBroadcastQueueIndex(I)V

    .line 3440
    :cond_1
    add-int/lit8 v9, v9, 0x1

    goto :goto_2

    .line 3432
    :cond_2
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    goto :goto_1

    .line 3448
    :cond_3
    invoke-static {}, Landroid/os/DssHelper;->getInstance()Landroid/os/DssHelper;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDssHelper:Landroid/os/DssHelper;

    .line 3450
    new-instance v0, Lcom/android/server/am/ActiveServices;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActiveServices;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    .line 3451
    new-instance v0, Lcom/android/server/am/ProviderMap;

    invoke-direct {v0, p0}, Lcom/android/server/am/ProviderMap;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    .line 3454
    invoke-static {}, Landroid/os/Environment;->getDataDirectory()Ljava/io/File;

    move-result-object v8

    .line 3455
    .local v8, "dataDir":Ljava/io/File;
    new-instance v10, Ljava/io/File;

    const-string/jumbo v0, "system"

    invoke-direct {v10, v8, v0}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    .line 3456
    .local v10, "systemDir":Ljava/io/File;
    invoke-virtual {v10}, Ljava/io/File;->mkdirs()Z

    .line 3457
    new-instance v0, Lcom/android/server/am/BatteryStatsService;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-direct {v0, v10, v1}, Lcom/android/server/am/BatteryStatsService;-><init>(Ljava/io/File;Landroid/os/Handler;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 3458
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl;->readLocked()V

    .line 3459
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->scheduleWriteToDisk()V

    .line 3460
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl;->getIsOnBattery()Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    .line 3462
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v0

    invoke-virtual {v0, p0}, Lcom/android/internal/os/BatteryStatsImpl;->setCallback(Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;)V

    .line 3464
    new-instance v0, Lcom/android/server/am/ProcessStatsService;

    new-instance v1, Ljava/io/File;

    const-string/jumbo v2, "procstats"

    invoke-direct {v1, v10, v2}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-direct {v0, p0, v1}, Lcom/android/server/am/ProcessStatsService;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/io/File;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 3466
    new-instance v0, Lcom/android/server/AppOpsService;

    new-instance v1, Ljava/io/File;

    const-string v2, "appops.xml"

    invoke-direct {v1, v10, v2}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-direct {v0, v1, v2}, Lcom/android/server/AppOpsService;-><init>(Ljava/io/File;Landroid/os/Handler;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    .line 3468
    new-instance v0, Landroid/util/AtomicFile;

    new-instance v1, Ljava/io/File;

    const-string/jumbo v2, "urigrants.xml"

    invoke-direct {v1, v10, v2}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-direct {v0, v1}, Landroid/util/AtomicFile;-><init>(Ljava/io/File;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mGrantFile:Landroid/util/AtomicFile;

    .line 3471
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    const/4 v1, 0x0

    new-instance v2, Lcom/android/server/am/UserState;

    sget-object v4, Landroid/os/UserHandle;->OWNER:Landroid/os/UserHandle;

    const/4 v5, 0x1

    invoke-direct {v2, v4, v5}, Lcom/android/server/am/UserState;-><init>(Landroid/os/UserHandle;Z)V

    invoke-virtual {v0, v1, v2}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 3472
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    const/4 v1, 0x0

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 3473
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->updateStartedUserArrayLocked()V

    .line 3475
    const-string/jumbo v0, "ro.opengles.version"

    const/4 v1, 0x0

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->GL_ES_VERSION:I

    .line 3478
    const-string v0, "1"

    const-string/jumbo v1, "debug.track-associations"

    invoke-static {v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    .line 3493
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {v0}, Landroid/content/res/Configuration;->setToDefaults()V

    .line 3494
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    invoke-static {}, Ljava/util/Locale;->getDefault()Ljava/util/Locale;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/content/res/Configuration;->setLocale(Ljava/util/Locale;)V

    .line 3495
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    const/4 v1, 0x1

    iput v1, v0, Landroid/content/res/Configuration;->seq:I

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    .line 3497
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v0}, Lcom/android/internal/os/ProcessCpuTracker;->init()V

    .line 3500
    const-string/jumbo v0, "persist.sys.killmincnt"

    const/4 v1, 0x5

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mKillMinCnt:I

    .line 3501
    const-string/jumbo v0, "persist.sys.killmaxcnt"

    const/16 v1, 0x1b

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mKillMaxCnt:I

    .line 3502
    const-string/jumbo v0, "persist.sys.killminmemthreshold"

    const-wide/32 v4, 0x12c00000

    invoke-static {v0, v4, v5}, Landroid/os/SystemProperties;->getLong(Ljava/lang/String;J)J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mKillMemMinThreshold:J

    .line 3503
    const-string/jumbo v0, "persist.sys.killmaxmemthreshold"

    const-wide/32 v4, 0x25800000

    invoke-static {v0, v4, v5}, Landroid/os/SystemProperties;->getLong(Ljava/lang/String;J)J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mKillMemMaxThreshold:J

    .line 3504
    const-string/jumbo v0, "persist.sys.killminadj"

    const/16 v1, 0xa

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mKillMinAdj:I

    .line 3506
    new-instance v0, Lcom/android/server/am/CompatModePackages;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-direct {v0, p0, v10, v1}, Lcom/android/server/am/CompatModePackages;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/io/File;Landroid/os/Handler;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    .line 3507
    new-instance v0, Lcom/android/server/firewall/IntentFirewall;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$IntentFirewallInterface;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$IntentFirewallInterface;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-direct {v0, v1, v2}, Lcom/android/server/firewall/IntentFirewall;-><init>(Lcom/android/server/firewall/IntentFirewall$AMSInterface;Landroid/os/Handler;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mIntentFirewall:Lcom/android/server/firewall/IntentFirewall;

    .line 3508
    new-instance v0, Lcom/android/server/am/RecentTasks;

    invoke-direct {v0, p0}, Lcom/android/server/am/RecentTasks;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    .line 3509
    new-instance v0, Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-direct {v0, p0, v1}, Lcom/android/server/am/ActivityStackSupervisor;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/RecentTasks;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    .line 3510
    new-instance v0, Lcom/android/server/am/TaskPersister;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-direct {v0, v10, v1, v2}, Lcom/android/server/am/TaskPersister;-><init>(Ljava/io/File;Lcom/android/server/am/ActivityStackSupervisor;Lcom/android/server/am/RecentTasks;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    .line 3514
    new-instance v0, Lcom/android/server/am/MultiWindowPolicy;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v0, v1, p0}, Lcom/android/server/am/MultiWindowPolicy;-><init>(Landroid/content/Context;Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMultiWindowPolicy:Lcom/android/server/am/MultiWindowPolicy;

    .line 3526
    new-instance v0, Lcom/android/server/am/VirtualScreenPolicy;

    invoke-direct {v0, p0}, Lcom/android/server/am/VirtualScreenPolicy;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mVirtualScreenPolicy:Lcom/android/server/am/VirtualScreenPolicy;

    .line 3532
    new-instance v0, Lcom/android/server/am/VRApplicationPolicy;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v0, v1, p0}, Lcom/android/server/am/VRApplicationPolicy;-><init>(Landroid/content/Context;Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mVRApplicationPolicy:Lcom/android/server/am/VRApplicationPolicy;

    .line 3537
    invoke-static {}, Lcom/samsung/android/feature/FloatingFeature;->getInstance()Lcom/samsung/android/feature/FloatingFeature;

    move-result-object v0

    const-string v1, "SEC_FLOATING_FEATURE_COMMON_SUPPORT_SAFETYCARE"

    invoke-virtual {v0, v1}, Lcom/samsung/android/feature/FloatingFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_4

    invoke-static {}, Lcom/samsung/android/feature/FloatingFeature;->getInstance()Lcom/samsung/android/feature/FloatingFeature;

    move-result-object v0

    const-string v1, "SEC_FLOATING_FEATURE_COMMON_SUPPORT_ULTRA_POWER_SAVING"

    invoke-virtual {v0, v1}, Lcom/samsung/android/feature/FloatingFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_4

    invoke-static {}, Lcom/samsung/android/feature/FloatingFeature;->getInstance()Lcom/samsung/android/feature/FloatingFeature;

    move-result-object v0

    const-string v1, "SEC_FLOATING_FEATURE_COMMON_SUPPORT_BATTERY_CONVERSING"

    invoke-virtual {v0, v1}, Lcom/samsung/android/feature/FloatingFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_5

    .line 3539
    :cond_4
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v0}, Lcom/sec/android/emergencymode/EmergencyManager;->getInstance(Landroid/content/Context;)Lcom/sec/android/emergencymode/EmergencyManager;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mEmergencyMgr:Lcom/sec/android/emergencymode/EmergencyManager;

    .line 3542
    :cond_5
    new-instance v0, Lcom/android/server/am/ActivityManagerService$3;

    const-string v1, "CpuTracker"

    invoke-direct {v0, p0, v1}, Lcom/android/server/am/ActivityManagerService$3;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuThread:Ljava/lang/Thread;

    .line 3573
    new-instance v0, Lcom/android/server/am/SmartAdjustManager;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-direct {v0, p0, v1, v2}, Lcom/android/server/am/SmartAdjustManager;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessList;Lcom/android/server/am/ProcessStatsService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mSmartAdjustManager:Lcom/android/server/am/SmartAdjustManager;

    .line 3577
    new-instance v0, Lcom/android/server/am/MARsPolicyManager;

    invoke-direct {v0, p0}, Lcom/android/server/am/MARsPolicyManager;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    .line 3580
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v0

    invoke-virtual {v0, p0}, Lcom/android/server/Watchdog;->addMonitor(Lcom/android/server/Watchdog$Monitor;)V

    .line 3581
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v0, v1}, Lcom/android/server/Watchdog;->addThread(Landroid/os/Handler;)V

    .line 3584
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v0

    const-string v1, "CscFeature_Common_EnableItsOn"

    invoke-virtual {v0, v1}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_6

    .line 3585
    invoke-static {}, Lcom/itsoninc/android/ItsOnOemApi;->getInstance()Lcom/itsoninc/android/ItsOnOemApi;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mApi:Lcom/itsoninc/android/ItsOnOemApi;

    .line 3586
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mApi:Lcom/itsoninc/android/ItsOnOemApi;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0, v1}, Lcom/itsoninc/android/ItsOnOemApi;->initFramework(Landroid/content/Context;)V

    .line 3587
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->itsOnProcessObserver:Landroid/app/IProcessObserver;

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->registerProcessObserver(Landroid/app/IProcessObserver;)V

    .line 3592
    :cond_6
    const-string/jumbo v0, "persist.sys.brlogms"

    const-wide/16 v4, 0x0

    invoke-static {v0, v4, v5}, Landroid/os/SystemProperties;->getLong(Ljava/lang/String;J)J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mReceiverLogThresholdMs:J

    .line 3594
    return-void
.end method

.method private IsSameProcessInOtherQueue(Lcom/android/server/am/BroadcastRecord;)Z
    .locals 17
    .param p1, "r"    # Lcom/android/server/am/BroadcastRecord;

    .prologue
    .line 29235
    const-string v14, "android.intent.action.BOOT_COMPLETED"

    move-object/from16 v0, p1

    iget-object v15, v0, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v15}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v15

    invoke-virtual {v14, v15}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v14

    if-eqz v14, :cond_0

    .line 29236
    const/4 v14, 0x0

    .line 29343
    :goto_0
    return v14

    .line 29240
    :cond_0
    const/4 v5, 0x0

    .line 29241
    .local v5, "ci":Landroid/content/pm/ComponentInfo;
    const/4 v1, 0x0

    .line 29242
    .local v1, "activityProcessName":Ljava/lang/String;
    const/4 v2, 0x0

    .line 29243
    .local v2, "applicationProcessName":Ljava/lang/String;
    const/4 v11, 0x0

    .line 29244
    .local v11, "queueIndex":I
    const/4 v13, 0x0

    .line 29245
    .local v13, "start":I
    const/4 v6, 0x0

    .line 29246
    .local v6, "end":I
    const/4 v12, 0x0

    .line 29247
    .local v12, "queueNum":I
    const/4 v7, 0x0

    .line 29249
    .local v7, "exist":Z
    move-object/from16 v0, p1

    iget v8, v0, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I

    .local v8, "i":I
    :goto_1
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v14}, Ljava/util/List;->size()I

    move-result v14

    if-ge v8, v14, :cond_1

    .line 29250
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v14, v8}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v14

    instance-of v14, v14, Landroid/content/pm/ResolveInfo;

    if-eqz v14, :cond_2

    .line 29252
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v14, v8}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Landroid/content/pm/ResolveInfo;

    move-object/from16 v0, p0

    invoke-direct {v0, v14}, Lcom/android/server/am/ActivityManagerService;->getComponentInfo(Landroid/content/pm/ResolveInfo;)Landroid/content/pm/ComponentInfo;

    move-result-object v5

    .line 29253
    iget-object v1, v5, Landroid/content/pm/ComponentInfo;->processName:Ljava/lang/String;

    .line 29254
    iget-object v14, v5, Landroid/content/pm/ComponentInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v14, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    .line 29256
    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v14

    if-nez v14, :cond_2

    .line 29257
    const/4 v7, 0x1

    .line 29265
    :cond_1
    if-nez v7, :cond_3

    .line 29267
    const/4 v14, 0x0

    goto :goto_0

    .line 29249
    :cond_2
    add-int/lit8 v8, v8, 0x1

    goto :goto_1

    .line 29271
    :cond_3
    move-object/from16 v0, p1

    iget v8, v0, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I

    :goto_2
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v14}, Ljava/util/List;->size()I

    move-result v14

    if-ge v8, v14, :cond_d

    .line 29272
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v14, v8}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v14

    instance-of v14, v14, Landroid/content/pm/ResolveInfo;

    if-eqz v14, :cond_b

    .line 29274
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v14, v8}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Landroid/content/pm/ResolveInfo;

    move-object/from16 v0, p0

    invoke-direct {v0, v14}, Lcom/android/server/am/ActivityManagerService;->getComponentInfo(Landroid/content/pm/ResolveInfo;)Landroid/content/pm/ComponentInfo;

    move-result-object v5

    .line 29275
    iget-object v1, v5, Landroid/content/pm/ComponentInfo;->processName:Ljava/lang/String;

    .line 29276
    iget-object v14, v5, Landroid/content/pm/ComponentInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v14, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    .line 29279
    move v9, v8

    .line 29280
    .local v9, "index":I
    const/4 v12, 0x0

    :goto_3
    move-object/from16 v0, p0

    iget v14, v0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    if-ge v12, v14, :cond_4

    .line 29281
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    aget v14, v14, v12

    if-ge v9, v14, :cond_6

    .line 29283
    :cond_4
    move v11, v12

    .line 29286
    if-nez v11, :cond_7

    .line 29287
    move-object/from16 v0, p1

    iget v13, v0, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I

    .line 29288
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    aget v6, v14, v11

    .line 29298
    :goto_4
    move-object/from16 v0, p1

    iget v10, v0, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I

    .local v10, "k":I
    :goto_5
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v14}, Ljava/util/List;->size()I

    move-result v14

    if-ge v10, v14, :cond_c

    .line 29299
    if-gt v13, v10, :cond_9

    if-ge v10, v6, :cond_9

    .line 29298
    :cond_5
    add-int/lit8 v10, v10, 0x1

    goto :goto_5

    .line 29280
    .end local v10    # "k":I
    :cond_6
    add-int/lit8 v12, v12, 0x1

    goto :goto_3

    .line 29289
    :cond_7
    move-object/from16 v0, p0

    iget v14, v0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    if-ne v11, v14, :cond_8

    .line 29290
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    add-int/lit8 v15, v11, -0x1

    aget v13, v14, v15

    .line 29291
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v14}, Ljava/util/List;->size()I

    move-result v6

    goto :goto_4

    .line 29293
    :cond_8
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    add-int/lit8 v15, v11, -0x1

    aget v13, v14, v15

    .line 29294
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    aget v6, v14, v11

    goto :goto_4

    .line 29303
    .restart local v10    # "k":I
    :cond_9
    const/4 v3, 0x0

    .line 29304
    .local v3, "checkci":Landroid/content/pm/ComponentInfo;
    const/4 v4, 0x0

    .line 29306
    .local v4, "checkname":Ljava/lang/String;
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v14, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v14

    instance-of v14, v14, Landroid/content/pm/ResolveInfo;

    if-eqz v14, :cond_a

    .line 29308
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v14, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Landroid/content/pm/ResolveInfo;

    move-object/from16 v0, p0

    invoke-direct {v0, v14}, Lcom/android/server/am/ActivityManagerService;->getComponentInfo(Landroid/content/pm/ResolveInfo;)Landroid/content/pm/ComponentInfo;

    move-result-object v3

    .line 29309
    iget-object v4, v3, Landroid/content/pm/ComponentInfo;->processName:Ljava/lang/String;

    .line 29315
    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v14

    if-eqz v14, :cond_5

    .line 29316
    const-string/jumbo v14, "splitIntent"

    new-instance v15, Ljava/lang/StringBuilder;

    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v16, "intent="

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;

    move-object/from16 v16, v0

    invoke-virtual/range {v16 .. v16}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v16

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string v16, " will be not split. because same process="

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    invoke-virtual {v15, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string v16, " is in other queue. index="

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    invoke-virtual {v15, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v15

    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v15

    invoke-static {v14, v15}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 29319
    const-string/jumbo v14, "splitIntent"

    new-instance v15, Ljava/lang/StringBuilder;

    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    const-string v16, "base  index="

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    invoke-virtual {v15, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string v16, ", name="

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    iget-object v0, v5, Landroid/content/pm/ComponentInfo;->packageName:Ljava/lang/String;

    move-object/from16 v16, v0

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string v16, " "

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    iget-object v0, v5, Landroid/content/pm/ComponentInfo;->name:Ljava/lang/String;

    move-object/from16 v16, v0

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v15

    invoke-static {v14, v15}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 29321
    const-string/jumbo v14, "splitIntent"

    new-instance v15, Ljava/lang/StringBuilder;

    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v16, "other index="

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    invoke-virtual {v15, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string v16, ", name="

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    iget-object v0, v3, Landroid/content/pm/ComponentInfo;->packageName:Ljava/lang/String;

    move-object/from16 v16, v0

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string v16, " "

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    iget-object v0, v3, Landroid/content/pm/ComponentInfo;->name:Ljava/lang/String;

    move-object/from16 v16, v0

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v15

    invoke-static {v14, v15}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 29332
    const/4 v14, 0x1

    goto/16 :goto_0

    .line 29312
    :cond_a
    new-instance v14, Ljava/lang/IllegalStateException;

    const-string v15, "SPLIT_INTENT, Object type error"

    invoke-direct {v14, v15}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v14

    .line 29339
    .end local v3    # "checkci":Landroid/content/pm/ComponentInfo;
    .end local v4    # "checkname":Ljava/lang/String;
    .end local v9    # "index":I
    .end local v10    # "k":I
    :cond_b
    const/4 v14, 0x1

    goto/16 :goto_0

    .line 29271
    .restart local v9    # "index":I
    .restart local v10    # "k":I
    :cond_c
    add-int/lit8 v8, v8, 0x1

    goto/16 :goto_2

    .line 29343
    .end local v9    # "index":I
    .end local v10    # "k":I
    :cond_d
    const/4 v14, 0x0

    goto/16 :goto_0
.end method

.method static synthetic access$000(Lcom/android/server/am/ActivityManagerService;)Z
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 457
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mShowDialogs:Z

    return v0
.end method

.method static synthetic access$100(Lcom/android/server/am/ActivityManagerService;)Z
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 457
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    return v0
.end method

.method static synthetic access$1000(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;IZZZZZILjava/lang/String;)Z
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # Ljava/lang/String;
    .param p2, "x2"    # I
    .param p3, "x3"    # Z
    .param p4, "x4"    # Z
    .param p5, "x5"    # Z
    .param p6, "x6"    # Z
    .param p7, "x7"    # Z
    .param p8, "x8"    # I
    .param p9, "x9"    # Ljava/lang/String;

    .prologue
    .line 457
    invoke-direct/range {p0 .. p9}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    move-result v0

    return v0
.end method

.method static synthetic access$1100(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 457
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->writeGrantedUriPermissions()V

    return-void
.end method

.method static synthetic access$1200(Lcom/android/server/am/ActivityManagerService;)I
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 457
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mOverheatTextId:I

    return v0
.end method

.method static synthetic access$1202(Lcom/android/server/am/ActivityManagerService;I)I
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # I

    .prologue
    .line 457
    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mOverheatTextId:I

    return p1
.end method

.method static synthetic access$1300(Lcom/android/server/am/ActivityManagerService;)Landroid/os/RemoteCallbackList;
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 457
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskStackListeners:Landroid/os/RemoteCallbackList;

    return-object v0
.end method

.method static synthetic access$1402(Lcom/android/server/am/ActivityManagerService;Z)Z
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # Z

    .prologue
    .line 457
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mUserIsMonkey:Z

    return p1
.end method

.method static synthetic access$1500(Lcom/android/server/am/ActivityManagerService;)Z
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 457
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mIsBoosted:Z

    return v0
.end method

.method static synthetic access$1502(Lcom/android/server/am/ActivityManagerService;Z)Z
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # Z

    .prologue
    .line 457
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mIsBoosted:Z

    return p1
.end method

.method static synthetic access$1600(Lcom/android/server/am/ActivityManagerService;)J
    .locals 2
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 457
    iget-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mBoostStartTime:J

    return-wide v0
.end method

.method static synthetic access$1602(Lcom/android/server/am/ActivityManagerService;J)J
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # J

    .prologue
    .line 457
    iput-wide p1, p0, Lcom/android/server/am/ActivityManagerService;->mBoostStartTime:J

    return-wide p1
.end method

.method static synthetic access$1700()I
    .locals 1

    .prologue
    .line 457
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->nativeMigrateFromBoost()I

    move-result v0

    return v0
.end method

.method static synthetic access$1802(Lcom/android/server/am/ActivityManagerService;I)I
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # I

    .prologue
    .line 457
    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mIOWaitPercentage:I

    return p1
.end method

.method static synthetic access$1900(Lcom/android/server/am/ActivityManagerService;)J
    .locals 2
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 457
    iget-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->SNN_CPU_COLLECT_DATA_INTERVAL:J

    return-wide v0
.end method

.method static synthetic access$200(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "x2"    # Ljava/lang/String;
    .param p3, "x3"    # Landroid/content/Intent;
    .param p4, "x4"    # Ljava/lang/String;
    .param p5, "x5"    # Landroid/content/IIntentReceiver;
    .param p6, "x6"    # I
    .param p7, "x7"    # Ljava/lang/String;
    .param p8, "x8"    # Landroid/os/Bundle;
    .param p9, "x9"    # [Ljava/lang/String;
    .param p10, "x10"    # I
    .param p11, "x11"    # Landroid/os/Bundle;
    .param p12, "x12"    # Z
    .param p13, "x13"    # Z
    .param p14, "x14"    # I
    .param p15, "x15"    # I
    .param p16, "x16"    # I

    .prologue
    .line 457
    invoke-direct/range {p0 .. p16}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    move-result v0

    return v0
.end method

.method static synthetic access$2000(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 457
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->start()V

    return-void
.end method

.method static synthetic access$2200(Lcom/android/server/am/ActivityManagerService;)Landroid/os/PowerManager$WakeLock;
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 457
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBootPartialWakeLock:Landroid/os/PowerManager$WakeLock;

    return-object v0
.end method

.method static synthetic access$2300(Ljava/util/ArrayList;)V
    .locals 0
    .param p0, "x0"    # Ljava/util/ArrayList;

    .prologue
    .line 457
    invoke-static {p0}, Lcom/android/server/am/ActivityManagerService;->writeLastDonePreBootReceivers(Ljava/util/ArrayList;)V

    return-void
.end method

.method static synthetic access$2400(Lcom/android/server/am/ActivityManagerService;)Landroid/os/CountDownTimer;
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 457
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->cpuCheckTimer:Landroid/os/CountDownTimer;

    return-object v0
.end method

.method static synthetic access$2402(Lcom/android/server/am/ActivityManagerService;Landroid/os/CountDownTimer;)Landroid/os/CountDownTimer;
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # Landroid/os/CountDownTimer;

    .prologue
    .line 457
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->cpuCheckTimer:Landroid/os/CountDownTimer;

    return-object p1
.end method

.method static synthetic access$2500(Lcom/android/server/am/ActivityManagerService;)I
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 457
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mSIOPLevel:I

    return v0
.end method

.method static synthetic access$2502(Lcom/android/server/am/ActivityManagerService;I)I
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # I

    .prologue
    .line 457
    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mSIOPLevel:I

    return p1
.end method

.method static synthetic access$2600(Lcom/android/server/am/ActivityManagerService;)I
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 457
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryOverheatLevel:I

    return v0
.end method

.method static synthetic access$2602(Lcom/android/server/am/ActivityManagerService;I)I
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # I

    .prologue
    .line 457
    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryOverheatLevel:I

    return p1
.end method

.method static synthetic access$2700(Lcom/android/server/am/ActivityManagerService;)Ljava/util/HashMap;
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 457
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCheckSIOPLevelList:Ljava/util/HashMap;

    return-object v0
.end method

.method static synthetic access$2702(Lcom/android/server/am/ActivityManagerService;Ljava/util/HashMap;)Ljava/util/HashMap;
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # Ljava/util/HashMap;

    .prologue
    .line 457
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mCheckSIOPLevelList:Ljava/util/HashMap;

    return-object p1
.end method

.method static synthetic access$2800(Lcom/android/server/am/ActivityManagerService;)Ljava/lang/StringBuilder;
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 457
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStrictModeBuffer:Ljava/lang/StringBuilder;

    return-object v0
.end method

.method static synthetic access$2900(Lcom/android/server/am/ActivityManagerService;IZZ)Z
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # I
    .param p2, "x2"    # Z
    .param p3, "x3"    # Z

    .prologue
    .line 457
    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZZ)Z

    move-result v0

    return v0
.end method

.method static synthetic access$300(Lcom/android/server/am/ActivityManagerService;ILjava/lang/String;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # I
    .param p2, "x2"    # Ljava/lang/String;

    .prologue
    .line 457
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->showUserSwitchDialog(ILjava/lang/String;)V

    return-void
.end method

.method static synthetic access$3000(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/TaskRecord;)Landroid/app/ActivityManager$RecentTaskInfo;
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # Lcom/android/server/am/TaskRecord;

    .prologue
    .line 457
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->createRecentTaskInfoFromTaskRecord(Lcom/android/server/am/TaskRecord;)Landroid/app/ActivityManager$RecentTaskInfo;

    move-result-object v0

    return-object v0
.end method

.method static synthetic access$400(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 457
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->dispatchProcessesChanged()V

    return-void
.end method

.method static synthetic access$500(Lcom/android/server/am/ActivityManagerService;II)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # I
    .param p2, "x2"    # I

    .prologue
    .line 457
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->dispatchProcessDied(II)V

    return-void
.end method

.method static synthetic access$600(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 457
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->dispatchUidsChanged()V

    return-void
.end method

.method static synthetic access$700(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 457
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->processStartTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V

    return-void
.end method

.method static synthetic access$800(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 457
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->processContentProviderPublishTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V

    return-void
.end method

.method static synthetic access$900(Lcom/android/server/am/ActivityManagerService;)Ljava/util/HashSet;
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 457
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPersistDownloadablePkgs:Ljava/util/HashSet;

    return-object v0
.end method

.method private addEdmPreventStartVerificationTag(Landroid/os/Bundle;)V
    .locals 3
    .param p1, "options"    # Landroid/os/Bundle;

    .prologue
    .line 28476
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 28477
    .local v0, "uid":I
    if-eqz p1, :cond_0

    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1

    const/16 v2, 0x3e8

    if-eq v1, v2, :cond_0

    .line 28479
    const-string/jumbo v1, "edm:nonSystemUid"

    const/4 v2, 0x1

    invoke-virtual {p1, v1, v2}, Landroid/os/Bundle;->putBoolean(Ljava/lang/String;Z)V

    .line 28481
    :cond_0
    return-void
.end method

.method private final addProcessNameLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 5
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 9075
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-direct {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->removeProcessNameLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 9076
    .local v0, "old":Lcom/android/server/am/ProcessRecord;
    if-ne v0, p1, :cond_3

    iget-boolean v2, p1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v2, :cond_3

    .line 9078
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Re-adding persistent process "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9082
    :cond_0
    :goto_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v2, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/UidRecord;

    .line 9083
    .local v1, "uidRec":Lcom/android/server/am/UidRecord;
    if-nez v1, :cond_1

    .line 9084
    new-instance v1, Lcom/android/server/am/UidRecord;

    .end local v1    # "uidRec":Lcom/android/server/am/UidRecord;
    iget v2, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-direct {v1, v2}, Lcom/android/server/am/UidRecord;-><init>(I)V

    .line 9088
    .restart local v1    # "uidRec":Lcom/android/server/am/UidRecord;
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v2, v3, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 9089
    const/4 v2, 0x0

    invoke-direct {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->enqueueUidChangeLocked(Lcom/android/server/am/UidRecord;Z)V

    .line 9091
    :cond_1
    iput-object v1, p1, Lcom/android/server/am/ProcessRecord;->uidRecord:Lcom/android/server/am/UidRecord;

    .line 9092
    iget v2, v1, Lcom/android/server/am/UidRecord;->numProcs:I

    add-int/lit8 v2, v2, 0x1

    iput v2, v1, Lcom/android/server/am/UidRecord;->numProcs:I

    .line 9093
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v4, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v2, v3, v4, p1}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    .line 9094
    iget-boolean v2, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v2, :cond_2

    .line 9095
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v2, v3, p1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 9097
    :cond_2
    return-void

    .line 9079
    .end local v1    # "uidRec":Lcom/android/server/am/UidRecord;
    :cond_3
    if-eqz v0, :cond_0

    .line 9080
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Already have existing proc "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " when adding "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0
.end method

.method private appendBasicMemEntry(Ljava/lang/StringBuilder;IIJJLjava/lang/String;)V
    .locals 2
    .param p1, "sb"    # Ljava/lang/StringBuilder;
    .param p2, "oomAdj"    # I
    .param p3, "procState"    # I
    .param p4, "pss"    # J
    .param p6, "memtrack"    # J
    .param p8, "name"    # Ljava/lang/String;

    .prologue
    const/16 v1, 0x20

    .line 21040
    const-string v0, "  "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21041
    invoke-static {p2}, Lcom/android/server/am/ProcessList;->makeOomAdjString(I)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21042
    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 21043
    invoke-static {p3}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21044
    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 21045
    invoke-static {p1, p4, p5}, Lcom/android/server/am/ProcessList;->appendRamKb(Ljava/lang/StringBuilder;J)V

    .line 21046
    const-string v0, " kB: "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21047
    invoke-virtual {p1, p8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21048
    const-wide/16 v0, 0x0

    cmp-long v0, p6, v0

    if-lez v0, :cond_0

    .line 21049
    const-string v0, " ("

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21050
    invoke-virtual {p1, p6, p7}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 21051
    const-string v0, " kB memtrack)"

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21053
    :cond_0
    return-void
.end method

.method private appendDropBoxProcessHeaders(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/StringBuilder;)V
    .locals 9
    .param p1, "process"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "processName"    # Ljava/lang/String;
    .param p3, "sb"    # Ljava/lang/StringBuilder;

    .prologue
    .line 17927
    if-nez p1, :cond_0

    .line 17928
    const-string v6, "Process: "

    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, "\n"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17956
    :goto_0
    return-void

    .line 17934
    :cond_0
    monitor-enter p0

    .line 17935
    :try_start_0
    const-string v6, "Process: "

    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, "\n"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17936
    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v6, Landroid/content/pm/ApplicationInfo;->flags:I

    .line 17937
    .local v1, "flags":I
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    .line 17938
    .local v5, "pm":Landroid/content/pm/IPackageManager;
    const-string v6, "Flags: 0x"

    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const/16 v7, 0x10

    invoke-static {v1, v7}, Ljava/lang/Integer;->toString(II)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, "\n"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17939
    const/4 v2, 0x0

    .local v2, "ip":I
    :goto_1
    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v6}, Landroid/util/ArrayMap;->size()I

    move-result v6

    if-ge v2, v6, :cond_2

    .line 17940
    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v6, v2}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    .line 17941
    .local v4, "pkg":Ljava/lang/String;
    const-string v6, "Package: "

    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 17943
    const/4 v6, 0x0

    :try_start_1
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v7

    invoke-interface {v5, v4, v6, v7}, Landroid/content/pm/IPackageManager;->getPackageInfo(Ljava/lang/String;II)Landroid/content/pm/PackageInfo;

    move-result-object v3

    .line 17944
    .local v3, "pi":Landroid/content/pm/PackageInfo;
    if-eqz v3, :cond_1

    .line 17945
    const-string v6, " v"

    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget v7, v3, Landroid/content/pm/PackageInfo;->versionCode:I

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 17946
    iget-object v6, v3, Landroid/content/pm/PackageInfo;->versionName:Ljava/lang/String;

    if-eqz v6, :cond_1

    .line 17947
    const-string v6, " ("

    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v7, v3, Landroid/content/pm/PackageInfo;->versionName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, ")"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 17953
    .end local v3    # "pi":Landroid/content/pm/PackageInfo;
    :cond_1
    :goto_2
    :try_start_2
    const-string v6, "\n"

    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17939
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 17950
    :catch_0
    move-exception v0

    .line 17951
    .local v0, "e":Landroid/os/RemoteException;
    const-string v6, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Error getting package info: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_2

    .line 17955
    .end local v0    # "e":Landroid/os/RemoteException;
    .end local v1    # "flags":I
    .end local v2    # "ip":I
    .end local v4    # "pkg":Ljava/lang/String;
    .end local v5    # "pm":Landroid/content/pm/IPackageManager;
    :catchall_0
    move-exception v6

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v6

    .restart local v1    # "flags":I
    .restart local v2    # "ip":I
    .restart local v5    # "pm":Landroid/content/pm/IPackageManager;
    :cond_2
    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto/16 :goto_0
.end method

.method static final appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V
    .locals 11
    .param p0, "out"    # Ljava/lang/StringBuilder;
    .param p1, "memKB"    # J
    .param p3, "label"    # Ljava/lang/String;
    .param p4, "stackLike"    # Z

    .prologue
    const-wide/16 v8, 0x400

    .line 20468
    const/16 v5, 0x2e

    invoke-virtual {p3, v5}, Ljava/lang/String;->lastIndexOf(I)I

    move-result v4

    .line 20469
    .local v4, "start":I
    if-ltz v4, :cond_0

    add-int/lit8 v4, v4, 0x1

    .line 20471
    :goto_0
    invoke-virtual {p3}, Ljava/lang/String;->length()I

    move-result v2

    .line 20472
    .local v2, "end":I
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_1
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J

    array-length v5, v5

    if-ge v3, v5, :cond_3

    .line 20473
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J

    aget-wide v6, v5, v3

    cmp-long v5, v6, p1

    if-ltz v5, :cond_2

    .line 20474
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J

    aget-wide v6, v5, v3

    div-long v0, v6, v8

    .line 20475
    .local v0, "bucket":J
    invoke-virtual {p0, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 20476
    if-eqz p4, :cond_1

    const-string v5, "MB."

    :goto_2
    invoke-virtual {p0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20477
    invoke-virtual {p0, p3, v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;

    .line 20484
    .end local v0    # "bucket":J
    :goto_3
    return-void

    .line 20470
    .end local v2    # "end":I
    .end local v3    # "i":I
    :cond_0
    const/4 v4, 0x0

    goto :goto_0

    .line 20476
    .restart local v0    # "bucket":J
    .restart local v2    # "end":I
    .restart local v3    # "i":I
    :cond_1
    const-string v5, "MB "

    goto :goto_2

    .line 20472
    .end local v0    # "bucket":J
    :cond_2
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 20481
    :cond_3
    div-long v6, p1, v8

    invoke-virtual {p0, v6, v7}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 20482
    if-eqz p4, :cond_4

    const-string v5, "MB."

    :goto_4
    invoke-virtual {p0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20483
    invoke-virtual {p0, p3, v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;

    goto :goto_3

    .line 20482
    :cond_4
    const-string v5, "MB "

    goto :goto_4
.end method

.method private appendMemInfo(Ljava/lang/StringBuilder;Lcom/android/server/am/ProcessMemInfo;)V
    .locals 10
    .param p1, "sb"    # Ljava/lang/StringBuilder;
    .param p2, "mi"    # Lcom/android/server/am/ProcessMemInfo;

    .prologue
    const/16 v9, 0xa

    .line 21056
    iget v2, p2, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    iget v3, p2, Lcom/android/server/am/ProcessMemInfo;->procState:I

    iget-wide v4, p2, Lcom/android/server/am/ProcessMemInfo;->pss:J

    iget-wide v6, p2, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    iget-object v8, p2, Lcom/android/server/am/ProcessMemInfo;->name:Ljava/lang/String;

    move-object v0, p0

    move-object v1, p1

    invoke-direct/range {v0 .. v8}, Lcom/android/server/am/ActivityManagerService;->appendBasicMemEntry(Ljava/lang/StringBuilder;IIJJLjava/lang/String;)V

    .line 21057
    const-string v0, " (pid "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21058
    iget v0, p2, Lcom/android/server/am/ProcessMemInfo;->pid:I

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 21059
    const-string v0, ") "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21060
    iget-object v0, p2, Lcom/android/server/am/ProcessMemInfo;->adjType:Ljava/lang/String;

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21061
    invoke-virtual {p1, v9}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 21062
    iget-object v0, p2, Lcom/android/server/am/ProcessMemInfo;->adjReason:Ljava/lang/String;

    if-eqz v0, :cond_0

    .line 21063
    const-string v0, "                      "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21064
    iget-object v0, p2, Lcom/android/server/am/ProcessMemInfo;->adjReason:Ljava/lang/String;

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21065
    invoke-virtual {p1, v9}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 21067
    :cond_0
    return-void
.end method

.method private final applyOomAdjLocked(Lcom/android/server/am/ProcessRecord;ZJJ)Z
    .locals 21
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "doingAll"    # Z
    .param p3, "now"    # J
    .param p5, "nowElapsed"    # J

    .prologue
    .line 25809
    sget-boolean v4, Lcom/android/server/am/SmartAdjustManager;->SAMP_DEBUG_TRACE:Z

    if-eqz v4, :cond_0

    .line 25810
    const-wide/16 v4, 0x40

    const-string v6, "applyOomAdjLocked"

    const/4 v7, 0x0

    invoke-static {v4, v5, v6, v7}, Landroid/os/Trace;->asyncTraceBegin(JLjava/lang/String;I)V

    .line 25811
    :cond_0
    const/16 v20, 0x1

    .line 25813
    .local v20, "success":Z
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->setRawAdj:I

    if-eq v4, v5, :cond_1

    .line 25814
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    move-object/from16 v0, p1

    iput v4, v0, Lcom/android/server/am/ProcessRecord;->setRawAdj:I

    .line 25817
    :cond_1
    const/4 v10, 0x0

    .line 25819
    .local v10, "changes":I
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    if-eq v4, v5, :cond_4

    .line 25821
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mSmartAdjustManager:Lcom/android/server/am/SmartAdjustManager;

    if-eqz v4, :cond_2

    sget-boolean v4, Lcom/android/server/am/SmartAdjustManager;->SAMP_HOTNESS_ENABLE:Z

    if-eqz v4, :cond_2

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/16 v5, 0x10

    if-eq v4, v5, :cond_2

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v5, 0x10

    if-ne v4, v5, :cond_2

    .line 25824
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mSmartAdjustManager:Lcom/android/server/am/SmartAdjustManager;

    const/4 v5, 0x1

    move-object/from16 v0, p1

    invoke-virtual {v4, v0, v5}, Lcom/android/server/am/SmartAdjustManager;->updateHotnessAdj(Lcom/android/server/am/ProcessRecord;I)V

    .line 25825
    sget-boolean v4, Lcom/android/server/am/SmartAdjustManager;->SAMP_DEBUG:Z

    if-eqz v4, :cond_2

    .line 25826
    const-string v4, "ActivityManager_SAMP"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "adj was changed app Name: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " Adj: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " -> "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->secI(Ljava/lang/String;Ljava/lang/String;)I

    .line 25830
    :cond_2
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    invoke-static {v4, v5, v6}, Lcom/android/server/am/ProcessList;->setOomAdj(III)V

    .line 25834
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    move-object/from16 v0, p1

    iput v4, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 25835
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v4, :cond_3

    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->killed:Z

    if-eqz v4, :cond_4

    .line 25836
    :cond_3
    const/16 v20, 0x0

    .line 25837
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, p1

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " is already killed"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 25841
    :cond_4
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    if-eq v4, v5, :cond_6

    .line 25842
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    move-object/from16 v0, p1

    iput v4, v0, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    .line 25846
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->waitingToKill:Ljava/lang/String;

    if-eqz v4, :cond_13

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->curReceiver:Lcom/android/server/am/BroadcastRecord;

    if-nez v4, :cond_13

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    if-nez v4, :cond_13

    .line 25849
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v4

    const-string v5, "CscFeature_Common_SupportDeviceReporting"

    invoke-virtual {v4, v5}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_5

    .line 25850
    const/16 v4, 0x190

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    const/4 v7, 0x0

    move-object/from16 v0, p0

    invoke-direct {v0, v4, v5, v6, v7}, Lcom/android/server/am/ActivityManagerService;->sendAppStateMsg(ILjava/lang/String;II)V

    .line 25854
    :cond_5
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->waitingToKill:Ljava/lang/String;

    const/4 v5, 0x1

    move-object/from16 v0, p1

    invoke-virtual {v0, v4, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 25855
    const/16 v20, 0x0

    .line 25880
    :cond_6
    :goto_0
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->repForegroundActivities:Z

    move-object/from16 v0, p1

    iget-boolean v5, v0, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    if-eq v4, v5, :cond_7

    .line 25881
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    move-object/from16 v0, p1

    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->repForegroundActivities:Z

    .line 25882
    or-int/lit8 v10, v10, 0x1

    .line 25884
    :cond_7
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->repProcState:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    if-eq v4, v5, :cond_8

    .line 25885
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    move-object/from16 v0, p1

    iput v4, v0, Lcom/android/server/am/ProcessRecord;->repProcState:I

    .line 25886
    or-int/lit8 v10, v10, 0x2

    .line 25887
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v4, :cond_8

    .line 25894
    :try_start_0
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->repProcState:I

    invoke-interface {v4, v5}, Landroid/app/IApplicationThread;->setProcessState(I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    .line 25899
    :cond_8
    :goto_1
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/4 v5, -0x1

    if-eq v4, v5, :cond_9

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    invoke-static {v4, v5}, Lcom/android/server/am/ProcessList;->procStatesDifferForMem(II)Z

    move-result v4

    if-eqz v4, :cond_15

    .line 25914
    :cond_9
    move-wide/from16 v0, p3

    move-object/from16 v2, p1

    iput-wide v0, v2, Lcom/android/server/am/ProcessRecord;->lastStateTime:J

    .line 25915
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v5, 0x1

    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->isSleeping()Z

    move-result v7

    move-wide/from16 v8, p3

    invoke-static/range {v4 .. v9}, Lcom/android/server/am/ProcessList;->computeNextPssTime(IZZZJ)J

    move-result-wide v4

    move-object/from16 v0, p1

    iput-wide v4, v0, Lcom/android/server/am/ProcessRecord;->nextPssTime:J

    .line 25931
    :cond_a
    :goto_2
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    if-eq v4, v5, :cond_1a

    .line 25935
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v5, 0xa

    if-ge v4, v5, :cond_17

    const/16 v18, 0x1

    .line 25936
    .local v18, "setImportant":Z
    :goto_3
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/16 v5, 0xa

    if-ge v4, v5, :cond_18

    const/4 v11, 0x1

    .line 25937
    .local v11, "curImportant":Z
    :goto_4
    if-eqz v18, :cond_b

    if-nez v11, :cond_b

    .line 25942
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v4}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v19

    .line 25943
    .local v19, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v19

    .line 25944
    :try_start_1
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, v19

    move-wide/from16 v1, p5

    invoke-virtual {v0, v4, v5, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessWakeTime(IIJ)J

    move-result-wide v4

    move-object/from16 v0, p1

    iput-wide v4, v0, Lcom/android/server/am/ProcessRecord;->lastWakeTime:J

    .line 25946
    monitor-exit v19
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 25947
    move-object/from16 v0, p1

    iget-wide v4, v0, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    move-object/from16 v0, p1

    iput-wide v4, v0, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    .line 25952
    .end local v19    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :cond_b
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-wide/from16 v2, p5

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->maybeUpdateUsageStatsLocked(Lcom/android/server/am/ProcessRecord;J)V

    .line 25954
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    move-object/from16 v0, p1

    iput v4, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    .line 25955
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v5, 0xc

    if-lt v4, v5, :cond_c

    .line 25956
    const/4 v4, 0x0

    move-object/from16 v0, p1

    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->notCachedSinceIdle:Z

    .line 25958
    :cond_c
    if-nez p2, :cond_19

    .line 25959
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v4}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    move-result v4

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-wide/from16 v2, p3

    invoke-direct {v0, v1, v4, v2, v3}, Lcom/android/server/am/ActivityManagerService;->setProcessTrackerStateLocked(Lcom/android/server/am/ProcessRecord;IJ)V

    .line 25970
    .end local v11    # "curImportant":Z
    .end local v18    # "setImportant":Z
    :cond_d
    :goto_5
    if-eqz v10, :cond_11

    .line 25973
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    add-int/lit8 v13, v4, -0x1

    .line 25974
    .local v13, "i":I
    const/4 v15, 0x0

    .line 25975
    .local v15, "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :goto_6
    if-ltz v13, :cond_e

    .line 25976
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v4, v13}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v15

    .end local v15    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    check-cast v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 25977
    .restart local v15    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    iget v4, v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v4, v5, :cond_1b

    .line 25984
    :cond_e
    if-gez v13, :cond_10

    .line 25995
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mAvailProcessChanges:Ljava/util/ArrayList;

    move-object/from16 v0, p0

    invoke-direct {v0, v4}, Lcom/android/server/am/ActivityManagerService;->canRetreiveAvailableItem(Ljava/util/ArrayList;)I

    move-result v14

    .line 25996
    .local v14, "index":I
    if-ltz v14, :cond_1c

    .line 25997
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mAvailProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v4, v14}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    move-result-object v15

    .end local v15    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    check-cast v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 25998
    .restart local v15    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    const/4 v4, 0x0

    iput-boolean v4, v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->finished:Z

    .line 26006
    :goto_7
    const/4 v4, 0x0

    iput v4, v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    .line 26007
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    iput v4, v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    .line 26008
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    iput v4, v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->uid:I

    .line 26009
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-nez v4, :cond_f

    .line 26012
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    const/16 v5, 0x1f

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$UiHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v4

    invoke-virtual {v4}, Landroid/os/Message;->sendToTarget()V

    .line 26014
    :cond_f
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v4, v15}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 26016
    .end local v14    # "index":I
    :cond_10
    iget v4, v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    or-int/2addr v4, v10

    iput v4, v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    .line 26017
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->repProcState:I

    iput v4, v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->processState:I

    .line 26018
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->repForegroundActivities:Z

    iput-boolean v4, v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->foregroundActivities:Z

    .line 26027
    .end local v13    # "i":I
    .end local v15    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :cond_11
    sget-boolean v4, Lcom/android/server/am/SmartAdjustManager;->SAMP_DEBUG_TRACE:Z

    if-eqz v4, :cond_12

    .line 26028
    const-wide/16 v4, 0x40

    const-string v6, "applyOomAdjLocked"

    const/4 v7, 0x0

    invoke-static {v4, v5, v6, v7}, Landroid/os/Trace;->asyncTraceEnd(JLjava/lang/String;I)V

    .line 26030
    :cond_12
    return v20

    .line 25858
    :cond_13
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v16

    .line 25860
    .local v16, "oldId":J
    :try_start_2
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    invoke-static {v4, v5}, Landroid/os/Process;->setProcessGroup(II)V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 25866
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 25876
    :goto_8
    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    if-gtz v4, :cond_14

    const/4 v4, 0x1

    :goto_9
    invoke-static {v5, v4}, Landroid/os/Process;->setSwappiness(IZ)Z

    goto/16 :goto_0

    .line 25861
    :catch_0
    move-exception v12

    .line 25862
    .local v12, "e":Ljava/lang/Exception;
    :try_start_3
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Failed setting process group of "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " to "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 25864
    invoke-virtual {v12}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 25866
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_8

    .end local v12    # "e":Ljava/lang/Exception;
    :catchall_0
    move-exception v4

    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4

    .line 25876
    :cond_14
    const/4 v4, 0x0

    goto :goto_9

    .line 25922
    .end local v16    # "oldId":J
    :cond_15
    move-object/from16 v0, p1

    iget-wide v4, v0, Lcom/android/server/am/ProcessRecord;->nextPssTime:J

    cmp-long v4, p3, v4

    if-gtz v4, :cond_16

    move-object/from16 v0, p1

    iget-wide v4, v0, Lcom/android/server/am/ProcessRecord;->lastPssTime:J

    const-wide/32 v6, 0x1b7740

    add-long/2addr v4, v6

    cmp-long v4, p3, v4

    if-lez v4, :cond_a

    move-object/from16 v0, p1

    iget-wide v4, v0, Lcom/android/server/am/ProcessRecord;->lastStateTime:J

    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    invoke-static {v6}, Lcom/android/server/am/ProcessList;->minTimeFromStateChange(Z)J

    move-result-wide v6

    add-long/2addr v4, v6

    cmp-long v4, p3, v4

    if-lez v4, :cond_a

    .line 25925
    :cond_16
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-virtual {v0, v1, v4}, Lcom/android/server/am/ActivityManagerService;->requestPssLocked(Lcom/android/server/am/ProcessRecord;I)V

    .line 25926
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v5, 0x0

    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->isSleeping()Z

    move-result v7

    move-wide/from16 v8, p3

    invoke-static/range {v4 .. v9}, Lcom/android/server/am/ProcessList;->computeNextPssTime(IZZZJ)J

    move-result-wide v4

    move-object/from16 v0, p1

    iput-wide v4, v0, Lcom/android/server/am/ProcessRecord;->nextPssTime:J

    goto/16 :goto_2

    .line 25935
    :cond_17
    const/16 v18, 0x0

    goto/16 :goto_3

    .line 25936
    .restart local v18    # "setImportant":Z
    :cond_18
    const/4 v11, 0x0

    goto/16 :goto_4

    .line 25946
    .restart local v11    # "curImportant":Z
    .restart local v19    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :catchall_1
    move-exception v4

    :try_start_4
    monitor-exit v19
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v4

    .line 25961
    .end local v19    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :cond_19
    const/4 v4, 0x1

    move-object/from16 v0, p1

    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    goto/16 :goto_5

    .line 25963
    .end local v11    # "curImportant":Z
    .end local v18    # "setImportant":Z
    :cond_1a
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->reportedInteraction:Z

    if-eqz v4, :cond_d

    move-object/from16 v0, p1

    iget-wide v4, v0, Lcom/android/server/am/ProcessRecord;->interactionEventTime:J

    sub-long v4, p5, v4

    const-wide/32 v6, 0x5265c00

    cmp-long v4, v4, v6

    if-lez v4, :cond_d

    .line 25967
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-wide/from16 v2, p5

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->maybeUpdateUsageStatsLocked(Lcom/android/server/am/ProcessRecord;J)V

    goto/16 :goto_5

    .line 25982
    .restart local v13    # "i":I
    .restart local v15    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :cond_1b
    add-int/lit8 v13, v13, -0x1

    goto/16 :goto_6

    .line 26002
    .restart local v14    # "index":I
    :cond_1c
    new-instance v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .end local v15    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    invoke-direct {v15}, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;-><init>()V

    .restart local v15    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    goto/16 :goto_7

    .line 25895
    .end local v13    # "i":I
    .end local v14    # "index":I
    .end local v15    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :catch_1
    move-exception v4

    goto/16 :goto_1
.end method

.method private applyUserId(II)I
    .locals 1
    .param p1, "uid"    # I
    .param p2, "userId"    # I

    .prologue
    .line 28350
    invoke-static {p2, p1}, Landroid/os/UserHandle;->getUid(II)I

    move-result v0

    return v0
.end method

.method private arrangeSplitReceiver(Lcom/android/server/am/BroadcastRecord;)Z
    .locals 13
    .param p1, "r"    # Lcom/android/server/am/BroadcastRecord;

    .prologue
    .line 29352
    const/4 v9, 0x0

    .line 29353
    .local v9, "splitQueueNum":I
    const/4 v4, 0x0

    .line 29355
    .local v4, "curIndex":I
    iget v10, p0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    add-int/lit8 v5, v10, -0x1

    .local v5, "i":I
    :goto_0
    if-ltz v5, :cond_7

    .line 29356
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    aget v4, v10, v5

    .line 29357
    iget-object v10, p1, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v10, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v10

    const/4 v11, 0x1

    invoke-direct {p0, v10, v11}, Lcom/android/server/am/ActivityManagerService;->getProcessName(Ljava/lang/Object;I)Ljava/lang/String;

    move-result-object v2

    .line 29358
    .local v2, "boundaryActProc":Ljava/lang/String;
    iget-object v10, p1, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v10, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v10

    const/4 v11, 0x2

    invoke-direct {p0, v10, v11}, Lcom/android/server/am/ActivityManagerService;->getProcessName(Ljava/lang/Object;I)Ljava/lang/String;

    move-result-object v3

    .line 29364
    .local v3, "boundaryAppProc":Ljava/lang/String;
    :cond_0
    const/4 v10, 0x1

    if-le v4, v10, :cond_1

    .line 29365
    iget-object v10, p1, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    add-int/lit8 v4, v4, -0x1

    invoke-interface {v10, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v10

    const/4 v11, 0x1

    invoke-direct {p0, v10, v11}, Lcom/android/server/am/ActivityManagerService;->getProcessName(Ljava/lang/Object;I)Ljava/lang/String;

    move-result-object v0

    .line 29366
    .local v0, "act":Ljava/lang/String;
    iget-object v10, p1, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v10, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v10

    const/4 v11, 0x2

    invoke-direct {p0, v10, v11}, Lcom/android/server/am/ActivityManagerService;->getProcessName(Ljava/lang/Object;I)Ljava/lang/String;

    move-result-object v1

    .line 29370
    .local v1, "app":Ljava/lang/String;
    invoke-virtual {v2, v0}, Ljava/lang/String;->compareTo(Ljava/lang/String;)I

    move-result v8

    .line 29371
    .local v8, "res":I
    invoke-virtual {v3, v1}, Ljava/lang/String;->compareTo(Ljava/lang/String;)I

    move-result v10

    add-int/2addr v8, v10

    .line 29372
    if-eqz v8, :cond_0

    .line 29375
    .end local v0    # "act":Ljava/lang/String;
    .end local v1    # "app":Ljava/lang/String;
    .end local v8    # "res":I
    :cond_1
    add-int/lit8 v4, v4, 0x1

    .line 29378
    add-int/lit8 v6, v5, -0x1

    .local v6, "j":I
    :goto_1
    if-ltz v6, :cond_4

    .line 29379
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    aget v10, v10, v6

    if-gt v4, v10, :cond_3

    .line 29380
    move v7, v5

    .local v7, "k":I
    :goto_2
    add-int v10, v5, v9

    if-ge v7, v10, :cond_2

    .line 29381
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    add-int/lit8 v12, v7, 0x1

    aget v11, v11, v12

    aput v11, v10, v7

    .line 29380
    add-int/lit8 v7, v7, 0x1

    goto :goto_2

    .line 29382
    :cond_2
    add-int/lit8 v5, v5, -0x1

    .line 29378
    .end local v7    # "k":I
    :cond_3
    add-int/lit8 v6, v6, -0x1

    goto :goto_1

    .line 29386
    :cond_4
    if-nez v5, :cond_6

    .line 29387
    if-nez v9, :cond_5

    const/4 v10, 0x0

    .line 29405
    .end local v2    # "boundaryActProc":Ljava/lang/String;
    .end local v3    # "boundaryAppProc":Ljava/lang/String;
    .end local v6    # "j":I
    :goto_3
    return v10

    .line 29390
    .restart local v2    # "boundaryActProc":Ljava/lang/String;
    .restart local v3    # "boundaryAppProc":Ljava/lang/String;
    .restart local v6    # "j":I
    :cond_5
    const/4 v10, 0x3

    if-ge v4, v10, :cond_6

    .line 29391
    const-string/jumbo v10, "splitIntent"

    const-string/jumbo v11, "merge bg queue with split queue"

    invoke-static {v10, v11}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 29392
    const/4 v7, 0x0

    .restart local v7    # "k":I
    :goto_4
    if-ge v7, v9, :cond_7

    .line 29393
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    add-int/lit8 v12, v7, 0x1

    aget v11, v11, v12

    aput v11, v10, v7

    .line 29392
    add-int/lit8 v7, v7, 0x1

    goto :goto_4

    .line 29397
    .end local v7    # "k":I
    :cond_6
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    aput v4, v10, v5

    .line 29398
    add-int/lit8 v9, v9, 0x1

    .line 29355
    add-int/lit8 v5, v5, -0x1

    goto/16 :goto_0

    .line 29400
    .end local v2    # "boundaryActProc":Ljava/lang/String;
    .end local v3    # "boundaryAppProc":Ljava/lang/String;
    .end local v6    # "j":I
    :cond_7
    iput v9, p0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    .line 29402
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->IsSameProcessInOtherQueue(Lcom/android/server/am/BroadcastRecord;)Z

    move-result v10

    if-eqz v10, :cond_8

    .line 29403
    const/4 v10, 0x0

    goto :goto_3

    .line 29405
    :cond_8
    const/4 v10, 0x1

    goto :goto_3
.end method

.method private final attachApplicationLocked(Landroid/app/IApplicationThread;I)Z
    .locals 41
    .param p1, "thread"    # Landroid/app/IApplicationThread;
    .param p2, "pid"    # I

    .prologue
    .line 9223
    sget v6, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    move/from16 v0, p2

    if-eq v0, v6, :cond_0

    if-ltz p2, :cond_0

    .line 9224
    move-object/from16 v0, p0

    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v10

    .line 9225
    :try_start_0
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move/from16 v0, p2

    invoke-virtual {v6, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v25

    check-cast v25, Lcom/android/server/am/ProcessRecord;

    .line 9226
    .local v25, "app":Lcom/android/server/am/ProcessRecord;
    monitor-exit v10
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 9231
    :goto_0
    if-nez v25, :cond_2

    .line 9232
    const-string v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "No pending application record for pid "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move/from16 v0, p2

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v12, " (IApplicationThread "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, p1

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v12, "); dropping process"

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v6, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9234
    const/16 v6, 0x7551

    move/from16 v0, p2

    invoke-static {v6, v0}, Landroid/util/EventLog;->writeEvent(II)I

    .line 9235
    if-lez p2, :cond_1

    sget v6, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    move/from16 v0, p2

    if-eq v0, v6, :cond_1

    .line 9236
    invoke-static/range {p2 .. p2}, Landroid/os/Process;->killProcessQuiet(I)V

    .line 9245
    :goto_1
    const/4 v6, 0x0

    .line 9534
    :goto_2
    return v6

    .line 9226
    .end local v25    # "app":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v6

    :try_start_1
    monitor-exit v10
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v6

    .line 9228
    :cond_0
    const/16 v25, 0x0

    .restart local v25    # "app":Lcom/android/server/am/ProcessRecord;
    goto :goto_0

    .line 9240
    :cond_1
    :try_start_2
    invoke-interface/range {p1 .. p1}, Landroid/app/IApplicationThread;->scheduleExit()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    goto :goto_1

    .line 9241
    :catch_0
    move-exception v6

    goto :goto_1

    .line 9251
    :cond_2
    const/16 v40, 0x0

    .line 9253
    .local v40, "scaledPid":Z
    move-object/from16 v0, v25

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    if-eqz v6, :cond_3

    .line 9254
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mDssHelper:Landroid/os/DssHelper;

    move-object/from16 v0, v25

    iget-object v10, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v6, v10}, Landroid/os/DssHelper;->isPackageExist(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_3

    .line 9255
    const/16 v40, 0x1

    .line 9259
    :cond_3
    if-eqz v40, :cond_4

    .line 9260
    move-object/from16 v0, v25

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v6}, Ljava/lang/String;->toString()Ljava/lang/String;

    move-result-object v33

    .line 9261
    .local v33, "packageName":Ljava/lang/String;
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    move/from16 v0, p2

    move-object/from16 v1, v33

    invoke-virtual {v6, v0, v1}, Lcom/android/server/wm/WindowManagerService;->addScaledPid(ILjava/lang/String;)V

    .line 9262
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mScaledAppNames:Ljava/util/Map;

    move-object/from16 v0, v25

    iget-object v10, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-static/range {p2 .. p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v12

    invoke-interface {v6, v10, v12}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 9269
    .end local v33    # "packageName":Ljava/lang/String;
    :cond_4
    move-object/from16 v0, v25

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v6, :cond_5

    .line 9270
    const/4 v6, 0x1

    const/4 v10, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, v25

    invoke-direct {v0, v1, v6, v10}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 9278
    :cond_5
    move-object/from16 v0, v25

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 9280
    .local v7, "processName":Ljava/lang/String;
    :try_start_3
    new-instance v24, Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;

    move-object/from16 v0, v24

    move-object/from16 v1, p0

    move-object/from16 v2, v25

    move/from16 v3, p2

    move-object/from16 v4, p1

    invoke-direct {v0, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;)V

    .line 9282
    .local v24, "adr":Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;
    invoke-interface/range {p1 .. p1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v6

    const/4 v10, 0x0

    move-object/from16 v0, v24

    invoke-interface {v6, v0, v10}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    .line 9283
    move-object/from16 v0, v24

    move-object/from16 v1, v25

    iput-object v0, v1, Lcom/android/server/am/ProcessRecord;->deathRecipient:Landroid/os/IBinder$DeathRecipient;
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_1

    .line 9290
    const/16 v6, 0x753a

    const/4 v10, 0x3

    new-array v10, v10, [Ljava/lang/Object;

    const/4 v12, 0x0

    move-object/from16 v0, v25

    iget v13, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    aput-object v13, v10, v12

    const/4 v12, 0x1

    move-object/from16 v0, v25

    iget v13, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    aput-object v13, v10, v12

    const/4 v12, 0x2

    move-object/from16 v0, v25

    iget-object v13, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aput-object v13, v10, v12

    invoke-static {v6, v10}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 9292
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    move-object/from16 v0, v25

    move-object/from16 v1, p1

    invoke-virtual {v0, v1, v6}, Lcom/android/server/am/ProcessRecord;->makeActive(Landroid/app/IApplicationThread;Lcom/android/server/am/ProcessStatsService;)V

    .line 9293
    const/16 v6, -0x64

    move-object/from16 v0, v25

    iput v6, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    move-object/from16 v0, v25

    iput v6, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 9294
    const/4 v6, -0x1

    move-object/from16 v0, v25

    iput v6, v0, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    move-object/from16 v0, v25

    iput v6, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 9295
    const/4 v6, 0x0

    move-object/from16 v0, v25

    iput-object v6, v0, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;

    .line 9296
    const/4 v6, 0x0

    const/4 v10, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v25

    invoke-virtual {v0, v1, v6, v10}, Lcom/android/server/am/ActivityManagerService;->updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 9297
    const/4 v6, 0x0

    move-object/from16 v0, v25

    iput-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    .line 9298
    const/4 v6, 0x0

    move-object/from16 v0, v25

    iput-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->debugging:Z

    .line 9299
    const/4 v6, 0x0

    move-object/from16 v0, v25

    iput-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 9300
    const/4 v6, 0x0

    move-object/from16 v0, v25

    iput-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    .line 9301
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v12

    move-object/from16 v0, v25

    iput-wide v12, v0, Lcom/android/server/am/ProcessRecord;->startTime:J

    .line 9303
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v10, 0x14

    move-object/from16 v0, v25

    invoke-virtual {v6, v10, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V

    .line 9305
    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v6, :cond_6

    move-object/from16 v0, v25

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v0, p0

    invoke-virtual {v0, v6}, Lcom/android/server/am/ActivityManagerService;->isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z

    move-result v6

    if-eqz v6, :cond_18

    :cond_6
    const/16 v32, 0x1

    .line 9306
    .local v32, "normalMode":Z
    :goto_3
    if-eqz v32, :cond_19

    move-object/from16 v0, p0

    move-object/from16 v1, v25

    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService;->generateApplicationProvidersLocked(Lcom/android/server/am/ProcessRecord;)Ljava/util/List;

    move-result-object v9

    .line 9308
    .local v9, "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    :goto_4
    if-eqz v9, :cond_7

    move-object/from16 v0, p0

    move-object/from16 v1, v25

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->checkAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v6

    if-eqz v6, :cond_7

    .line 9309
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v10, 0x3b

    invoke-virtual {v6, v10}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v31

    .line 9310
    .local v31, "msg":Landroid/os/Message;
    move-object/from16 v0, v25

    move-object/from16 v1, v31

    iput-object v0, v1, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 9311
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-wide/16 v12, 0x2710

    move-object/from16 v0, v31

    invoke-virtual {v6, v0, v12, v13}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 9314
    .end local v31    # "msg":Landroid/os/Message;
    :cond_7
    if-nez v32, :cond_8

    .line 9315
    const-string v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Launching preboot mode app: "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v25

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v6, v10}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9322
    :cond_8
    const/4 v15, 0x0

    .line 9323
    .local v15, "testMode":I
    :try_start_4
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    if-eqz v6, :cond_9

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_9

    .line 9324
    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    if-eqz v6, :cond_1a

    const/4 v15, 0x2

    .line 9327
    :goto_5
    const/4 v6, 0x1

    move-object/from16 v0, v25

    iput-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->debugging:Z

    .line 9328
    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    if-eqz v6, :cond_9

    .line 9329
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    move-object/from16 v0, p0

    iput-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 9330
    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    move-object/from16 v0, p0

    iput-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 9333
    :cond_9
    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->instrumentationProfileFile:Ljava/lang/String;

    move-object/from16 v37, v0

    .line 9334
    .local v37, "profileFile":Ljava/lang/String;
    const/16 v36, 0x0

    .line 9335
    .local v36, "profileFd":Landroid/os/ParcelFileDescriptor;
    const/16 v39, 0x0

    .line 9336
    .local v39, "samplingInterval":I
    const/16 v35, 0x0

    .line 9337
    .local v35, "profileAutoStop":Z
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    if-eqz v6, :cond_a

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_a

    .line 9338
    move-object/from16 v0, v25

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    .line 9339
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFile:Ljava/lang/String;

    move-object/from16 v37, v0

    .line 9340
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    move-object/from16 v36, v0

    .line 9341
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mSamplingInterval:I

    move/from16 v39, v0

    .line 9342
    move-object/from16 v0, p0

    iget-boolean v0, v0, Lcom/android/server/am/ActivityManagerService;->mAutoStopProfiler:Z

    move/from16 v35, v0

    .line 9344
    :cond_a
    const/16 v16, 0x0

    .line 9345
    .local v16, "enableOpenGlTrace":Z
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    if-eqz v6, :cond_b

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_b

    .line 9346
    const/16 v16, 0x1

    .line 9347
    const/4 v6, 0x0

    move-object/from16 v0, p0

    iput-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    .line 9351
    :cond_b
    const/16 v30, 0x0

    .line 9352
    .local v30, "isRestrictedBackupMode":Z
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    if-eqz v6, :cond_d

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_d

    .line 9353
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget v6, v6, Lcom/android/server/am/BackupRecord;->backupMode:I

    const/4 v10, 0x2

    if-eq v6, v10, :cond_c

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget v6, v6, Lcom/android/server/am/BackupRecord;->backupMode:I

    const/4 v10, 0x3

    if-eq v6, v10, :cond_c

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget v6, v6, Lcom/android/server/am/BackupRecord;->backupMode:I

    const/4 v10, 0x1

    if-ne v6, v10, :cond_1b

    :cond_c
    const/16 v30, 0x1

    .line 9358
    :cond_d
    :goto_6
    move-object/from16 v0, v25

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;

    if-eqz v6, :cond_1c

    move-object/from16 v0, v25

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    :goto_7
    move-object/from16 v0, p0

    invoke-virtual {v0, v6}, Lcom/android/server/am/ActivityManagerService;->ensurePackageDexOpt(Ljava/lang/String;)V

    .line 9361
    move-object/from16 v0, v25

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-eqz v6, :cond_e

    .line 9362
    move-object/from16 v0, v25

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    invoke-virtual {v6}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p0

    invoke-virtual {v0, v6}, Lcom/android/server/am/ActivityManagerService;->ensurePackageDexOpt(Ljava/lang/String;)V

    .line 9367
    :cond_e
    new-instance v19, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;

    invoke-direct/range {v19 .. v19}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;-><init>()V

    .line 9368
    .local v19, "configurations":Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;, "Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList<Landroid/content/res/Configuration;>;"
    const/high16 v38, 0x3f800000    # 1.0f

    .line 9369
    .local v38, "resolutionFactorf":F
    if-eqz v40, :cond_10

    .line 9370
    move-object/from16 v0, v25

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v6}, Ljava/lang/String;->toString()Ljava/lang/String;

    move-result-object v33

    .line 9371
    .restart local v33    # "packageName":Ljava/lang/String;
    const-string v28, "DSS"

    .line 9372
    .local v28, "dssType":Ljava/lang/String;
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mDssHelper:Landroid/os/DssHelper;

    move-object/from16 v0, v33

    invoke-virtual {v6, v0}, Landroid/os/DssHelper;->getScalingFactorAdss(Ljava/lang/String;)F

    move-result v38

    .line 9373
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mDssHelper:Landroid/os/DssHelper;

    move-object/from16 v0, v33

    invoke-virtual {v6, v0}, Landroid/os/DssHelper;->isAdss(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_f

    .line 9374
    const-string v28, "ADSS"

    .line 9375
    :cond_f
    const-string v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, ""

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v28

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v12, " on for "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v33

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v12, " and scale is "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move/from16 v0, v38

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v6, v10}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9385
    .end local v28    # "dssType":Ljava/lang/String;
    .end local v33    # "packageName":Ljava/lang/String;
    :cond_10
    const/4 v6, 0x0

    new-instance v10, Landroid/content/res/Configuration;

    move-object/from16 v0, p0

    iget-object v12, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    invoke-direct {v10, v12}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    move-object/from16 v0, v19

    invoke-virtual {v0, v6, v10}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 9386
    const/4 v6, 0x0

    move-object/from16 v0, v19

    invoke-virtual {v0, v6}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/content/res/Configuration;

    iget v10, v6, Landroid/content/res/Configuration;->densityDpi:I

    int-to-float v10, v10

    mul-float v10, v10, v38

    float-to-int v10, v10

    iput v10, v6, Landroid/content/res/Configuration;->densityDpi:I

    .line 9392
    move-object/from16 v0, v25

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;

    if-eqz v6, :cond_1d

    move-object/from16 v0, v25

    iget-object v8, v0, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;

    .line 9395
    .local v8, "appInfo":Landroid/content/pm/ApplicationInfo;
    :goto_8
    if-eqz v40, :cond_11

    .line 9396
    move/from16 v0, v38

    iput v0, v8, Landroid/content/pm/ApplicationInfo;->dssScale:F

    .line 9399
    :cond_11
    move-object/from16 v0, p0

    invoke-virtual {v0, v8}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v6

    move-object/from16 v0, v25

    iput-object v6, v0, Lcom/android/server/am/ProcessRecord;->compat:Landroid/content/res/CompatibilityInfo;

    .line 9400
    if-eqz v36, :cond_12

    .line 9401
    invoke-virtual/range {v36 .. v36}, Landroid/os/ParcelFileDescriptor;->dup()Landroid/os/ParcelFileDescriptor;

    move-result-object v36

    .line 9404
    :cond_12
    if-nez v37, :cond_1e

    const/4 v11, 0x0

    .line 9415
    .local v11, "profilerInfo":Landroid/app/ProfilerInfo;
    :goto_9
    iget-object v6, v8, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-static {v6}, Lcom/android/server/pm/PackageManagerService;->getResourceDirsInfo(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v6

    iput-object v6, v8, Landroid/content/pm/ApplicationInfo;->resourceDirs:[Ljava/lang/String;

    .line 9421
    move-object/from16 v0, v25

    iget-object v10, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    move-object/from16 v0, v25

    iget-object v12, v0, Lcom/android/server/am/ProcessRecord;->instrumentationArguments:Landroid/os/Bundle;

    move-object/from16 v0, v25

    iget-object v13, v0, Lcom/android/server/am/ProcessRecord;->instrumentationWatcher:Landroid/app/IInstrumentationWatcher;

    move-object/from16 v0, v25

    iget-object v14, v0, Lcom/android/server/am/ProcessRecord;->instrumentationUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    if-nez v30, :cond_13

    if-nez v32, :cond_1f

    :cond_13
    const/16 v17, 0x1

    :goto_a
    move-object/from16 v0, v25

    iget-boolean v0, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    move/from16 v18, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->compat:Landroid/content/res/CompatibilityInfo;

    move-object/from16 v20, v0

    move-object/from16 v0, v25

    iget-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    move-object/from16 v0, p0

    invoke-direct {v0, v6}, Lcom/android/server/am/ActivityManagerService;->getCommonServicesLocked(Z)Ljava/util/HashMap;

    move-result-object v21

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;

    invoke-virtual {v6}, Lcom/android/server/am/CoreSettingsObserver;->getCoreSettingsLocked()Landroid/os/Bundle;

    move-result-object v22

    move-object/from16 v0, v25

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->displayId:I

    move/from16 v23, v0

    move-object/from16 v6, p1

    invoke-interface/range {v6 .. v23}, Landroid/app/IApplicationThread;->bindApplication(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/util/List;Landroid/content/ComponentName;Landroid/app/ProfilerInfo;Landroid/os/Bundle;Landroid/app/IInstrumentationWatcher;Landroid/app/IUiAutomationConnection;IZZZLcom/samsung/android/multidisplay/common/UnRestrictedArrayList;Landroid/content/res/CompatibilityInfo;Ljava/util/Map;Landroid/os/Bundle;I)V

    .line 9430
    const/4 v6, 0x0

    const/4 v10, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v25

    invoke-virtual {v0, v1, v6, v10}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    .line 9431
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v12

    move-object/from16 v0, v25

    iput-wide v12, v0, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J

    move-object/from16 v0, v25

    iput-wide v12, v0, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_2

    .line 9445
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, v25

    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 9448
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    move-object/from16 v0, v25

    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 9450
    const/16 v26, 0x0

    .line 9451
    .local v26, "badApp":Z
    const/16 v27, 0x0

    .line 9454
    .local v27, "didSomething":Z
    if-eqz v32, :cond_14

    .line 9456
    :try_start_5
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, v25

    invoke-virtual {v6, v0}, Lcom/android/server/am/ActivityStackSupervisor;->attachApplicationLocked(Lcom/android/server/am/ProcessRecord;)Z
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_3

    move-result v6

    if-eqz v6, :cond_14

    .line 9457
    const/16 v27, 0x1

    .line 9466
    :cond_14
    :goto_b
    if-nez v26, :cond_15

    .line 9468
    :try_start_6
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object/from16 v0, v25

    invoke-virtual {v6, v0, v7}, Lcom/android/server/am/ActiveServices;->attachApplicationLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)Z
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_4

    move-result v6

    or-int v27, v27, v6

    .line 9476
    :cond_15
    :goto_c
    if-nez v26, :cond_16

    move-object/from16 v0, p0

    move/from16 v1, p2

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->isPendingBroadcastProcessLocked(I)Z

    move-result v6

    if-eqz v6, :cond_16

    .line 9478
    :try_start_7
    move-object/from16 v0, p0

    move-object/from16 v1, v25

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->sendPendingBroadcastsLocked(Lcom/android/server/am/ProcessRecord;)Z
    :try_end_7
    .catch Ljava/lang/Exception; {:try_start_7 .. :try_end_7} :catch_5

    move-result v6

    or-int v27, v27, v6

    .line 9487
    :cond_16
    :goto_d
    if-nez v26, :cond_17

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    if-eqz v6, :cond_17

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v6, v6, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, v25

    iget v10, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    if-ne v6, v10, :cond_17

    .line 9490
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v6, v6, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p0

    invoke-virtual {v0, v6}, Lcom/android/server/am/ActivityManagerService;->ensurePackageDexOpt(Ljava/lang/String;)V

    .line 9492
    :try_start_8
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v6, v6, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v0, p0

    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v10, v10, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v0, p0

    invoke-virtual {v0, v10}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v10

    move-object/from16 v0, p0

    iget-object v12, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget v12, v12, Lcom/android/server/am/BackupRecord;->backupMode:I

    move-object/from16 v0, p1

    invoke-interface {v0, v6, v10, v12}, Landroid/app/IApplicationThread;->scheduleCreateBackupAgent(Landroid/content/pm/ApplicationInfo;Landroid/content/res/CompatibilityInfo;I)V
    :try_end_8
    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_8} :catch_6

    .line 9501
    :cond_17
    :goto_e
    if-eqz v26, :cond_20

    .line 9502
    const-string/jumbo v6, "error during init"

    const/4 v10, 0x1

    move-object/from16 v0, v25

    invoke-virtual {v0, v6, v10}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 9503
    const/4 v6, 0x0

    const/4 v10, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, v25

    invoke-direct {v0, v1, v6, v10}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 9504
    const/4 v6, 0x0

    goto/16 :goto_2

    .line 9284
    .end local v8    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .end local v9    # "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    .end local v11    # "profilerInfo":Landroid/app/ProfilerInfo;
    .end local v15    # "testMode":I
    .end local v16    # "enableOpenGlTrace":Z
    .end local v19    # "configurations":Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;, "Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList<Landroid/content/res/Configuration;>;"
    .end local v24    # "adr":Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;
    .end local v26    # "badApp":Z
    .end local v27    # "didSomething":Z
    .end local v30    # "isRestrictedBackupMode":Z
    .end local v32    # "normalMode":Z
    .end local v35    # "profileAutoStop":Z
    .end local v36    # "profileFd":Landroid/os/ParcelFileDescriptor;
    .end local v37    # "profileFile":Ljava/lang/String;
    .end local v38    # "resolutionFactorf":F
    .end local v39    # "samplingInterval":I
    :catch_1
    move-exception v29

    .line 9285
    .local v29, "e":Landroid/os/RemoteException;
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    move-object/from16 v0, v25

    invoke-virtual {v0, v6}, Lcom/android/server/am/ProcessRecord;->resetPackageList(Lcom/android/server/am/ProcessStatsService;)V

    .line 9286
    const-string/jumbo v6, "link fail"

    move-object/from16 v0, p0

    move-object/from16 v1, v25

    invoke-direct {v0, v1, v6, v7}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V

    .line 9287
    const/4 v6, 0x0

    goto/16 :goto_2

    .line 9305
    .end local v29    # "e":Landroid/os/RemoteException;
    .restart local v24    # "adr":Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;
    :cond_18
    const/16 v32, 0x0

    goto/16 :goto_3

    .line 9306
    .restart local v32    # "normalMode":Z
    :cond_19
    const/4 v9, 0x0

    goto/16 :goto_4

    .line 9324
    .restart local v9    # "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    .restart local v15    # "testMode":I
    :cond_1a
    const/4 v15, 0x1

    goto/16 :goto_5

    .line 9353
    .restart local v16    # "enableOpenGlTrace":Z
    .restart local v30    # "isRestrictedBackupMode":Z
    .restart local v35    # "profileAutoStop":Z
    .restart local v36    # "profileFd":Landroid/os/ParcelFileDescriptor;
    .restart local v37    # "profileFile":Ljava/lang/String;
    .restart local v39    # "samplingInterval":I
    :cond_1b
    const/16 v30, 0x0

    goto/16 :goto_6

    .line 9358
    :cond_1c
    :try_start_9
    move-object/from16 v0, v25

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    goto/16 :goto_7

    .line 9392
    .restart local v19    # "configurations":Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;, "Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList<Landroid/content/res/Configuration;>;"
    .restart local v38    # "resolutionFactorf":F
    :cond_1d
    move-object/from16 v0, v25

    iget-object v8, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    goto/16 :goto_8

    .line 9404
    .restart local v8    # "appInfo":Landroid/content/pm/ApplicationInfo;
    :cond_1e
    new-instance v11, Landroid/app/ProfilerInfo;

    move-object/from16 v0, v37

    move-object/from16 v1, v36

    move/from16 v2, v39

    move/from16 v3, v35

    invoke-direct {v11, v0, v1, v2, v3}, Landroid/app/ProfilerInfo;-><init>(Ljava/lang/String;Landroid/os/ParcelFileDescriptor;IZ)V
    :try_end_9
    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_9} :catch_2

    goto/16 :goto_9

    .line 9432
    .end local v8    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .end local v16    # "enableOpenGlTrace":Z
    .end local v19    # "configurations":Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;, "Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList<Landroid/content/res/Configuration;>;"
    .end local v30    # "isRestrictedBackupMode":Z
    .end local v35    # "profileAutoStop":Z
    .end local v36    # "profileFd":Landroid/os/ParcelFileDescriptor;
    .end local v37    # "profileFile":Ljava/lang/String;
    .end local v38    # "resolutionFactorf":F
    .end local v39    # "samplingInterval":I
    :catch_2
    move-exception v29

    .line 9436
    .local v29, "e":Ljava/lang/Exception;
    const-string v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Exception thrown during bind of "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v25

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    move-object/from16 v0, v29

    invoke-static {v6, v10, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 9438
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    move-object/from16 v0, v25

    invoke-virtual {v0, v6}, Lcom/android/server/am/ProcessRecord;->resetPackageList(Lcom/android/server/am/ProcessStatsService;)V

    .line 9439
    invoke-virtual/range {v25 .. v25}, Lcom/android/server/am/ProcessRecord;->unlinkDeathRecipient()V

    .line 9440
    const-string v6, "bind fail"

    move-object/from16 v0, p0

    move-object/from16 v1, v25

    invoke-direct {v0, v1, v6, v7}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V

    .line 9441
    const/4 v6, 0x0

    goto/16 :goto_2

    .line 9421
    .end local v29    # "e":Ljava/lang/Exception;
    .restart local v8    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .restart local v11    # "profilerInfo":Landroid/app/ProfilerInfo;
    .restart local v16    # "enableOpenGlTrace":Z
    .restart local v19    # "configurations":Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;, "Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList<Landroid/content/res/Configuration;>;"
    .restart local v30    # "isRestrictedBackupMode":Z
    .restart local v35    # "profileAutoStop":Z
    .restart local v36    # "profileFd":Landroid/os/ParcelFileDescriptor;
    .restart local v37    # "profileFile":Ljava/lang/String;
    .restart local v38    # "resolutionFactorf":F
    .restart local v39    # "samplingInterval":I
    :cond_1f
    const/16 v17, 0x0

    goto/16 :goto_a

    .line 9459
    .restart local v26    # "badApp":Z
    .restart local v27    # "didSomething":Z
    :catch_3
    move-exception v29

    .line 9460
    .restart local v29    # "e":Ljava/lang/Exception;
    const-string v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Exception thrown launching activities in "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v25

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    move-object/from16 v0, v29

    invoke-static {v6, v10, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 9461
    const/16 v26, 0x1

    goto/16 :goto_b

    .line 9469
    .end local v29    # "e":Ljava/lang/Exception;
    :catch_4
    move-exception v29

    .line 9470
    .restart local v29    # "e":Ljava/lang/Exception;
    const-string v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Exception thrown starting services in "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v25

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    move-object/from16 v0, v29

    invoke-static {v6, v10, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 9471
    const/16 v26, 0x1

    goto/16 :goto_c

    .line 9479
    .end local v29    # "e":Ljava/lang/Exception;
    :catch_5
    move-exception v29

    .line 9481
    .restart local v29    # "e":Ljava/lang/Exception;
    const-string v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Exception thrown dispatching broadcasts in "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v25

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    move-object/from16 v0, v29

    invoke-static {v6, v10, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 9482
    const/16 v26, 0x1

    goto/16 :goto_d

    .line 9495
    .end local v29    # "e":Ljava/lang/Exception;
    :catch_6
    move-exception v29

    .line 9496
    .restart local v29    # "e":Ljava/lang/Exception;
    const-string v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Exception thrown creating backup agent in "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v25

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    move-object/from16 v0, v29

    invoke-static {v6, v10, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 9497
    const/16 v26, 0x1

    goto/16 :goto_e

    .line 9508
    .end local v29    # "e":Ljava/lang/Exception;
    :cond_20
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mRecentsProcess:Lcom/android/server/am/ProcessRecord;

    if-nez v6, :cond_21

    const-string v6, "com.android.systemui.recentsactivity"

    move-object/from16 v0, v25

    iget-object v10, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v6, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_21

    .line 9510
    move-object/from16 v0, v25

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mRecentsProcess:Lcom/android/server/am/ProcessRecord;

    .line 9514
    :cond_21
    if-nez v27, :cond_22

    .line 9515
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 9520
    :cond_22
    :try_start_a
    move-object/from16 v0, v25

    iget-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v6, :cond_23

    .line 9521
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v6

    move-object/from16 v0, v25

    iget-object v10, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v10, v10, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/16 v12, 0x80

    move-object/from16 v0, v25

    iget v13, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v13}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v13

    invoke-interface {v6, v10, v12, v13}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v34

    .line 9523
    .local v34, "persInfo":Landroid/content/pm/ApplicationInfo;
    if-eqz v34, :cond_23

    move-object/from16 v0, v34

    iget-object v6, v0, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;

    if-eqz v6, :cond_23

    .line 9524
    move-object/from16 v0, v34

    iget-object v6, v0, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;

    const-string v10, "com.samsung.android.persistent.downloadable"

    invoke-virtual {v6, v10}, Landroid/os/Bundle;->getBoolean(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_23

    .line 9525
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mPersistDownloadablePkgs:Ljava/util/HashSet;

    move-object/from16 v0, v25

    iget-object v10, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v10, v10, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v6, v10}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
    :try_end_a
    .catch Landroid/os/RemoteException; {:try_start_a .. :try_end_a} :catch_7

    .line 9534
    .end local v34    # "persInfo":Landroid/content/pm/ApplicationInfo;
    :cond_23
    :goto_f
    const/4 v6, 0x1

    goto/16 :goto_2

    .line 9529
    :catch_7
    move-exception v6

    goto :goto_f
.end method

.method private final broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I
    .locals 99
    .param p1, "callerApp"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "callerPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/content/IIntentReceiver;
    .param p6, "resultCode"    # I
    .param p7, "resultData"    # Ljava/lang/String;
    .param p8, "resultExtras"    # Landroid/os/Bundle;
    .param p9, "requiredPermissions"    # [Ljava/lang/String;
    .param p10, "appOp"    # I
    .param p11, "options"    # Landroid/os/Bundle;
    .param p12, "ordered"    # Z
    .param p13, "sticky"    # Z
    .param p14, "callingPid"    # I
    .param p15, "callingUid"    # I
    .param p16, "userId"    # I

    .prologue
    .line 22778
    new-instance v18, Landroid/content/Intent;

    move-object/from16 v0, v18

    move-object/from16 v1, p3

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    .line 22781
    .end local p3    # "intent":Landroid/content/Intent;
    .local v18, "intent":Landroid/content/Intent;
    const/16 v55, 0x1

    .line 22806
    .local v55, "bExcludeForceStoppedPackages":Z
    if-eqz v55, :cond_0

    .line 22808
    const/16 v6, 0x10

    move-object/from16 v0, v18

    invoke-virtual {v0, v6}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 22812
    :cond_0
    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v6, :cond_1

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getFlags()I

    move-result v6

    const/high16 v8, 0x2000000

    and-int/2addr v6, v8

    if-nez v6, :cond_1

    .line 22813
    const/high16 v6, 0x40000000    # 2.0f

    move-object/from16 v0, v18

    invoke-virtual {v0, v6}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 22819
    :cond_1
    if-eqz p5, :cond_2

    if-nez p12, :cond_2

    .line 22820
    const-string v6, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Broadcast "

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, v18

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v10, " not ordered but result callback requested!"

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v6, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22823
    :cond_2
    const/4 v10, 0x1

    const/4 v11, 0x0

    const-string v12, "broadcast"

    move-object/from16 v6, p0

    move/from16 v7, p14

    move/from16 v8, p15

    move/from16 v9, p16

    move-object/from16 v13, p2

    invoke-virtual/range {v6 .. v13}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p16

    .line 22830
    const/4 v6, -0x1

    move/from16 v0, p16

    if-eq v0, v6, :cond_4

    const/4 v6, 0x0

    move-object/from16 v0, p0

    move/from16 v1, p16

    invoke-virtual {v0, v1, v6}, Lcom/android/server/am/ActivityManagerService;->isUserRunningLocked(IZ)Z

    move-result v6

    if-nez v6, :cond_4

    .line 22831
    const/16 v6, 0x3e8

    move/from16 v0, p15

    if-ne v0, v6, :cond_3

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getFlags()I

    move-result v6

    const/high16 v8, 0x2000000

    and-int/2addr v6, v8

    if-nez v6, :cond_4

    :cond_3
    const-string v6, "android.intent.action.ACTION_SHUTDOWN"

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v6, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_4

    .line 22834
    const-string v6, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Skipping broadcast of "

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, v18

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v10, ": user "

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move/from16 v0, p16

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v10, " is stopped"

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v6, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22836
    const/4 v6, -0x2

    .line 23501
    :goto_0
    return v6

    .line 22840
    :cond_4
    const/16 v26, 0x0

    .line 22841
    .local v26, "brOptions":Landroid/app/BroadcastOptions;
    if-eqz p11, :cond_5

    .line 22842
    new-instance v26, Landroid/app/BroadcastOptions;

    .end local v26    # "brOptions":Landroid/app/BroadcastOptions;
    move-object/from16 v0, v26

    move-object/from16 v1, p11

    invoke-direct {v0, v1}, Landroid/app/BroadcastOptions;-><init>(Landroid/os/Bundle;)V

    .line 22843
    .restart local v26    # "brOptions":Landroid/app/BroadcastOptions;
    invoke-virtual/range {v26 .. v26}, Landroid/app/BroadcastOptions;->getTemporaryAppWhitelistDuration()J

    move-result-wide v10

    const-wide/16 v12, 0x0

    cmp-long v6, v10, v12

    if-lez v6, :cond_5

    .line 22847
    const-string v7, "android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST"

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v8

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v9

    const/4 v10, -0x1

    const/4 v11, 0x1

    move-object/from16 v6, p0

    invoke-virtual/range {v6 .. v11}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v6

    if-eqz v6, :cond_5

    .line 22851
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Permission Denial: "

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, " broadcast from "

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, p2

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, " (pid="

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, p14

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, ", uid="

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, p15

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, ")"

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, " requires "

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, "android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST"

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v73

    .line 22856
    .local v73, "msg":Ljava/lang/String;
    const-string v6, "ActivityManager"

    move-object/from16 v0, v73

    invoke-static {v6, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22857
    new-instance v6, Ljava/lang/SecurityException;

    move-object/from16 v0, v73

    invoke-direct {v6, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 22866
    .end local v73    # "msg":Ljava/lang/String;
    :cond_5
    invoke-static/range {p15 .. p15}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v57

    .line 22867
    .local v57, "callingAppId":I
    const/16 v6, 0x3e8

    move/from16 v0, v57

    if-eq v0, v6, :cond_6

    const/16 v6, 0x3e9

    move/from16 v0, v57

    if-eq v0, v6, :cond_6

    const/16 v6, 0x7d0

    move/from16 v0, v57

    if-eq v0, v6, :cond_6

    const/16 v6, 0x3ea

    move/from16 v0, v57

    if-eq v0, v6, :cond_6

    const/16 v6, 0x403

    move/from16 v0, v57

    if-eq v0, v6, :cond_6

    if-nez p15, :cond_9

    .line 22913
    :cond_6
    :goto_1
    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v51

    .line 22914
    .local v51, "action":Ljava/lang/String;
    const-string v6, "android.intent.action.UID_REMOVED"

    move-object/from16 v0, v51

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v95

    .line 22916
    .local v95, "uidRemoved":Z
    if-eqz v51, :cond_8

    .line 22917
    const/4 v6, -0x1

    invoke-virtual/range {v51 .. v51}, Ljava/lang/String;->hashCode()I

    move-result v8

    sparse-switch v8, :sswitch_data_0

    :cond_7
    :goto_2
    packed-switch v6, :pswitch_data_0

    .line 23150
    :cond_8
    :goto_3
    if-eqz p13, :cond_24

    .line 23151
    const-string v6, "android.permission.BROADCAST_STICKY"

    move-object/from16 v0, p0

    move/from16 v1, p14

    move/from16 v2, p15

    invoke-virtual {v0, v6, v1, v2}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v6

    if-eqz v6, :cond_1c

    .line 23154
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Permission Denial: broadcastIntent() requesting a sticky broadcast from pid="

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, p14

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, ", uid="

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, p15

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, " requires "

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, "android.permission.BROADCAST_STICKY"

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v73

    .line 23157
    .restart local v73    # "msg":Ljava/lang/String;
    const-string v6, "ActivityManager"

    move-object/from16 v0, v73

    invoke-static {v6, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 23158
    new-instance v6, Ljava/lang/SecurityException;

    move-object/from16 v0, v73

    invoke-direct {v6, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 22871
    .end local v51    # "action":Ljava/lang/String;
    .end local v73    # "msg":Ljava/lang/String;
    .end local v95    # "uidRemoved":Z
    :cond_9
    if-eqz p1, :cond_a

    move-object/from16 v0, p1

    iget-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-nez v6, :cond_6

    .line 22873
    :cond_a
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v6

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v8

    invoke-interface {v6, v8}, Landroid/content/pm/IPackageManager;->isProtectedBroadcast(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_b

    .line 22875
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Permission Denial: not allowed to send broadcast "

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, " from pid="

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, p14

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, ", uid="

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, p15

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v73

    .line 22878
    .restart local v73    # "msg":Ljava/lang/String;
    const-string v6, "ActivityManager"

    move-object/from16 v0, v73

    invoke-static {v6, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22879
    new-instance v6, Ljava/lang/SecurityException;

    move-object/from16 v0, v73

    invoke-direct {v6, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v6
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 22907
    .end local v73    # "msg":Ljava/lang/String;
    :catch_0
    move-exception v61

    .line 22908
    .local v61, "e":Landroid/os/RemoteException;
    const-string v6, "ActivityManager"

    const-string v8, "Remote exception"

    move-object/from16 v0, v61

    invoke-static {v6, v8, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 22909
    const/4 v6, 0x0

    goto/16 :goto_0

    .line 22880
    .end local v61    # "e":Landroid/os/RemoteException;
    :cond_b
    :try_start_1
    const-string v6, "android.appwidget.action.APPWIDGET_CONFIGURE"

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v6, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_6

    .line 22885
    if-nez p1, :cond_c

    .line 22886
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Permission Denial: not allowed to send broadcast "

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, " from unknown caller."

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v73

    .line 22888
    .restart local v73    # "msg":Ljava/lang/String;
    const-string v6, "ActivityManager"

    move-object/from16 v0, v73

    invoke-static {v6, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22889
    new-instance v6, Ljava/lang/SecurityException;

    move-object/from16 v0, v73

    invoke-direct {v6, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 22890
    .end local v73    # "msg":Ljava/lang/String;
    :cond_c
    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v6

    if-eqz v6, :cond_d

    .line 22893
    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v6

    invoke-virtual {v6}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p1

    iget-object v8, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v8, v8, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v6, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_6

    .line 22895
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Permission Denial: not allowed to send broadcast "

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, " to "

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v8

    invoke-virtual {v8}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, " from "

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, p1

    iget-object v8, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v8, v8, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v73

    .line 22899
    .restart local v73    # "msg":Ljava/lang/String;
    const-string v6, "ActivityManager"

    move-object/from16 v0, v73

    invoke-static {v6, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22900
    new-instance v6, Ljava/lang/SecurityException;

    move-object/from16 v0, v73

    invoke-direct {v6, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 22904
    .end local v73    # "msg":Ljava/lang/String;
    :cond_d
    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v18

    invoke-virtual {v0, v6}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    goto/16 :goto_1

    .line 22917
    .restart local v51    # "action":Ljava/lang/String;
    .restart local v95    # "uidRemoved":Z
    :sswitch_0
    const-string v8, "android.intent.action.UID_REMOVED"

    move-object/from16 v0, v51

    invoke-virtual {v0, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_7

    const/4 v6, 0x0

    goto/16 :goto_2

    :sswitch_1
    const-string v8, "android.intent.action.PACKAGE_REMOVED"

    move-object/from16 v0, v51

    invoke-virtual {v0, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_7

    const/4 v6, 0x1

    goto/16 :goto_2

    :sswitch_2
    const-string v8, "android.intent.action.PACKAGE_CHANGED"

    move-object/from16 v0, v51

    invoke-virtual {v0, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_7

    const/4 v6, 0x2

    goto/16 :goto_2

    :sswitch_3
    const-string v8, "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE"

    move-object/from16 v0, v51

    invoke-virtual {v0, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_7

    const/4 v6, 0x3

    goto/16 :goto_2

    :sswitch_4
    const-string v8, "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"

    move-object/from16 v0, v51

    invoke-virtual {v0, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_7

    const/4 v6, 0x4

    goto/16 :goto_2

    :sswitch_5
    const-string v8, "android.intent.action.PACKAGE_ADDED"

    move-object/from16 v0, v51

    invoke-virtual {v0, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_7

    const/4 v6, 0x5

    goto/16 :goto_2

    :sswitch_6
    const-string v8, "android.intent.action.TIMEZONE_CHANGED"

    move-object/from16 v0, v51

    invoke-virtual {v0, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_7

    const/4 v6, 0x6

    goto/16 :goto_2

    :sswitch_7
    const-string v8, "android.intent.action.TIME_SET"

    move-object/from16 v0, v51

    invoke-virtual {v0, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_7

    const/4 v6, 0x7

    goto/16 :goto_2

    :sswitch_8
    const-string v8, "android.intent.action.CLEAR_DNS_CACHE"

    move-object/from16 v0, v51

    invoke-virtual {v0, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_7

    const/16 v6, 0x8

    goto/16 :goto_2

    :sswitch_9
    const-string v8, "android.intent.action.PROXY_CHANGE"

    move-object/from16 v0, v51

    invoke-virtual {v0, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_7

    const/16 v6, 0x9

    goto/16 :goto_2

    .line 22925
    :pswitch_0
    const-string v8, "android.permission.BROADCAST_PACKAGE_REMOVED"

    const/4 v11, -0x1

    const/4 v12, 0x0

    const/4 v13, 0x1

    const/4 v14, 0x0

    move-object/from16 v6, p0

    move-object/from16 v7, v18

    move/from16 v9, p14

    move/from16 v10, p15

    invoke-virtual/range {v6 .. v14}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Landroid/content/Intent;Ljava/lang/String;IIILjava/lang/String;ZZ)I

    move-result v6

    if-nez v6, :cond_19

    .line 22929
    if-eqz v95, :cond_f

    .line 22930
    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getExtras()Landroid/os/Bundle;

    move-result-object v65

    .line 22931
    .local v65, "intentExtras":Landroid/os/Bundle;
    if-eqz v65, :cond_e

    const-string v6, "android.intent.extra.UID"

    move-object/from16 v0, v65

    invoke-virtual {v0, v6}, Landroid/os/Bundle;->getInt(Ljava/lang/String;)I

    move-result v94

    .line 22933
    .local v94, "uid":I
    :goto_4
    if-ltz v94, :cond_8

    .line 22934
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v6}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v56

    .line 22935
    .local v56, "bs":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v56

    .line 22936
    :try_start_2
    move-object/from16 v0, v56

    move/from16 v1, v94

    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->removeUidStatsLocked(I)V

    .line 22937
    monitor-exit v56
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 22938
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    move/from16 v0, v94

    invoke-virtual {v6, v0}, Lcom/android/server/AppOpsService;->uidRemoved(I)V

    goto/16 :goto_3

    .line 22931
    .end local v56    # "bs":Lcom/android/internal/os/BatteryStatsImpl;
    .end local v94    # "uid":I
    :cond_e
    const/16 v94, -0x1

    goto :goto_4

    .line 22937
    .restart local v56    # "bs":Lcom/android/internal/os/BatteryStatsImpl;
    .restart local v94    # "uid":I
    :catchall_0
    move-exception v6

    :try_start_3
    monitor-exit v56
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    throw v6

    .line 22943
    .end local v56    # "bs":Lcom/android/internal/os/BatteryStatsImpl;
    .end local v65    # "intentExtras":Landroid/os/Bundle;
    .end local v94    # "uid":I
    :cond_f
    const-string v6, "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE"

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v6, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_11

    .line 22944
    const-string v6, "android.intent.extra.changed_package_list"

    move-object/from16 v0, v18

    invoke-virtual {v0, v6}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v71

    .line 22945
    .local v71, "list":[Ljava/lang/String;
    if-eqz v71, :cond_8

    move-object/from16 v0, v71

    array-length v6, v0

    if-lez v6, :cond_8

    .line 22946
    move-object/from16 v54, v71

    .local v54, "arr$":[Ljava/lang/String;
    move-object/from16 v0, v54

    array-length v0, v0

    move/from16 v70, v0

    .local v70, "len$":I
    const/16 v64, 0x0

    .local v64, "i$":I
    :goto_5
    move/from16 v0, v64

    move/from16 v1, v70

    if-ge v0, v1, :cond_10

    aget-object v7, v54, v64

    .line 22947
    .local v7, "pkg":Ljava/lang/String;
    const/4 v8, -0x1

    const/4 v9, 0x0

    const/4 v10, 0x1

    const/4 v11, 0x1

    const/4 v12, 0x0

    const/4 v13, 0x0

    const-string/jumbo v15, "storage unmount"

    move-object/from16 v6, p0

    move/from16 v14, p16

    invoke-direct/range {v6 .. v15}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 22946
    add-int/lit8 v64, v64, 0x1

    goto :goto_5

    .line 22950
    .end local v7    # "pkg":Ljava/lang/String;
    :cond_10
    const/4 v6, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, v71

    move/from16 v2, p16

    invoke-direct {v0, v6, v1, v2}, Lcom/android/server/am/ActivityManagerService;->sendPackageBroadcastLocked(I[Ljava/lang/String;I)V

    goto/16 :goto_3

    .line 22954
    .end local v54    # "arr$":[Ljava/lang/String;
    .end local v64    # "i$":I
    .end local v70    # "len$":I
    .end local v71    # "list":[Ljava/lang/String;
    :cond_11
    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v60

    .line 22956
    .local v60, "data":Landroid/net/Uri;
    if-eqz v60, :cond_8

    invoke-virtual/range {v60 .. v60}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v9

    .local v9, "ssp":Ljava/lang/String;
    if-eqz v9, :cond_8

    .line 22957
    const-string v6, "android.intent.action.PACKAGE_REMOVED"

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v6, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v83

    .line 22959
    .local v83, "removed":Z
    if-eqz v83, :cond_13

    const-string v6, "android.intent.extra.REPLACING"

    const/4 v8, 0x0

    move-object/from16 v0, v18

    invoke-virtual {v0, v6, v8}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v6

    if-nez v6, :cond_13

    const/4 v15, 0x1

    .line 22960
    .local v15, "fullUninstall":Z
    :goto_6
    const-string v6, "android.intent.extra.DONT_KILL_APP"

    const/4 v8, 0x0

    move-object/from16 v0, v18

    invoke-virtual {v0, v6, v8}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v6

    if-nez v6, :cond_14

    const/16 v69, 0x1

    .line 22962
    .local v69, "killProcess":Z
    :goto_7
    if-eqz v69, :cond_12

    .line 22964
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mPersistDownloadablePkgs:Ljava/util/HashSet;

    invoke-virtual {v6}, Ljava/util/HashSet;->size()I

    move-result v6

    if-lez v6, :cond_16

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mPersistDownloadablePkgs:Ljava/util/HashSet;

    invoke-virtual {v6, v9}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_16

    .line 22965
    const-string v6, "android.intent.extra.UID"

    const/4 v8, -0x1

    move-object/from16 v0, v18

    invoke-virtual {v0, v6, v8}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v6

    invoke-static {v6}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v10

    const/4 v11, 0x1

    const/4 v12, 0x1

    const/4 v13, 0x1

    const/4 v14, 0x1

    if-eqz v83, :cond_15

    const-string/jumbo v17, "pkg removed"

    :goto_8
    move-object/from16 v8, p0

    move/from16 v16, p16

    invoke-direct/range {v8 .. v17}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 22974
    :cond_12
    :goto_9
    if-eqz v83, :cond_18

    .line 22975
    const/4 v6, 0x0

    const/4 v8, 0x1

    new-array v8, v8, [Ljava/lang/String;

    const/4 v10, 0x0

    aput-object v9, v8, v10

    move-object/from16 v0, p0

    move/from16 v1, p16

    invoke-direct {v0, v6, v8, v1}, Lcom/android/server/am/ActivityManagerService;->sendPackageBroadcastLocked(I[Ljava/lang/String;I)V

    .line 22977
    if-eqz v15, :cond_8

    .line 22978
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    const-string v8, "android.intent.extra.UID"

    const/4 v10, -0x1

    move-object/from16 v0, v18

    invoke-virtual {v0, v8, v10}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v8

    invoke-virtual {v6, v8, v9}, Lcom/android/server/AppOpsService;->packageRemoved(ILjava/lang/String;)V

    .line 22982
    const/4 v6, 0x1

    move-object/from16 v0, p0

    move/from16 v1, p16

    invoke-direct {v0, v9, v1, v6}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionsForPackageLocked(Ljava/lang/String;IZ)V

    .line 22984
    move-object/from16 v0, p0

    move/from16 v1, p16

    invoke-direct {v0, v9, v1}, Lcom/android/server/am/ActivityManagerService;->removeTasksByPackageNameLocked(Ljava/lang/String;I)V

    goto/16 :goto_3

    .line 22959
    .end local v15    # "fullUninstall":Z
    .end local v69    # "killProcess":Z
    :cond_13
    const/4 v15, 0x0

    goto :goto_6

    .line 22960
    .restart local v15    # "fullUninstall":Z
    :cond_14
    const/16 v69, 0x0

    goto :goto_7

    .line 22965
    .restart local v69    # "killProcess":Z
    :cond_15
    const-string/jumbo v17, "pkg changed"

    goto :goto_8

    .line 22969
    :cond_16
    const-string v6, "android.intent.extra.UID"

    const/4 v8, -0x1

    move-object/from16 v0, v18

    invoke-virtual {v0, v6, v8}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v6

    invoke-static {v6}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v10

    const/4 v11, 0x0

    const/4 v12, 0x1

    const/4 v13, 0x1

    const/4 v14, 0x0

    if-eqz v83, :cond_17

    const-string/jumbo v17, "pkg removed"

    :goto_a
    move-object/from16 v8, p0

    move/from16 v16, p16

    invoke-direct/range {v8 .. v17}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    goto :goto_9

    :cond_17
    const-string/jumbo v17, "pkg changed"

    goto :goto_a

    .line 22987
    :cond_18
    const-string v6, "android.intent.extra.changed_component_name_list"

    move-object/from16 v0, v18

    invoke-virtual {v0, v6}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p0

    move/from16 v1, p16

    move/from16 v2, v69

    invoke-direct {v0, v9, v1, v2, v6}, Lcom/android/server/am/ActivityManagerService;->cleanupDisabledPackageComponentsLocked(Ljava/lang/String;IZ[Ljava/lang/String;)V

    goto/16 :goto_3

    .line 22995
    .end local v9    # "ssp":Ljava/lang/String;
    .end local v15    # "fullUninstall":Z
    .end local v60    # "data":Landroid/net/Uri;
    .end local v69    # "killProcess":Z
    .end local v83    # "removed":Z
    :cond_19
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Permission Denial: "

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, " broadcast from "

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, p2

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, " (pid="

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, p14

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, ", uid="

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, p15

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, ")"

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, " requires "

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, "android.permission.BROADCAST_PACKAGE_REMOVED"

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v73

    .line 23000
    .restart local v73    # "msg":Ljava/lang/String;
    const-string v6, "ActivityManager"

    move-object/from16 v0, v73

    invoke-static {v6, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 23001
    new-instance v6, Ljava/lang/SecurityException;

    move-object/from16 v0, v73

    invoke-direct {v6, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 23102
    .end local v73    # "msg":Ljava/lang/String;
    :pswitch_1
    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v60

    .line 23104
    .restart local v60    # "data":Landroid/net/Uri;
    if-eqz v60, :cond_8

    invoke-virtual/range {v60 .. v60}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v9

    .restart local v9    # "ssp":Ljava/lang/String;
    if-eqz v9, :cond_8

    .line 23105
    const-string v6, "android.intent.extra.REPLACING"

    const/4 v8, 0x0

    move-object/from16 v0, v18

    invoke-virtual {v0, v6, v8}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v86

    .line 23107
    .local v86, "replacing":Z
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    move/from16 v0, v86

    invoke-virtual {v6, v9, v0}, Lcom/android/server/am/CompatModePackages;->handlePackageAddedLocked(Ljava/lang/String;Z)V

    .line 23109
    :try_start_4
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v6

    const/4 v8, 0x0

    const/4 v10, 0x0

    invoke-interface {v6, v9, v8, v10}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v52

    .line 23111
    .local v52, "ai":Landroid/content/pm/ApplicationInfo;
    move-object/from16 v0, p0

    iget-object v8, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    if-eqz v52, :cond_1a

    move-object/from16 v0, v52

    iget v6, v0, Landroid/content/pm/ApplicationInfo;->versionCode:I

    :goto_b
    invoke-virtual {v8, v9, v6}, Lcom/android/server/am/BatteryStatsService;->notePackageInstalled(Ljava/lang/String;I)V
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_1

    goto/16 :goto_3

    .line 23113
    .end local v52    # "ai":Landroid/content/pm/ApplicationInfo;
    :catch_1
    move-exception v6

    goto/16 :goto_3

    .line 23111
    .restart local v52    # "ai":Landroid/content/pm/ApplicationInfo;
    :cond_1a
    const/4 v6, 0x0

    goto :goto_b

    .line 23126
    .end local v9    # "ssp":Ljava/lang/String;
    .end local v52    # "ai":Landroid/content/pm/ApplicationInfo;
    .end local v60    # "data":Landroid/net/Uri;
    .end local v86    # "replacing":Z
    :pswitch_2
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v8, 0xd

    invoke-virtual {v6, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendEmptyMessage(I)Z

    goto/16 :goto_3

    .line 23130
    :pswitch_3
    const-string v6, "android.intent.extra.TIME_PREF_24_HOUR_FORMAT"

    const/4 v8, 0x0

    move-object/from16 v0, v18

    invoke-virtual {v0, v6, v8}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v6

    if-eqz v6, :cond_1b

    const/16 v67, 0x1

    .line 23133
    .local v67, "is24Hour":I
    :goto_c
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v8, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v10, 0x29

    const/4 v11, 0x0

    move/from16 v0, v67

    invoke-virtual {v8, v10, v0, v11}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v8

    invoke-virtual {v6, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 23134
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v6}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v91

    .line 23135
    .local v91, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v91

    .line 23136
    :try_start_5
    invoke-virtual/range {v91 .. v91}, Lcom/android/internal/os/BatteryStatsImpl;->noteCurrentTimeChangedLocked()V

    .line 23137
    monitor-exit v91

    goto/16 :goto_3

    :catchall_1
    move-exception v6

    monitor-exit v91
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    throw v6

    .line 23130
    .end local v67    # "is24Hour":I
    .end local v91    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :cond_1b
    const/16 v67, 0x0

    goto :goto_c

    .line 23140
    :pswitch_4
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v8, 0x1c

    invoke-virtual {v6, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendEmptyMessage(I)Z

    goto/16 :goto_3

    .line 23143
    :pswitch_5
    const-string v6, "android.intent.extra.PROXY_INFO"

    move-object/from16 v0, v18

    invoke-virtual {v0, v6}, Landroid/content/Intent;->getParcelableExtra(Ljava/lang/String;)Landroid/os/Parcelable;

    move-result-object v79

    check-cast v79, Landroid/net/ProxyInfo;

    .line 23144
    .local v79, "proxy":Landroid/net/ProxyInfo;
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v8, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v10, 0x1d

    move-object/from16 v0, v79

    invoke-virtual {v8, v10, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v8

    invoke-virtual {v6, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    goto/16 :goto_3

    .line 23160
    .end local v79    # "proxy":Landroid/net/ProxyInfo;
    :cond_1c
    if-eqz p9, :cond_1d

    move-object/from16 v0, p9

    array-length v6, v0

    if-lez v6, :cond_1d

    .line 23161
    const-string v6, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Can\'t broadcast sticky intent "

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, v18

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v10, " and enforce permissions "

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-static/range {p9 .. p9}, Ljava/util/Arrays;->toString([Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v6, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 23163
    const/4 v6, -0x1

    goto/16 :goto_0

    .line 23165
    :cond_1d
    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v6

    if-eqz v6, :cond_1e

    .line 23166
    new-instance v6, Ljava/lang/SecurityException;

    const-string v8, "Sticky broadcasts can\'t target a specific component"

    invoke-direct {v6, v8}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 23171
    :cond_1e
    const/4 v6, -0x1

    move/from16 v0, p16

    if-eq v0, v6, :cond_20

    .line 23175
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    const/4 v8, -0x1

    invoke-virtual {v6, v8}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v92

    check-cast v92, Landroid/util/ArrayMap;

    .line 23177
    .local v92, "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    if-eqz v92, :cond_20

    .line 23178
    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, v92

    invoke-virtual {v0, v6}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v72

    check-cast v72, Ljava/util/ArrayList;

    .line 23179
    .local v72, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    if-eqz v72, :cond_20

    .line 23180
    invoke-virtual/range {v72 .. v72}, Ljava/util/ArrayList;->size()I

    move-result v48

    .line 23182
    .local v48, "N":I
    const/16 v63, 0x0

    .local v63, "i":I
    :goto_d
    move/from16 v0, v63

    move/from16 v1, v48

    if-ge v0, v1, :cond_20

    .line 23183
    move-object/from16 v0, v72

    move/from16 v1, v63

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/content/Intent;

    move-object/from16 v0, v18

    invoke-virtual {v0, v6}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z

    move-result v6

    if-eqz v6, :cond_1f

    .line 23184
    new-instance v6, Ljava/lang/IllegalArgumentException;

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Sticky broadcast "

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, v18

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v10, " for user "

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move/from16 v0, p16

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v10, " conflicts with existing global broadcast"

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-direct {v6, v8}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 23182
    :cond_1f
    add-int/lit8 v63, v63, 0x1

    goto :goto_d

    .line 23192
    .end local v48    # "N":I
    .end local v63    # "i":I
    .end local v72    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v92    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    :cond_20
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, p16

    invoke-virtual {v6, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v92

    check-cast v92, Landroid/util/ArrayMap;

    .line 23193
    .restart local v92    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    if-nez v92, :cond_21

    .line 23194
    new-instance v92, Landroid/util/ArrayMap;

    .end local v92    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    invoke-direct/range {v92 .. v92}, Landroid/util/ArrayMap;-><init>()V

    .line 23195
    .restart local v92    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, p16

    move-object/from16 v1, v92

    invoke-virtual {v6, v0, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 23197
    :cond_21
    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, v92

    invoke-virtual {v0, v6}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v72

    check-cast v72, Ljava/util/ArrayList;

    .line 23198
    .restart local v72    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    if-nez v72, :cond_22

    .line 23199
    new-instance v72, Ljava/util/ArrayList;

    .end local v72    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    invoke-direct/range {v72 .. v72}, Ljava/util/ArrayList;-><init>()V

    .line 23200
    .restart local v72    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, v92

    move-object/from16 v1, v72

    invoke-virtual {v0, v6, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 23202
    :cond_22
    invoke-virtual/range {v72 .. v72}, Ljava/util/ArrayList;->size()I

    move-result v93

    .line 23204
    .local v93, "stickiesCount":I
    const/16 v63, 0x0

    .restart local v63    # "i":I
    :goto_e
    move/from16 v0, v63

    move/from16 v1, v93

    if-ge v0, v1, :cond_23

    .line 23205
    move-object/from16 v0, v72

    move/from16 v1, v63

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/content/Intent;

    move-object/from16 v0, v18

    invoke-virtual {v0, v6}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z

    move-result v6

    if-eqz v6, :cond_28

    .line 23207
    new-instance v6, Landroid/content/Intent;

    move-object/from16 v0, v18

    invoke-direct {v6, v0}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    move-object/from16 v0, v72

    move/from16 v1, v63

    invoke-virtual {v0, v1, v6}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 23211
    :cond_23
    move/from16 v0, v63

    move/from16 v1, v93

    if-lt v0, v1, :cond_24

    .line 23212
    new-instance v6, Landroid/content/Intent;

    move-object/from16 v0, v18

    invoke-direct {v6, v0}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    move-object/from16 v0, v72

    invoke-virtual {v0, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 23217
    .end local v63    # "i":I
    .end local v72    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v92    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    .end local v93    # "stickiesCount":I
    :cond_24
    const/4 v6, -0x1

    move/from16 v0, p16

    if-ne v0, v6, :cond_29

    .line 23219
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    move-object/from16 v97, v0

    .line 23225
    .local v97, "users":[I
    :goto_f
    sget-boolean v6, Lcom/android/server/am/ActivityManagerService;->SNN_PRIORITY_ENABLED:Z

    if-eqz v6, :cond_25

    move/from16 v0, p12

    move-object/from16 v1, v18

    invoke-static {v0, v1}, Lcom/android/server/am/BroadcastQueue;->isDeferrable(ZLandroid/content/Intent;)Z

    move-result v6

    if-eqz v6, :cond_25

    .line 23227
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mPrioritiseProcess:Lcom/android/server/am/PrioritizeLRUProcess;

    invoke-virtual {v6}, Lcom/android/server/am/PrioritizeLRUProcess;->sortMap()V

    .line 23231
    :cond_25
    const/16 v39, 0x0

    .line 23232
    .local v39, "receivers":Ljava/util/List;
    const/16 v27, 0x0

    .line 23234
    .local v27, "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getFlags()I

    move-result v6

    const/high16 v8, 0x40000000    # 2.0f

    and-int/2addr v6, v8

    if-nez v6, :cond_26

    .line 23236
    move-object/from16 v0, p0

    move-object/from16 v1, v18

    move-object/from16 v2, p4

    move/from16 v3, p15

    move-object/from16 v4, v97

    invoke-direct {v0, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->collectReceiverComponents(Landroid/content/Intent;Ljava/lang/String;I[I)Ljava/util/List;

    move-result-object v39

    .line 23238
    :cond_26
    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v6

    if-nez v6, :cond_2d

    .line 23239
    const/4 v6, -0x1

    move/from16 v0, p16

    if-ne v0, v6, :cond_2c

    const/16 v6, 0x7d0

    move/from16 v0, p15

    if-ne v0, v6, :cond_2c

    .line 23241
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v96

    .line 23242
    .local v96, "ums":Lcom/android/server/pm/UserManagerService;
    const/16 v63, 0x0

    .restart local v63    # "i":I
    :goto_10
    move-object/from16 v0, v97

    array-length v6, v0

    move/from16 v0, v63

    if-ge v0, v6, :cond_2d

    .line 23243
    const-string/jumbo v6, "no_debugging_features"

    aget v8, v97, v63

    move-object/from16 v0, v96

    invoke-virtual {v0, v6, v8}, Lcom/android/server/pm/UserManagerService;->hasUserRestriction(Ljava/lang/String;I)Z

    move-result v6

    if-eqz v6, :cond_2a

    .line 23242
    :cond_27
    :goto_11
    add-int/lit8 v63, v63, 0x1

    goto :goto_10

    .line 23204
    .end local v27    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .end local v39    # "receivers":Ljava/util/List;
    .end local v96    # "ums":Lcom/android/server/pm/UserManagerService;
    .end local v97    # "users":[I
    .restart local v72    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v92    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    .restart local v93    # "stickiesCount":I
    :cond_28
    add-int/lit8 v63, v63, 0x1

    goto/16 :goto_e

    .line 23222
    .end local v63    # "i":I
    .end local v72    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v92    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    .end local v93    # "stickiesCount":I
    :cond_29
    const/4 v6, 0x1

    new-array v0, v6, [I

    move-object/from16 v97, v0

    const/4 v6, 0x0

    aput p16, v97, v6

    .restart local v97    # "users":[I
    goto :goto_f

    .line 23247
    .restart local v27    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .restart local v39    # "receivers":Ljava/util/List;
    .restart local v63    # "i":I
    .restart local v96    # "ums":Lcom/android/server/pm/UserManagerService;
    :cond_2a
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    const/4 v8, 0x0

    aget v10, v97, v63

    move-object/from16 v0, v18

    move-object/from16 v1, p4

    invoke-virtual {v6, v0, v1, v8, v10}, Lcom/android/server/IntentResolver;->queryIntent(Landroid/content/Intent;Ljava/lang/String;ZI)Ljava/util/List;

    move-result-object v82

    .line 23250
    .local v82, "registeredReceiversForUser":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    if-nez v27, :cond_2b

    .line 23251
    move-object/from16 v27, v82

    goto :goto_11

    .line 23252
    :cond_2b
    if-eqz v82, :cond_27

    .line 23253
    move-object/from16 v0, v27

    move-object/from16 v1, v82

    invoke-interface {v0, v1}, Ljava/util/List;->addAll(Ljava/util/Collection;)Z

    goto :goto_11

    .line 23257
    .end local v63    # "i":I
    .end local v82    # "registeredReceiversForUser":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .end local v96    # "ums":Lcom/android/server/pm/UserManagerService;
    :cond_2c
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    const/4 v8, 0x0

    move-object/from16 v0, v18

    move-object/from16 v1, p4

    move/from16 v2, p16

    invoke-virtual {v6, v0, v1, v8, v2}, Lcom/android/server/IntentResolver;->queryIntent(Landroid/content/Intent;Ljava/lang/String;ZI)Ljava/util/List;

    move-result-object v27

    .line 23262
    :cond_2d
    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getFlags()I

    move-result v6

    const/high16 v8, 0x20000000

    and-int/2addr v6, v8

    if-nez v6, :cond_2e

    sget-boolean v6, Lcom/android/server/am/ActivityManagerService;->SNN_MERGE_DUPLICATE_ENABLED:Z

    if-eqz v6, :cond_32

    move/from16 v0, p12

    move-object/from16 v1, v18

    invoke-static {v0, v1}, Lcom/android/server/am/BroadcastQueue;->isReplaceable(ZLandroid/content/Intent;)Z

    move-result v6

    if-eqz v6, :cond_32

    :cond_2e
    const/16 v84, 0x1

    .line 23269
    .local v84, "replacePending":Z
    :goto_12
    if-eqz p9, :cond_35

    move-object/from16 v0, p9

    array-length v6, v0

    if-lez v6, :cond_35

    const-string v6, "com.samsung.android.permission.MODIFY_THEME"

    const/4 v8, 0x0

    aget-object v8, p9, v8

    invoke-virtual {v6, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_35

    if-eqz v27, :cond_35

    const-string v6, "android.intent.action.PACKAGE_ADDED"

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v6, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_2f

    const-string v6, "android.intent.action.PACKAGE_REMOVED"

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v6, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_2f

    const-string v6, "android.intent.action.PACKAGE_CHANGED"

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v6, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_35

    .line 23276
    :cond_2f
    new-instance v90, Ljava/util/ArrayList;

    invoke-direct/range {v90 .. v90}, Ljava/util/ArrayList;-><init>()V

    .line 23277
    .local v90, "skipPackagesList":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    invoke-interface/range {v27 .. v27}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v64

    .local v64, "i$":Ljava/util/Iterator;
    :cond_30
    :goto_13
    invoke-interface/range {v64 .. v64}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_34

    invoke-interface/range {v64 .. v64}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v81

    check-cast v81, Lcom/android/server/am/BroadcastFilter;

    .line 23278
    .local v81, "receiver":Lcom/android/server/am/BroadcastFilter;
    const/16 v77, 0x0

    .line 23280
    .local v77, "pkgInfo":Landroid/content/pm/PackageInfo;
    :try_start_6
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v6

    move-object/from16 v0, v81

    iget-object v8, v0, Lcom/android/server/am/BroadcastFilter;->packageName:Ljava/lang/String;

    const/16 v10, 0x1000

    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v11

    invoke-interface {v6, v8, v10, v11}, Landroid/content/pm/IPackageManager;->getPackageInfo(Ljava/lang/String;II)Landroid/content/pm/PackageInfo;
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_2

    move-result-object v77

    .line 23286
    :goto_14
    if-eqz v77, :cond_30

    move-object/from16 v0, v77

    iget-object v6, v0, Landroid/content/pm/PackageInfo;->packageName:Ljava/lang/String;

    const-string/jumbo v8, "system"

    invoke-virtual {v6, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_30

    move-object/from16 v0, v77

    iget-object v6, v0, Landroid/content/pm/PackageInfo;->packageName:Ljava/lang/String;

    const-string v8, "android"

    invoke-virtual {v6, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_30

    move-object/from16 v0, v77

    iget-object v6, v0, Landroid/content/pm/PackageInfo;->requestedPermissions:[Ljava/lang/String;

    if-eqz v6, :cond_30

    .line 23290
    const/16 v62, 0x0

    .line 23291
    .local v62, "hasPermission":Z
    const/16 v76, 0x0

    .local v76, "permissionIndex":I
    :goto_15
    move-object/from16 v0, v77

    iget-object v6, v0, Landroid/content/pm/PackageInfo;->requestedPermissions:[Ljava/lang/String;

    array-length v6, v6

    move/from16 v0, v76

    if-ge v0, v6, :cond_31

    .line 23292
    move-object/from16 v0, v77

    iget-object v6, v0, Landroid/content/pm/PackageInfo;->requestedPermissions:[Ljava/lang/String;

    aget-object v75, v6, v76

    .line 23293
    .local v75, "permission":Ljava/lang/String;
    const-string v6, "com.samsung.android.permission.MODIFY_THEME"

    move-object/from16 v0, v75

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_33

    .line 23295
    move-object/from16 v0, v77

    iget-object v6, v0, Landroid/content/pm/PackageInfo;->requestedPermissionsFlags:[I

    aget v6, v6, v76

    and-int/lit8 v6, v6, 0x2

    if-eqz v6, :cond_31

    .line 23296
    const/16 v62, 0x1

    .line 23301
    .end local v75    # "permission":Ljava/lang/String;
    :cond_31
    if-nez v62, :cond_30

    .line 23302
    move-object/from16 v0, v90

    move-object/from16 v1, v81

    invoke-interface {v0, v1}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_13

    .line 23262
    .end local v62    # "hasPermission":Z
    .end local v64    # "i$":Ljava/util/Iterator;
    .end local v76    # "permissionIndex":I
    .end local v77    # "pkgInfo":Landroid/content/pm/PackageInfo;
    .end local v81    # "receiver":Lcom/android/server/am/BroadcastFilter;
    .end local v84    # "replacePending":Z
    .end local v90    # "skipPackagesList":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    :cond_32
    const/16 v84, 0x0

    goto/16 :goto_12

    .line 23282
    .restart local v64    # "i$":Ljava/util/Iterator;
    .restart local v77    # "pkgInfo":Landroid/content/pm/PackageInfo;
    .restart local v81    # "receiver":Lcom/android/server/am/BroadcastFilter;
    .restart local v84    # "replacePending":Z
    .restart local v90    # "skipPackagesList":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    :catch_2
    move-exception v61

    .line 23283
    .restart local v61    # "e":Landroid/os/RemoteException;
    invoke-virtual/range {v61 .. v61}, Landroid/os/RemoteException;->printStackTrace()V

    goto :goto_14

    .line 23291
    .end local v61    # "e":Landroid/os/RemoteException;
    .restart local v62    # "hasPermission":Z
    .restart local v75    # "permission":Ljava/lang/String;
    .restart local v76    # "permissionIndex":I
    :cond_33
    add-int/lit8 v76, v76, 0x1

    goto :goto_15

    .line 23306
    .end local v62    # "hasPermission":Z
    .end local v75    # "permission":Ljava/lang/String;
    .end local v76    # "permissionIndex":I
    .end local v77    # "pkgInfo":Landroid/content/pm/PackageInfo;
    .end local v81    # "receiver":Lcom/android/server/am/BroadcastFilter;
    :cond_34
    move-object/from16 v0, v27

    move-object/from16 v1, v90

    invoke-interface {v0, v1}, Ljava/util/List;->removeAll(Ljava/util/Collection;)Z

    .line 23310
    .end local v64    # "i$":Ljava/util/Iterator;
    .end local v90    # "skipPackagesList":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    :cond_35
    if-eqz v27, :cond_3d

    invoke-interface/range {v27 .. v27}, Ljava/util/List;->size()I

    move-result v49

    .line 23311
    .local v49, "NR":I
    :goto_16
    if-nez p12, :cond_37

    if-lez v49, :cond_37

    .line 23315
    move-object/from16 v0, p0

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v17

    .line 23316
    .local v17, "queue":Lcom/android/server/am/BroadcastQueue;
    new-instance v16, Lcom/android/server/am/BroadcastRecord;

    const/16 v34, 0x0

    move-object/from16 v19, p1

    move-object/from16 v20, p2

    move/from16 v21, p14

    move/from16 v22, p15

    move-object/from16 v23, p4

    move-object/from16 v24, p9

    move/from16 v25, p10

    move-object/from16 v28, p5

    move/from16 v29, p6

    move-object/from16 v30, p7

    move-object/from16 v31, p8

    move/from16 v32, p12

    move/from16 v33, p13

    move/from16 v35, p16

    invoke-direct/range {v16 .. v35}, Lcom/android/server/am/BroadcastRecord;-><init>(Lcom/android/server/am/BroadcastQueue;Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IILjava/lang/String;[Ljava/lang/String;ILandroid/app/BroadcastOptions;Ljava/util/List;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZI)V

    .line 23321
    .local v16, "r":Lcom/android/server/am/BroadcastRecord;
    if-eqz v84, :cond_3e

    move-object/from16 v0, v17

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Lcom/android/server/am/BroadcastQueue;->replaceParallelBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)Z

    move-result v6

    if-eqz v6, :cond_3e

    const/16 v85, 0x1

    .line 23322
    .local v85, "replaced":Z
    :goto_17
    if-nez v85, :cond_36

    .line 23323
    move-object/from16 v0, v17

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Lcom/android/server/am/BroadcastQueue;->enqueueParallelBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 23324
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/am/BroadcastQueue;->scheduleBroadcastsLocked()V

    .line 23326
    :cond_36
    const/16 v27, 0x0

    .line 23327
    const/16 v49, 0x0

    .line 23331
    .end local v16    # "r":Lcom/android/server/am/BroadcastRecord;
    .end local v17    # "queue":Lcom/android/server/am/BroadcastQueue;
    .end local v85    # "replaced":Z
    :cond_37
    const/16 v66, 0x0

    .line 23332
    .local v66, "ir":I
    if-eqz v39, :cond_4d

    .line 23339
    const/16 v88, 0x0

    .line 23340
    .local v88, "skipPackages":[Ljava/lang/String;
    const-string v6, "android.intent.action.PACKAGE_ADDED"

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v6, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_38

    const-string v6, "android.intent.action.PACKAGE_RESTARTED"

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v6, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_38

    const-string v6, "android.intent.action.PACKAGE_DATA_CLEARED"

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v6, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_3f

    .line 23343
    :cond_38
    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v60

    .line 23344
    .restart local v60    # "data":Landroid/net/Uri;
    if-eqz v60, :cond_39

    .line 23345
    invoke-virtual/range {v60 .. v60}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v78

    .line 23346
    .local v78, "pkgName":Ljava/lang/String;
    if-eqz v78, :cond_39

    .line 23347
    const/4 v6, 0x1

    new-array v0, v6, [Ljava/lang/String;

    move-object/from16 v88, v0

    .end local v88    # "skipPackages":[Ljava/lang/String;
    const/4 v6, 0x0

    aput-object v78, v88, v6

    .line 23354
    .end local v60    # "data":Landroid/net/Uri;
    .end local v78    # "pkgName":Ljava/lang/String;
    .restart local v88    # "skipPackages":[Ljava/lang/String;
    :cond_39
    :goto_18
    if-eqz p9, :cond_42

    move-object/from16 v0, p9

    array-length v6, v0

    if-lez v6, :cond_42

    const-string v6, "com.samsung.android.permission.MODIFY_THEME"

    const/4 v8, 0x0

    aget-object v8, p9, v8

    invoke-virtual {v6, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_42

    if-eqz v39, :cond_42

    const-string v6, "android.intent.action.PACKAGE_ADDED"

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v6, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_3a

    const-string v6, "android.intent.action.PACKAGE_REMOVED"

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v6, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_3a

    const-string v6, "android.intent.action.PACKAGE_CHANGED"

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v6, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_42

    .line 23362
    :cond_3a
    new-instance v89, Ljava/util/ArrayList;

    invoke-direct/range {v89 .. v89}, Ljava/util/ArrayList;-><init>()V

    .line 23363
    .local v89, "skipPackagesList":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    const/16 v63, 0x0

    .restart local v63    # "i":I
    :goto_19
    invoke-interface/range {v39 .. v39}, Ljava/util/List;->size()I

    move-result v6

    move/from16 v0, v63

    if-ge v0, v6, :cond_41

    .line 23364
    move-object/from16 v0, v39

    move/from16 v1, v63

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v87

    check-cast v87, Landroid/content/pm/ResolveInfo;

    .line 23365
    .local v87, "skipPackage":Landroid/content/pm/ResolveInfo;
    const/16 v77, 0x0

    .line 23367
    .restart local v77    # "pkgInfo":Landroid/content/pm/PackageInfo;
    :try_start_7
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v6

    move-object/from16 v0, v87

    iget-object v8, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v8, v8, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    const/16 v10, 0x1000

    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v11

    invoke-interface {v6, v8, v10, v11}, Landroid/content/pm/IPackageManager;->getPackageInfo(Ljava/lang/String;II)Landroid/content/pm/PackageInfo;
    :try_end_7
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_7} :catch_3

    move-result-object v77

    .line 23372
    :goto_1a
    if-eqz v77, :cond_3c

    move-object/from16 v0, v77

    iget-object v6, v0, Landroid/content/pm/PackageInfo;->requestedPermissions:[Ljava/lang/String;

    if-eqz v6, :cond_3c

    .line 23373
    const/16 v74, 0x1

    .line 23374
    .local v74, "needsSkip":Z
    const/16 v76, 0x0

    .restart local v76    # "permissionIndex":I
    :goto_1b
    move-object/from16 v0, v77

    iget-object v6, v0, Landroid/content/pm/PackageInfo;->requestedPermissions:[Ljava/lang/String;

    array-length v6, v6

    move/from16 v0, v76

    if-ge v0, v6, :cond_3b

    .line 23375
    move-object/from16 v0, v77

    iget-object v6, v0, Landroid/content/pm/PackageInfo;->requestedPermissions:[Ljava/lang/String;

    aget-object v75, v6, v76

    .line 23376
    .restart local v75    # "permission":Ljava/lang/String;
    const-string v6, "com.samsung.android.permission.MODIFY_THEME"

    move-object/from16 v0, v75

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_40

    .line 23378
    move-object/from16 v0, v77

    iget-object v6, v0, Landroid/content/pm/PackageInfo;->requestedPermissionsFlags:[I

    aget v6, v6, v76

    and-int/lit8 v6, v6, 0x2

    if-eqz v6, :cond_3b

    .line 23379
    const/16 v74, 0x0

    .line 23384
    .end local v75    # "permission":Ljava/lang/String;
    :cond_3b
    if-eqz v74, :cond_3c

    .line 23385
    move-object/from16 v0, v89

    move-object/from16 v1, v87

    invoke-interface {v0, v1}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 23363
    .end local v74    # "needsSkip":Z
    .end local v76    # "permissionIndex":I
    :cond_3c
    add-int/lit8 v63, v63, 0x1

    goto :goto_19

    .line 23310
    .end local v49    # "NR":I
    .end local v63    # "i":I
    .end local v66    # "ir":I
    .end local v77    # "pkgInfo":Landroid/content/pm/PackageInfo;
    .end local v87    # "skipPackage":Landroid/content/pm/ResolveInfo;
    .end local v88    # "skipPackages":[Ljava/lang/String;
    .end local v89    # "skipPackagesList":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :cond_3d
    const/16 v49, 0x0

    goto/16 :goto_16

    .line 23321
    .restart local v16    # "r":Lcom/android/server/am/BroadcastRecord;
    .restart local v17    # "queue":Lcom/android/server/am/BroadcastQueue;
    .restart local v49    # "NR":I
    :cond_3e
    const/16 v85, 0x0

    goto/16 :goto_17

    .line 23350
    .end local v16    # "r":Lcom/android/server/am/BroadcastRecord;
    .end local v17    # "queue":Lcom/android/server/am/BroadcastQueue;
    .restart local v66    # "ir":I
    .restart local v88    # "skipPackages":[Ljava/lang/String;
    :cond_3f
    const-string v6, "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v6, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_39

    .line 23351
    const-string v6, "android.intent.extra.changed_package_list"

    move-object/from16 v0, v18

    invoke-virtual {v0, v6}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v88

    goto/16 :goto_18

    .line 23369
    .restart local v63    # "i":I
    .restart local v77    # "pkgInfo":Landroid/content/pm/PackageInfo;
    .restart local v87    # "skipPackage":Landroid/content/pm/ResolveInfo;
    .restart local v89    # "skipPackagesList":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :catch_3
    move-exception v61

    .line 23370
    .restart local v61    # "e":Landroid/os/RemoteException;
    invoke-virtual/range {v61 .. v61}, Landroid/os/RemoteException;->printStackTrace()V

    goto :goto_1a

    .line 23374
    .end local v61    # "e":Landroid/os/RemoteException;
    .restart local v74    # "needsSkip":Z
    .restart local v75    # "permission":Ljava/lang/String;
    .restart local v76    # "permissionIndex":I
    :cond_40
    add-int/lit8 v76, v76, 0x1

    goto :goto_1b

    .line 23389
    .end local v74    # "needsSkip":Z
    .end local v75    # "permission":Ljava/lang/String;
    .end local v76    # "permissionIndex":I
    .end local v77    # "pkgInfo":Landroid/content/pm/PackageInfo;
    .end local v87    # "skipPackage":Landroid/content/pm/ResolveInfo;
    :cond_41
    move-object/from16 v0, v39

    move-object/from16 v1, v89

    invoke-interface {v0, v1}, Ljava/util/List;->removeAll(Ljava/util/Collection;)Z

    .line 23393
    .end local v63    # "i":I
    .end local v89    # "skipPackagesList":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :cond_42
    if-eqz v88, :cond_45

    move-object/from16 v0, v88

    array-length v6, v0

    if-lez v6, :cond_45

    .line 23394
    move-object/from16 v54, v88

    .restart local v54    # "arr$":[Ljava/lang/String;
    move-object/from16 v0, v54

    array-length v0, v0

    move/from16 v70, v0

    .restart local v70    # "len$":I
    const/16 v64, 0x0

    .local v64, "i$":I
    :goto_1c
    move/from16 v0, v64

    move/from16 v1, v70

    if-ge v0, v1, :cond_45

    aget-object v87, v54, v64

    .line 23395
    .local v87, "skipPackage":Ljava/lang/String;
    if-eqz v87, :cond_44

    .line 23396
    invoke-interface/range {v39 .. v39}, Ljava/util/List;->size()I

    move-result v50

    .line 23397
    .local v50, "NT":I
    const/16 v68, 0x0

    .local v68, "it":I
    :goto_1d
    move/from16 v0, v68

    move/from16 v1, v50

    if-ge v0, v1, :cond_44

    .line 23398
    move-object/from16 v0, v39

    move/from16 v1, v68

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v59

    check-cast v59, Landroid/content/pm/ResolveInfo;

    .line 23399
    .local v59, "curt":Landroid/content/pm/ResolveInfo;
    move-object/from16 v0, v59

    iget-object v6, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v6, v6, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v87

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_43

    .line 23400
    move-object/from16 v0, v39

    move/from16 v1, v68

    invoke-interface {v0, v1}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 23401
    add-int/lit8 v68, v68, -0x1

    .line 23402
    add-int/lit8 v50, v50, -0x1

    .line 23397
    :cond_43
    add-int/lit8 v68, v68, 0x1

    goto :goto_1d

    .line 23394
    .end local v50    # "NT":I
    .end local v59    # "curt":Landroid/content/pm/ResolveInfo;
    .end local v68    # "it":I
    :cond_44
    add-int/lit8 v64, v64, 0x1

    goto :goto_1c

    .line 23409
    .end local v54    # "arr$":[Ljava/lang/String;
    .end local v64    # "i$":I
    .end local v70    # "len$":I
    .end local v87    # "skipPackage":Ljava/lang/String;
    :cond_45
    sget-boolean v6, Lcom/android/server/am/ActivityManagerService;->SNN_PRIORITY_ENABLED:Z

    if-eqz v6, :cond_48

    move/from16 v0, p12

    move-object/from16 v1, v18

    invoke-static {v0, v1}, Lcom/android/server/am/BroadcastQueue;->isDeferrable(ZLandroid/content/Intent;)Z

    move-result v6

    if-eqz v6, :cond_48

    .line 23410
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string v8, "activity"

    invoke-virtual {v6, v8}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v53

    check-cast v53, Landroid/app/ActivityManager;

    .line 23411
    .local v53, "am":Landroid/app/ActivityManager;
    if-eqz v39, :cond_47

    invoke-interface/range {v39 .. v39}, Ljava/util/List;->size()I

    move-result v6

    if-lez v6, :cond_47

    .line 23416
    invoke-interface/range {v39 .. v39}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v64

    .local v64, "i$":Ljava/util/Iterator;
    :goto_1e
    invoke-interface/range {v64 .. v64}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_47

    invoke-interface/range {v64 .. v64}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v80

    .local v80, "rInfo":Ljava/lang/Object;
    move-object/from16 v6, v80

    .line 23417
    check-cast v6, Landroid/content/pm/ResolveInfo;

    iget-object v6, v6, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v6, v6, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v0, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v78, v0

    .line 23418
    .restart local v78    # "pkgName":Ljava/lang/String;
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mPrioritiseProcess:Lcom/android/server/am/PrioritizeLRUProcess;

    move-object/from16 v0, v78

    invoke-virtual {v6, v0}, Lcom/android/server/am/PrioritizeLRUProcess;->getLaunchCount(Ljava/lang/String;)I

    move-result v98

    .line 23419
    .local v98, "weight":I
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackageName:Ljava/lang/String;

    move-object/from16 v0, v78

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_46

    .line 23420
    const/16 v98, 0x65

    .line 23422
    :cond_46
    check-cast v80, Landroid/content/pm/ResolveInfo;

    .end local v80    # "rInfo":Ljava/lang/Object;
    invoke-static/range {v98 .. v98}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    move-object/from16 v0, v80

    invoke-virtual {v0, v6}, Landroid/content/pm/ResolveInfo;->setPackageWeight(Ljava/lang/Integer;)V

    goto :goto_1e

    .line 23426
    .end local v64    # "i$":Ljava/util/Iterator;
    .end local v78    # "pkgName":Ljava/lang/String;
    .end local v98    # "weight":I
    :cond_47
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mResolveInfoComparator:Ljava/util/Comparator;

    move-object/from16 v0, v39

    invoke-static {v0, v6}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 23438
    .end local v53    # "am":Landroid/app/ActivityManager;
    :cond_48
    if-eqz v39, :cond_4b

    invoke-interface/range {v39 .. v39}, Ljava/util/List;->size()I

    move-result v50

    .line 23439
    .restart local v50    # "NT":I
    :goto_1f
    const/16 v68, 0x0

    .line 23440
    .restart local v68    # "it":I
    const/16 v59, 0x0

    .line 23441
    .restart local v59    # "curt":Landroid/content/pm/ResolveInfo;
    const/16 v58, 0x0

    .line 23442
    .local v58, "curr":Lcom/android/server/am/BroadcastFilter;
    :goto_20
    move/from16 v0, v68

    move/from16 v1, v50

    if-ge v0, v1, :cond_4d

    move/from16 v0, v66

    move/from16 v1, v49

    if-ge v0, v1, :cond_4d

    .line 23443
    if-nez v59, :cond_49

    .line 23444
    move-object/from16 v0, v39

    move/from16 v1, v68

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v59

    .end local v59    # "curt":Landroid/content/pm/ResolveInfo;
    check-cast v59, Landroid/content/pm/ResolveInfo;

    .line 23446
    .restart local v59    # "curt":Landroid/content/pm/ResolveInfo;
    :cond_49
    if-nez v58, :cond_4a

    .line 23447
    move-object/from16 v0, v27

    move/from16 v1, v66

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v58

    .end local v58    # "curr":Lcom/android/server/am/BroadcastFilter;
    check-cast v58, Lcom/android/server/am/BroadcastFilter;

    .line 23449
    .restart local v58    # "curr":Lcom/android/server/am/BroadcastFilter;
    :cond_4a
    invoke-virtual/range {v58 .. v58}, Lcom/android/server/am/BroadcastFilter;->getPriority()I

    move-result v6

    move-object/from16 v0, v59

    iget v8, v0, Landroid/content/pm/ResolveInfo;->priority:I

    if-lt v6, v8, :cond_4c

    .line 23451
    move-object/from16 v0, v39

    move/from16 v1, v68

    move-object/from16 v2, v58

    invoke-interface {v0, v1, v2}, Ljava/util/List;->add(ILjava/lang/Object;)V

    .line 23452
    add-int/lit8 v66, v66, 0x1

    .line 23453
    const/16 v58, 0x0

    .line 23454
    add-int/lit8 v68, v68, 0x1

    .line 23455
    add-int/lit8 v50, v50, 0x1

    goto :goto_20

    .line 23438
    .end local v50    # "NT":I
    .end local v58    # "curr":Lcom/android/server/am/BroadcastFilter;
    .end local v59    # "curt":Landroid/content/pm/ResolveInfo;
    .end local v68    # "it":I
    :cond_4b
    const/16 v50, 0x0

    goto :goto_1f

    .line 23458
    .restart local v50    # "NT":I
    .restart local v58    # "curr":Lcom/android/server/am/BroadcastFilter;
    .restart local v59    # "curt":Landroid/content/pm/ResolveInfo;
    .restart local v68    # "it":I
    :cond_4c
    add-int/lit8 v68, v68, 0x1

    .line 23459
    const/16 v59, 0x0

    goto :goto_20

    .line 23463
    .end local v50    # "NT":I
    .end local v58    # "curr":Lcom/android/server/am/BroadcastFilter;
    .end local v59    # "curt":Landroid/content/pm/ResolveInfo;
    .end local v68    # "it":I
    .end local v88    # "skipPackages":[Ljava/lang/String;
    :cond_4d
    :goto_21
    move/from16 v0, v66

    move/from16 v1, v49

    if-ge v0, v1, :cond_4f

    .line 23464
    if-nez v39, :cond_4e

    .line 23465
    new-instance v39, Ljava/util/ArrayList;

    .end local v39    # "receivers":Ljava/util/List;
    invoke-direct/range {v39 .. v39}, Ljava/util/ArrayList;-><init>()V

    .line 23467
    .restart local v39    # "receivers":Ljava/util/List;
    :cond_4e
    move-object/from16 v0, v27

    move/from16 v1, v66

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v6

    move-object/from16 v0, v39

    invoke-interface {v0, v6}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 23468
    add-int/lit8 v66, v66, 0x1

    goto :goto_21

    .line 23471
    :cond_4f
    sget-boolean v6, Lcom/android/server/am/ActivityManagerService;->SNN_PRIORITY_ENABLED:Z

    if-eqz v6, :cond_50

    if-eqz v39, :cond_50

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->isSNNEnabled()Z

    move-result v6

    if-eqz v6, :cond_50

    .line 23472
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mResolvePrioritySorter:Ljava/util/Comparator;

    move-object/from16 v0, v39

    invoke-static {v0, v6}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 23475
    :cond_50
    if-eqz v39, :cond_51

    invoke-interface/range {v39 .. v39}, Ljava/util/List;->size()I

    move-result v6

    if-gtz v6, :cond_52

    :cond_51
    if-eqz p5, :cond_54

    .line 23477
    :cond_52
    move-object/from16 v0, p0

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v17

    .line 23478
    .restart local v17    # "queue":Lcom/android/server/am/BroadcastQueue;
    new-instance v16, Lcom/android/server/am/BroadcastRecord;

    const/16 v46, 0x0

    move-object/from16 v28, v16

    move-object/from16 v29, v17

    move-object/from16 v30, v18

    move-object/from16 v31, p1

    move-object/from16 v32, p2

    move/from16 v33, p14

    move/from16 v34, p15

    move-object/from16 v35, p4

    move-object/from16 v36, p9

    move/from16 v37, p10

    move-object/from16 v38, v26

    move-object/from16 v40, p5

    move/from16 v41, p6

    move-object/from16 v42, p7

    move-object/from16 v43, p8

    move/from16 v44, p12

    move/from16 v45, p13

    move/from16 v47, p16

    invoke-direct/range {v28 .. v47}, Lcom/android/server/am/BroadcastRecord;-><init>(Lcom/android/server/am/BroadcastQueue;Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IILjava/lang/String;[Ljava/lang/String;ILandroid/app/BroadcastOptions;Ljava/util/List;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZI)V

    .line 23488
    .restart local v16    # "r":Lcom/android/server/am/BroadcastRecord;
    if-eqz v84, :cond_55

    move-object/from16 v0, v17

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Lcom/android/server/am/BroadcastQueue;->replaceOrderedBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)Z

    move-result v6

    if-eqz v6, :cond_55

    const/16 v85, 0x1

    .line 23489
    .restart local v85    # "replaced":Z
    :goto_22
    if-nez v85, :cond_54

    .line 23492
    if-eqz v84, :cond_53

    const/4 v6, 0x3

    move-object/from16 v0, v17

    iget v8, v0, Lcom/android/server/am/BroadcastQueue;->mQueueType:I

    if-ne v6, v8, :cond_53

    .line 23493
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mDeferredBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    move-object/from16 v0, v16

    invoke-virtual {v6, v0}, Lcom/android/server/am/BroadcastQueue;->dropDeferredOrderedBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 23496
    :cond_53
    move-object/from16 v0, v17

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Lcom/android/server/am/BroadcastQueue;->enqueueOrderedBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 23497
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/am/BroadcastQueue;->scheduleBroadcastsLocked()V

    .line 23501
    .end local v16    # "r":Lcom/android/server/am/BroadcastRecord;
    .end local v17    # "queue":Lcom/android/server/am/BroadcastQueue;
    .end local v85    # "replaced":Z
    :cond_54
    const/4 v6, 0x0

    goto/16 :goto_0

    .line 23488
    .restart local v16    # "r":Lcom/android/server/am/BroadcastRecord;
    .restart local v17    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_55
    const/16 v85, 0x0

    goto :goto_22

    .line 22917
    nop

    :sswitch_data_0
    .sparse-switch
        -0x7babae4b -> :sswitch_8
        -0x6849e2b4 -> :sswitch_0
        -0x53ae571d -> :sswitch_3
        -0x4fc097e4 -> :sswitch_4
        0xa480416 -> :sswitch_2
        0xaf62806 -> :sswitch_9
        0x1df32313 -> :sswitch_6
        0x1e1f7f95 -> :sswitch_7
        0x1f50b9c2 -> :sswitch_1
        0x5c1076e2 -> :sswitch_5
    .end sparse-switch

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_0
        :pswitch_0
        :pswitch_0
        :pswitch_0
        :pswitch_1
        :pswitch_2
        :pswitch_3
        :pswitch_4
        :pswitch_5
    .end packed-switch
.end method

.method private buildAssistBundleLocked(Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;Landroid/os/Bundle;)V
    .locals 3
    .param p1, "pae"    # Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;
    .param p2, "result"    # Landroid/os/Bundle;

    .prologue
    .line 15976
    if-eqz p2, :cond_0

    .line 15977
    iget-object v0, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->extras:Landroid/os/Bundle;

    const-string v1, "android.intent.extra.ASSIST_CONTEXT"

    invoke-virtual {v0, v1, p2}, Landroid/os/Bundle;->putBundle(Ljava/lang/String;Landroid/os/Bundle;)V

    .line 15979
    :cond_0
    iget-object v0, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->hint:Ljava/lang/String;

    if-eqz v0, :cond_1

    .line 15980
    iget-object v0, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->extras:Landroid/os/Bundle;

    iget-object v1, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->hint:Ljava/lang/String;

    const/4 v2, 0x1

    invoke-virtual {v0, v1, v2}, Landroid/os/Bundle;->putBoolean(Ljava/lang/String;Z)V

    .line 15982
    :cond_1
    return-void
.end method

.method private canAddRecentTaskLocked(Lcom/android/server/am/TaskRecord;)Z
    .locals 8
    .param p1, "tr"    # Lcom/android/server/am/TaskRecord;

    .prologue
    const/4 v5, 0x1

    .line 12733
    iget-object v6, p1, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    if-nez v6, :cond_1

    .line 12751
    :cond_0
    :goto_0
    return v5

    .line 12736
    :cond_1
    new-instance v1, Landroid/content/Intent;

    iget-object v6, p1, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    invoke-direct {v1, v6}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    .line 12737
    .local v1, "intent":Landroid/content/Intent;
    iget-object v6, p1, Lcom/android/server/am/TaskRecord;->origActivity:Landroid/content/ComponentName;

    if-eqz v6, :cond_2

    .line 12738
    iget-object v6, p1, Lcom/android/server/am/TaskRecord;->origActivity:Landroid/content/ComponentName;

    invoke-virtual {v1, v6}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 12740
    :cond_2
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v6}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v2

    .line 12741
    .local v2, "pm":Landroid/content/pm/PackageManager;
    invoke-virtual {v1}, Landroid/content/Intent;->getFlags()I

    move-result v6

    const v7, -0x200001

    and-int/2addr v6, v7

    const/high16 v7, 0x10000000

    or-int/2addr v6, v7

    invoke-virtual {v1, v6}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 12743
    const/16 v6, 0xc0

    invoke-virtual {v2, v1, v6}, Landroid/content/pm/PackageManager;->resolveActivity(Landroid/content/Intent;I)Landroid/content/pm/ResolveInfo;

    move-result-object v3

    .line 12744
    .local v3, "resolveInfo":Landroid/content/pm/ResolveInfo;
    if-eqz v3, :cond_3

    .line 12745
    iget-object v0, v3, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    .line 12746
    .local v0, "info":Landroid/content/pm/ActivityInfo;
    invoke-virtual {v0, v2}, Landroid/content/pm/ActivityInfo;->loadLabel(Landroid/content/pm/PackageManager;)Ljava/lang/CharSequence;

    move-result-object v6

    invoke-interface {v6}, Ljava/lang/CharSequence;->toString()Ljava/lang/String;

    move-result-object v4

    .line 12747
    .local v4, "title":Ljava/lang/String;
    if-eqz v4, :cond_3

    invoke-virtual {v4}, Ljava/lang/String;->length()I

    move-result v6

    if-gtz v6, :cond_0

    .line 12751
    .end local v0    # "info":Landroid/content/pm/ActivityInfo;
    .end local v4    # "title":Ljava/lang/String;
    :cond_3
    const/4 v5, 0x0

    goto :goto_0
.end method

.method private canClearIdentity(III)Z
    .locals 6
    .param p1, "callingPid"    # I
    .param p2, "callingUid"    # I
    .param p3, "userId"    # I

    .prologue
    const/4 v4, -0x1

    const/4 v5, 0x1

    .line 15062
    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    if-ne v0, p3, :cond_1

    .line 15071
    :cond_0
    :goto_0
    return v5

    .line 15065
    :cond_1
    const-string v1, "android.permission.INTERACT_ACROSS_USERS"

    move-object v0, p0

    move v2, p1

    move v3, p2

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v0

    if-eqz v0, :cond_0

    const-string v1, "android.permission.INTERACT_ACROSS_USERS_FULL"

    move-object v0, p0

    move v2, p1

    move v3, p2

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v0

    if-eqz v0, :cond_0

    .line 15071
    const/4 v5, 0x0

    goto :goto_0
.end method

.method private final canGcNowLocked()Z
    .locals 6

    .prologue
    .line 25579
    const/4 v3, 0x0

    .line 25580
    .local v3, "processingBroadcasts":Z
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .local v0, "arr$":[Lcom/android/server/am/BroadcastQueue;
    array-length v2, v0

    .local v2, "len$":I
    const/4 v1, 0x0

    .local v1, "i$":I
    :goto_0
    if-ge v1, v2, :cond_2

    aget-object v4, v0, v1

    .line 25581
    .local v4, "q":Lcom/android/server/am/BroadcastQueue;
    iget-object v5, v4, Lcom/android/server/am/BroadcastQueue;->mParallelBroadcasts:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-nez v5, :cond_0

    iget-object v5, v4, Lcom/android/server/am/BroadcastQueue;->mOrderedBroadcasts:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-eqz v5, :cond_1

    .line 25582
    :cond_0
    const/4 v3, 0x1

    .line 25580
    :cond_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 25585
    .end local v4    # "q":Lcom/android/server/am/BroadcastQueue;
    :cond_2
    if-nez v3, :cond_4

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->isSleeping()Z

    move-result v5

    if-nez v5, :cond_3

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v5}, Lcom/android/server/am/ActivityStackSupervisor;->allResumedActivitiesIdle()Z

    move-result v5

    if-eqz v5, :cond_4

    :cond_3
    const/4 v5, 0x1

    :goto_1
    return v5

    :cond_4
    const/4 v5, 0x0

    goto :goto_1
.end method

.method private canRetreiveAvailableItem(Ljava/util/ArrayList;)I
    .locals 3
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;",
            ">;)I"
        }
    .end annotation

    .prologue
    .line 28811
    .local p1, "availProcessChanges":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;>;"
    invoke-virtual {p1}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v0, v2, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_1

    .line 28812
    invoke-virtual {p1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 28813
    .local v1, "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    iget-boolean v2, v1, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->finished:Z

    if-eqz v2, :cond_0

    .line 28817
    .end local v0    # "i":I
    .end local v1    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :goto_1
    return v0

    .line 28811
    .restart local v0    # "i":I
    .restart local v1    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :cond_0
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 28817
    .end local v1    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :cond_1
    const/4 v0, -0x1

    goto :goto_1
.end method

.method private changeIntentforKiosk(Landroid/content/Intent;Ljava/lang/String;I)Z
    .locals 8
    .param p1, "intent"    # Landroid/content/Intent;
    .param p2, "resolvedType"    # Ljava/lang/String;
    .param p3, "userId"    # I

    .prologue
    const/4 v4, 0x0

    .line 6511
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->mKnoxInfo:Landroid/os/Bundle;

    if-nez v5, :cond_1

    .line 6539
    :cond_0
    :goto_0
    return v4

    .line 6517
    :cond_1
    const-string/jumbo v5, "true"

    sget-object v6, Lcom/android/server/am/ActivityManagerService;->mKnoxInfo:Landroid/os/Bundle;

    const-string/jumbo v7, "isKnoxKioskMode"

    invoke-virtual {v6, v7}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_0

    if-nez p3, :cond_0

    if-eqz p1, :cond_0

    .line 6520
    new-instance v2, Landroid/content/Intent;

    invoke-direct {v2, p1}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    .line 6525
    .local v2, "newIntent":Landroid/content/Intent;
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    const v6, 0x10400

    invoke-interface {v5, v2, p2, v6, p3}, Landroid/content/pm/IPackageManager;->resolveIntent(Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/pm/ResolveInfo;

    move-result-object v3

    .line 6529
    .local v3, "rInfo":Landroid/content/pm/ResolveInfo;
    if-eqz v3, :cond_2

    iget-object v0, v3, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 6534
    .end local v3    # "rInfo":Landroid/content/pm/ResolveInfo;
    .local v0, "aInfo":Landroid/content/pm/ActivityInfo;
    :goto_1
    if-eqz v0, :cond_0

    .line 6535
    invoke-static {v0}, Lcom/android/server/RCPManagerService;->isAllowedtoLaunch(Landroid/content/pm/ActivityInfo;)Z

    move-result v5

    if-nez v5, :cond_0

    const/4 v4, 0x1

    goto :goto_0

    .line 6529
    .end local v0    # "aInfo":Landroid/content/pm/ActivityInfo;
    .restart local v3    # "rInfo":Landroid/content/pm/ResolveInfo;
    :cond_2
    const/4 v0, 0x0

    goto :goto_1

    .line 6530
    .end local v3    # "rInfo":Landroid/content/pm/ResolveInfo;
    :catch_0
    move-exception v1

    .line 6531
    .local v1, "e":Landroid/os/RemoteException;
    const/4 v0, 0x0

    .restart local v0    # "aInfo":Landroid/content/pm/ActivityInfo;
    goto :goto_1
.end method

.method private changeIntentforSharedDevice(Landroid/content/Intent;Ljava/lang/String;I)Z
    .locals 8
    .param p1, "intent"    # Landroid/content/Intent;
    .param p2, "resolvedType"    # Ljava/lang/String;
    .param p3, "userId"    # I

    .prologue
    .line 6477
    const/4 v5, 0x0

    .line 6479
    .local v5, "retvalue":Z
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v7, "enterprise_policy"

    invoke-virtual {v6, v7}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/app/enterprise/EnterpriseDeviceManager;

    .line 6481
    .local v2, "edm":Landroid/app/enterprise/EnterpriseDeviceManager;
    if-eqz v2, :cond_0

    invoke-virtual {v2}, Landroid/app/enterprise/EnterpriseDeviceManager;->getEnterpriseSharedDevicePolicy()Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;

    move-result-object v6

    if-eqz v6, :cond_0

    .line 6482
    invoke-virtual {v2}, Landroid/app/enterprise/EnterpriseDeviceManager;->getEnterpriseSharedDevicePolicy()Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;

    move-result-object v6

    invoke-virtual {v6}, Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;->isSharedDeviceEnabled()Z

    move-result v3

    .line 6484
    .local v3, "isSharedDevice":Z
    if-eqz v3, :cond_0

    .line 6489
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v6

    const v7, 0x10400

    invoke-interface {v6, p1, p2, v7, p3}, Landroid/content/pm/IPackageManager;->resolveIntent(Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/pm/ResolveInfo;

    move-result-object v4

    .line 6493
    .local v4, "rInfo":Landroid/content/pm/ResolveInfo;
    if-eqz v4, :cond_1

    iget-object v0, v4, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 6497
    .end local v4    # "rInfo":Landroid/content/pm/ResolveInfo;
    .local v0, "aInfo":Landroid/content/pm/ActivityInfo;
    :goto_0
    if-eqz v0, :cond_0

    iget-object v6, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const-string v7, "com.sec.android.emergencymode.service"

    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_0

    .line 6498
    const/4 v5, 0x1

    .line 6503
    .end local v0    # "aInfo":Landroid/content/pm/ActivityInfo;
    .end local v3    # "isSharedDevice":Z
    :cond_0
    return v5

    .line 6493
    .restart local v3    # "isSharedDevice":Z
    .restart local v4    # "rInfo":Landroid/content/pm/ResolveInfo;
    :cond_1
    const/4 v0, 0x0

    goto :goto_0

    .line 6494
    .end local v4    # "rInfo":Landroid/content/pm/ResolveInfo;
    :catch_0
    move-exception v1

    .line 6495
    .local v1, "e":Landroid/os/RemoteException;
    const/4 v0, 0x0

    .restart local v0    # "aInfo":Landroid/content/pm/ActivityInfo;
    goto :goto_0
.end method

.method private final checkContentProviderPermissionLocked(Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ProcessRecord;)Ljava/lang/String;
    .locals 17
    .param p1, "cpi"    # Landroid/content/pm/ProviderInfo;
    .param p2, "r"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 14096
    if-eqz p2, :cond_0

    move-object/from16 v0, p2

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 14097
    .local v4, "callingPid":I
    :goto_0
    if-eqz p2, :cond_1

    move-object/from16 v0, p2

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 14098
    .local v5, "callingUid":I
    :goto_1
    const/4 v2, 0x0

    move-object/from16 v0, p1

    iget-object v3, v0, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v1, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v6, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget-object v1, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v7, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-boolean v8, v0, Landroid/content/pm/ProviderInfo;->exported:Z

    const/4 v9, 0x0

    move-object/from16 v1, p0

    invoke-virtual/range {v1 .. v9}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Landroid/content/Intent;Ljava/lang/String;IIILjava/lang/String;ZZ)I

    move-result v1

    if-nez v1, :cond_2

    .line 14101
    const/4 v13, 0x0

    .line 14150
    .end local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :goto_2
    return-object v13

    .line 14096
    .end local v4    # "callingPid":I
    .end local v5    # "callingUid":I
    .restart local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    goto :goto_0

    .line 14097
    .restart local v4    # "callingPid":I
    :cond_1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    goto :goto_1

    .line 14103
    .restart local v5    # "callingUid":I
    :cond_2
    const/4 v2, 0x0

    move-object/from16 v0, p1

    iget-object v3, v0, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v1, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v6, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget-object v1, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v7, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-boolean v8, v0, Landroid/content/pm/ProviderInfo;->exported:Z

    const/4 v9, 0x0

    move-object/from16 v1, p0

    invoke-virtual/range {v1 .. v9}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Landroid/content/Intent;Ljava/lang/String;IIILjava/lang/String;ZZ)I

    move-result v1

    if-nez v1, :cond_3

    .line 14106
    const/4 v13, 0x0

    goto :goto_2

    .line 14109
    :cond_3
    move-object/from16 v0, p1

    iget-object v0, v0, Landroid/content/pm/ProviderInfo;->pathPermissions:[Landroid/content/pm/PathPermission;

    move-object/from16 v16, v0

    .line 14110
    .local v16, "pps":[Landroid/content/pm/PathPermission;
    if-eqz v16, :cond_6

    .line 14111
    move-object/from16 v0, v16

    array-length v11, v0

    .line 14112
    .local v11, "i":I
    :cond_4
    if-lez v11, :cond_6

    .line 14113
    add-int/lit8 v11, v11, -0x1

    .line 14114
    aget-object v15, v16, v11

    .line 14115
    .local v15, "pp":Landroid/content/pm/PathPermission;
    const/4 v2, 0x0

    invoke-virtual {v15}, Landroid/content/pm/PathPermission;->getReadPermission()Ljava/lang/String;

    move-result-object v3

    move-object/from16 v0, p1

    iget-object v1, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v6, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget-object v1, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v7, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-boolean v8, v0, Landroid/content/pm/ProviderInfo;->exported:Z

    const/4 v9, 0x0

    move-object/from16 v1, p0

    invoke-virtual/range {v1 .. v9}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Landroid/content/Intent;Ljava/lang/String;IIILjava/lang/String;ZZ)I

    move-result v1

    if-nez v1, :cond_5

    .line 14118
    const/4 v13, 0x0

    goto :goto_2

    .line 14120
    :cond_5
    const/4 v2, 0x0

    invoke-virtual {v15}, Landroid/content/pm/PathPermission;->getWritePermission()Ljava/lang/String;

    move-result-object v3

    move-object/from16 v0, p1

    iget-object v1, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v6, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget-object v1, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v7, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-boolean v8, v0, Landroid/content/pm/ProviderInfo;->exported:Z

    const/4 v9, 0x0

    move-object/from16 v1, p0

    invoke-virtual/range {v1 .. v9}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Landroid/content/Intent;Ljava/lang/String;IIILjava/lang/String;ZZ)I

    move-result v1

    if-nez v1, :cond_4

    .line 14123
    const/4 v13, 0x0

    goto :goto_2

    .line 14128
    .end local v11    # "i":I
    .end local v15    # "pp":Landroid/content/pm/PathPermission;
    :cond_6
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v1, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Landroid/util/ArrayMap;

    .line 14129
    .local v14, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-eqz v14, :cond_8

    .line 14130
    invoke-virtual {v14}, Landroid/util/ArrayMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v12

    .local v12, "i$":Ljava/util/Iterator;
    :cond_7
    invoke-interface {v12}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_8

    invoke-interface {v12}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Ljava/util/Map$Entry;

    .line 14131
    .local v10, "granturi":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    invoke-interface {v10}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v1

    move-object/from16 v0, p1

    iget-object v2, v0, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_7

    .line 14132
    const/4 v13, 0x0

    goto/16 :goto_2

    .line 14138
    .end local v10    # "granturi":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    .end local v12    # "i$":Ljava/util/Iterator;
    :cond_8
    move-object/from16 v0, p1

    iget-boolean v1, v0, Landroid/content/pm/ProviderInfo;->exported:Z

    if-nez v1, :cond_a

    .line 14139
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: opening provider "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    move-object/from16 v0, p1

    iget-object v2, v0, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " from "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    if-eqz p2, :cond_9

    .end local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :goto_3
    move-object/from16 v0, p2

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " (pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ") that is not exported from uid "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    move-object/from16 v0, p1

    iget-object v2, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v13

    .line 14149
    .local v13, "msg":Ljava/lang/String;
    :goto_4
    const-string v1, "ActivityManager"

    invoke-static {v1, v13}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_2

    .line 14139
    .end local v13    # "msg":Ljava/lang/String;
    .restart local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_9
    const-string p2, "(null)"

    goto :goto_3

    .line 14144
    :cond_a
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: opening provider "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    move-object/from16 v0, p1

    iget-object v2, v0, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " from "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    if-eqz p2, :cond_b

    .end local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :goto_5
    move-object/from16 v0, p2

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " (pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ") requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    move-object/from16 v0, p1

    iget-object v2, v0, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " or "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    move-object/from16 v0, p1

    iget-object v2, v0, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v13

    .restart local v13    # "msg":Ljava/lang/String;
    goto :goto_4

    .end local v13    # "msg":Ljava/lang/String;
    .restart local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_b
    const-string p2, "(null)"

    goto :goto_5
.end method

.method private final checkContentProviderPermissionLocked(Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ProcessRecord;IZ)Ljava/lang/String;
    .locals 27
    .param p1, "cpi"    # Landroid/content/pm/ProviderInfo;
    .param p2, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p3, "userId"    # I
    .param p4, "checkUser"    # Z

    .prologue
    .line 13988
    const-string v21, "checkContentProviderPermissionLocked"

    .line 13990
    .local v21, "method":Ljava/lang/String;
    if-eqz p2, :cond_1

    move-object/from16 v0, p2

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 13991
    .local v5, "callingPid":I
    :goto_0
    if-eqz p2, :cond_2

    move-object/from16 v0, p2

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 13992
    .local v6, "callingUid":I
    :goto_1
    const/16 v17, 0x0

    .line 13993
    .local v17, "checkedGrants":Z
    invoke-static {v6}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v25

    .line 13994
    .local v25, "srcUserID":I
    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v18

    .line 13995
    .local v18, "destUserID":I
    const/4 v15, 0x1

    .line 14008
    .local v15, "allowAcrossKnox":Z
    const/16 v4, 0x64

    move/from16 v0, v18

    if-lt v0, v4, :cond_0

    const/16 v4, 0xc2

    move/from16 v0, v18

    if-gt v0, v4, :cond_0

    move/from16 v0, v25

    move/from16 v1, v18

    if-eq v0, v1, :cond_0

    const/16 v4, 0x3e8

    if-eq v6, v4, :cond_0

    .line 14010
    move-object/from16 v0, p0

    invoke-virtual {v0, v5}, Lcom/android/server/am/ActivityManagerService;->getPackageFromAppProcesses(I)Ljava/lang/String;

    move-result-object v16

    .line 14011
    .local v16, "callingPkg":Ljava/lang/String;
    const/16 v20, 0x0

    .local v20, "idx":I
    :goto_2
    sget-object v4, Lcom/android/server/am/ActivityManagerService;->KNOX_CONTENTPROVIDER_BLACKLIST_ARRAY:[Ljava/lang/String;

    array-length v4, v4

    move/from16 v0, v20

    if-ge v0, v4, :cond_0

    .line 14012
    sget-object v4, Lcom/android/server/am/ActivityManagerService;->KNOX_CONTENTPROVIDER_BLACKLIST_ARRAY:[Ljava/lang/String;

    aget-object v4, v4, v20

    move-object/from16 v0, v16

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_3

    .line 14013
    const/4 v15, 0x0

    .line 14022
    .end local v16    # "callingPkg":Ljava/lang/String;
    .end local v20    # "idx":I
    :cond_0
    if-eqz p4, :cond_6

    .line 14024
    move-object/from16 v0, p0

    move/from16 v1, p3

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->unsafeConvertIncomingUser(I)I

    move-result v26

    .line 14025
    .local v26, "tmpTargetUserId":I
    invoke-static {v6}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    move/from16 v0, v26

    if-eq v0, v4, :cond_5

    .line 14026
    if-eqz v15, :cond_4

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, v26

    move/from16 v3, p4

    invoke-virtual {v0, v6, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->checkAuthorityGrants(ILandroid/content/pm/ProviderInfo;IZ)Z

    move-result v4

    if-eqz v4, :cond_4

    .line 14027
    const/16 v22, 0x0

    .line 14090
    .end local v26    # "tmpTargetUserId":I
    .end local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :goto_3
    return-object v22

    .line 13990
    .end local v5    # "callingPid":I
    .end local v6    # "callingUid":I
    .end local v15    # "allowAcrossKnox":Z
    .end local v17    # "checkedGrants":Z
    .end local v18    # "destUserID":I
    .end local v25    # "srcUserID":I
    .restart local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_1
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    goto :goto_0

    .line 13991
    .restart local v5    # "callingPid":I
    :cond_2
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    goto :goto_1

    .line 14016
    .restart local v6    # "callingUid":I
    .restart local v15    # "allowAcrossKnox":Z
    .restart local v16    # "callingPkg":Ljava/lang/String;
    .restart local v17    # "checkedGrants":Z
    .restart local v18    # "destUserID":I
    .restart local v20    # "idx":I
    .restart local v25    # "srcUserID":I
    :cond_3
    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v7, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v8, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    const-string v9, "checkContentProviderPermissionLocked"

    move-object/from16 v4, p0

    invoke-virtual/range {v4 .. v9}, Lcom/android/server/am/ActivityManagerService;->checkKnoxPermission(IILjava/lang/String;ILjava/lang/String;)Z

    .line 14017
    const/4 v15, 0x1

    .line 14018
    const-string v4, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Calling from different user, the destination user is container and the caller is not authorized - "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, v16

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 14011
    add-int/lit8 v20, v20, 0x1

    goto :goto_2

    .line 14029
    .end local v16    # "callingPkg":Ljava/lang/String;
    .end local v20    # "idx":I
    .restart local v26    # "tmpTargetUserId":I
    :cond_4
    const/16 v17, 0x1

    .line 14031
    :cond_5
    const/4 v8, 0x0

    const/4 v9, 0x0

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "checkContentProviderPermissionLocked "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    const/4 v11, 0x0

    move-object/from16 v4, p0

    move/from16 v7, p3

    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p3

    .line 14034
    move/from16 v0, p3

    move/from16 v1, v26

    if-eq v0, v1, :cond_6

    .line 14039
    const/16 v17, 0x0

    .line 14042
    .end local v26    # "tmpTargetUserId":I
    :cond_6
    if-eqz v15, :cond_7

    move-object/from16 v0, p1

    iget-object v8, v0, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v11, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget-boolean v12, v0, Landroid/content/pm/ProviderInfo;->exported:Z

    move-object/from16 v7, p0

    move v9, v5

    move v10, v6

    invoke-virtual/range {v7 .. v12}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v4

    if-nez v4, :cond_7

    .line 14045
    const/16 v22, 0x0

    goto/16 :goto_3

    .line 14047
    :cond_7
    if-eqz v15, :cond_8

    move-object/from16 v0, p1

    iget-object v8, v0, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v11, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget-boolean v12, v0, Landroid/content/pm/ProviderInfo;->exported:Z

    move-object/from16 v7, p0

    move v9, v5

    move v10, v6

    invoke-virtual/range {v7 .. v12}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v4

    if-nez v4, :cond_8

    .line 14050
    const/16 v22, 0x0

    goto/16 :goto_3

    .line 14053
    :cond_8
    move-object/from16 v0, p1

    iget-object v0, v0, Landroid/content/pm/ProviderInfo;->pathPermissions:[Landroid/content/pm/PathPermission;

    move-object/from16 v24, v0

    .line 14054
    .local v24, "pps":[Landroid/content/pm/PathPermission;
    if-eqz v24, :cond_b

    .line 14055
    move-object/from16 v0, v24

    array-length v0, v0

    move/from16 v19, v0

    .line 14056
    .local v19, "i":I
    :cond_9
    if-lez v19, :cond_b

    .line 14057
    add-int/lit8 v19, v19, -0x1

    .line 14058
    aget-object v23, v24, v19

    .line 14059
    .local v23, "pp":Landroid/content/pm/PathPermission;
    invoke-virtual/range {v23 .. v23}, Landroid/content/pm/PathPermission;->getReadPermission()Ljava/lang/String;

    move-result-object v8

    .line 14060
    .local v8, "pprperm":Ljava/lang/String;
    if-eqz v15, :cond_a

    if-eqz v8, :cond_a

    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v11, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget-boolean v12, v0, Landroid/content/pm/ProviderInfo;->exported:Z

    move-object/from16 v7, p0

    move v9, v5

    move v10, v6

    invoke-virtual/range {v7 .. v12}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v4

    if-nez v4, :cond_a

    .line 14063
    const/16 v22, 0x0

    goto/16 :goto_3

    .line 14065
    :cond_a
    invoke-virtual/range {v23 .. v23}, Landroid/content/pm/PathPermission;->getWritePermission()Ljava/lang/String;

    move-result-object v10

    .line 14066
    .local v10, "ppwperm":Ljava/lang/String;
    if-eqz v15, :cond_9

    if-eqz v10, :cond_9

    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v13, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget-boolean v14, v0, Landroid/content/pm/ProviderInfo;->exported:Z

    move-object/from16 v9, p0

    move v11, v5

    move v12, v6

    invoke-virtual/range {v9 .. v14}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v4

    if-nez v4, :cond_9

    .line 14069
    const/16 v22, 0x0

    goto/16 :goto_3

    .line 14073
    .end local v8    # "pprperm":Ljava/lang/String;
    .end local v10    # "ppwperm":Ljava/lang/String;
    .end local v19    # "i":I
    .end local v23    # "pp":Landroid/content/pm/PathPermission;
    :cond_b
    if-eqz v15, :cond_c

    if-nez v17, :cond_c

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, p3

    move/from16 v3, p4

    invoke-virtual {v0, v6, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->checkAuthorityGrants(ILandroid/content/pm/ProviderInfo;IZ)Z

    move-result v4

    if-eqz v4, :cond_c

    .line 14074
    const/16 v22, 0x0

    goto/16 :goto_3

    .line 14078
    :cond_c
    move-object/from16 v0, p1

    iget-boolean v4, v0, Landroid/content/pm/ProviderInfo;->exported:Z

    if-nez v4, :cond_e

    .line 14079
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Permission Denial: opening provider "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v7, " from "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    if-eqz p2, :cond_d

    .end local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :goto_4
    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v7, " (pid="

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v7, ", uid="

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v7, ") that is not exported from uid "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v22

    .line 14089
    .local v22, "msg":Ljava/lang/String;
    :goto_5
    const-string v4, "ActivityManager"

    move-object/from16 v0, v22

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_3

    .line 14079
    .end local v22    # "msg":Ljava/lang/String;
    .restart local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_d
    const-string p2, "(null)"

    goto :goto_4

    .line 14084
    :cond_e
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Permission Denial: opening provider "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v7, " from "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    if-eqz p2, :cond_f

    .end local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :goto_6
    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v7, " (pid="

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v7, ", uid="

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v7, ") requires "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v7, " or "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v22

    .restart local v22    # "msg":Ljava/lang/String;
    goto :goto_5

    .end local v22    # "msg":Ljava/lang/String;
    .restart local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_f
    const-string p2, "(null)"

    goto :goto_6
.end method

.method private static checkDestPkgNameInList(Ljava/lang/String;[Ljava/lang/String;)Z
    .locals 6
    .param p0, "destPkgName"    # Ljava/lang/String;
    .param p1, "destPkgList"    # [Ljava/lang/String;

    .prologue
    const/4 v3, 0x0

    .line 11027
    const-string/jumbo v4, "persist.security.ams.enforcing"

    const-string v5, "0"

    invoke-static {v4, v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 11028
    .local v1, "amsOriginalValue":Ljava/lang/String;
    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0

    .line 11029
    .local v0, "amsOriginalBit":I
    and-int/lit8 v4, v0, 0x2

    const/4 v5, 0x2

    if-eq v4, v5, :cond_1

    .line 11030
    const/4 v3, 0x1

    .line 11049
    :cond_0
    return v3

    .line 11033
    :cond_1
    if-eqz p1, :cond_0

    .line 11037
    array-length v4, p1

    if-eqz v4, :cond_0

    .line 11041
    const/4 v3, 0x0

    .line 11042
    .local v3, "result":Z
    const/4 v2, 0x0

    .line 11043
    .local v2, "i":I
    :goto_0
    if-nez v3, :cond_0

    array-length v4, p1

    if-ge v2, v4, :cond_0

    .line 11044
    const-string v4, "allknoxpackages"

    aget-object v5, p1, v2

    invoke-virtual {v4, v5}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v4

    if-nez v4, :cond_2

    aget-object v4, p1, v2

    invoke-virtual {v4, p0}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_3

    .line 11045
    :cond_2
    const/4 v3, 0x1

    .line 11047
    :cond_3
    add-int/lit8 v2, v2, 0x1

    goto :goto_0
.end method

.method private final checkHoldingPermissionsInternalLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;IIZ)Z
    .locals 13
    .param p1, "pm"    # Landroid/content/pm/IPackageManager;
    .param p2, "pi"    # Landroid/content/pm/ProviderInfo;
    .param p3, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;
    .param p4, "uid"    # I
    .param p5, "modeFlags"    # I
    .param p6, "considerUidPermissions"    # Z

    .prologue
    .line 11345
    iget-object v12, p2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v12, v12, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v0, p4

    if-ne v12, v0, :cond_0

    .line 11346
    const/4 v12, 0x1

    .line 11421
    :goto_0
    return v12

    .line 11347
    :cond_0
    iget-boolean v12, p2, Landroid/content/pm/ProviderInfo;->exported:Z

    if-nez v12, :cond_1

    .line 11348
    const/4 v12, 0x0

    goto :goto_0

    .line 11351
    :cond_1
    and-int/lit8 v12, p5, 0x1

    if-nez v12, :cond_7

    const/4 v10, 0x1

    .line 11352
    .local v10, "readMet":Z
    :goto_1
    and-int/lit8 v12, p5, 0x2

    if-nez v12, :cond_8

    const/4 v11, 0x1

    .line 11355
    .local v11, "writeMet":Z
    :goto_2
    if-nez v10, :cond_2

    :try_start_0
    iget-object v12, p2, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    if-eqz v12, :cond_2

    if-eqz p6, :cond_2

    iget-object v12, p2, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    move/from16 v0, p4

    invoke-interface {p1, v12, v0}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v12

    if-nez v12, :cond_2

    .line 11357
    const/4 v10, 0x1

    .line 11359
    :cond_2
    if-nez v11, :cond_3

    iget-object v12, p2, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    if-eqz v12, :cond_3

    if-eqz p6, :cond_3

    iget-object v12, p2, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    move/from16 v0, p4

    invoke-interface {p1, v12, v0}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v12

    if-nez v12, :cond_3

    .line 11361
    const/4 v11, 0x1

    .line 11366
    :cond_3
    iget-object v12, p2, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    if-nez v12, :cond_9

    const/4 v1, 0x1

    .line 11367
    .local v1, "allowDefaultRead":Z
    :goto_3
    iget-object v12, p2, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    if-nez v12, :cond_a

    const/4 v2, 0x1

    .line 11370
    .local v2, "allowDefaultWrite":Z
    :goto_4
    iget-object v8, p2, Landroid/content/pm/ProviderInfo;->pathPermissions:[Landroid/content/pm/PathPermission;

    .line 11371
    .local v8, "pps":[Landroid/content/pm/PathPermission;
    if-eqz v8, :cond_d

    .line 11372
    move-object/from16 v0, p3

    iget-object v12, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v12}, Landroid/net/Uri;->getPath()Ljava/lang/String;

    move-result-object v5

    .line 11373
    .local v5, "path":Ljava/lang/String;
    array-length v4, v8

    .line 11374
    .local v4, "i":I
    :cond_4
    :goto_5
    if-lez v4, :cond_d

    if-eqz v10, :cond_5

    if-nez v11, :cond_d

    .line 11375
    :cond_5
    add-int/lit8 v4, v4, -0x1

    .line 11376
    aget-object v6, v8, v4

    .line 11377
    .local v6, "pp":Landroid/content/pm/PathPermission;
    invoke-virtual {v6, v5}, Landroid/content/pm/PathPermission;->match(Ljava/lang/String;)Z

    move-result v12

    if-eqz v12, :cond_4

    .line 11378
    if-nez v10, :cond_6

    .line 11379
    invoke-virtual {v6}, Landroid/content/pm/PathPermission;->getReadPermission()Ljava/lang/String;

    move-result-object v7

    .line 11384
    .local v7, "pprperm":Ljava/lang/String;
    if-eqz v7, :cond_6

    .line 11385
    if-eqz p6, :cond_b

    move/from16 v0, p4

    invoke-interface {p1, v7, v0}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v12

    if-nez v12, :cond_b

    .line 11387
    const/4 v10, 0x1

    .line 11393
    .end local v7    # "pprperm":Ljava/lang/String;
    :cond_6
    :goto_6
    if-nez v11, :cond_4

    .line 11394
    invoke-virtual {v6}, Landroid/content/pm/PathPermission;->getWritePermission()Ljava/lang/String;

    move-result-object v9

    .line 11399
    .local v9, "ppwperm":Ljava/lang/String;
    if-eqz v9, :cond_4

    .line 11400
    if-eqz p6, :cond_c

    move/from16 v0, p4

    invoke-interface {p1, v9, v0}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v12

    if-nez v12, :cond_c

    .line 11402
    const/4 v11, 0x1

    goto :goto_5

    .line 11351
    .end local v1    # "allowDefaultRead":Z
    .end local v2    # "allowDefaultWrite":Z
    .end local v4    # "i":I
    .end local v5    # "path":Ljava/lang/String;
    .end local v6    # "pp":Landroid/content/pm/PathPermission;
    .end local v8    # "pps":[Landroid/content/pm/PathPermission;
    .end local v9    # "ppwperm":Ljava/lang/String;
    .end local v10    # "readMet":Z
    .end local v11    # "writeMet":Z
    :cond_7
    const/4 v10, 0x0

    goto :goto_1

    .line 11352
    .restart local v10    # "readMet":Z
    :cond_8
    const/4 v11, 0x0

    goto :goto_2

    .line 11366
    .restart local v11    # "writeMet":Z
    :cond_9
    const/4 v1, 0x0

    goto :goto_3

    .line 11367
    .restart local v1    # "allowDefaultRead":Z
    :cond_a
    const/4 v2, 0x0

    goto :goto_4

    .line 11389
    .restart local v2    # "allowDefaultWrite":Z
    .restart local v4    # "i":I
    .restart local v5    # "path":Ljava/lang/String;
    .restart local v6    # "pp":Landroid/content/pm/PathPermission;
    .restart local v7    # "pprperm":Ljava/lang/String;
    .restart local v8    # "pps":[Landroid/content/pm/PathPermission;
    :cond_b
    const/4 v1, 0x0

    goto :goto_6

    .line 11404
    .end local v7    # "pprperm":Ljava/lang/String;
    .restart local v9    # "ppwperm":Ljava/lang/String;
    :cond_c
    const/4 v2, 0x0

    goto :goto_5

    .line 11414
    .end local v4    # "i":I
    .end local v5    # "path":Ljava/lang/String;
    .end local v6    # "pp":Landroid/content/pm/PathPermission;
    .end local v9    # "ppwperm":Ljava/lang/String;
    :cond_d
    if-eqz v1, :cond_e

    const/4 v10, 0x1

    .line 11415
    :cond_e
    if-eqz v2, :cond_f

    const/4 v11, 0x1

    .line 11421
    :cond_f
    if-eqz v10, :cond_10

    if-eqz v11, :cond_10

    const/4 v12, 0x1

    goto/16 :goto_0

    .line 11417
    .end local v1    # "allowDefaultRead":Z
    .end local v2    # "allowDefaultWrite":Z
    .end local v8    # "pps":[Landroid/content/pm/PathPermission;
    :catch_0
    move-exception v3

    .line 11418
    .local v3, "e":Landroid/os/RemoteException;
    const/4 v12, 0x0

    goto/16 :goto_0

    .line 11421
    .end local v3    # "e":Landroid/os/RemoteException;
    .restart local v1    # "allowDefaultRead":Z
    .restart local v2    # "allowDefaultWrite":Z
    .restart local v8    # "pps":[Landroid/content/pm/PathPermission;
    :cond_10
    const/4 v12, 0x0

    goto/16 :goto_0
.end method

.method private final checkHoldingPermissionsLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z
    .locals 8
    .param p1, "pm"    # Landroid/content/pm/IPackageManager;
    .param p2, "pi"    # Landroid/content/pm/ProviderInfo;
    .param p3, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;
    .param p4, "uid"    # I
    .param p5, "modeFlags"    # I

    .prologue
    const/4 v6, 0x1

    .line 11326
    const/4 v7, 0x1

    .line 11330
    .local v7, "checkCrossUser":Z
    invoke-static {p4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    invoke-static {v0}, Landroid/os/PersonaManager;->isBBCContainer(I)Z

    move-result v0

    if-eqz v0, :cond_0

    iget v0, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    if-nez v0, :cond_0

    .line 11331
    const/4 v7, 0x0

    .line 11334
    :cond_0
    invoke-static {p4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    iget v1, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    if-eq v0, v1, :cond_1

    if-eqz v7, :cond_1

    .line 11335
    const-string v0, "android.permission.INTERACT_ACROSS_USERS"

    const/4 v1, -0x1

    invoke-static {v0, p4, v1, v6}, Landroid/app/ActivityManager;->checkComponentPermission(Ljava/lang/String;IIZ)I

    move-result v0

    if-eqz v0, :cond_1

    .line 11337
    const/4 v0, 0x0

    .line 11340
    :goto_0
    return v0

    :cond_1
    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move v4, p4

    move v5, p5

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsInternalLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;IIZ)Z

    move-result v0

    goto :goto_0
.end method

.method private checkTime(JLjava/lang/String;)V
    .locals 7
    .param p1, "startTime"    # J
    .param p3, "where"    # Ljava/lang/String;

    .prologue
    .line 14253
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v0

    .line 14254
    .local v0, "now":J
    sub-long v2, v0, p1

    const-wide/16 v4, 0x3e8

    cmp-long v2, v2, v4

    if-lez v2, :cond_0

    .line 14256
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Slow operation: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    sub-long v4, v0, p1

    invoke-virtual {v3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string/jumbo v4, "ms so far, now at "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14258
    :cond_0
    return-void
.end method

.method private final checkUriPermissionLocked(Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z
    .locals 11
    .param p1, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;
    .param p2, "uid"    # I
    .param p3, "modeFlags"    # I

    .prologue
    const/4 v8, 0x0

    const/4 v7, 0x1

    .line 11466
    and-int/lit8 v9, p3, 0x40

    if-eqz v9, :cond_1

    move v6, v7

    .line 11467
    .local v6, "persistable":Z
    :goto_0
    if-eqz v6, :cond_2

    const/4 v3, 0x3

    .line 11471
    .local v3, "minStrength":I
    :goto_1
    if-nez p2, :cond_3

    .line 11494
    :cond_0
    :goto_2
    return v7

    .end local v3    # "minStrength":I
    .end local v6    # "persistable":Z
    :cond_1
    move v6, v8

    .line 11466
    goto :goto_0

    .restart local v6    # "persistable":Z
    :cond_2
    move v3, v7

    .line 11467
    goto :goto_1

    .line 11475
    .restart local v3    # "minStrength":I
    :cond_3
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v9, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/util/ArrayMap;

    .line 11476
    .local v5, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-nez v5, :cond_4

    move v7, v8

    goto :goto_2

    .line 11479
    :cond_4
    invoke-virtual {v5, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/UriPermission;

    .line 11480
    .local v1, "exactPerm":Lcom/android/server/am/UriPermission;
    if-eqz v1, :cond_5

    invoke-virtual {v1, p3}, Lcom/android/server/am/UriPermission;->getStrength(I)I

    move-result v9

    if-ge v9, v3, :cond_0

    .line 11485
    :cond_5
    invoke-virtual {v5}, Landroid/util/ArrayMap;->size()I

    move-result v0

    .line 11486
    .local v0, "N":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_3
    if-ge v2, v0, :cond_7

    .line 11487
    invoke-virtual {v5, v2}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/UriPermission;

    .line 11488
    .local v4, "perm":Lcom/android/server/am/UriPermission;
    iget-object v9, v4, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-boolean v9, v9, Lcom/android/server/am/ActivityManagerService$GrantUri;->prefix:Z

    if-eqz v9, :cond_6

    iget-object v9, p1, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    iget-object v10, v4, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-object v10, v10, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v9, v10}, Landroid/net/Uri;->isPathPrefixMatch(Landroid/net/Uri;)Z

    move-result v9

    if-eqz v9, :cond_6

    invoke-virtual {v4, p3}, Lcom/android/server/am/UriPermission;->getStrength(I)I

    move-result v9

    if-ge v9, v3, :cond_0

    .line 11486
    :cond_6
    add-int/lit8 v2, v2, 0x1

    goto :goto_3

    .end local v4    # "perm":Lcom/android/server/am/UriPermission;
    :cond_7
    move v7, v8

    .line 11494
    goto :goto_2
.end method

.method private checkUser(Ljava/lang/String;Ljava/lang/String;)Z
    .locals 8
    .param p1, "useridlist"    # Ljava/lang/String;
    .param p2, "currentuser"    # Ljava/lang/String;

    .prologue
    .line 5584
    if-eqz p1, :cond_2

    .line 5585
    const-string v5, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "checkUser: useridlist="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, ", currentuser="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 5586
    const-string v5, ","

    invoke-virtual {p1, v5}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v0

    .line 5587
    .local v0, "allowedusers":[Ljava/lang/String;
    move-object v1, v0

    .local v1, "arr$":[Ljava/lang/String;
    array-length v4, v1

    .local v4, "len$":I
    const/4 v2, 0x0

    .local v2, "i$":I
    :goto_0
    if-ge v2, v4, :cond_1

    aget-object v3, v1, v2

    .line 5588
    .local v3, "item":Ljava/lang/String;
    invoke-virtual {p2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_0

    .line 5589
    const-string v5, "ActivityManager"

    const-string v6, "checkUser: Returning True"

    invoke-static {v5, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 5590
    const/4 v5, 0x1

    .line 5595
    .end local v0    # "allowedusers":[Ljava/lang/String;
    .end local v1    # "arr$":[Ljava/lang/String;
    .end local v2    # "i$":I
    .end local v3    # "item":Ljava/lang/String;
    .end local v4    # "len$":I
    :goto_1
    return v5

    .line 5587
    .restart local v0    # "allowedusers":[Ljava/lang/String;
    .restart local v1    # "arr$":[Ljava/lang/String;
    .restart local v2    # "i$":I
    .restart local v3    # "item":Ljava/lang/String;
    .restart local v4    # "len$":I
    :cond_0
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 5593
    .end local v3    # "item":Ljava/lang/String;
    :cond_1
    const-string v5, "ActivityManager"

    const-string v6, "checkUser: Returning False"

    invoke-static {v5, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 5595
    .end local v0    # "allowedusers":[Ljava/lang/String;
    .end local v1    # "arr$":[Ljava/lang/String;
    .end local v2    # "i$":I
    .end local v4    # "len$":I
    :cond_2
    const/4 v5, 0x0

    goto :goto_1
.end method

.method private final cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;ZZI)Z
    .locals 22
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "restarting"    # Z
    .param p3, "allowRestart"    # Z
    .param p4, "index"    # I

    .prologue
    .line 21424
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v17

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v18, v0

    invoke-virtual/range {v17 .. v18}, Lcom/android/server/pm/UserManagerService;->exists(I)Z

    move-result v16

    .line 21425
    .local v16, "userExists":Z
    if-nez v16, :cond_0

    .line 21426
    const/16 p3, 0x0

    .line 21429
    :cond_0
    if-ltz p4, :cond_1

    .line 21430
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 21431
    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v17, v0

    invoke-static/range {v17 .. v17}, Lcom/android/server/am/ProcessList;->remove(I)V

    .line 21434
    :cond_1
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 21435
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 21438
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->crashDialog:Landroid/app/Dialog;

    move-object/from16 v17, v0

    if-eqz v17, :cond_2

    move-object/from16 v0, p1

    iget-boolean v0, v0, Lcom/android/server/am/ProcessRecord;->forceCrashReport:Z

    move/from16 v17, v0

    if-nez v17, :cond_2

    .line 21439
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->crashDialog:Landroid/app/Dialog;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Landroid/app/Dialog;->dismiss()V

    .line 21440
    const/16 v17, 0x0

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    iput-object v0, v1, Lcom/android/server/am/ProcessRecord;->crashDialog:Landroid/app/Dialog;

    .line 21442
    :cond_2
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;

    move-object/from16 v17, v0

    if-eqz v17, :cond_3

    .line 21443
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Landroid/app/Dialog;->dismiss()V

    .line 21444
    const/16 v17, 0x0

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    iput-object v0, v1, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;

    .line 21446
    :cond_3
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;

    move-object/from16 v17, v0

    if-eqz v17, :cond_4

    .line 21447
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Landroid/app/Dialog;->dismiss()V

    .line 21448
    const/16 v17, 0x0

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    iput-object v0, v1, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;

    .line 21451
    :cond_4
    const/16 v17, 0x0

    move/from16 v0, v17

    move-object/from16 v1, p1

    iput-boolean v0, v1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    .line 21452
    const/16 v17, 0x0

    move/from16 v0, v17

    move-object/from16 v1, p1

    iput-boolean v0, v1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    .line 21454
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    move-object/from16 v17, v0

    move-object/from16 v0, p1

    move-object/from16 v1, v17

    invoke-virtual {v0, v1}, Lcom/android/server/am/ProcessRecord;->resetPackageList(Lcom/android/server/am/ProcessStatsService;)V

    .line 21455
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->unlinkDeathRecipient()V

    .line 21456
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    move-object/from16 v17, v0

    move-object/from16 v0, p1

    move-object/from16 v1, v17

    invoke-virtual {v0, v1}, Lcom/android/server/am/ProcessRecord;->makeInactive(Lcom/android/server/am/ProcessStatsService;)V

    .line 21457
    const/16 v17, 0x0

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    iput-object v0, v1, Lcom/android/server/am/ProcessRecord;->waitingToKill:Ljava/lang/String;

    .line 21458
    const/16 v17, 0x0

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    iput-object v0, v1, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;

    .line 21459
    const/16 v17, 0x0

    const/16 v18, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, v17

    move/from16 v3, v18

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 21460
    const/16 v17, 0x0

    move/from16 v0, v17

    move-object/from16 v1, p1

    iput-boolean v0, v1, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    .line 21461
    const/16 v17, 0x0

    move/from16 v0, v17

    move-object/from16 v1, p1

    iput-boolean v0, v1, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    .line 21462
    const/16 v17, 0x0

    move/from16 v0, v17

    move-object/from16 v1, p1

    iput-boolean v0, v1, Lcom/android/server/am/ProcessRecord;->treatLikeActivity:Z

    .line 21463
    const/16 v17, 0x0

    move/from16 v0, v17

    move-object/from16 v1, p1

    iput-boolean v0, v1, Lcom/android/server/am/ProcessRecord;->hasAboveClient:Z

    .line 21464
    const/16 v17, 0x0

    move/from16 v0, v17

    move-object/from16 v1, p1

    iput-boolean v0, v1, Lcom/android/server/am/ProcessRecord;->hasClientActivities:Z

    .line 21466
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    move/from16 v2, p3

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ActiveServices;->killServicesLocked(Lcom/android/server/am/ProcessRecord;Z)V

    .line 21468
    const/4 v15, 0x0

    .line 21471
    .local v15, "restart":Z
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Landroid/util/ArrayMap;->size()I

    move-result v17

    add-int/lit8 v10, v17, -0x1

    .local v10, "i":I
    :goto_0
    if-ltz v10, :cond_9

    .line 21472
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v10}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/am/ContentProviderRecord;

    .line 21473
    .local v8, "cpr":Lcom/android/server/am/ContentProviderRecord;
    move-object/from16 v0, p1

    iget-boolean v0, v0, Lcom/android/server/am/ProcessRecord;->bad:Z

    move/from16 v17, v0

    if-nez v17, :cond_5

    if-nez p3, :cond_8

    :cond_5
    const/4 v5, 0x1

    .line 21474
    .local v5, "always":Z
    :goto_1
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v1, v8, v5}, Lcom/android/server/am/ActivityManagerService;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z

    move-result v11

    .line 21475
    .local v11, "inLaunching":Z
    if-nez v11, :cond_6

    if-eqz v5, :cond_7

    :cond_6
    invoke-virtual {v8}, Lcom/android/server/am/ContentProviderRecord;->hasConnectionOrHandle()Z

    move-result v17

    if-eqz v17, :cond_7

    if-eqz v16, :cond_7

    .line 21478
    const/4 v15, 0x1

    .line 21481
    :cond_7
    const/16 v17, 0x0

    move-object/from16 v0, v17

    iput-object v0, v8, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    .line 21482
    const/16 v17, 0x0

    move-object/from16 v0, v17

    iput-object v0, v8, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    .line 21471
    add-int/lit8 v10, v10, -0x1

    goto :goto_0

    .line 21473
    .end local v5    # "always":Z
    .end local v11    # "inLaunching":Z
    :cond_8
    const/4 v5, 0x0

    goto :goto_1

    .line 21484
    .end local v8    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_9
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Landroid/util/ArrayMap;->clear()V

    .line 21487
    const/16 v17, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, v17

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->cleanupAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z

    move-result v17

    if-eqz v17, :cond_a

    if-eqz v16, :cond_a

    .line 21488
    const/4 v15, 0x1

    .line 21492
    :cond_a
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v17

    if-nez v17, :cond_c

    .line 21493
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Ljava/util/ArrayList;->size()I

    move-result v17

    add-int/lit8 v10, v17, -0x1

    :goto_2
    if-ltz v10, :cond_b

    .line 21494
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/am/ContentProviderConnection;

    .line 21495
    .local v7, "conn":Lcom/android/server/am/ContentProviderConnection;
    iget-object v0, v7, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v7}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 21496
    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move/from16 v17, v0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v18, v0

    iget-object v0, v7, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    iget v0, v0, Lcom/android/server/am/ContentProviderRecord;->uid:I

    move/from16 v19, v0

    iget-object v0, v7, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget-object v0, v0, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    move-object/from16 v20, v0

    move-object/from16 v0, p0

    move/from16 v1, v17

    move-object/from16 v2, v18

    move/from16 v3, v19

    move-object/from16 v4, v20

    invoke-virtual {v0, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->stopAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;)V

    .line 21493
    add-int/lit8 v10, v10, -0x1

    goto :goto_2

    .line 21499
    .end local v7    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :cond_b
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Ljava/util/ArrayList;->clear()V

    .line 21510
    :cond_c
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Ljava/util/ArrayList;->size()I

    move-result v17

    add-int/lit8 v10, v17, -0x1

    :goto_3
    if-ltz v10, :cond_e

    .line 21511
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/am/ContentProviderRecord;

    .line 21512
    .restart local v8    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    if-nez v15, :cond_d

    if-eqz v8, :cond_d

    iget-object v0, v8, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Ljava/util/ArrayList;->size()I

    move-result v17

    if-gtz v17, :cond_d

    invoke-virtual {v8}, Lcom/android/server/am/ContentProviderRecord;->hasExternalProcessHandles()Z

    move-result v17

    if-nez v17, :cond_d

    iget-object v0, v8, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    if-ne v0, v1, :cond_d

    .line 21514
    monitor-enter v8

    .line 21515
    const/16 v17, 0x0

    :try_start_0
    move-object/from16 v0, v17

    iput-object v0, v8, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    .line 21516
    invoke-virtual {v8}, Ljava/lang/Object;->notifyAll()V

    .line 21517
    monitor-exit v8
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 21518
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    move-object/from16 v17, v0

    iget-object v0, v8, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    move-object/from16 v18, v0

    iget v0, v8, Lcom/android/server/am/ContentProviderRecord;->uid:I

    move/from16 v19, v0

    invoke-static/range {v19 .. v19}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v19

    invoke-virtual/range {v17 .. v19}, Lcom/android/server/am/ProviderMap;->removeProviderByClass(Landroid/content/ComponentName;I)V

    .line 21519
    iget-object v0, v8, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    move-object/from16 v17, v0

    const-string v18, ";"

    invoke-virtual/range {v17 .. v18}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v14

    .line 21520
    .local v14, "names":[Ljava/lang/String;
    const/4 v13, 0x0

    .local v13, "j":I
    :goto_4
    array-length v0, v14

    move/from16 v17, v0

    move/from16 v0, v17

    if-ge v13, v0, :cond_d

    .line 21521
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    move-object/from16 v17, v0

    aget-object v18, v14, v13

    iget v0, v8, Lcom/android/server/am/ContentProviderRecord;->uid:I

    move/from16 v19, v0

    invoke-static/range {v19 .. v19}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v19

    invoke-virtual/range {v17 .. v19}, Lcom/android/server/am/ProviderMap;->removeProviderByName(Ljava/lang/String;I)V

    .line 21520
    add-int/lit8 v13, v13, 0x1

    goto :goto_4

    .line 21517
    .end local v13    # "j":I
    .end local v14    # "names":[Ljava/lang/String;
    :catchall_0
    move-exception v17

    :try_start_1
    monitor-exit v8
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v17

    .line 21510
    :cond_d
    add-int/lit8 v10, v10, -0x1

    goto/16 :goto_3

    .line 21527
    .end local v8    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_e
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->skipCurrentReceiverLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 21530
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->receivers:Landroid/util/ArraySet;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Landroid/util/ArraySet;->size()I

    move-result v17

    add-int/lit8 v10, v17, -0x1

    :goto_5
    if-ltz v10, :cond_f

    .line 21531
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->receivers:Landroid/util/ArraySet;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v10}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v17

    check-cast v17, Lcom/android/server/am/ReceiverList;

    move-object/from16 v0, p0

    move-object/from16 v1, v17

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->removeReceiverLocked(Lcom/android/server/am/ReceiverList;)V

    .line 21530
    add-int/lit8 v10, v10, -0x1

    goto :goto_5

    .line 21533
    :cond_f
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->receivers:Landroid/util/ArraySet;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Landroid/util/ArraySet;->clear()V

    .line 21536
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    move-object/from16 v17, v0

    if-eqz v17, :cond_10

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v17, v0

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v18, v0

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_10

    .line 21540
    :try_start_2
    const-string v17, "backup"

    invoke-static/range {v17 .. v17}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v17

    invoke-static/range {v17 .. v17}, Landroid/app/backup/IBackupManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/app/backup/IBackupManager;

    move-result-object v6

    .line 21542
    .local v6, "bm":Landroid/app/backup/IBackupManager;
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-interface {v6, v0}, Landroid/app/backup/IBackupManager;->agentDisconnected(Ljava/lang/String;)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 21548
    .end local v6    # "bm":Landroid/app/backup/IBackupManager;
    :cond_10
    :goto_6
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Ljava/util/ArrayList;->size()I

    move-result v17

    add-int/lit8 v10, v17, -0x1

    :goto_7
    if-ltz v10, :cond_12

    .line 21549
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 21550
    .local v12, "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    iget v0, v12, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    move/from16 v17, v0

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v18, v0

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_11

    .line 21551
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v10}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 21552
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mAvailProcessChanges:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v12}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 21548
    :cond_11
    add-int/lit8 v10, v10, -0x1

    goto :goto_7

    .line 21555
    .end local v12    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :cond_12
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    move-object/from16 v17, v0

    const/16 v18, 0x20

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v19, v0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v20, v0

    const/16 v21, 0x0

    invoke-virtual/range {v17 .. v21}, Lcom/android/server/am/ActivityManagerService$UiHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Landroid/os/Message;->sendToTarget()V

    .line 21558
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mRecentsProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v17, v0

    move-object/from16 v0, p1

    move-object/from16 v1, v17

    if-ne v0, v1, :cond_13

    .line 21559
    const/16 v17, 0x0

    move-object/from16 v0, v17

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mRecentsProcess:Lcom/android/server/am/ProcessRecord;

    .line 21565
    :cond_13
    if-eqz p2, :cond_14

    .line 21566
    const/16 v17, 0x0

    .line 21645
    :goto_8
    return v17

    .line 21569
    :cond_14
    const/4 v9, 0x0

    .line 21570
    .local v9, "forceCleanUp":Z
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v17

    const-string v18, "CscFeature_IMS_EnableIMS"

    invoke-virtual/range {v17 .. v18}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v17

    const/16 v18, 0x1

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_15

    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v17

    const-string v18, "CscFeature_IMS_EnableDynamicLoading"

    invoke-virtual/range {v17 .. v18}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v17

    const/16 v18, 0x1

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_15

    .line 21572
    const-string v17, "com.sec.imsservice"

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v18, v0

    invoke-virtual/range {v17 .. v18}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v17

    if-eqz v17, :cond_15

    .line 21573
    const-string v17, "ActivityManager"

    const-string v18, "IMS Service clean up Check"

    invoke-static/range {v17 .. v18}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 21574
    const-string/jumbo v17, "true"

    const-string/jumbo v18, "persist.radio.ims_block"

    const-string/jumbo v19, "false"

    invoke-static/range {v18 .. v19}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v18

    invoke-virtual/range {v17 .. v18}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v17

    if-eqz v17, :cond_15

    .line 21575
    const-string v17, "ActivityManager"

    const-string v18, "IMS Service Block"

    invoke-static/range {v17 .. v18}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 21576
    const/4 v9, 0x1

    .line 21582
    :cond_15
    if-nez v9, :cond_16

    .line 21583
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v17, v0

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v18, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v17

    move/from16 v2, v18

    invoke-direct {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->needToBlockImsRequest(Ljava/lang/String;I)Z

    move-result v17

    if-eqz v17, :cond_16

    .line 21584
    const-string v17, "ActivityManager"

    new-instance v18, Ljava/lang/StringBuilder;

    invoke-direct/range {v18 .. v18}, Ljava/lang/StringBuilder;-><init>()V

    const-string v19, "[IMS-AM] cleanUpApplicationRecordLocked() Clean up ["

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v19, v0

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    const-string v19, "] of non-active user ["

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v19, v0

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v18

    const-string v19, "]"

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    invoke-virtual/range {v18 .. v18}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v18

    invoke-static/range {v17 .. v18}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 21586
    const/4 v9, 0x1

    .line 21588
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v17, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v17

    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService;->startImsService(Ljava/lang/String;)V

    .line 21593
    :cond_16
    move-object/from16 v0, p1

    iget-boolean v0, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    move/from16 v17, v0

    if-eqz v17, :cond_17

    move-object/from16 v0, p1

    iget-boolean v0, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    move/from16 v17, v0

    if-nez v17, :cond_17

    if-eqz v9, :cond_1c

    .line 21596
    :cond_17
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v17, v0

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move/from16 v18, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v17

    move/from16 v2, v18

    invoke-direct {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->removeProcessNameLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    .line 21597
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    if-ne v0, v1, :cond_18

    .line 21598
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v17, v0

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v18, v0

    const/16 v19, 0x19

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v20, v0

    const/16 v21, 0x0

    invoke-virtual/range {v18 .. v21}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v18

    invoke-virtual/range {v17 .. v18}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 21600
    const/16 v17, 0x0

    move-object/from16 v0, v17

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    .line 21613
    :cond_18
    :goto_9
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 21615
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v17, v0

    move-object/from16 v0, p1

    move-object/from16 v1, v17

    if-ne v0, v1, :cond_19

    .line 21616
    const/16 v17, 0x0

    move-object/from16 v0, v17

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    .line 21619
    :cond_19
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v17, v0

    move-object/from16 v0, p1

    move-object/from16 v1, v17

    if-ne v0, v1, :cond_1a

    .line 21620
    const/16 v17, 0x0

    move-object/from16 v0, v17

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    .line 21623
    :cond_1a
    if-eqz v15, :cond_1d

    move-object/from16 v0, p1

    iget-boolean v0, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    move/from16 v17, v0

    if-nez v17, :cond_1d

    if-eqz v16, :cond_1d

    .line 21626
    if-gez p4, :cond_1b

    .line 21627
    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v17, v0

    invoke-static/range {v17 .. v17}, Lcom/android/server/am/ProcessList;->remove(I)V

    .line 21629
    :cond_1b
    invoke-direct/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->addProcessNameLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 21630
    const-string/jumbo v17, "restart"

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v18, v0

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, v17

    move-object/from16 v3, v18

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V

    .line 21631
    const/16 v17, 0x1

    goto/16 :goto_8

    .line 21602
    :cond_1c
    move-object/from16 v0, p1

    iget-boolean v0, v0, Lcom/android/server/am/ProcessRecord;->removed:Z

    move/from16 v17, v0

    if-nez v17, :cond_18

    .line 21606
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I

    move-result v17

    if-gez v17, :cond_18

    if-eqz v16, :cond_18

    .line 21607
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 21608
    const/4 v15, 0x1

    goto/16 :goto_9

    .line 21632
    :cond_1d
    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v17, v0

    if-lez v17, :cond_1f

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v17, v0

    sget v18, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    move/from16 v0, v17

    move/from16 v1, v18

    if-eq v0, v1, :cond_1f

    .line 21635
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move-object/from16 v18, v0

    monitor-enter v18

    .line 21636
    :try_start_3
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move-object/from16 v17, v0

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v19, v0

    move-object/from16 v0, v17

    move/from16 v1, v19

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->remove(I)V

    .line 21637
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v17, v0

    const/16 v19, 0x14

    move-object/from16 v0, v17

    move/from16 v1, v19

    move-object/from16 v2, p1

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V

    .line 21638
    monitor-exit v18
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 21639
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v17, v0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v18, v0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v19, v0

    invoke-virtual/range {v17 .. v19}, Lcom/android/server/am/BatteryStatsService;->noteProcessFinish(Ljava/lang/String;I)V

    .line 21640
    move-object/from16 v0, p1

    iget-boolean v0, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    move/from16 v17, v0

    if-eqz v17, :cond_1e

    .line 21641
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v17, v0

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move/from16 v18, v0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v19, v0

    invoke-virtual/range {v17 .. v19}, Lcom/android/server/am/BatteryStatsService;->removeIsolatedUid(II)V

    .line 21643
    :cond_1e
    const/16 v17, 0x0

    move-object/from16 v0, p1

    move/from16 v1, v17

    invoke-virtual {v0, v1}, Lcom/android/server/am/ProcessRecord;->setPid(I)V

    .line 21645
    :cond_1f
    const/16 v17, 0x0

    goto/16 :goto_8

    .line 21638
    :catchall_1
    move-exception v17

    :try_start_4
    monitor-exit v18
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v17

    .line 21543
    .end local v9    # "forceCleanUp":Z
    :catch_0
    move-exception v17

    goto/16 :goto_6
.end method

.method private cleanUpRemovedTaskLocked(Lcom/android/server/am/TaskRecord;ZI)V
    .locals 21
    .param p1, "tr"    # Lcom/android/server/am/TaskRecord;
    .param p2, "killProcess"    # Z
    .param p3, "flags"    # I

    .prologue
    .line 12945
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mMultiWindowPolicy:Lcom/android/server/am/MultiWindowPolicy;

    move-object/from16 v17, v0

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/TaskRecord;->taskId:I

    move/from16 v18, v0

    invoke-virtual/range {v17 .. v18}, Lcom/android/server/am/MultiWindowPolicy;->notifyTaskRemoved(I)V

    .line 12948
    and-int/lit8 v17, p3, 0x10

    if-nez v17, :cond_0

    .line 12951
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Lcom/android/server/am/RecentTasks;->remove(Ljava/lang/Object;)Z

    .line 12952
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/TaskRecord;->removedFromRecents()V

    .line 12955
    :cond_0
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/TaskRecord;->getBaseIntent()Landroid/content/Intent;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v5

    .line 12956
    .local v5, "component":Landroid/content/ComponentName;
    if-nez v5, :cond_2

    .line 12957
    const-string v17, "ActivityManager"

    new-instance v18, Ljava/lang/StringBuilder;

    invoke-direct/range {v18 .. v18}, Ljava/lang/StringBuilder;-><init>()V

    const-string v19, "No component for base intent of task: "

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    move-object/from16 v0, v18

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v18

    invoke-virtual/range {v18 .. v18}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v18

    invoke-static/range {v17 .. v18}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13071
    :cond_1
    return-void

    .line 12962
    :cond_2
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object/from16 v17, v0

    new-instance v18, Landroid/content/Intent;

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/TaskRecord;->getBaseIntent()Landroid/content/Intent;

    move-result-object v19

    invoke-direct/range {v18 .. v19}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    move-object/from16 v2, v18

    invoke-virtual {v0, v1, v5, v2}, Lcom/android/server/am/ActiveServices;->cleanUpRemovedTaskLocked(Lcom/android/server/am/TaskRecord;Landroid/content/ComponentName;Landroid/content/Intent;)V

    .line 12968
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mMultiWindowPolicy:Lcom/android/server/am/MultiWindowPolicy;

    move-object/from16 v17, v0

    const/16 v18, 0x0

    move-object/from16 v0, v17

    move-object/from16 v1, v18

    move-object/from16 v2, p1

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/MultiWindowPolicy;->getRunningTaskCnt(Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/TaskRecord;)I

    move-result v17

    if-lez v17, :cond_3

    .line 12969
    const/16 p2, 0x0

    .line 12974
    :cond_3
    if-eqz p2, :cond_1

    .line 12979
    invoke-virtual {v5}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v11

    .line 12980
    .local v11, "pkg":Ljava/lang/String;
    new-instance v15, Ljava/util/ArrayList;

    invoke-direct {v15}, Ljava/util/ArrayList;-><init>()V

    .line 12981
    .local v15, "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v12

    .line 12982
    .local v12, "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;>;"
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_0
    invoke-virtual {v12}, Landroid/util/ArrayMap;->size()I

    move-result v17

    move/from16 v0, v17

    if-ge v7, v0, :cond_a

    .line 12983
    invoke-virtual {v12, v7}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Landroid/util/SparseArray;

    .line 12984
    .local v16, "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    const/4 v8, 0x0

    .local v8, "j":I
    :goto_1
    invoke-virtual/range {v16 .. v16}, Landroid/util/SparseArray;->size()I

    move-result v17

    move/from16 v0, v17

    if-ge v8, v0, :cond_9

    .line 12985
    move-object/from16 v0, v16

    invoke-virtual {v0, v8}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/android/server/am/ProcessRecord;

    .line 12986
    .local v14, "proc":Lcom/android/server/am/ProcessRecord;
    iget v0, v14, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v17, v0

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/TaskRecord;->userId:I

    move/from16 v18, v0

    move/from16 v0, v17

    move/from16 v1, v18

    if-eq v0, v1, :cond_5

    .line 12984
    :cond_4
    :goto_2
    add-int/lit8 v8, v8, 0x1

    goto :goto_1

    .line 12990
    :cond_5
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    if-eq v14, v0, :cond_4

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mRecentsProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    if-eq v14, v0, :cond_4

    .line 12994
    iget-object v0, v14, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v11}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v17

    if-eqz v17, :cond_4

    .line 12999
    const/4 v9, 0x0

    .local v9, "k":I
    :goto_3
    iget-object v0, v14, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Ljava/util/ArrayList;->size()I

    move-result v17

    move/from16 v0, v17

    if-ge v9, v0, :cond_7

    .line 13000
    iget-object v0, v14, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v17

    check-cast v17, Lcom/android/server/am/ActivityRecord;

    move-object/from16 v0, v17

    iget-object v10, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    .line 13001
    .local v10, "otherTask":Lcom/android/server/am/TaskRecord;
    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/TaskRecord;->taskId:I

    move/from16 v17, v0

    iget v0, v10, Lcom/android/server/am/TaskRecord;->taskId:I

    move/from16 v18, v0

    move/from16 v0, v17

    move/from16 v1, v18

    if-eq v0, v1, :cond_6

    iget-boolean v0, v10, Lcom/android/server/am/TaskRecord;->inRecents:Z

    move/from16 v17, v0

    if-nez v17, :cond_1

    .line 12999
    :cond_6
    add-int/lit8 v9, v9, 0x1

    goto :goto_3

    .line 13008
    .end local v10    # "otherTask":Lcom/android/server/am/TaskRecord;
    :cond_7
    iget-boolean v0, v14, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    move/from16 v17, v0

    if-nez v17, :cond_4

    const-string v17, "com.sec.android.app.videoplayer"

    move-object/from16 v0, v17

    invoke-virtual {v11, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v17

    if-eqz v17, :cond_8

    iget-object v0, v14, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v17, v0

    const-string v18, "com.sec.android.app.videoplayer"

    invoke-virtual/range {v17 .. v18}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v17

    if-eqz v17, :cond_8

    iget-object v0, v14, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;

    move-object/from16 v17, v0

    if-eqz v17, :cond_8

    iget-boolean v0, v14, Lcom/android/server/am/ProcessRecord;->execServicesFg:Z

    move/from16 v17, v0

    const/16 v18, 0x1

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_8

    iget-boolean v0, v14, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    move/from16 v17, v0

    if-eqz v17, :cond_4

    .line 13020
    :cond_8
    invoke-virtual {v15, v14}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto/16 :goto_2

    .line 12982
    .end local v9    # "k":I
    .end local v14    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_9
    add-int/lit8 v7, v7, 0x1

    goto/16 :goto_0

    .line 13025
    .end local v8    # "j":I
    .end local v16    # "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    :cond_a
    const/4 v6, 0x0

    .line 13029
    .local v6, "firstPass":Z
    const/4 v7, 0x0

    :goto_4
    invoke-virtual {v15}, Ljava/util/ArrayList;->size()I

    move-result v17

    move/from16 v0, v17

    if-ge v7, v0, :cond_1

    .line 13030
    invoke-virtual {v15, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/am/ProcessRecord;

    .line 13031
    .local v13, "pr":Lcom/android/server/am/ProcessRecord;
    iget v0, v13, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    move/from16 v17, v0

    if-nez v17, :cond_e

    iget-object v0, v13, Lcom/android/server/am/ProcessRecord;->curReceiver:Lcom/android/server/am/BroadcastRecord;

    move-object/from16 v17, v0

    if-nez v17, :cond_e

    .line 13038
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v17

    const-string v18, "CscFeature_Common_SupportDeviceReporting"

    invoke-virtual/range {v17 .. v18}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v17

    if-eqz v17, :cond_b

    if-nez v6, :cond_b

    .line 13042
    const/16 v17, 0x190

    iget-object v0, v13, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v18, v0

    iget v0, v13, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v19, v0

    const/16 v20, 0x1

    move-object/from16 v0, p0

    move/from16 v1, v17

    move-object/from16 v2, v18

    move/from16 v3, v19

    move/from16 v4, v20

    invoke-direct {v0, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->sendAppStateMsg(ILjava/lang/String;II)V

    .line 13044
    const/4 v6, 0x1

    .line 13048
    :cond_b
    sget-boolean v17, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    if-eqz v17, :cond_d

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    move-object/from16 v17, v0

    if-eqz v17, :cond_d

    .line 13049
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    move-object/from16 v17, v0

    iget-object v0, v13, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v18, v0

    invoke-virtual/range {v17 .. v18}, Lcom/android/server/am/MARsPolicyManager;->isAutoRunBlockedApp(Ljava/lang/String;)Z

    move-result v17

    if-eqz v17, :cond_c

    .line 13050
    iget-object v0, v13, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v17, v0

    invoke-static {}, Landroid/os/UserHandle;->myUserId()I

    move-result v18

    move-object/from16 v0, p0

    move-object/from16 v1, v17

    move/from16 v2, v18

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->forceStopPackage(Ljava/lang/String;I)V

    .line 13029
    :goto_5
    add-int/lit8 v7, v7, 0x1

    goto/16 :goto_4

    .line 13052
    :cond_c
    const-string/jumbo v17, "remove task"

    const/16 v18, 0x1

    move-object/from16 v0, v17

    move/from16 v1, v18

    invoke-virtual {v13, v0, v1}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    goto :goto_5

    .line 13055
    :cond_d
    const-string/jumbo v17, "remove task"

    const/16 v18, 0x1

    move-object/from16 v0, v17

    move/from16 v1, v18

    invoke-virtual {v13, v0, v1}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    goto :goto_5

    .line 13060
    :cond_e
    sget-boolean v17, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    if-eqz v17, :cond_10

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    move-object/from16 v17, v0

    if-eqz v17, :cond_10

    .line 13061
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    move-object/from16 v17, v0

    iget-object v0, v13, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v18, v0

    invoke-virtual/range {v17 .. v18}, Lcom/android/server/am/MARsPolicyManager;->isAutoRunBlockedApp(Ljava/lang/String;)Z

    move-result v17

    if-eqz v17, :cond_f

    .line 13062
    iget-object v0, v13, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v17, v0

    invoke-static {}, Landroid/os/UserHandle;->myUserId()I

    move-result v18

    move-object/from16 v0, p0

    move-object/from16 v1, v17

    move/from16 v2, v18

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->forceStopPackage(Ljava/lang/String;I)V

    goto :goto_5

    .line 13064
    :cond_f
    const-string/jumbo v17, "remove task"

    move-object/from16 v0, v17

    iput-object v0, v13, Lcom/android/server/am/ProcessRecord;->waitingToKill:Ljava/lang/String;

    goto :goto_5

    .line 13067
    :cond_10
    const-string/jumbo v17, "remove task"

    move-object/from16 v0, v17

    iput-object v0, v13, Lcom/android/server/am/ProcessRecord;->waitingToKill:Ljava/lang/String;

    goto :goto_5
.end method

.method private cleanupDisabledPackageComponentsLocked(Ljava/lang/String;IZ[Ljava/lang/String;)V
    .locals 14
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "killProcess"    # Z
    .param p4, "changedClasses"    # [Ljava/lang/String;

    .prologue
    .line 8775
    const/4 v3, 0x0

    .line 8776
    .local v3, "disabledClasses":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    const/4 v12, 0x0

    .line 8777
    .local v12, "packageDisabled":Z
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v13

    .line 8779
    .local v13, "pm":Landroid/content/pm/IPackageManager;
    if-nez p4, :cond_1

    .line 8859
    :cond_0
    :goto_0
    return-void

    .line 8785
    :cond_1
    const/4 v10, 0x0

    .line 8786
    .local v10, "enabled":I
    move-object/from16 v0, p4

    array-length v1, v0

    add-int/lit8 v11, v1, -0x1

    .local v11, "i":I
    :goto_1
    if-ltz v11, :cond_2

    .line 8787
    aget-object v8, p4, v11

    .line 8789
    .local v8, "changedClass":Ljava/lang/String;
    invoke-virtual {v8, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_7

    .line 8792
    const/4 v1, -0x1

    move/from16 v0, p2

    if-eq v0, v1, :cond_5

    move/from16 v1, p2

    :goto_2
    :try_start_0
    invoke-interface {v13, p1, v1}, Landroid/content/pm/IPackageManager;->getApplicationEnabledSetting(Ljava/lang/String;I)I
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    move-result v10

    .line 8799
    const/4 v1, 0x1

    if-eq v10, v1, :cond_6

    if-eqz v10, :cond_6

    const/4 v12, 0x1

    .line 8801
    :goto_3
    if-eqz v12, :cond_9

    .line 8804
    const/4 v3, 0x0

    .line 8826
    .end local v8    # "changedClass":Ljava/lang/String;
    :cond_2
    if-nez v12, :cond_3

    if-eqz v3, :cond_0

    .line 8832
    :cond_3
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v4, 0x1

    const/4 v5, 0x0

    move-object v2, p1

    move/from16 v6, p2

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityStackSupervisor;->finishDisabledPackageActivitiesLocked(Ljava/lang/String;Ljava/util/Set;ZZI)Z

    move-result v1

    if-eqz v1, :cond_4

    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-eqz v1, :cond_4

    .line 8834
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    .line 8835
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->scheduleIdleLocked()V

    .line 8839
    :cond_4
    move/from16 v0, p2

    invoke-direct {p0, p1, v3, v0}, Lcom/android/server/am/ActivityManagerService;->cleanupDisabledPackageTasksLocked(Ljava/lang/String;Ljava/util/Set;I)V

    .line 8842
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v5, 0x0

    const/4 v7, 0x1

    move-object v2, p1

    move/from16 v4, p2

    move/from16 v6, p3

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->bringDownDisabledPackageServicesLocked(Ljava/lang/String;Ljava/util/Set;IZZZ)Z

    .line 8846
    new-instance v7, Ljava/util/ArrayList;

    invoke-direct {v7}, Ljava/util/ArrayList;-><init>()V

    .line 8847
    .local v7, "providers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ContentProviderRecord;>;"
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    const/4 v4, 0x1

    const/4 v5, 0x0

    move-object v2, p1

    move/from16 v6, p2

    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ProviderMap;->collectPackageProvidersLocked(Ljava/lang/String;Ljava/util/Set;ZZILjava/util/ArrayList;)Z

    .line 8849
    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v1

    add-int/lit8 v11, v1, -0x1

    :goto_4
    if-ltz v11, :cond_b

    .line 8850
    const/4 v2, 0x0

    invoke-virtual {v7, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ContentProviderRecord;

    const/4 v4, 0x1

    invoke-direct {p0, v2, v1, v4}, Lcom/android/server/am/ActivityManagerService;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z

    .line 8849
    add-int/lit8 v11, v11, -0x1

    goto :goto_4

    .line 8792
    .end local v7    # "providers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ContentProviderRecord;>;"
    .restart local v8    # "changedClass":Ljava/lang/String;
    :cond_5
    const/4 v1, 0x0

    goto :goto_2

    .line 8794
    :catch_0
    move-exception v9

    .line 8797
    .local v9, "e":Ljava/lang/Exception;
    goto :goto_0

    .line 8799
    .end local v9    # "e":Ljava/lang/Exception;
    :cond_6
    const/4 v12, 0x0

    goto :goto_3

    .line 8809
    :cond_7
    :try_start_1
    new-instance v2, Landroid/content/ComponentName;

    invoke-direct {v2, p1, v8}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    const/4 v1, -0x1

    move/from16 v0, p2

    if-eq v0, v1, :cond_a

    move/from16 v1, p2

    :goto_5
    invoke-interface {v13, v2, v1}, Landroid/content/pm/IPackageManager;->getComponentEnabledSetting(Landroid/content/ComponentName;I)I
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1

    move-result v10

    .line 8816
    const/4 v1, 0x1

    if-eq v10, v1, :cond_9

    if-eqz v10, :cond_9

    .line 8818
    if-nez v3, :cond_8

    .line 8819
    new-instance v3, Landroid/util/ArraySet;

    .end local v3    # "disabledClasses":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    move-object/from16 v0, p4

    array-length v1, v0

    invoke-direct {v3, v1}, Landroid/util/ArraySet;-><init>(I)V

    .line 8821
    .restart local v3    # "disabledClasses":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    :cond_8
    invoke-interface {v3, v8}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 8786
    :cond_9
    add-int/lit8 v11, v11, -0x1

    goto/16 :goto_1

    .line 8809
    :cond_a
    const/4 v1, 0x0

    goto :goto_5

    .line 8812
    :catch_1
    move-exception v9

    .line 8814
    .restart local v9    # "e":Ljava/lang/Exception;
    goto/16 :goto_0

    .line 8854
    .end local v8    # "changedClass":Ljava/lang/String;
    .end local v9    # "e":Ljava/lang/Exception;
    .restart local v7    # "providers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ContentProviderRecord;>;"
    :cond_b
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v1, v1

    add-int/lit8 v11, v1, -0x1

    :goto_6
    if-ltz v11, :cond_0

    .line 8855
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object v1, v1, v11

    const/4 v2, 0x1

    move/from16 v0, p2

    invoke-virtual {v1, p1, v3, v0, v2}, Lcom/android/server/am/BroadcastQueue;->cleanupDisabledPackageReceiversLocked(Ljava/lang/String;Ljava/util/Set;IZ)Z

    .line 8854
    add-int/lit8 v11, v11, -0x1

    goto :goto_6
.end method

.method private cleanupDisabledPackageTasksLocked(Ljava/lang/String;Ljava/util/Set;I)V
    .locals 6
    .param p1, "packageName"    # Ljava/lang/String;
    .param p3, "userId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "Ljava/util/Set",
            "<",
            "Ljava/lang/String;",
            ">;I)V"
        }
    .end annotation

    .prologue
    .local p2, "filterByClasses":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    const/4 v4, 0x0

    .line 13096
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v5}, Lcom/android/server/am/RecentTasks;->size()I

    move-result v5

    add-int/lit8 v1, v5, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_4

    .line 13097
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v5, v1}, Lcom/android/server/am/RecentTasks;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/TaskRecord;

    .line 13098
    .local v3, "tr":Lcom/android/server/am/TaskRecord;
    const/4 v5, -0x1

    if-eq p3, v5, :cond_1

    iget v5, v3, Lcom/android/server/am/TaskRecord;->userId:I

    if-eq v5, p3, :cond_1

    .line 13096
    :cond_0
    :goto_1
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 13102
    :cond_1
    iget-object v5, v3, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v5}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    .line 13103
    .local v0, "cn":Landroid/content/ComponentName;
    if-eqz v0, :cond_3

    invoke-virtual {v0}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_3

    if-eqz p2, :cond_2

    invoke-virtual {v0}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v5

    invoke-interface {p2, v5}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_3

    :cond_2
    const/4 v2, 0x1

    .line 13105
    .local v2, "sameComponent":Z
    :goto_2
    if-eqz v2, :cond_0

    .line 13106
    iget v5, v3, Lcom/android/server/am/TaskRecord;->taskId:I

    invoke-direct {p0, v5, v4}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZ)Z

    goto :goto_1

    .end local v2    # "sameComponent":Z
    :cond_3
    move v2, v4

    .line 13103
    goto :goto_2

    .line 13109
    .end local v0    # "cn":Landroid/content/ComponentName;
    .end local v3    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_4
    return-void
.end method

.method private clearOrderedBroadcastQueues(I)V
    .locals 11
    .param p1, "userId"    # I

    .prologue
    const/4 v6, 0x0

    .line 28199
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .local v7, "arr$":[Lcom/android/server/am/BroadcastQueue;
    array-length v10, v7

    .local v10, "len$":I
    const/4 v8, 0x0

    .local v8, "i$":I
    move v9, v8

    .end local v8    # "i$":I
    .local v9, "i$":I
    :goto_0
    if-ge v9, v10, :cond_3

    aget-object v0, v7, v9

    .line 28200
    .local v0, "queue":Lcom/android/server/am/BroadcastQueue;
    iget-object v2, v0, Lcom/android/server/am/BroadcastQueue;->mOrderedBroadcasts:Ljava/util/ArrayList;

    if-eqz v2, :cond_2

    .line 28201
    iget-object v2, v0, Lcom/android/server/am/BroadcastQueue;->mOrderedBroadcasts:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v8

    .end local v9    # "i$":I
    .local v8, "i$":Ljava/util/Iterator;
    :cond_0
    :goto_1
    invoke-interface {v8}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_1

    invoke-interface {v8}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/BroadcastRecord;

    .line 28202
    .local v1, "r":Lcom/android/server/am/BroadcastRecord;
    iget v2, v1, Lcom/android/server/am/BroadcastRecord;->userId:I

    if-ne v2, p1, :cond_0

    .line 28203
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "removing broadcast "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " from ordered queue"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 28204
    invoke-virtual {v0, v1}, Lcom/android/server/am/BroadcastQueue;->logBroadcastReceiverDiscardLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 28205
    iget v2, v1, Lcom/android/server/am/BroadcastRecord;->resultCode:I

    iget-object v3, v1, Lcom/android/server/am/BroadcastRecord;->resultData:Ljava/lang/String;

    iget-object v4, v1, Lcom/android/server/am/BroadcastRecord;->resultExtras:Landroid/os/Bundle;

    const/4 v5, 0x1

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/BroadcastQueue;->finishReceiverLocked(Lcom/android/server/am/BroadcastRecord;ILjava/lang/String;Landroid/os/Bundle;ZZ)Z

    .line 28207
    iput v6, v1, Lcom/android/server/am/BroadcastRecord;->state:I

    goto :goto_1

    .line 28210
    .end local v1    # "r":Lcom/android/server/am/BroadcastRecord;
    :cond_1
    invoke-virtual {v0}, Lcom/android/server/am/BroadcastQueue;->scheduleBroadcastsLocked()V

    .line 28199
    .end local v8    # "i$":Ljava/util/Iterator;
    :cond_2
    add-int/lit8 v8, v9, 0x1

    .local v8, "i$":I
    move v9, v8

    .end local v8    # "i$":I
    .restart local v9    # "i$":I
    goto :goto_0

    .line 28213
    .end local v0    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_3
    return-void
.end method

.method private clearProfilerLocked()V
    .locals 3

    .prologue
    const/4 v2, 0x0

    const/4 v1, 0x0

    .line 27096
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    if-eqz v0, :cond_0

    .line 27098
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v0}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 27102
    :cond_0
    :goto_0
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    .line 27103
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    .line 27104
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFile:Ljava/lang/String;

    .line 27105
    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    .line 27106
    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mAutoStopProfiler:Z

    .line 27107
    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mSamplingInterval:I

    .line 27108
    return-void

    .line 27099
    :catch_0
    move-exception v0

    goto :goto_0
.end method

.method private collectReceiverComponents(Landroid/content/Intent;Ljava/lang/String;I[I)Ljava/util/List;
    .locals 16
    .param p1, "intent"    # Landroid/content/Intent;
    .param p2, "resolvedType"    # Ljava/lang/String;
    .param p3, "callingUid"    # I
    .param p4, "users"    # [I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/Intent;",
            "Ljava/lang/String;",
            "I[I)",
            "Ljava/util/List",
            "<",
            "Landroid/content/pm/ResolveInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 22650
    const/4 v8, 0x0

    .line 22652
    .local v8, "receivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    const/4 v11, 0x0

    .line 22653
    .local v11, "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    const/4 v10, 0x0

    .line 22654
    .local v10, "scannedFirstReceivers":Z
    move-object/from16 v2, p4

    .local v2, "arr$":[I
    :try_start_0
    array-length v6, v2

    .local v6, "len$":I
    const/4 v5, 0x0

    .local v5, "i$":I
    :goto_0
    if-ge v5, v6, :cond_a

    aget v13, v2, v5

    .line 22656
    .local v13, "user":I
    const/16 v14, 0x7d0

    move/from16 v0, p3

    if-ne v0, v14, :cond_1

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v14

    const-string/jumbo v15, "no_debugging_features"

    invoke-virtual {v14, v15, v13}, Lcom/android/server/pm/UserManagerService;->hasUserRestriction(Ljava/lang/String;I)Z

    move-result v14

    if-eqz v14, :cond_1

    .line 22654
    :cond_0
    :goto_1
    add-int/lit8 v5, v5, 0x1

    goto :goto_0

    .line 22661
    :cond_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v14

    const/16 v15, 0x400

    move-object/from16 v0, p1

    move-object/from16 v1, p2

    invoke-interface {v14, v0, v1, v15, v13}, Landroid/content/pm/IPackageManager;->queryIntentReceivers(Landroid/content/Intent;Ljava/lang/String;II)Ljava/util/List;

    move-result-object v7

    .line 22663
    .local v7, "newReceivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    if-eqz v13, :cond_3

    if-eqz v7, :cond_3

    .line 22666
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_2
    invoke-interface {v7}, Ljava/util/List;->size()I

    move-result v14

    if-ge v4, v14, :cond_3

    .line 22667
    invoke-interface {v7, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Landroid/content/pm/ResolveInfo;

    .line 22668
    .local v9, "ri":Landroid/content/pm/ResolveInfo;
    iget-object v14, v9, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget v14, v14, Landroid/content/pm/ActivityInfo;->flags:I

    const/high16 v15, 0x20000000

    and-int/2addr v14, v15

    if-eqz v14, :cond_2

    .line 22669
    invoke-interface {v7, v4}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 22670
    add-int/lit8 v4, v4, -0x1

    .line 22666
    :cond_2
    add-int/lit8 v4, v4, 0x1

    goto :goto_2

    .line 22674
    .end local v4    # "i":I
    .end local v9    # "ri":Landroid/content/pm/ResolveInfo;
    :cond_3
    if-eqz v7, :cond_4

    invoke-interface {v7}, Ljava/util/List;->size()I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v14

    if-nez v14, :cond_4

    .line 22675
    const/4 v7, 0x0

    .line 22677
    :cond_4
    if-nez v8, :cond_5

    .line 22678
    move-object v8, v7

    goto :goto_1

    .line 22679
    :cond_5
    if-eqz v7, :cond_0

    .line 22684
    if-nez v10, :cond_7

    .line 22686
    const/4 v10, 0x1

    .line 22687
    const/4 v4, 0x0

    .restart local v4    # "i":I
    move-object v12, v11

    .end local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .local v12, "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :goto_3
    :try_start_1
    invoke-interface {v8}, Ljava/util/List;->size()I

    move-result v14

    if-ge v4, v14, :cond_6

    .line 22688
    invoke-interface {v8, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Landroid/content/pm/ResolveInfo;

    .line 22689
    .restart local v9    # "ri":Landroid/content/pm/ResolveInfo;
    iget-object v14, v9, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget v14, v14, Landroid/content/pm/ActivityInfo;->flags:I

    const/high16 v15, 0x40000000    # 2.0f

    and-int/2addr v14, v15

    if-eqz v14, :cond_e

    .line 22690
    new-instance v3, Landroid/content/ComponentName;

    iget-object v14, v9, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v14, v14, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    iget-object v15, v9, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v15, v15, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v3, v14, v15}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 22692
    .local v3, "cn":Landroid/content/ComponentName;
    if-nez v12, :cond_d

    .line 22693
    new-instance v11, Ljava/util/HashSet;

    invoke-direct {v11}, Ljava/util/HashSet;-><init>()V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    .line 22695
    .end local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :goto_4
    :try_start_2
    invoke-virtual {v11, v3}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 22687
    .end local v3    # "cn":Landroid/content/ComponentName;
    :goto_5
    add-int/lit8 v4, v4, 0x1

    move-object v12, v11

    .end local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_3

    .end local v9    # "ri":Landroid/content/pm/ResolveInfo;
    :cond_6
    move-object v11, v12

    .line 22701
    .end local v4    # "i":I
    .end local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :cond_7
    const/4 v4, 0x0

    .restart local v4    # "i":I
    move-object v12, v11

    .end local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :goto_6
    :try_start_3
    invoke-interface {v7}, Ljava/util/List;->size()I

    move-result v14

    if-ge v4, v14, :cond_c

    .line 22702
    invoke-interface {v7, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Landroid/content/pm/ResolveInfo;

    .line 22703
    .restart local v9    # "ri":Landroid/content/pm/ResolveInfo;
    iget-object v14, v9, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget v14, v14, Landroid/content/pm/ActivityInfo;->flags:I

    const/high16 v15, 0x40000000    # 2.0f

    and-int/2addr v14, v15

    if-eqz v14, :cond_9

    .line 22704
    new-instance v3, Landroid/content/ComponentName;

    iget-object v14, v9, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v14, v14, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    iget-object v15, v9, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v15, v15, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v3, v14, v15}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 22706
    .restart local v3    # "cn":Landroid/content/ComponentName;
    if-nez v12, :cond_b

    .line 22707
    new-instance v11, Ljava/util/HashSet;

    invoke-direct {v11}, Ljava/util/HashSet;-><init>()V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_1

    .line 22709
    .end local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :goto_7
    :try_start_4
    invoke-virtual {v11, v3}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v14

    if-nez v14, :cond_8

    .line 22710
    invoke-virtual {v11, v3}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 22711
    invoke-interface {v8, v9}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0

    .line 22701
    .end local v3    # "cn":Landroid/content/ComponentName;
    :cond_8
    :goto_8
    add-int/lit8 v4, v4, 0x1

    move-object v12, v11

    .end local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_6

    .line 22714
    :cond_9
    :try_start_5
    invoke-interface {v8, v9}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_1

    move-object v11, v12

    .end local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_8

    .line 22719
    .end local v4    # "i":I
    .end local v5    # "i$":I
    .end local v6    # "len$":I
    .end local v7    # "newReceivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    .end local v9    # "ri":Landroid/content/pm/ResolveInfo;
    .end local v13    # "user":I
    :catch_0
    move-exception v14

    .line 22722
    :cond_a
    :goto_9
    return-object v8

    .line 22719
    .end local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v4    # "i":I
    .restart local v5    # "i$":I
    .restart local v6    # "len$":I
    .restart local v7    # "newReceivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    .restart local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v13    # "user":I
    :catch_1
    move-exception v14

    move-object v11, v12

    .end local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_9

    .end local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v3    # "cn":Landroid/content/ComponentName;
    .restart local v9    # "ri":Landroid/content/pm/ResolveInfo;
    .restart local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :cond_b
    move-object v11, v12

    .end local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_7

    .end local v3    # "cn":Landroid/content/ComponentName;
    .end local v9    # "ri":Landroid/content/pm/ResolveInfo;
    .end local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :cond_c
    move-object v11, v12

    .end local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto/16 :goto_1

    .end local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v3    # "cn":Landroid/content/ComponentName;
    .restart local v9    # "ri":Landroid/content/pm/ResolveInfo;
    .restart local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :cond_d
    move-object v11, v12

    .end local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_4

    .end local v3    # "cn":Landroid/content/ComponentName;
    .end local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :cond_e
    move-object v11, v12

    .end local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_5
.end method

.method private final computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)I
    .locals 33
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "cachedAdj"    # I
    .param p3, "TOP_APP"    # Lcom/android/server/am/ProcessRecord;
    .param p4, "doingAll"    # Z
    .param p5, "now"    # J

    .prologue
    .line 24750
    sget-boolean v3, Lcom/android/server/am/SmartAdjustManager;->SAMP_DEBUG_TRACE:Z

    if-eqz v3, :cond_0

    .line 24751
    const-wide/16 v6, 0x40

    const-string v3, "computeOomAdjLocked"

    const/4 v5, 0x0

    invoke-static {v6, v7, v3, v5}, Landroid/os/Trace;->asyncTraceBegin(JLjava/lang/String;I)V

    .line 24752
    :cond_0
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->adjSeq:I

    if-ne v3, v5, :cond_1

    .line 24754
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 25400
    :goto_0
    return v3

    .line 24757
    :cond_1
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v3, :cond_2

    .line 24758
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->adjSeq:I

    .line 24759
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 24760
    const/16 v3, 0x10

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 24761
    const/16 v3, 0xf

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    goto :goto_0

    .line 24764
    :cond_2
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I

    .line 24765
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 24766
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    .line 24767
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->empty:Z

    .line 24768
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 24770
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v11

    .line 24772
    .local v11, "activitiesSize":I
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    if-gtz v3, :cond_7

    .line 24775
    const-string/jumbo v3, "fixed"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24776
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->adjSeq:I

    .line 24777
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 24778
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    .line 24779
    const/4 v3, -0x1

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 24780
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 24785
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    .line 24786
    move-object/from16 v0, p1

    move-object/from16 v1, p3

    if-ne v0, v1, :cond_5

    .line 24787
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    .line 24796
    :cond_3
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    if-nez v3, :cond_4

    .line 24797
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 24799
    :cond_4
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    goto/16 :goto_0

    .line 24788
    :cond_5
    if-lez v11, :cond_3

    .line 24789
    const/16 v24, 0x0

    .local v24, "j":I
    :goto_1
    move/from16 v0, v24

    if-ge v0, v11, :cond_3

    .line 24790
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    move/from16 v0, v24

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v29

    check-cast v29, Lcom/android/server/am/ActivityRecord;

    .line 24791
    .local v29, "r":Lcom/android/server/am/ActivityRecord;
    move-object/from16 v0, v29

    iget-boolean v3, v0, Lcom/android/server/am/ActivityRecord;->visible:Z

    if-eqz v3, :cond_6

    .line 24792
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    .line 24789
    :cond_6
    add-int/lit8 v24, v24, 0x1

    goto :goto_1

    .line 24802
    .end local v24    # "j":I
    .end local v29    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_7
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    .line 24804
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mTopProcessState:I

    .line 24811
    .local v2, "PROCESS_STATE_TOP":I
    const/16 v21, 0x0

    .line 24813
    .local v21, "foregroundActivities":Z
    move-object/from16 v0, p1

    move-object/from16 v1, p3

    if-ne v0, v1, :cond_9

    .line 24815
    const/4 v12, 0x0

    .line 24816
    .local v12, "adj":I
    const/16 v31, -0x1

    .line 24817
    .local v31, "schedGroup":I
    const-string/jumbo v3, "top-activity"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24818
    const/16 v21, 0x1

    .line 24819
    move/from16 v26, v2

    .line 24858
    .local v26, "procState":I
    :goto_2
    if-nez v21, :cond_13

    if-lez v11, :cond_13

    .line 24859
    const/16 v24, 0x0

    .restart local v24    # "j":I
    :goto_3
    move/from16 v0, v24

    if-ge v0, v11, :cond_13

    .line 24860
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    move/from16 v0, v24

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v29

    check-cast v29, Lcom/android/server/am/ActivityRecord;

    .line 24861
    .restart local v29    # "r":Lcom/android/server/am/ActivityRecord;
    move-object/from16 v0, v29

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-eq v3, v0, :cond_10

    .line 24862
    const-string v3, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Wtf, activity "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, v29

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " in proc activity list not using proc "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, "?!? Using "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, v29

    iget-object v6, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " instead."

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 24859
    :cond_8
    :goto_4
    add-int/lit8 v24, v24, 0x1

    goto :goto_3

    .line 24820
    .end local v12    # "adj":I
    .end local v24    # "j":I
    .end local v26    # "procState":I
    .end local v29    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v31    # "schedGroup":I
    :cond_9
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-eqz v3, :cond_a

    .line 24822
    const/4 v12, 0x0

    .line 24823
    .restart local v12    # "adj":I
    const/16 v31, -0x1

    .line 24824
    .restart local v31    # "schedGroup":I
    const-string/jumbo v3, "instrumentation"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24825
    const/16 v26, 0x4

    .restart local v26    # "procState":I
    goto :goto_2

    .line 24826
    .end local v12    # "adj":I
    .end local v26    # "procState":I
    .end local v31    # "schedGroup":I
    :cond_a
    invoke-direct/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->isReceivingBroadcast(Lcom/android/server/am/ProcessRecord;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v28

    .local v28, "queue":Lcom/android/server/am/BroadcastQueue;
    if-eqz v28, :cond_d

    .line 24831
    const/4 v12, 0x0

    .line 24832
    .restart local v12    # "adj":I
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    move-object/from16 v0, v28

    if-eq v0, v3, :cond_b

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mSecBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    move-object/from16 v0, v28

    if-ne v0, v3, :cond_c

    :cond_b
    const/16 v31, -0x1

    .line 24834
    .restart local v31    # "schedGroup":I
    :goto_5
    const-string v3, "broadcast"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24835
    const/16 v26, 0xb

    .restart local v26    # "procState":I
    goto/16 :goto_2

    .line 24832
    .end local v26    # "procState":I
    .end local v31    # "schedGroup":I
    :cond_c
    const/16 v31, 0x0

    goto :goto_5

    .line 24836
    .end local v12    # "adj":I
    :cond_d
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->executingServices:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    if-lez v3, :cond_f

    .line 24839
    const/4 v12, 0x0

    .line 24840
    .restart local v12    # "adj":I
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->execServicesFg:Z

    if-eqz v3, :cond_e

    const/16 v31, -0x1

    .line 24842
    .restart local v31    # "schedGroup":I
    :goto_6
    const-string/jumbo v3, "exec-service"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24843
    const/16 v26, 0xa

    .restart local v26    # "procState":I
    goto/16 :goto_2

    .line 24840
    .end local v26    # "procState":I
    .end local v31    # "schedGroup":I
    :cond_e
    const/16 v31, 0x0

    goto :goto_6

    .line 24847
    .end local v12    # "adj":I
    :cond_f
    const/16 v31, 0x0

    .line 24850
    .restart local v31    # "schedGroup":I
    move/from16 v12, p2

    .line 24851
    .restart local v12    # "adj":I
    const/16 v26, 0x10

    .line 24852
    .restart local v26    # "procState":I
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 24853
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->empty:Z

    .line 24854
    const-string v3, "cch-empty"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    goto/16 :goto_2

    .line 24866
    .end local v28    # "queue":Lcom/android/server/am/BroadcastQueue;
    .restart local v24    # "j":I
    .restart local v29    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_10
    move-object/from16 v0, v29

    iget-boolean v3, v0, Lcom/android/server/am/ActivityRecord;->visible:Z

    if-eqz v3, :cond_26

    .line 24868
    const/4 v3, 0x1

    if-le v12, v3, :cond_11

    .line 24869
    const/4 v12, 0x1

    .line 24870
    const-string/jumbo v3, "visible"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24872
    :cond_11
    move/from16 v0, v26

    if-le v0, v2, :cond_12

    .line 24873
    move/from16 v26, v2

    .line 24875
    :cond_12
    const/16 v31, -0x1

    .line 24876
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 24877
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->empty:Z

    .line 24878
    const/16 v21, 0x1

    .line 24921
    .end local v24    # "j":I
    .end local v29    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_13
    const/4 v3, 0x2

    if-gt v12, v3, :cond_14

    const/4 v3, 0x4

    move/from16 v0, v26

    if-le v0, v3, :cond_15

    .line 24923
    :cond_14
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    if-eqz v3, :cond_2e

    .line 24925
    const/4 v12, 0x2

    .line 24926
    const/16 v26, 0x4

    .line 24927
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 24928
    const-string/jumbo v3, "fg-service"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24929
    const/16 v31, -0x1

    .line 24941
    :cond_15
    :goto_7
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v0, v3, :cond_17

    .line 24942
    const/4 v3, 0x4

    if-le v12, v3, :cond_16

    .line 24944
    const/4 v12, 0x4

    .line 24945
    const/16 v31, 0x0

    .line 24946
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 24947
    const-string/jumbo v3, "heavy"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24949
    :cond_16
    const/16 v3, 0x9

    move/from16 v0, v26

    if-le v0, v3, :cond_17

    .line 24950
    const/16 v26, 0x9

    .line 24954
    :cond_17
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-eq v0, v3, :cond_18

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mRecentsProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v0, v3, :cond_1a

    .line 24956
    :cond_18
    const/4 v3, 0x6

    if-le v12, v3, :cond_19

    .line 24959
    const/4 v12, 0x6

    .line 24960
    const/16 v31, 0x0

    .line 24961
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 24962
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v0, v3, :cond_2f

    const-string/jumbo v3, "home"

    :goto_8
    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24964
    :cond_19
    const/16 v3, 0xc

    move/from16 v0, v26

    if-le v0, v3, :cond_1a

    .line 24965
    const/16 v26, 0xc

    .line 24969
    :cond_1a
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v0, v3, :cond_1c

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-lez v3, :cond_1c

    .line 24970
    const/4 v3, 0x7

    if-le v12, v3, :cond_1b

    .line 24974
    const/4 v12, 0x7

    .line 24975
    const/16 v31, 0x0

    .line 24976
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 24977
    const-string/jumbo v3, "previous"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24979
    :cond_1b
    const/16 v3, 0xd

    move/from16 v0, v26

    if-le v0, v3, :cond_1c

    .line 24980
    const/16 v26, 0xd

    .line 24991
    :cond_1c
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->adjSeq:I

    .line 24992
    move-object/from16 v0, p1

    iput v12, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 24993
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasStartedServices:Z

    .line 24995
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    if-eqz v3, :cond_1f

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v3, v3, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v0, v3, :cond_1f

    .line 24997
    const/4 v3, 0x3

    if-le v12, v3, :cond_1e

    .line 24999
    const/4 v12, 0x3

    .line 25000
    const/4 v3, 0x7

    move/from16 v0, v26

    if-le v0, v3, :cond_1d

    .line 25001
    const/16 v26, 0x7

    .line 25003
    :cond_1d
    const-string v3, "backup"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 25004
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 25006
    :cond_1e
    const/16 v3, 0x8

    move/from16 v0, v26

    if-le v0, v3, :cond_1f

    .line 25007
    const/16 v26, 0x8

    .line 25011
    :cond_1f
    const/16 v25, 0x0

    .line 25013
    .local v25, "mayBeTop":Z
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    add-int/lit8 v23, v3, -0x1

    .line 25014
    .local v23, "is":I
    :goto_9
    if-ltz v23, :cond_4e

    if-gtz v12, :cond_20

    if-eqz v31, :cond_20

    const/4 v3, 0x2

    move/from16 v0, v26

    if-le v0, v3, :cond_4e

    .line 25018
    :cond_20
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    move/from16 v0, v23

    invoke-virtual {v3, v0}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v30

    check-cast v30, Lcom/android/server/am/ServiceRecord;

    .line 25019
    .local v30, "s":Lcom/android/server/am/ServiceRecord;
    move-object/from16 v0, v30

    iget-boolean v3, v0, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    if-eqz v3, :cond_22

    .line 25020
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasStartedServices:Z

    .line 25021
    const/16 v3, 0xa

    move/from16 v0, v26

    if-le v0, v3, :cond_21

    .line 25022
    const/16 v26, 0xa

    .line 25024
    :cond_21
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    if-eqz v3, :cond_30

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-eq v0, v3, :cond_30

    .line 25029
    const/4 v3, 0x5

    if-le v12, v3, :cond_22

    .line 25030
    const-string v3, "cch-started-ui-services"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 25051
    :cond_22
    :goto_a
    move-object/from16 v0, v30

    iget-object v3, v0, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v3

    add-int/lit8 v18, v3, -0x1

    .line 25052
    .local v18, "conni":I
    :goto_b
    if-ltz v18, :cond_4d

    if-gtz v12, :cond_23

    if-eqz v31, :cond_23

    const/4 v3, 0x2

    move/from16 v0, v26

    if-le v0, v3, :cond_4d

    .line 25056
    :cond_23
    move-object/from16 v0, v30

    iget-object v3, v0, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    move/from16 v0, v18

    invoke-virtual {v3, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Ljava/util/ArrayList;

    .line 25057
    .local v16, "clist":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ConnectionRecord;>;"
    const/16 v22, 0x0

    .line 25058
    .local v22, "i":I
    :goto_c
    invoke-virtual/range {v16 .. v16}, Ljava/util/ArrayList;->size()I

    move-result v3

    move/from16 v0, v22

    if-ge v0, v3, :cond_4c

    if-gtz v12, :cond_24

    if-eqz v31, :cond_24

    const/4 v3, 0x2

    move/from16 v0, v26

    if-le v0, v3, :cond_4c

    .line 25064
    :cond_24
    move-object/from16 v0, v16

    move/from16 v1, v22

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v20

    check-cast v20, Lcom/android/server/am/ConnectionRecord;

    .line 25065
    .local v20, "cr":Lcom/android/server/am/ConnectionRecord;
    move-object/from16 v0, v20

    iget-object v3, v0, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v3, v3, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v3, v0, :cond_32

    .line 25061
    :cond_25
    :goto_d
    add-int/lit8 v22, v22, 0x1

    goto :goto_c

    .line 24880
    .end local v16    # "clist":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ConnectionRecord;>;"
    .end local v18    # "conni":I
    .end local v20    # "cr":Lcom/android/server/am/ConnectionRecord;
    .end local v22    # "i":I
    .end local v23    # "is":I
    .end local v25    # "mayBeTop":Z
    .end local v30    # "s":Lcom/android/server/am/ServiceRecord;
    .restart local v24    # "j":I
    .restart local v29    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_26
    move-object/from16 v0, v29

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSING:Lcom/android/server/am/ActivityStack$ActivityState;

    if-eq v3, v5, :cond_27

    move-object/from16 v0, v29

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSED:Lcom/android/server/am/ActivityStack$ActivityState;

    if-ne v3, v5, :cond_2a

    .line 24881
    :cond_27
    const/4 v3, 0x2

    if-le v12, v3, :cond_28

    .line 24882
    const/4 v12, 0x2

    .line 24883
    const-string/jumbo v3, "pausing"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24885
    :cond_28
    move/from16 v0, v26

    if-le v0, v2, :cond_29

    .line 24886
    move/from16 v26, v2

    .line 24888
    :cond_29
    const/16 v31, -0x1

    .line 24889
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 24890
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->empty:Z

    .line 24891
    const/16 v21, 0x1

    goto/16 :goto_4

    .line 24892
    :cond_2a
    move-object/from16 v0, v29

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->STOPPING:Lcom/android/server/am/ActivityStack$ActivityState;

    if-ne v3, v5, :cond_2d

    .line 24893
    const/4 v3, 0x2

    if-le v12, v3, :cond_2b

    .line 24894
    const/4 v12, 0x2

    .line 24895
    const-string/jumbo v3, "stopping"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24904
    :cond_2b
    move-object/from16 v0, v29

    iget-boolean v3, v0, Lcom/android/server/am/ActivityRecord;->finishing:Z

    if-nez v3, :cond_2c

    .line 24905
    const/16 v3, 0xd

    move/from16 v0, v26

    if-le v0, v3, :cond_2c

    .line 24906
    const/16 v26, 0xd

    .line 24909
    :cond_2c
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 24910
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->empty:Z

    .line 24911
    const/16 v21, 0x1

    goto/16 :goto_4

    .line 24913
    :cond_2d
    const/16 v3, 0xe

    move/from16 v0, v26

    if-le v0, v3, :cond_8

    .line 24914
    const/16 v26, 0xe

    .line 24915
    const-string v3, "cch-act"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    goto/16 :goto_4

    .line 24930
    .end local v24    # "j":I
    .end local v29    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_2e
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;

    if-eqz v3, :cond_15

    .line 24932
    const/4 v12, 0x2

    .line 24933
    const/16 v26, 0x6

    .line 24934
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 24935
    const-string/jumbo v3, "force-fg"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 24936
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 24937
    const/16 v31, -0x1

    goto/16 :goto_7

    .line 24962
    :cond_2f
    const-string/jumbo v3, "recents"

    goto/16 :goto_8

    .line 25033
    .restart local v23    # "is":I
    .restart local v25    # "mayBeTop":Z
    .restart local v30    # "s":Lcom/android/server/am/ServiceRecord;
    :cond_30
    move-object/from16 v0, v30

    iget-wide v6, v0, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    const-wide/32 v8, 0x1b7740

    add-long/2addr v6, v8

    cmp-long v3, p5, v6

    if-gez v3, :cond_31

    .line 25037
    const/4 v3, 0x5

    if-le v12, v3, :cond_31

    .line 25038
    const/4 v12, 0x5

    .line 25039
    const-string/jumbo v3, "started-services"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 25040
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 25046
    :cond_31
    const/4 v3, 0x5

    if-le v12, v3, :cond_22

    .line 25047
    const-string v3, "cch-started-services"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    goto/16 :goto_a

    .line 25069
    .restart local v16    # "clist":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ConnectionRecord;>;"
    .restart local v18    # "conni":I
    .restart local v20    # "cr":Lcom/android/server/am/ConnectionRecord;
    .restart local v22    # "i":I
    :cond_32
    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit8 v3, v3, 0x20

    if-nez v3, :cond_3b

    .line 25070
    move-object/from16 v0, v20

    iget-object v3, v0, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v4, v3, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    .local v4, "client":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v3, p0

    move/from16 v5, p2

    move-object/from16 v6, p3

    move/from16 v7, p4

    move-wide/from16 v8, p5

    .line 25071
    invoke-direct/range {v3 .. v9}, Lcom/android/server/am/ActivityManagerService;->computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)I

    move-result v14

    .line 25073
    .local v14, "clientAdj":I
    iget v15, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 25074
    .local v15, "clientProcState":I
    const/16 v3, 0xe

    if-lt v15, v3, :cond_33

    .line 25078
    const/16 v15, 0x10

    .line 25080
    :cond_33
    const/4 v13, 0x0

    .line 25081
    .local v13, "adjType":Ljava/lang/String;
    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit8 v3, v3, 0x10

    if-eqz v3, :cond_35

    .line 25084
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    if-eqz v3, :cond_3f

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-eq v0, v3, :cond_3f

    .line 25089
    if-le v12, v14, :cond_34

    .line 25090
    const-string v13, "cch-bound-ui-services"

    .line 25092
    :cond_34
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 25093
    move v14, v12

    .line 25094
    move/from16 v15, v26

    .line 25110
    :cond_35
    :goto_e
    if-le v12, v14, :cond_36

    .line 25118
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    if-eqz v3, :cond_41

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-eq v0, v3, :cond_41

    const/4 v3, 0x2

    if-le v14, v3, :cond_41

    .line 25120
    const-string v13, "cch-bound-ui-services"

    .line 25143
    :cond_36
    :goto_f
    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit8 v3, v3, 0x4

    if-nez v3, :cond_4b

    .line 25144
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    const/4 v5, -0x1

    if-ne v3, v5, :cond_37

    .line 25145
    const/16 v31, -0x1

    .line 25147
    :cond_37
    const/4 v3, 0x2

    if-gt v15, v3, :cond_38

    .line 25148
    const/4 v3, 0x2

    if-ne v15, v3, :cond_48

    .line 25158
    const/16 v25, 0x1

    .line 25159
    const/16 v15, 0x10

    .line 25187
    :cond_38
    :goto_10
    move/from16 v0, v26

    if-le v0, v15, :cond_39

    .line 25188
    move/from16 v26, v15

    .line 25190
    :cond_39
    const/4 v3, 0x7

    move/from16 v0, v26

    if-ge v0, v3, :cond_3a

    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    const/high16 v5, 0x20000000

    and-int/2addr v3, v5

    if-eqz v3, :cond_3a

    .line 25192
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z

    .line 25194
    :cond_3a
    if-eqz v13, :cond_3b

    .line 25195
    move-object/from16 v0, p1

    iput-object v13, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 25196
    const/4 v3, 0x2

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I

    .line 25198
    move-object/from16 v0, v20

    iget-object v3, v0, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v3, v3, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 25199
    move-object/from16 v0, p1

    iput v15, v0, Lcom/android/server/am/ProcessRecord;->adjSourceProcState:I

    .line 25200
    move-object/from16 v0, v30

    iget-object v3, v0, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    .line 25203
    .end local v4    # "client":Lcom/android/server/am/ProcessRecord;
    .end local v13    # "adjType":Ljava/lang/String;
    .end local v14    # "clientAdj":I
    .end local v15    # "clientProcState":I
    :cond_3b
    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    const/high16 v5, 0x8000000

    and-int/2addr v3, v5

    if-eqz v3, :cond_3c

    .line 25204
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->treatLikeActivity:Z

    .line 25206
    :cond_3c
    move-object/from16 v0, v20

    iget-object v10, v0, Lcom/android/server/am/ConnectionRecord;->activity:Lcom/android/server/am/ActivityRecord;

    .line 25207
    .local v10, "a":Lcom/android/server/am/ActivityRecord;
    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit16 v3, v3, 0x80

    if-eqz v3, :cond_25

    .line 25208
    if-eqz v10, :cond_25

    if-lez v12, :cond_25

    iget-boolean v3, v10, Lcom/android/server/am/ActivityRecord;->visible:Z

    if-nez v3, :cond_3d

    iget-object v3, v10, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->RESUMED:Lcom/android/server/am/ActivityStack$ActivityState;

    if-eq v3, v5, :cond_3d

    iget-object v3, v10, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSING:Lcom/android/server/am/ActivityStack$ActivityState;

    if-ne v3, v5, :cond_25

    .line 25211
    :cond_3d
    const/4 v12, 0x0

    .line 25212
    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit8 v3, v3, 0x4

    if-nez v3, :cond_3e

    .line 25213
    const/16 v31, -0x1

    .line 25215
    :cond_3e
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 25216
    const-string/jumbo v3, "service"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 25217
    const/4 v3, 0x2

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I

    .line 25219
    move-object/from16 v0, p1

    iput-object v10, v0, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 25220
    move/from16 v0, v26

    move-object/from16 v1, p1

    iput v0, v1, Lcom/android/server/am/ProcessRecord;->adjSourceProcState:I

    .line 25221
    move-object/from16 v0, v30

    iget-object v3, v0, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    goto/16 :goto_d

    .line 25096
    .end local v10    # "a":Lcom/android/server/am/ActivityRecord;
    .restart local v4    # "client":Lcom/android/server/am/ProcessRecord;
    .restart local v13    # "adjType":Ljava/lang/String;
    .restart local v14    # "clientAdj":I
    .restart local v15    # "clientProcState":I
    :cond_3f
    move-object/from16 v0, v30

    iget-wide v6, v0, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    const-wide/32 v8, 0x1b7740

    add-long/2addr v6, v8

    cmp-long v3, p5, v6

    if-ltz v3, :cond_35

    .line 25103
    if-le v12, v14, :cond_40

    .line 25104
    const-string v13, "cch-bound-services"

    .line 25106
    :cond_40
    move v14, v12

    goto/16 :goto_e

    .line 25122
    :cond_41
    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit8 v3, v3, 0x48

    if-eqz v3, :cond_45

    .line 25124
    const/16 v3, -0xb

    if-lt v14, v3, :cond_44

    move v12, v14

    .line 25137
    :cond_42
    :goto_11
    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->cached:Z

    if-nez v3, :cond_43

    .line 25138
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 25140
    :cond_43
    const-string/jumbo v13, "service"

    goto/16 :goto_f

    .line 25124
    :cond_44
    const/16 v12, -0xb

    goto :goto_11

    .line 25126
    :cond_45
    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    const/high16 v5, 0x40000000    # 2.0f

    and-int/2addr v3, v5

    if-eqz v3, :cond_46

    const/4 v3, 0x2

    if-ge v14, v3, :cond_46

    const/4 v3, 0x2

    if-le v12, v3, :cond_46

    .line 25129
    const/4 v12, 0x2

    goto :goto_11

    .line 25130
    :cond_46
    const/4 v3, 0x1

    if-le v14, v3, :cond_47

    .line 25131
    move v12, v14

    goto :goto_11

    .line 25133
    :cond_47
    const/4 v3, 0x1

    if-le v12, v3, :cond_42

    .line 25134
    const/4 v12, 0x1

    goto :goto_11

    .line 25165
    :cond_48
    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    const/high16 v5, 0x4000000

    and-int/2addr v3, v5

    if-eqz v3, :cond_49

    .line 25166
    const/4 v15, 0x3

    goto/16 :goto_10

    .line 25168
    :cond_49
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    const/4 v5, 0x1

    if-ne v3, v5, :cond_4a

    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    const/high16 v5, 0x2000000

    and-int/2addr v3, v5

    if-eqz v3, :cond_4a

    .line 25172
    const/4 v15, 0x3

    goto/16 :goto_10

    .line 25175
    :cond_4a
    const/4 v15, 0x6

    goto/16 :goto_10

    .line 25181
    :cond_4b
    const/4 v3, 0x7

    if-ge v15, v3, :cond_38

    .line 25183
    const/4 v15, 0x7

    goto/16 :goto_10

    .line 25055
    .end local v4    # "client":Lcom/android/server/am/ProcessRecord;
    .end local v13    # "adjType":Ljava/lang/String;
    .end local v14    # "clientAdj":I
    .end local v15    # "clientProcState":I
    .end local v20    # "cr":Lcom/android/server/am/ConnectionRecord;
    :cond_4c
    add-int/lit8 v18, v18, -0x1

    goto/16 :goto_b

    .line 25017
    .end local v16    # "clist":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ConnectionRecord;>;"
    .end local v22    # "i":I
    :cond_4d
    add-int/lit8 v23, v23, -0x1

    goto/16 :goto_9

    .line 25228
    .end local v18    # "conni":I
    .end local v30    # "s":Lcom/android/server/am/ServiceRecord;
    :cond_4e
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v3

    add-int/lit8 v27, v3, -0x1

    .line 25229
    .local v27, "provi":I
    :goto_12
    if-ltz v27, :cond_5e

    if-gtz v12, :cond_4f

    if-eqz v31, :cond_4f

    const/4 v3, 0x2

    move/from16 v0, v26

    if-le v0, v3, :cond_5e

    .line 25233
    :cond_4f
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    move/from16 v0, v27

    invoke-virtual {v3, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Lcom/android/server/am/ContentProviderRecord;

    .line 25234
    .local v19, "cpr":Lcom/android/server/am/ContentProviderRecord;
    move-object/from16 v0, v19

    iget-object v3, v0, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-lez v3, :cond_50

    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasProviderClient:Z

    .line 25235
    :cond_50
    move-object/from16 v0, v19

    iget-object v3, v0, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v22, v3, -0x1

    .line 25236
    .restart local v22    # "i":I
    :goto_13
    if-ltz v22, :cond_5b

    if-gtz v12, :cond_51

    if-eqz v31, :cond_51

    const/4 v3, 0x2

    move/from16 v0, v26

    if-le v0, v3, :cond_5b

    .line 25240
    :cond_51
    move-object/from16 v0, v19

    iget-object v3, v0, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    move/from16 v0, v22

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v17

    check-cast v17, Lcom/android/server/am/ContentProviderConnection;

    .line 25241
    .local v17, "conn":Lcom/android/server/am/ContentProviderConnection;
    move-object/from16 v0, v17

    iget-object v4, v0, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    .line 25242
    .restart local v4    # "client":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, p1

    if-ne v4, v0, :cond_53

    .line 25239
    :cond_52
    :goto_14
    add-int/lit8 v22, v22, -0x1

    goto :goto_13

    :cond_53
    move-object/from16 v3, p0

    move/from16 v5, p2

    move-object/from16 v6, p3

    move/from16 v7, p4

    move-wide/from16 v8, p5

    .line 25246
    invoke-direct/range {v3 .. v9}, Lcom/android/server/am/ActivityManagerService;->computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)I

    move-result v14

    .line 25247
    .restart local v14    # "clientAdj":I
    iget v15, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 25248
    .restart local v15    # "clientProcState":I
    const/16 v3, 0xe

    if-lt v15, v3, :cond_54

    .line 25251
    const/16 v15, 0x10

    .line 25253
    :cond_54
    if-le v12, v14, :cond_55

    .line 25254
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    if-eqz v3, :cond_58

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-eq v0, v3, :cond_58

    const/4 v3, 0x2

    if-le v14, v3, :cond_58

    .line 25256
    const-string v3, "cch-ui-provider"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 25262
    :goto_15
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    iget-boolean v5, v4, Lcom/android/server/am/ProcessRecord;->cached:Z

    and-int/2addr v3, v5

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 25263
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I

    .line 25265
    move-object/from16 v0, p1

    iput-object v4, v0, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 25266
    move-object/from16 v0, p1

    iput v15, v0, Lcom/android/server/am/ProcessRecord;->adjSourceProcState:I

    .line 25267
    move-object/from16 v0, v19

    iget-object v3, v0, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    .line 25269
    :cond_55
    const/4 v3, 0x2

    if-gt v15, v3, :cond_56

    .line 25270
    const/4 v3, 0x2

    if-ne v15, v3, :cond_5a

    .line 25280
    const/16 v25, 0x1

    .line 25281
    const/16 v15, 0x10

    .line 25291
    :cond_56
    :goto_16
    move/from16 v0, v26

    if-le v0, v15, :cond_57

    .line 25292
    move/from16 v26, v15

    .line 25294
    :cond_57
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    const/4 v5, -0x1

    if-ne v3, v5, :cond_52

    .line 25295
    const/16 v31, -0x1

    goto :goto_14

    .line 25258
    :cond_58
    if-lez v14, :cond_59

    move v12, v14

    .line 25260
    :goto_17
    const-string/jumbo v3, "provider"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    goto :goto_15

    .line 25258
    :cond_59
    const/4 v12, 0x0

    goto :goto_17

    .line 25287
    :cond_5a
    const/4 v15, 0x3

    goto :goto_16

    .line 25301
    .end local v4    # "client":Lcom/android/server/am/ProcessRecord;
    .end local v14    # "clientAdj":I
    .end local v15    # "clientProcState":I
    .end local v17    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :cond_5b
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/am/ContentProviderRecord;->hasExternalProcessHandles()Z

    move-result v3

    if-eqz v3, :cond_5d

    .line 25302
    if-lez v12, :cond_5c

    .line 25303
    const/4 v12, 0x0

    .line 25304
    const/16 v31, -0x1

    .line 25305
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 25306
    const-string/jumbo v3, "provider"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 25307
    move-object/from16 v0, v19

    iget-object v3, v0, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    .line 25309
    :cond_5c
    const/4 v3, 0x6

    move/from16 v0, v26

    if-le v0, v3, :cond_5d

    .line 25310
    const/16 v26, 0x6

    .line 25232
    :cond_5d
    add-int/lit8 v27, v27, -0x1

    goto/16 :goto_12

    .line 25315
    .end local v19    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v22    # "i":I
    :cond_5e
    if-eqz v25, :cond_5f

    const/4 v3, 0x2

    move/from16 v0, v26

    if-le v0, v3, :cond_5f

    .line 25322
    packed-switch v26, :pswitch_data_0

    .line 25332
    :pswitch_0
    const/16 v26, 0x2

    .line 25337
    :cond_5f
    :goto_18
    const/16 v3, 0x10

    move/from16 v0, v26

    if-lt v0, v3, :cond_60

    .line 25338
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasClientActivities:Z

    if-eqz v3, :cond_65

    .line 25340
    const/16 v26, 0xf

    .line 25341
    const-string v3, "cch-client-act"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 25350
    :cond_60
    :goto_19
    const/4 v3, 0x5

    if-ne v12, v3, :cond_62

    .line 25351
    if-eqz p4, :cond_61

    .line 25352
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumAServiceProcs:I

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I

    div-int/lit8 v5, v5, 0x3

    if-le v3, v5, :cond_66

    const/4 v3, 0x1

    :goto_1a
    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->serviceb:Z

    .line 25353
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    .line 25355
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->serviceb:Z

    if-nez v3, :cond_68

    .line 25360
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    if-lez v3, :cond_67

    move-object/from16 v0, p1

    iget-wide v6, v0, Lcom/android/server/am/ProcessRecord;->lastPss:J

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v3}, Lcom/android/server/am/ProcessList;->getCachedRestoreThresholdKb()J

    move-result-wide v8

    cmp-long v3, v6, v8

    if-ltz v3, :cond_67

    .line 25362
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->serviceHighRam:Z

    .line 25363
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->serviceb:Z

    .line 25373
    :cond_61
    :goto_1b
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->serviceb:Z

    if-eqz v3, :cond_62

    .line 25374
    const/16 v12, 0x8

    .line 25378
    :cond_62
    move-object/from16 v0, p1

    iput v12, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 25382
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    if-le v12, v3, :cond_63

    .line 25383
    move-object/from16 v0, p1

    iget v12, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    .line 25384
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    const/4 v5, 0x2

    if-gt v3, v5, :cond_63

    .line 25385
    const/16 v31, -0x1

    .line 25394
    :cond_63
    move-object/from16 v0, p1

    invoke-virtual {v0, v12}, Lcom/android/server/am/ProcessRecord;->modifyRawOomAdj(I)I

    move-result v3

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 25395
    move/from16 v0, v31

    move-object/from16 v1, p1

    iput v0, v1, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 25396
    move/from16 v0, v26

    move-object/from16 v1, p1

    iput v0, v1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 25397
    move/from16 v0, v21

    move-object/from16 v1, p1

    iput-boolean v0, v1, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    .line 25398
    sget-boolean v3, Lcom/android/server/am/SmartAdjustManager;->SAMP_DEBUG_TRACE:Z

    if-eqz v3, :cond_64

    .line 25399
    const-wide/16 v6, 0x40

    const-string v3, "computeOomAdjLocked"

    const/4 v5, 0x0

    invoke-static {v6, v7, v3, v5}, Landroid/os/Trace;->asyncTraceEnd(JLjava/lang/String;I)V

    .line 25400
    :cond_64
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    goto/16 :goto_0

    .line 25328
    :pswitch_1
    const/16 v26, 0x3

    .line 25329
    goto/16 :goto_18

    .line 25342
    :cond_65
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->treatLikeActivity:Z

    if-eqz v3, :cond_60

    .line 25345
    const/16 v26, 0xe

    .line 25346
    const-string v3, "cch-as-act"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    goto/16 :goto_19

    .line 25352
    :cond_66
    const/4 v3, 0x0

    goto/16 :goto_1a

    .line 25366
    :cond_67
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumAServiceProcs:I

    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumAServiceProcs:I

    goto :goto_1b

    .line 25370
    :cond_68
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->serviceHighRam:Z

    goto :goto_1b

    .line 25322
    nop

    :pswitch_data_0
    .packed-switch 0x6
        :pswitch_1
        :pswitch_1
        :pswitch_0
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method private crashApplication(Lcom/android/server/am/ProcessRecord;Landroid/app/ApplicationErrorReport$CrashInfo;)V
    .locals 29
    .param p1, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    .line 18082
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v10

    .line 18083
    .local v10, "timeMillis":J
    move-object/from16 v0, p2

    iget-object v8, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionClassName:Ljava/lang/String;

    .line 18084
    .local v8, "shortMsg":Ljava/lang/String;
    move-object/from16 v0, p2

    iget-object v9, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionMessage:Ljava/lang/String;

    .line 18085
    .local v9, "longMsg":Ljava/lang/String;
    move-object/from16 v0, p2

    iget-object v0, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->stackTrace:Ljava/lang/String;

    move-object/from16 v27, v0

    .line 18086
    .local v27, "stackTrace":Ljava/lang/String;
    if-eqz v8, :cond_3

    if-eqz v9, :cond_3

    .line 18087
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v12, ": "

    invoke-virtual {v5, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    .line 18093
    :cond_0
    :goto_0
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v5

    const-string v12, "CscFeature_Common_SupportDeviceReporting"

    invoke-virtual {v5, v12}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_1

    if-eqz p1, :cond_1

    .line 18095
    const/16 v5, 0x190

    move-object/from16 v0, p1

    iget-object v12, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v12, v12, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v13, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    const/4 v14, 0x3

    move-object/from16 v0, p0

    invoke-direct {v0, v5, v12, v13, v14}, Lcom/android/server/am/ActivityManagerService;->sendAppStateMsg(ILjava/lang/String;II)V

    .line 18099
    :cond_1
    new-instance v26, Lcom/android/server/am/AppErrorResult;

    invoke-direct/range {v26 .. v26}, Lcom/android/server/am/AppErrorResult;-><init>()V

    .line 18100
    .local v26, "result":Lcom/android/server/am/AppErrorResult;
    monitor-enter p0

    .line 18101
    :try_start_0
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v5, :cond_8

    .line 18103
    if-eqz p1, :cond_4

    :try_start_1
    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 18104
    .local v6, "name":Ljava/lang/String;
    :goto_1
    if-eqz p1, :cond_5

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 18105
    .local v7, "pid":I
    :goto_2
    if-eqz p1, :cond_6

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v28, v0

    .line 18106
    .local v28, "uid":I
    :goto_3
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    move-object/from16 v0, p2

    iget-object v12, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->stackTrace:Ljava/lang/String;

    invoke-interface/range {v5 .. v12}, Landroid/app/IActivityController;->appCrashed(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;JLjava/lang/String;)Z

    move-result v5

    if-nez v5, :cond_8

    .line 18108
    const-string v5, "1"

    const-string/jumbo v12, "ro.debuggable"

    const-string v13, "0"

    invoke-static {v12, v13}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v12

    invoke-virtual {v5, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_7

    const-string v5, "Native crash"

    move-object/from16 v0, p2

    iget-object v12, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionClassName:Ljava/lang/String;

    invoke-virtual {v5, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_7

    .line 18110
    const-string v5, "ActivityManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "Skip killing native crashed app "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, "("

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, ") during testing"

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v5, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 18123
    :goto_4
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 18251
    .end local v6    # "name":Ljava/lang/String;
    .end local v7    # "pid":I
    .end local v28    # "uid":I
    :cond_2
    :goto_5
    return-void

    .line 18088
    .end local v26    # "result":Lcom/android/server/am/AppErrorResult;
    :cond_3
    if-eqz v8, :cond_0

    .line 18089
    move-object v9, v8

    goto/16 :goto_0

    .line 18103
    .restart local v26    # "result":Lcom/android/server/am/AppErrorResult;
    :cond_4
    const/4 v6, 0x0

    goto :goto_1

    .line 18104
    .restart local v6    # "name":Ljava/lang/String;
    :cond_5
    :try_start_3
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v7

    goto :goto_2

    .line 18105
    .restart local v7    # "pid":I
    :cond_6
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v28

    goto :goto_3

    .line 18113
    .restart local v28    # "uid":I
    :cond_7
    const-string v5, "ActivityManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "Force-killing crashed app "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " at watcher\'s request"

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v5, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 18115
    if-eqz p1, :cond_b

    .line 18116
    const-string/jumbo v5, "crash"

    const/4 v12, 0x1

    move-object/from16 v0, p1

    invoke-virtual {v0, v5, v12}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_4

    .line 18125
    .end local v6    # "name":Ljava/lang/String;
    .end local v7    # "pid":I
    .end local v28    # "uid":I
    :catch_0
    move-exception v19

    .line 18126
    .local v19, "e":Landroid/os/RemoteException;
    const/4 v5, 0x0

    :try_start_4
    move-object/from16 v0, p0

    iput-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 18127
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v5

    const/4 v12, 0x0

    invoke-virtual {v5, v12}, Lcom/android/server/Watchdog;->setActivityController(Landroid/app/IActivityController;)V

    .line 18131
    .end local v19    # "e":Landroid/os/RemoteException;
    :cond_8
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v22

    .line 18134
    .local v22, "origId":J
    if-eqz p1, :cond_c

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-eqz v5, :cond_c

    .line 18135
    const-string v5, "ActivityManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "Error in app "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    move-object/from16 v0, p1

    iget-object v13, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " running instrumentation "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    move-object/from16 v0, p1

    iget-object v13, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, ":"

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v5, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 18137
    if-eqz v8, :cond_9

    const-string v5, "ActivityManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "  "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v5, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 18138
    :cond_9
    if-eqz v9, :cond_a

    const-string v5, "ActivityManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "  "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v5, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 18139
    :cond_a
    new-instance v20, Landroid/os/Bundle;

    invoke-direct/range {v20 .. v20}, Landroid/os/Bundle;-><init>()V

    .line 18140
    .local v20, "info":Landroid/os/Bundle;
    const-string/jumbo v5, "shortMsg"

    move-object/from16 v0, v20

    invoke-virtual {v0, v5, v8}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 18141
    const-string/jumbo v5, "longMsg"

    move-object/from16 v0, v20

    invoke-virtual {v0, v5, v9}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 18142
    const/4 v5, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, v20

    invoke-virtual {v0, v1, v5, v2}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V

    .line 18143
    invoke-static/range {v22 .. v23}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 18144
    monitor-exit p0

    goto/16 :goto_5

    .line 18227
    .end local v20    # "info":Landroid/os/Bundle;
    .end local v22    # "origId":J
    :catchall_0
    move-exception v5

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    throw v5

    .line 18119
    .restart local v6    # "name":Ljava/lang/String;
    .restart local v7    # "pid":I
    .restart local v28    # "uid":I
    :cond_b
    :try_start_5
    invoke-static {v7}, Landroid/os/Process;->killProcess(I)V

    .line 18120
    move/from16 v0, v28

    invoke-static {v0, v7}, Lcom/android/server/am/ActivityManagerService;->killProcessGroup(II)V
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_0
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    goto/16 :goto_4

    .line 18148
    .end local v6    # "name":Ljava/lang/String;
    .end local v7    # "pid":I
    .end local v28    # "uid":I
    .restart local v22    # "origId":J
    :cond_c
    if-eqz p1, :cond_d

    .line 18149
    :try_start_6
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v0, p1

    iget-object v12, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v13, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v5, v12, v13}, Lcom/android/server/am/BatteryStatsService;->noteProcessCrash(Ljava/lang/String;I)V

    .line 18154
    :cond_d
    if-eqz p1, :cond_e

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, v27

    invoke-direct {v0, v1, v8, v9, v2}, Lcom/android/server/am/ActivityManagerService;->makeAppCrashingLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v5

    if-nez v5, :cond_f

    .line 18155
    :cond_e
    invoke-static/range {v22 .. v23}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 18156
    monitor-exit p0

    goto/16 :goto_5

    .line 18161
    :cond_f
    if-eqz p1, :cond_10

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mVRApplicationPolicy:Lcom/android/server/am/VRApplicationPolicy;

    invoke-virtual {v5}, Lcom/android/server/am/VRApplicationPolicy;->isHMTconnected()Z

    move-result v5

    if-eqz v5, :cond_10

    .line 18162
    const/16 v17, 0x1

    move-object/from16 v12, p0

    move-object/from16 v13, p1

    move-wide v14, v10

    move-object/from16 v16, p2

    invoke-virtual/range {v12 .. v17}, Lcom/android/server/am/ActivityManagerService;->reportVRApplicationCrashLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;Z)V

    .line 18163
    const-string/jumbo v5, "crash in vr mode"

    const/4 v12, 0x1

    move-object/from16 v0, p1

    invoke-virtual {v0, v5, v12}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 18164
    invoke-static/range {v22 .. v23}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 18165
    monitor-exit p0

    goto/16 :goto_5

    .line 18184
    :cond_10
    new-instance v18, Ljava/util/HashMap;

    invoke-direct/range {v18 .. v18}, Ljava/util/HashMap;-><init>()V

    .line 18185
    .local v18, "data":Ljava/util/HashMap;
    const-string/jumbo v5, "result"

    move-object/from16 v0, v18

    move-object/from16 v1, v26

    invoke-virtual {v0, v5, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 18186
    const-string v5, "app"

    move-object/from16 v0, v18

    move-object/from16 v1, p1

    invoke-virtual {v0, v5, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 18187
    const-string/jumbo v5, "skipDump"

    const-string v12, "Native crash"

    move-object/from16 v0, p2

    iget-object v13, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionClassName:Ljava/lang/String;

    invoke-virtual {v12, v13}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v12

    invoke-static {v12}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v12

    move-object/from16 v0, v18

    invoke-virtual {v0, v5, v12}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 18188
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v21

    .line 18191
    .local v21, "msg":Landroid/os/Message;
    if-eqz p1, :cond_15

    .line 18192
    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v28, v0

    .line 18193
    .restart local v28    # "uid":I
    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v0, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v24, v0

    .line 18194
    .local v24, "packagename":Ljava/lang/String;
    sget-boolean v5, Lcom/android/server/am/ActivityManagerService;->mIsSPDError:Z

    if-eqz v5, :cond_12

    .line 18195
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->mIsSPDErrorPackage:Ljava/lang/String;

    move-object/from16 v0, v24

    invoke-virtual {v0, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_11

    sget v5, Lcom/android/server/am/ActivityManagerService;->mIsSPDErrorUID:I

    const v12, 0x186a0

    rem-int v12, v28, v12

    if-ne v5, v12, :cond_18

    .line 18196
    :cond_11
    const/4 v5, 0x1

    sput-boolean v5, Lcom/android/server/am/ActivityManagerService;->mIsSPDError:Z

    .line 18200
    :goto_6
    const-string v5, ""

    sput-object v5, Lcom/android/server/am/ActivityManagerService;->mIsSPDErrorPackage:Ljava/lang/String;

    .line 18201
    const/4 v5, -0x1

    sput v5, Lcom/android/server/am/ActivityManagerService;->mIsSPDErrorUID:I

    .line 18204
    :cond_12
    sget v5, Lcom/android/server/am/ActivityManagerService;->mCMManagedPermissionError:I

    const/4 v12, -0x1

    if-eq v5, v12, :cond_1a

    sget v5, Lcom/android/server/am/ActivityManagerService;->mCMManagedPermissionError:I

    rem-int/lit8 v5, v5, 0xa

    const/4 v12, 0x2

    if-ne v5, v12, :cond_1a

    .line 18205
    sget v5, Lcom/android/server/am/ActivityManagerService;->mCMManagedPermissionError:I

    const/16 v12, 0x1e

    if-le v5, v12, :cond_13

    sget-object v5, Lcom/android/server/am/ActivityManagerService;->mCMErrorPackageName:Ljava/lang/String;

    move-object/from16 v0, v24

    invoke-virtual {v0, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_14

    :cond_13
    sget v5, Lcom/android/server/am/ActivityManagerService;->mCMManagedPermissionError:I

    const/16 v12, 0x1e

    if-ge v5, v12, :cond_19

    sget v5, Lcom/android/server/am/ActivityManagerService;->mCMErrorPackageUID:I

    const v12, 0x186a0

    rem-int v12, v28, v12

    if-ne v5, v12, :cond_19

    .line 18207
    :cond_14
    const-string/jumbo v5, "errorpermission"

    sget-object v12, Lcom/android/server/am/ActivityManagerService;->mCMErrorPermissionName:Ljava/lang/String;

    move-object/from16 v0, v18

    invoke-virtual {v0, v5, v12}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 18208
    const-string/jumbo v5, "errorpackagename"

    move-object/from16 v0, v18

    move-object/from16 v1, v24

    invoke-virtual {v0, v5, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 18210
    const/16 v5, 0x40

    move-object/from16 v0, v21

    iput v5, v0, Landroid/os/Message;->what:I

    .line 18215
    :goto_7
    const/4 v5, -0x1

    sput v5, Lcom/android/server/am/ActivityManagerService;->mCMManagedPermissionError:I

    .line 18216
    const/4 v5, -0x1

    sput v5, Lcom/android/server/am/ActivityManagerService;->mCMErrorPackageUID:I

    .line 18217
    const-string v5, ""

    sput-object v5, Lcom/android/server/am/ActivityManagerService;->mCMErrorPackageName:Ljava/lang/String;

    .line 18222
    .end local v24    # "packagename":Ljava/lang/String;
    .end local v28    # "uid":I
    :cond_15
    :goto_8
    move-object/from16 v0, v18

    move-object/from16 v1, v21

    iput-object v0, v1, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 18223
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    move-object/from16 v0, v21

    invoke-virtual {v5, v0}, Lcom/android/server/am/ActivityManagerService$UiHandler;->sendMessage(Landroid/os/Message;)Z

    .line 18226
    invoke-static/range {v22 .. v23}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 18227
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    .line 18229
    invoke-virtual/range {v26 .. v26}, Lcom/android/server/am/AppErrorResult;->get()I

    move-result v25

    .line 18231
    .local v25, "res":I
    const/4 v4, 0x0

    .line 18232
    .local v4, "appErrorIntent":Landroid/content/Intent;
    monitor-enter p0

    .line 18233
    if-eqz p1, :cond_16

    :try_start_7
    move-object/from16 v0, p1

    iget-boolean v5, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-nez v5, :cond_16

    .line 18236
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, p1

    iget-object v12, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v12, v12, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v13, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v14

    invoke-static {v14, v15}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v14

    invoke-virtual {v5, v12, v13, v14}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    .line 18239
    :cond_16
    const/4 v5, 0x1

    move/from16 v0, v25

    if-ne v0, v5, :cond_17

    .line 18240
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    invoke-virtual {v0, v1, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->createAppErrorIntentLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;)Landroid/content/Intent;

    move-result-object v4

    .line 18242
    :cond_17
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    .line 18244
    if-eqz v4, :cond_2

    .line 18246
    :try_start_8
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v12, Landroid/os/UserHandle;

    move-object/from16 v0, p1

    iget v13, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-direct {v12, v13}, Landroid/os/UserHandle;-><init>(I)V

    invoke-virtual {v5, v4, v12}, Landroid/content/Context;->startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_8
    .catch Landroid/content/ActivityNotFoundException; {:try_start_8 .. :try_end_8} :catch_1

    goto/16 :goto_5

    .line 18247
    :catch_1
    move-exception v19

    .line 18248
    .local v19, "e":Landroid/content/ActivityNotFoundException;
    const-string v5, "ActivityManager"

    const-string v12, "bug report receiver dissappeared"

    move-object/from16 v0, v19

    invoke-static {v5, v12, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto/16 :goto_5

    .line 18198
    .end local v4    # "appErrorIntent":Landroid/content/Intent;
    .end local v19    # "e":Landroid/content/ActivityNotFoundException;
    .end local v25    # "res":I
    .restart local v24    # "packagename":Ljava/lang/String;
    .restart local v28    # "uid":I
    :cond_18
    const/4 v5, 0x0

    :try_start_9
    sput-boolean v5, Lcom/android/server/am/ActivityManagerService;->mIsSPDError:Z

    goto/16 :goto_6

    .line 18212
    :cond_19
    const/4 v5, 0x1

    move-object/from16 v0, v21

    iput v5, v0, Landroid/os/Message;->what:I

    goto :goto_7

    .line 18219
    :cond_1a
    const/4 v5, 0x1

    move-object/from16 v0, v21

    iput v5, v0, Landroid/os/Message;->what:I
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    goto :goto_8

    .line 18242
    .end local v24    # "packagename":Ljava/lang/String;
    .end local v28    # "uid":I
    .restart local v4    # "appErrorIntent":Landroid/content/Intent;
    .restart local v25    # "res":I
    :catchall_1
    move-exception v5

    :try_start_a
    monitor-exit p0
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_1

    throw v5
.end method

.method private createAppErrorReportLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;)Landroid/app/ApplicationErrorReport;
    .locals 6
    .param p1, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "timeMillis"    # J
    .param p4, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    .line 18283
    const/4 v5, 0x0

    move-object v0, p0

    move-object v1, p1

    move-wide v2, p2

    move-object v4, p4

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->createAppErrorReportLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;Z)Landroid/app/ApplicationErrorReport;

    move-result-object v0

    return-object v0
.end method

.method private createAppErrorReportLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;Z)Landroid/app/ApplicationErrorReport;
    .locals 4
    .param p1, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "timeMillis"    # J
    .param p4, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;
    .param p5, "broadcast"    # Z

    .prologue
    const/4 v0, 0x0

    const/4 v2, 0x1

    .line 18289
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->errorReportReceiver:Landroid/content/ComponentName;

    if-nez v1, :cond_1

    if-nez p5, :cond_1

    .line 18323
    :cond_0
    :goto_0
    return-object v0

    .line 18296
    :cond_1
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-nez v1, :cond_2

    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-nez v1, :cond_2

    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->forceCrashReport:Z

    if-eqz v1, :cond_0

    .line 18300
    :cond_2
    new-instance v0, Landroid/app/ApplicationErrorReport;

    invoke-direct {v0}, Landroid/app/ApplicationErrorReport;-><init>()V

    .line 18301
    .local v0, "report":Landroid/app/ApplicationErrorReport;
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iput-object v1, v0, Landroid/app/ApplicationErrorReport;->packageName:Ljava/lang/String;

    .line 18303
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->errorReportReceiver:Landroid/content/ComponentName;

    if-eqz v1, :cond_3

    .line 18305
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->errorReportReceiver:Landroid/content/ComponentName;

    invoke-virtual {v1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    iput-object v1, v0, Landroid/app/ApplicationErrorReport;->installerPackageName:Ljava/lang/String;

    .line 18307
    :cond_3
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iput-object v1, v0, Landroid/app/ApplicationErrorReport;->processName:Ljava/lang/String;

    .line 18308
    iput-wide p2, v0, Landroid/app/ApplicationErrorReport;->time:J

    .line 18309
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v1, v1, 0x1

    if-eqz v1, :cond_5

    move v1, v2

    :goto_1
    iput-boolean v1, v0, Landroid/app/ApplicationErrorReport;->systemApp:Z

    .line 18311
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-nez v1, :cond_4

    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->forceCrashReport:Z

    if-eqz v1, :cond_6

    .line 18312
    :cond_4
    iput v2, v0, Landroid/app/ApplicationErrorReport;->type:I

    .line 18313
    iput-object p4, v0, Landroid/app/ApplicationErrorReport;->crashInfo:Landroid/app/ApplicationErrorReport$CrashInfo;

    goto :goto_0

    .line 18309
    :cond_5
    const/4 v1, 0x0

    goto :goto_1

    .line 18314
    :cond_6
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-eqz v1, :cond_0

    .line 18315
    const/4 v1, 0x2

    iput v1, v0, Landroid/app/ApplicationErrorReport;->type:I

    .line 18316
    new-instance v1, Landroid/app/ApplicationErrorReport$AnrInfo;

    invoke-direct {v1}, Landroid/app/ApplicationErrorReport$AnrInfo;-><init>()V

    iput-object v1, v0, Landroid/app/ApplicationErrorReport;->anrInfo:Landroid/app/ApplicationErrorReport$AnrInfo;

    .line 18318
    iget-object v1, v0, Landroid/app/ApplicationErrorReport;->anrInfo:Landroid/app/ApplicationErrorReport$AnrInfo;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    iget-object v2, v2, Landroid/app/ActivityManager$ProcessErrorStateInfo;->tag:Ljava/lang/String;

    iput-object v2, v1, Landroid/app/ApplicationErrorReport$AnrInfo;->activity:Ljava/lang/String;

    .line 18319
    iget-object v1, v0, Landroid/app/ApplicationErrorReport;->anrInfo:Landroid/app/ApplicationErrorReport$AnrInfo;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    iget-object v2, v2, Landroid/app/ActivityManager$ProcessErrorStateInfo;->shortMsg:Ljava/lang/String;

    iput-object v2, v1, Landroid/app/ApplicationErrorReport$AnrInfo;->cause:Ljava/lang/String;

    .line 18320
    iget-object v1, v0, Landroid/app/ApplicationErrorReport;->anrInfo:Landroid/app/ApplicationErrorReport$AnrInfo;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    iget-object v2, v2, Landroid/app/ActivityManager$ProcessErrorStateInfo;->longMsg:Ljava/lang/String;

    iput-object v2, v1, Landroid/app/ApplicationErrorReport$AnrInfo;->info:Ljava/lang/String;

    goto :goto_0
.end method

.method private createRecentTaskInfoFromTaskRecord(Lcom/android/server/am/TaskRecord;)Landroid/app/ActivityManager$RecentTaskInfo;
    .locals 10
    .param p1, "tr"    # Lcom/android/server/am/TaskRecord;

    .prologue
    const/4 v7, 0x0

    const/4 v6, -0x1

    .line 12533
    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->updateTaskDescription()V

    .line 12536
    new-instance v2, Landroid/app/ActivityManager$RecentTaskInfo;

    invoke-direct {v2}, Landroid/app/ActivityManager$RecentTaskInfo;-><init>()V

    .line 12537
    .local v2, "rti":Landroid/app/ActivityManager$RecentTaskInfo;
    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->getTopActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v5

    if-nez v5, :cond_1

    move v5, v6

    :goto_0
    iput v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->id:I

    .line 12538
    iget v5, p1, Lcom/android/server/am/TaskRecord;->taskId:I

    iput v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->persistentId:I

    .line 12539
    new-instance v5, Landroid/content/Intent;

    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->getBaseIntent()Landroid/content/Intent;

    move-result-object v8

    invoke-direct {v5, v8}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    iput-object v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->baseIntent:Landroid/content/Intent;

    .line 12540
    iget-object v5, p1, Lcom/android/server/am/TaskRecord;->origActivity:Landroid/content/ComponentName;

    iput-object v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->origActivity:Landroid/content/ComponentName;

    .line 12541
    iget-object v5, p1, Lcom/android/server/am/TaskRecord;->lastDescription:Ljava/lang/CharSequence;

    iput-object v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->description:Ljava/lang/CharSequence;

    .line 12542
    iget-object v5, p1, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    if-eqz v5, :cond_0

    iget-object v5, p1, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    iget v6, v5, Lcom/android/server/am/ActivityStack;->mStackId:I

    :cond_0
    iput v6, v2, Landroid/app/ActivityManager$RecentTaskInfo;->stackId:I

    .line 12545
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMultiWindowPolicy:Lcom/android/server/am/MultiWindowPolicy;

    invoke-virtual {v5, p1}, Lcom/android/server/am/MultiWindowPolicy;->applyRecentTaskMultiWindowStyle(Lcom/android/server/am/TaskRecord;)Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v5

    iput-object v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    .line 12554
    iget v5, p1, Lcom/android/server/am/TaskRecord;->userId:I

    iput v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->userId:I

    .line 12555
    new-instance v5, Landroid/app/ActivityManager$TaskDescription;

    iget-object v6, p1, Lcom/android/server/am/TaskRecord;->lastTaskDescription:Landroid/app/ActivityManager$TaskDescription;

    invoke-direct {v5, v6}, Landroid/app/ActivityManager$TaskDescription;-><init>(Landroid/app/ActivityManager$TaskDescription;)V

    iput-object v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->taskDescription:Landroid/app/ActivityManager$TaskDescription;

    .line 12556
    iget-wide v8, p1, Lcom/android/server/am/TaskRecord;->firstActiveTime:J

    iput-wide v8, v2, Landroid/app/ActivityManager$RecentTaskInfo;->firstActiveTime:J

    .line 12557
    iget-wide v8, p1, Lcom/android/server/am/TaskRecord;->lastActiveTime:J

    iput-wide v8, v2, Landroid/app/ActivityManager$RecentTaskInfo;->lastActiveTime:J

    .line 12558
    iget v5, p1, Lcom/android/server/am/TaskRecord;->mAffiliatedTaskId:I

    iput v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->affiliatedTaskId:I

    .line 12559
    iget v5, p1, Lcom/android/server/am/TaskRecord;->mAffiliatedTaskColor:I

    iput v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->affiliatedTaskColor:I

    .line 12560
    const/4 v5, 0x0

    iput v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->numActivities:I

    .line 12562
    iget-boolean v5, p1, Lcom/android/server/am/TaskRecord;->isSecretMode:Z

    iput-boolean v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->isSecretMode:Z

    .line 12563
    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->isFullscreenVisible()Z

    move-result v5

    iput-boolean v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->fullscreen:Z

    .line 12566
    const/4 v0, 0x0

    .line 12567
    .local v0, "base":Lcom/android/server/am/ActivityRecord;
    const/4 v4, 0x0

    .line 12570
    .local v4, "top":Lcom/android/server/am/ActivityRecord;
    iget-object v5, p1, Lcom/android/server/am/TaskRecord;->mActivities:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    add-int/lit8 v1, v5, -0x1

    .local v1, "i":I
    :goto_1
    if-ltz v1, :cond_5

    .line 12571
    iget-object v5, p1, Lcom/android/server/am/TaskRecord;->mActivities:Ljava/util/ArrayList;

    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActivityRecord;

    .line 12572
    .local v3, "tmp":Lcom/android/server/am/ActivityRecord;
    iget-boolean v5, v3, Lcom/android/server/am/ActivityRecord;->finishing:Z

    if-eqz v5, :cond_2

    .line 12570
    :goto_2
    add-int/lit8 v1, v1, -0x1

    goto :goto_1

    .line 12537
    .end local v0    # "base":Lcom/android/server/am/ActivityRecord;
    .end local v1    # "i":I
    .end local v3    # "tmp":Lcom/android/server/am/ActivityRecord;
    .end local v4    # "top":Lcom/android/server/am/ActivityRecord;
    :cond_1
    iget v5, p1, Lcom/android/server/am/TaskRecord;->taskId:I

    goto :goto_0

    .line 12575
    .restart local v0    # "base":Lcom/android/server/am/ActivityRecord;
    .restart local v1    # "i":I
    .restart local v3    # "tmp":Lcom/android/server/am/ActivityRecord;
    .restart local v4    # "top":Lcom/android/server/am/ActivityRecord;
    :cond_2
    move-object v0, v3

    .line 12576
    if-eqz v4, :cond_3

    iget-object v5, v4, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v6, Lcom/android/server/am/ActivityStack$ActivityState;->INITIALIZING:Lcom/android/server/am/ActivityStack$ActivityState;

    if-ne v5, v6, :cond_4

    .line 12577
    :cond_3
    move-object v4, v0

    .line 12579
    :cond_4
    iget v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->numActivities:I

    add-int/lit8 v5, v5, 0x1

    iput v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->numActivities:I

    goto :goto_2

    .line 12582
    .end local v3    # "tmp":Lcom/android/server/am/ActivityRecord;
    :cond_5
    if-eqz v0, :cond_7

    iget-object v5, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v5}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v5

    :goto_3
    iput-object v5, v2, Landroid/app/ActivityManager$RecentTaskInfo;->baseActivity:Landroid/content/ComponentName;

    .line 12583
    if-eqz v4, :cond_6

    iget-object v5, v4, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v5}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v7

    :cond_6
    iput-object v7, v2, Landroid/app/ActivityManager$RecentTaskInfo;->topActivity:Landroid/content/ComponentName;

    .line 12586
    return-object v2

    :cond_7
    move-object v5, v7

    .line 12582
    goto :goto_3
.end method

.method private deliverPreBootCompleted(Ljava/lang/Runnable;Ljava/util/ArrayList;I)Z
    .locals 11
    .param p1, "onFinishCallback"    # Ljava/lang/Runnable;
    .param p3, "userId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/Runnable;",
            "Ljava/util/ArrayList",
            "<",
            "Landroid/content/ComponentName;",
            ">;I)Z"
        }
    .end annotation

    .prologue
    .line 16879
    .local p2, "doneReceivers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    new-instance v2, Landroid/content/Intent;

    const-string v1, "android.intent.action.PRE_BOOT_COMPLETED"

    invoke-direct {v2, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 16880
    .local v2, "intent":Landroid/content/Intent;
    const/4 v5, 0x0

    .line 16882
    .local v5, "ris":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    const/4 v3, 0x0

    const/4 v4, 0x0

    invoke-interface {v1, v2, v3, v4, p3}, Landroid/content/pm/IPackageManager;->queryIntentReceivers(Landroid/content/Intent;Ljava/lang/String;II)Ljava/util/List;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v5

    .line 16886
    :goto_0
    if-nez v5, :cond_0

    .line 16887
    const/4 v1, 0x0

    .line 16930
    :goto_1
    return v1

    .line 16889
    :cond_0
    invoke-interface {v5}, Ljava/util/List;->size()I

    move-result v1

    add-int/lit8 v9, v1, -0x1

    .local v9, "i":I
    :goto_2
    if-ltz v9, :cond_2

    .line 16890
    invoke-interface {v5, v9}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/pm/ResolveInfo;

    iget-object v1, v1, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v1, v1, 0x1

    if-nez v1, :cond_1

    .line 16892
    invoke-interface {v5, v9}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 16889
    :cond_1
    add-int/lit8 v9, v9, -0x1

    goto :goto_2

    .line 16895
    :cond_2
    const/high16 v1, 0x2000000

    invoke-virtual {v2, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 16899
    if-nez p3, :cond_4

    .line 16900
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->readLastDonePreBootReceivers()Ljava/util/ArrayList;

    move-result-object v10

    .line 16901
    .local v10, "lastDoneReceivers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    const/4 v9, 0x0

    :goto_3
    invoke-interface {v5}, Ljava/util/List;->size()I

    move-result v1

    if-ge v9, v1, :cond_4

    .line 16902
    invoke-interface {v5, v9}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/pm/ResolveInfo;

    iget-object v7, v1, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    .line 16903
    .local v7, "ai":Landroid/content/pm/ActivityInfo;
    new-instance v8, Landroid/content/ComponentName;

    iget-object v1, v7, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    iget-object v3, v7, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v8, v1, v3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 16904
    .local v8, "comp":Landroid/content/ComponentName;
    invoke-virtual {v10, v8}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_3

    .line 16907
    invoke-interface {v5, v9}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 16908
    add-int/lit8 v9, v9, -0x1

    .line 16911
    invoke-virtual {p2, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 16901
    :cond_3
    add-int/lit8 v9, v9, 0x1

    goto :goto_3

    .line 16916
    .end local v7    # "ai":Landroid/content/pm/ActivityInfo;
    .end local v8    # "comp":Landroid/content/ComponentName;
    .end local v10    # "lastDoneReceivers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    :cond_4
    invoke-interface {v5}, Ljava/util/List;->size()I

    move-result v1

    if-gtz v1, :cond_5

    .line 16917
    const/4 v1, 0x0

    goto :goto_1

    .line 16921
    :cond_5
    if-nez p3, :cond_6

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUsersLocked()[I

    move-result-object v6

    .line 16923
    .local v6, "users":[I
    :goto_4
    array-length v1, v6

    if-gtz v1, :cond_7

    .line 16924
    const/4 v1, 0x0

    goto :goto_1

    .line 16921
    .end local v6    # "users":[I
    :cond_6
    const/4 v1, 0x1

    new-array v6, v1, [I

    const/4 v1, 0x0

    aput p3, v6, v1

    goto :goto_4

    .line 16927
    .restart local v6    # "users":[I
    :cond_7
    new-instance v0, Lcom/android/server/am/ActivityManagerService$PreBootContinuation;

    move-object v1, p0

    move-object v3, p1

    move-object v4, p2

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService$PreBootContinuation;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/content/Intent;Ljava/lang/Runnable;Ljava/util/ArrayList;Ljava/util/List;[I)V

    .line 16929
    .local v0, "cont":Lcom/android/server/am/ActivityManagerService$PreBootContinuation;
    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerService$PreBootContinuation;->go()V

    .line 16930
    const/4 v1, 0x1

    goto :goto_1

    .line 16884
    .end local v0    # "cont":Lcom/android/server/am/ActivityManagerService$PreBootContinuation;
    .end local v6    # "users":[I
    .end local v9    # "i":I
    :catch_0
    move-exception v1

    goto :goto_0
.end method

.method private dispatchProcessDied(II)V
    .locals 3
    .param p1, "pid"    # I
    .param p2, "uid"    # I

    .prologue
    .line 6018
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v2}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result v0

    .line 6019
    .local v0, "i":I
    :cond_0
    :goto_0
    if-lez v0, :cond_1

    .line 6020
    add-int/lit8 v0, v0, -0x1

    .line 6021
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v2, v0}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v1

    check-cast v1, Landroid/app/IProcessObserver;

    .line 6022
    .local v1, "observer":Landroid/app/IProcessObserver;
    if-eqz v1, :cond_0

    .line 6024
    :try_start_0
    invoke-interface {v1, p1, p2}, Landroid/app/IProcessObserver;->onProcessDied(II)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 6025
    :catch_0
    move-exception v2

    goto :goto_0

    .line 6029
    .end local v1    # "observer":Landroid/app/IProcessObserver;
    :cond_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v2}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 6030
    return-void
.end method

.method private dispatchProcessesChanged()V
    .locals 8

    .prologue
    .line 5965
    monitor-enter p0

    .line 5966
    :try_start_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 5967
    .local v0, "N":I
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    array-length v5, v5

    if-ge v5, v0, :cond_0

    .line 5968
    new-array v5, v0, [Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 5970
    :cond_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    invoke-virtual {v5, v6}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    .line 5971
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->clear()V

    .line 5974
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 5976
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v5}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result v1

    .line 5977
    .local v1, "i":I
    :cond_1
    :goto_0
    if-lez v1, :cond_4

    .line 5978
    add-int/lit8 v1, v1, -0x1

    .line 5979
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v5, v1}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v4

    check-cast v4, Landroid/app/IProcessObserver;

    .line 5980
    .local v4, "observer":Landroid/app/IProcessObserver;
    if-eqz v4, :cond_1

    .line 5982
    const/4 v3, 0x0

    .local v3, "j":I
    :goto_1
    if-ge v3, v0, :cond_1

    .line 5983
    :try_start_1
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    aget-object v2, v5, v3

    .line 5984
    .local v2, "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    iget v5, v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    and-int/lit8 v5, v5, 0x1

    if-eqz v5, :cond_2

    .line 5988
    iget v5, v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    iget v6, v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->uid:I

    iget-boolean v7, v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->foregroundActivities:Z

    invoke-interface {v4, v5, v6, v7}, Landroid/app/IProcessObserver;->onForegroundActivitiesChanged(IIZ)V

    .line 5991
    :cond_2
    iget v5, v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    and-int/lit8 v5, v5, 0x2

    if-eqz v5, :cond_3

    .line 5995
    iget v5, v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    iget v6, v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->uid:I

    iget v7, v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->processState:I

    invoke-interface {v4, v5, v6, v7}, Landroid/app/IProcessObserver;->onProcessStateChanged(III)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 5982
    :cond_3
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 5974
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    .end local v3    # "j":I
    .end local v4    # "observer":Landroid/app/IProcessObserver;
    :catchall_0
    move-exception v5

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v5

    .line 6002
    .restart local v0    # "N":I
    .restart local v1    # "i":I
    :cond_4
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v5}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 6004
    monitor-enter p0

    .line 6005
    const/4 v3, 0x0

    .restart local v3    # "j":I
    :goto_2
    if-ge v3, v0, :cond_5

    .line 6006
    :try_start_3
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mAvailProcessChanges:Ljava/util/ArrayList;

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    aget-object v6, v6, v3

    invoke-virtual {v5, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 6010
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    aget-object v2, v5, v3

    .line 6011
    .restart local v2    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    const/4 v5, 0x1

    iput-boolean v5, v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->finished:Z

    .line 6005
    add-int/lit8 v3, v3, 0x1

    goto :goto_2

    .line 6014
    .end local v2    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :cond_5
    monitor-exit p0

    .line 6015
    return-void

    .line 6014
    :catchall_1
    move-exception v5

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v5

    .line 5998
    .restart local v4    # "observer":Landroid/app/IProcessObserver;
    :catch_0
    move-exception v5

    goto :goto_0
.end method

.method private dispatchUidsChanged()V
    .locals 9

    .prologue
    .line 6034
    monitor-enter p0

    .line 6035
    :try_start_0
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPendingUidChanges:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 6036
    .local v0, "N":I
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    array-length v6, v6

    if-ge v6, v0, :cond_0

    .line 6037
    new-array v6, v0, [Lcom/android/server/am/UidRecord$ChangeItem;

    iput-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    .line 6039
    :cond_0
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_1

    .line 6040
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPendingUidChanges:Ljava/util/ArrayList;

    invoke-virtual {v6, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/UidRecord$ChangeItem;

    .line 6041
    .local v1, "change":Lcom/android/server/am/UidRecord$ChangeItem;
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    aput-object v1, v6, v2

    .line 6042
    iget-object v6, v1, Lcom/android/server/am/UidRecord$ChangeItem;->uidRecord:Lcom/android/server/am/UidRecord;

    const/4 v7, 0x0

    iput-object v7, v6, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    .line 6043
    const/4 v6, 0x0

    iput-object v6, v1, Lcom/android/server/am/UidRecord$ChangeItem;->uidRecord:Lcom/android/server/am/UidRecord;

    .line 6039
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 6045
    .end local v1    # "change":Lcom/android/server/am/UidRecord$ChangeItem;
    :cond_1
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPendingUidChanges:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 6048
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6050
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    if-eqz v6, :cond_3

    .line 6051
    const/4 v4, 0x0

    .local v4, "j":I
    :goto_1
    if-ge v4, v0, :cond_3

    .line 6052
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    aget-object v3, v6, v4

    .line 6053
    .local v3, "item":Lcom/android/server/am/UidRecord$ChangeItem;
    iget-boolean v6, v3, Lcom/android/server/am/UidRecord$ChangeItem;->gone:Z

    if-eqz v6, :cond_2

    .line 6054
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    iget v7, v3, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    invoke-virtual {v6, v7}, Landroid/os/PowerManagerInternal;->uidGone(I)V

    .line 6051
    :goto_2
    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    .line 6048
    .end local v0    # "N":I
    .end local v2    # "i":I
    .end local v3    # "item":Lcom/android/server/am/UidRecord$ChangeItem;
    .end local v4    # "j":I
    :catchall_0
    move-exception v6

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v6

    .line 6056
    .restart local v0    # "N":I
    .restart local v2    # "i":I
    .restart local v3    # "item":Lcom/android/server/am/UidRecord$ChangeItem;
    .restart local v4    # "j":I
    :cond_2
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    iget v7, v3, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    iget v8, v3, Lcom/android/server/am/UidRecord$ChangeItem;->processState:I

    invoke-virtual {v6, v7, v8}, Landroid/os/PowerManagerInternal;->updateUidProcState(II)V

    goto :goto_2

    .line 6061
    .end local v3    # "item":Lcom/android/server/am/UidRecord$ChangeItem;
    .end local v4    # "j":I
    :cond_3
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v6}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result v2

    .line 6062
    :cond_4
    :goto_3
    if-lez v2, :cond_6

    .line 6063
    add-int/lit8 v2, v2, -0x1

    .line 6064
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v6, v2}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v5

    check-cast v5, Landroid/app/IUidObserver;

    .line 6065
    .local v5, "observer":Landroid/app/IUidObserver;
    if-eqz v5, :cond_4

    .line 6067
    const/4 v4, 0x0

    .restart local v4    # "j":I
    :goto_4
    if-ge v4, v0, :cond_4

    .line 6068
    :try_start_2
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    aget-object v3, v6, v4

    .line 6069
    .restart local v3    # "item":Lcom/android/server/am/UidRecord$ChangeItem;
    iget-boolean v6, v3, Lcom/android/server/am/UidRecord$ChangeItem;->gone:Z

    if-eqz v6, :cond_5

    .line 6072
    iget v6, v3, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    invoke-interface {v5, v6}, Landroid/app/IUidObserver;->onUidGone(I)V

    .line 6067
    :goto_5
    add-int/lit8 v4, v4, 0x1

    goto :goto_4

    .line 6077
    :cond_5
    iget v6, v3, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    iget v7, v3, Lcom/android/server/am/UidRecord$ChangeItem;->processState:I

    invoke-interface {v5, v6, v7}, Landroid/app/IUidObserver;->onUidStateChanged(II)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    goto :goto_5

    .line 6080
    .end local v3    # "item":Lcom/android/server/am/UidRecord$ChangeItem;
    :catch_0
    move-exception v6

    goto :goto_3

    .line 6084
    .end local v4    # "j":I
    .end local v5    # "observer":Landroid/app/IUidObserver;
    :cond_6
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v6}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 6086
    monitor-enter p0

    .line 6087
    const/4 v4, 0x0

    .restart local v4    # "j":I
    :goto_6
    if-ge v4, v0, :cond_7

    .line 6088
    :try_start_3
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mAvailUidChanges:Ljava/util/ArrayList;

    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUidChanges:[Lcom/android/server/am/UidRecord$ChangeItem;

    aget-object v7, v7, v4

    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 6087
    add-int/lit8 v4, v4, 0x1

    goto :goto_6

    .line 6090
    :cond_7
    monitor-exit p0

    .line 6091
    return-void

    .line 6090
    :catchall_1
    move-exception v6

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v6
.end method

.method static displayStateToString(I)Ljava/lang/String;
    .locals 1
    .param p0, "state"    # I

    .prologue
    .line 15348
    packed-switch p0, :pswitch_data_0

    .line 15366
    const-string v0, "NONE"

    .line 15369
    .local v0, "stateName":Ljava/lang/String;
    :goto_0
    return-object v0

    .line 15350
    .end local v0    # "stateName":Ljava/lang/String;
    :pswitch_0
    const-string v0, "OFF(1)"

    .line 15351
    .restart local v0    # "stateName":Ljava/lang/String;
    goto :goto_0

    .line 15354
    .end local v0    # "stateName":Ljava/lang/String;
    :pswitch_1
    const-string v0, "ON(2)"

    .line 15355
    .restart local v0    # "stateName":Ljava/lang/String;
    goto :goto_0

    .line 15358
    .end local v0    # "stateName":Ljava/lang/String;
    :pswitch_2
    const-string v0, "DOZE(3)"

    .line 15359
    .restart local v0    # "stateName":Ljava/lang/String;
    goto :goto_0

    .line 15362
    .end local v0    # "stateName":Ljava/lang/String;
    :pswitch_3
    const-string v0, "DOZE_SUSPEND(4)"

    .line 15363
    .restart local v0    # "stateName":Ljava/lang/String;
    goto :goto_0

    .line 15348
    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_1
        :pswitch_2
        :pswitch_3
    .end packed-switch
.end method

.method private dumpActivity(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Lcom/android/server/am/ActivityRecord;[Ljava/lang/String;Z)V
    .locals 6
    .param p1, "prefix"    # Ljava/lang/String;
    .param p2, "fd"    # Ljava/io/FileDescriptor;
    .param p3, "pw"    # Ljava/io/PrintWriter;
    .param p4, "r"    # Lcom/android/server/am/ActivityRecord;
    .param p5, "args"    # [Ljava/lang/String;
    .param p6, "dumpAll"    # Z

    .prologue
    .line 19790
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, "  "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 19791
    .local v1, "innerPrefix":Ljava/lang/String;
    monitor-enter p0

    .line 19792
    :try_start_0
    invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v3, "ACTIVITY "

    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v3, p4, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19793
    const-string v3, " "

    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-static {p4}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v3

    invoke-static {v3}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19794
    const-string v3, " pid="

    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19795
    iget-object v3, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v3, :cond_2

    iget-object v3, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v3, v3, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->println(I)V

    .line 19797
    :goto_0
    if-eqz p6, :cond_0

    .line 19798
    invoke-virtual {p4, p3, v1}, Lcom/android/server/am/ActivityRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 19800
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 19801
    iget-object v3, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v3, :cond_1

    iget-object v3, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_1

    .line 19804
    invoke-virtual {p3}, Ljava/io/PrintWriter;->flush()V

    .line 19806
    :try_start_1
    new-instance v2, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v2}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    .line 19808
    .local v2, "tp":Lcom/android/internal/os/TransferPipe;
    :try_start_2
    iget-object v3, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual {v2}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v4

    invoke-virtual {v4}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;

    move-result-object v4

    iget-object v5, p4, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    invoke-interface {v3, v4, v5, v1, p5}, Landroid/app/IApplicationThread;->dumpActivity(Ljava/io/FileDescriptor;Landroid/os/IBinder;Ljava/lang/String;[Ljava/lang/String;)V

    .line 19810
    invoke-virtual {v2, p2}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 19812
    :try_start_3
    invoke-virtual {v2}, Lcom/android/internal/os/TransferPipe;->kill()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_1

    .line 19820
    .end local v2    # "tp":Lcom/android/internal/os/TransferPipe;
    :cond_1
    :goto_1
    return-void

    .line 19796
    :cond_2
    :try_start_4
    const-string v3, "(not running)"

    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_0

    .line 19800
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    throw v3

    .line 19812
    .restart local v2    # "tp":Lcom/android/internal/os/TransferPipe;
    :catchall_1
    move-exception v3

    :try_start_5
    invoke-virtual {v2}, Lcom/android/internal/os/TransferPipe;->kill()V

    throw v3
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_1

    .line 19814
    .end local v2    # "tp":Lcom/android/internal/os/TransferPipe;
    :catch_0
    move-exception v0

    .line 19815
    .local v0, "e":Ljava/io/IOException;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, "Failure while dumping the activity: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_1

    .line 19816
    .end local v0    # "e":Ljava/io/IOException;
    :catch_1
    move-exception v0

    .line 19817
    .local v0, "e":Landroid/os/RemoteException;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, "Got a RemoteException while dumping the activity"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_1
.end method

.method private final dumpApplicationMemoryUsageHeader(Ljava/io/PrintWriter;JJZZ)V
    .locals 2
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "uptime"    # J
    .param p4, "realtime"    # J
    .param p6, "isCheckinRequest"    # Z
    .param p7, "isCompact"    # Z

    .prologue
    .line 20514
    if-nez p6, :cond_0

    if-eqz p7, :cond_1

    .line 20516
    :cond_0
    const-string/jumbo v0, "time,"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, p2, p3}, Ljava/io/PrintWriter;->print(J)V

    const-string v0, ","

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, p4, p5}, Ljava/io/PrintWriter;->println(J)V

    .line 20521
    :goto_0
    return-void

    .line 20518
    :cond_1
    const-string v0, "Applications Memory Usage (kB):"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20519
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Uptime: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p2, p3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, " Realtime: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p4, p5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_0
.end method

.method static final dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZ)V
    .locals 10
    .param p0, "pw"    # Ljava/io/PrintWriter;
    .param p1, "prefix"    # Ljava/lang/String;
    .param p2, "tag"    # Ljava/lang/String;
    .param p4, "sort"    # Z
    .param p5, "isCompact"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Ljava/lang/String;",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ActivityManagerService$MemItem;",
            ">;ZZ)V"
        }
    .end annotation

    .prologue
    .line 20422
    .local p3, "items":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    if-eqz p4, :cond_0

    if-nez p5, :cond_0

    .line 20423
    new-instance v0, Lcom/android/server/am/ActivityManagerService$27;

    invoke-direct {v0}, Lcom/android/server/am/ActivityManagerService$27;-><init>()V

    invoke-static {p3, v0}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 20436
    :cond_0
    if-nez p5, :cond_1

    invoke-virtual {p3}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_1

    .line 20437
    invoke-virtual {p0, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v0, " Total  (   PSS   SwapPss ) kB"

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20439
    :cond_1
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_0
    invoke-virtual {p3}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-ge v6, v0, :cond_6

    .line 20440
    invoke-virtual {p3, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/am/ActivityManagerService$MemItem;

    .line 20441
    .local v7, "mi":Lcom/android/server/am/ActivityManagerService$MemItem;
    if-nez p5, :cond_3

    .line 20442
    invoke-virtual {p0, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v0, "%7d ( %7d %7d ) kB: "

    const/4 v1, 0x3

    new-array v1, v1, [Ljava/lang/Object;

    const/4 v2, 0x0

    iget-wide v4, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    iget-wide v8, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->swap_pss:J

    add-long/2addr v4, v8

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v3

    aput-object v3, v1, v2

    const/4 v2, 0x1

    iget-wide v4, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v3

    aput-object v3, v1, v2

    const/4 v2, 0x2

    iget-wide v4, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->swap_pss:J

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v3

    aput-object v3, v1, v2

    invoke-virtual {p0, v0, v1}, Ljava/io/PrintWriter;->printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;

    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->label:Ljava/lang/String;

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20451
    :goto_1
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    if-eqz v0, :cond_2

    .line 20452
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, "           "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    iget-object v2, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    iget-object v3, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    const/4 v4, 0x1

    move-object v0, p0

    move v5, p5

    invoke-static/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZ)V

    .line 20439
    :cond_2
    add-int/lit8 v6, v6, 0x1

    goto :goto_0

    .line 20443
    :cond_3
    iget-boolean v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->isProc:Z

    if-eqz v0, :cond_5

    .line 20444
    const-string/jumbo v0, "proc,"

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p0, p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v0, ","

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20445
    const-string v0, ","

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string v0, ","

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-wide v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    invoke-virtual {p0, v0, v1}, Ljava/io/PrintWriter;->print(J)V

    .line 20446
    iget-boolean v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->hasActivities:Z

    if-eqz v0, :cond_4

    const-string v0, ",a"

    :goto_2
    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_1

    :cond_4
    const-string v0, ",e"

    goto :goto_2

    .line 20448
    :cond_5
    invoke-virtual {p0, p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v0, ","

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v0, ","

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20449
    iget-wide v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    invoke-virtual {p0, v0, v1}, Ljava/io/PrintWriter;->println(J)V

    goto :goto_1

    .line 20456
    .end local v7    # "mi":Lcom/android/server/am/ActivityManagerService$MemItem;
    :cond_6
    return-void
.end method

.method private static final dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
    .locals 8
    .param p0, "pw"    # Ljava/io/PrintWriter;
    .param p1, "service"    # Lcom/android/server/am/ActivityManagerService;
    .param p2, "list"    # Ljava/util/List;
    .param p3, "prefix"    # Ljava/lang/String;
    .param p4, "normalLabel"    # Ljava/lang/String;
    .param p5, "persistentLabel"    # Ljava/lang/String;
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 20065
    const/4 v2, 0x0

    .line 20066
    .local v2, "numPers":I
    invoke-interface {p2}, Ljava/util/List;->size()I

    move-result v4

    add-int/lit8 v0, v4, -0x1

    .line 20067
    .local v0, "N":I
    move v1, v0

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_3

    .line 20068
    invoke-interface {p2, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 20069
    .local v3, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_1

    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p6, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_1

    .line 20067
    :cond_0
    :goto_1
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 20072
    :cond_1
    const-string v5, "%s%s #%2d: %s"

    const/4 v4, 0x4

    new-array v6, v4, [Ljava/lang/Object;

    const/4 v4, 0x0

    aput-object p3, v6, v4

    const/4 v7, 0x1

    iget-boolean v4, v3, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v4, :cond_2

    move-object v4, p5

    :goto_2
    aput-object v4, v6, v7

    const/4 v4, 0x2

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v6, v4

    const/4 v4, 0x3

    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->toString()Ljava/lang/String;

    move-result-object v7

    aput-object v7, v6, v4

    invoke-static {v5, v6}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {p0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20075
    iget-boolean v4, v3, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v4, :cond_0

    .line 20076
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    :cond_2
    move-object v4, p4

    .line 20072
    goto :goto_2

    .line 20079
    .end local v3    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_3
    return v2
.end method

.method private static final dumpProcessOomList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Z
    .locals 30
    .param p0, "pw"    # Ljava/io/PrintWriter;
    .param p1, "service"    # Lcom/android/server/am/ActivityManagerService;
    .param p3, "prefix"    # Ljava/lang/String;
    .param p4, "normalLabel"    # Ljava/lang/String;
    .param p5, "persistentLabel"    # Ljava/lang/String;
    .param p6, "inclDetails"    # Z
    .param p7, "dumpPackage"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Lcom/android/server/am/ActivityManagerService;",
            "Ljava/util/List",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;",
            "Ljava/lang/String;",
            "Ljava/lang/String;",
            "Ljava/lang/String;",
            "Z",
            "Ljava/lang/String;",
            ")Z"
        }
    .end annotation

    .prologue
    .line 20087
    .local p2, "origList":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/ProcessRecord;>;"
    new-instance v11, Ljava/util/ArrayList;

    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I

    move-result v26

    move/from16 v0, v26

    invoke-direct {v11, v0}, Ljava/util/ArrayList;-><init>(I)V

    .line 20089
    .local v11, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/util/Pair<Lcom/android/server/am/ProcessRecord;Ljava/lang/Integer;>;>;"
    const/4 v10, 0x0

    .local v10, "i":I
    :goto_0
    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I

    move-result v26

    move/from16 v0, v26

    if-ge v10, v0, :cond_1

    .line 20090
    move-object/from16 v0, p2

    invoke-interface {v0, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/am/ProcessRecord;

    .line 20091
    .local v15, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p7, :cond_0

    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    move-object/from16 v1, p7

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v26

    if-nez v26, :cond_0

    .line 20089
    :goto_1
    add-int/lit8 v10, v10, 0x1

    goto :goto_0

    .line 20094
    :cond_0
    new-instance v26, Landroid/util/Pair;

    move-object/from16 v0, p2

    invoke-interface {v0, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v27

    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v28

    invoke-direct/range {v26 .. v28}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    move-object/from16 v0, v26

    invoke-virtual {v11, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_1

    .line 20097
    .end local v15    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_1
    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v26

    if-gtz v26, :cond_2

    .line 20098
    const/16 v26, 0x0

    .line 20245
    :goto_2
    return v26

    .line 20101
    :cond_2
    new-instance v4, Lcom/android/server/am/ActivityManagerService$26;

    invoke-direct {v4}, Lcom/android/server/am/ActivityManagerService$26;-><init>()V

    .line 20116
    .local v4, "comparator":Ljava/util/Comparator;, "Ljava/util/Comparator<Landroid/util/Pair<Lcom/android/server/am/ProcessRecord;Ljava/lang/Integer;>;>;"
    invoke-static {v11, v4}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 20118
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v6

    .line 20119
    .local v6, "curRealtime":J
    move-object/from16 v0, p1

    iget-wide v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckRealtime:J

    move-wide/from16 v26, v0

    sub-long v16, v6, v26

    .line 20120
    .local v16, "realtimeSince":J
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v8

    .line 20121
    .local v8, "curUptime":J
    move-object/from16 v0, p1

    iget-wide v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    move-wide/from16 v26, v0

    sub-long v22, v8, v26

    .line 20123
    .local v22, "uptimeSince":J
    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v26

    add-int/lit8 v10, v26, -0x1

    :goto_3
    if-ltz v10, :cond_10

    .line 20124
    invoke-virtual {v11, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v26

    check-cast v26, Landroid/util/Pair;

    move-object/from16 v0, v26

    iget-object v15, v0, Landroid/util/Pair;->first:Ljava/lang/Object;

    check-cast v15, Lcom/android/server/am/ProcessRecord;

    .line 20125
    .restart local v15    # "r":Lcom/android/server/am/ProcessRecord;
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->setAdj:I

    move/from16 v26, v0

    invoke-static/range {v26 .. v26}, Lcom/android/server/am/ProcessList;->makeOomAdjString(I)Ljava/lang/String;

    move-result-object v13

    .line 20127
    .local v13, "oomAdj":Ljava/lang/String;
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    move/from16 v26, v0

    packed-switch v26, :pswitch_data_0

    .line 20135
    const/16 v18, 0x3f

    .line 20139
    .local v18, "schedGroup":C
    :goto_4
    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    move/from16 v26, v0

    if-eqz v26, :cond_9

    .line 20140
    const/16 v5, 0x41

    .line 20146
    .local v5, "foreground":C
    :goto_5
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->curProcState:I

    move/from16 v26, v0

    invoke-static/range {v26 .. v26}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v14

    .line 20147
    .local v14, "procState":Ljava/lang/String;
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20148
    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->persistent:Z

    move/from16 v26, v0

    if-eqz v26, :cond_b

    move-object/from16 v26, p5

    :goto_6
    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20149
    const-string v26, " #"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20150
    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I

    move-result v26

    add-int/lit8 v27, v26, -0x1

    invoke-virtual {v11, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v26

    check-cast v26, Landroid/util/Pair;

    move-object/from16 v0, v26

    iget-object v0, v0, Landroid/util/Pair;->second:Ljava/lang/Object;

    move-object/from16 v26, v0

    check-cast v26, Ljava/lang/Integer;

    invoke-virtual/range {v26 .. v26}, Ljava/lang/Integer;->intValue()I

    move-result v26

    sub-int v12, v27, v26

    .line 20151
    .local v12, "num":I
    const/16 v26, 0xa

    move/from16 v0, v26

    if-ge v12, v0, :cond_3

    const/16 v26, 0x20

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 20152
    :cond_3
    move-object/from16 v0, p0

    invoke-virtual {v0, v12}, Ljava/io/PrintWriter;->print(I)V

    .line 20153
    const-string v26, ": "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20154
    move-object/from16 v0, p0

    invoke-virtual {v0, v13}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20155
    const/16 v26, 0x20

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 20156
    move-object/from16 v0, p0

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 20157
    const/16 v26, 0x2f

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 20158
    move-object/from16 v0, p0

    invoke-virtual {v0, v5}, Ljava/io/PrintWriter;->print(C)V

    .line 20159
    const/16 v26, 0x2f

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 20160
    move-object/from16 v0, p0

    invoke-virtual {v0, v14}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20161
    const-string v26, " trm:"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20162
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    move/from16 v26, v0

    const/16 v27, 0xa

    move/from16 v0, v26

    move/from16 v1, v27

    if-ge v0, v1, :cond_4

    const/16 v26, 0x20

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 20163
    :cond_4
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 20164
    const/16 v26, 0x20

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 20165
    invoke-virtual {v15}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;

    move-result-object v26

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20166
    const-string v26, " ("

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20167
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    move-object/from16 v26, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20168
    const/16 v26, 0x29

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(C)V

    .line 20169
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    move-object/from16 v26, v0

    if-nez v26, :cond_5

    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    move-object/from16 v26, v0

    if-eqz v26, :cond_6

    .line 20170
    :cond_5
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20171
    const-string v26, "    "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20172
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    instance-of v0, v0, Landroid/content/ComponentName;

    move/from16 v26, v0

    if-eqz v26, :cond_c

    .line 20173
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    move-object/from16 v26, v0

    check-cast v26, Landroid/content/ComponentName;

    invoke-virtual/range {v26 .. v26}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v26

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20179
    :goto_7
    const-string v26, "<="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20180
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    instance-of v0, v0, Lcom/android/server/am/ProcessRecord;

    move/from16 v26, v0

    if-eqz v26, :cond_e

    .line 20181
    const-string v26, "Proc{"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20182
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    move-object/from16 v26, v0

    check-cast v26, Lcom/android/server/am/ProcessRecord;

    invoke-virtual/range {v26 .. v26}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;

    move-result-object v26

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20183
    const-string/jumbo v26, "}"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20190
    :cond_6
    :goto_8
    if-eqz p6, :cond_8

    .line 20191
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20192
    const-string v26, "    "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20193
    const-string/jumbo v26, "oom: max="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 20194
    const-string v26, " curRaw="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 20195
    const-string v26, " setRaw="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->setRawAdj:I

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 20196
    const-string v26, " cur="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->curAdj:I

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 20197
    const-string v26, " set="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->setAdj:I

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(I)V

    .line 20198
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20199
    const-string v26, "    "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20200
    const-string/jumbo v26, "state: cur="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->curProcState:I

    move/from16 v26, v0

    invoke-static/range {v26 .. v26}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v26

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20201
    const-string v26, " set="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->setProcState:I

    move/from16 v26, v0

    invoke-static/range {v26 .. v26}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v26

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20202
    const-string v26, " lastPss="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->lastPss:J

    move-wide/from16 v26, v0

    const-wide/16 v28, 0x400

    mul-long v26, v26, v28

    move-object/from16 v0, p0

    move-wide/from16 v1, v26

    invoke-static {v0, v1, v2}, Landroid/util/DebugUtils;->printSizeValue(Ljava/io/PrintWriter;J)V

    .line 20203
    const-string v26, " lastCachedPss="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->lastCachedPss:J

    move-wide/from16 v26, v0

    const-wide/16 v28, 0x400

    mul-long v26, v26, v28

    move-object/from16 v0, p0

    move-wide/from16 v1, v26

    invoke-static {v0, v1, v2}, Landroid/util/DebugUtils;->printSizeValue(Ljava/io/PrintWriter;J)V

    .line 20204
    invoke-virtual/range {p0 .. p0}, Ljava/io/PrintWriter;->println()V

    .line 20205
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20206
    const-string v26, "    "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20207
    const-string v26, "cached="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->cached:Z

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Z)V

    .line 20208
    const-string v26, " empty="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->empty:Z

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Z)V

    .line 20209
    const-string v26, " hasAboveClient="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->hasAboveClient:Z

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Z)V

    .line 20211
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->setProcState:I

    move/from16 v26, v0

    const/16 v27, 0xa

    move/from16 v0, v26

    move/from16 v1, v27

    if-lt v0, v1, :cond_8

    .line 20212
    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->lastWakeTime:J

    move-wide/from16 v26, v0

    const-wide/16 v28, 0x0

    cmp-long v26, v26, v28

    if-eqz v26, :cond_7

    .line 20214
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v19

    .line 20215
    .local v19, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v19

    .line 20216
    :try_start_0
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v26, v0

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v27, v0

    move-object/from16 v0, v19

    move/from16 v1, v26

    move/from16 v2, v27

    invoke-virtual {v0, v1, v2, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessWakeTime(IIJ)J

    move-result-wide v24

    .line 20218
    .local v24, "wtime":J
    monitor-exit v19
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 20219
    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->lastWakeTime:J

    move-wide/from16 v26, v0

    sub-long v20, v24, v26

    .line 20220
    .local v20, "timeUsed":J
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20221
    const-string v26, "    "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20222
    const-string/jumbo v26, "keep awake over "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20223
    move-wide/from16 v0, v16

    move-object/from16 v2, p0

    invoke-static {v0, v1, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 20224
    const-string v26, " used "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20225
    move-wide/from16 v0, v20

    move-object/from16 v2, p0

    invoke-static {v0, v1, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 20226
    const-string v26, " ("

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20227
    const-wide/16 v26, 0x64

    mul-long v26, v26, v20

    div-long v26, v26, v16

    move-object/from16 v0, p0

    move-wide/from16 v1, v26

    invoke-virtual {v0, v1, v2}, Ljava/io/PrintWriter;->print(J)V

    .line 20228
    const-string v26, "%)"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20230
    .end local v19    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    .end local v20    # "timeUsed":J
    .end local v24    # "wtime":J
    :cond_7
    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    move-wide/from16 v26, v0

    const-wide/16 v28, 0x0

    cmp-long v26, v26, v28

    if-eqz v26, :cond_8

    .line 20231
    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    move-wide/from16 v26, v0

    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    move-wide/from16 v28, v0

    sub-long v20, v26, v28

    .line 20232
    .restart local v20    # "timeUsed":J
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20233
    const-string v26, "    "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20234
    const-string/jumbo v26, "run cpu over "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20235
    move-wide/from16 v0, v22

    move-object/from16 v2, p0

    invoke-static {v0, v1, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 20236
    const-string v26, " used "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20237
    move-wide/from16 v0, v20

    move-object/from16 v2, p0

    invoke-static {v0, v1, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 20238
    const-string v26, " ("

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20239
    const-wide/16 v26, 0x64

    mul-long v26, v26, v20

    div-long v26, v26, v22

    move-object/from16 v0, p0

    move-wide/from16 v1, v26

    invoke-virtual {v0, v1, v2}, Ljava/io/PrintWriter;->print(J)V

    .line 20240
    const-string v26, "%)"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20123
    .end local v20    # "timeUsed":J
    :cond_8
    add-int/lit8 v10, v10, -0x1

    goto/16 :goto_3

    .line 20129
    .end local v5    # "foreground":C
    .end local v12    # "num":I
    .end local v14    # "procState":Ljava/lang/String;
    .end local v18    # "schedGroup":C
    :pswitch_0
    const/16 v18, 0x42

    .line 20130
    .restart local v18    # "schedGroup":C
    goto/16 :goto_4

    .line 20132
    .end local v18    # "schedGroup":C
    :pswitch_1
    const/16 v18, 0x46

    .line 20133
    .restart local v18    # "schedGroup":C
    goto/16 :goto_4

    .line 20141
    :cond_9
    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    move/from16 v26, v0

    if-eqz v26, :cond_a

    .line 20142
    const/16 v5, 0x53

    .restart local v5    # "foreground":C
    goto/16 :goto_5

    .line 20144
    .end local v5    # "foreground":C
    :cond_a
    const/16 v5, 0x20

    .restart local v5    # "foreground":C
    goto/16 :goto_5

    .restart local v14    # "procState":Ljava/lang/String;
    :cond_b
    move-object/from16 v26, p4

    .line 20148
    goto/16 :goto_6

    .line 20174
    .restart local v12    # "num":I
    :cond_c
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    move-object/from16 v26, v0

    if-eqz v26, :cond_d

    .line 20175
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v26

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    goto/16 :goto_7

    .line 20177
    :cond_d
    const-string/jumbo v26, "{null}"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    goto/16 :goto_7

    .line 20184
    :cond_e
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    move-object/from16 v26, v0

    if-eqz v26, :cond_f

    .line 20185
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v26

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_8

    .line 20187
    :cond_f
    const-string/jumbo v26, "{null}"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_8

    .line 20218
    .restart local v19    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :catchall_0
    move-exception v26

    :try_start_1
    monitor-exit v19
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v26

    .line 20245
    .end local v5    # "foreground":C
    .end local v12    # "num":I
    .end local v13    # "oomAdj":Ljava/lang/String;
    .end local v14    # "procState":Ljava/lang/String;
    .end local v15    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v18    # "schedGroup":C
    .end local v19    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :cond_10
    const/16 v26, 0x1

    goto/16 :goto_2

    .line 20127
    nop

    :pswitch_data_0
    .packed-switch -0x1
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public static dumpStackTraces(ZLjava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker;Landroid/util/SparseArray;[Ljava/lang/String;)Ljava/io/File;
    .locals 17
    .param p0, "clearTraces"    # Z
    .param p2, "processCpuTracker"    # Lcom/android/internal/os/ProcessCpuTracker;
    .param p4, "nativeProcs"    # [Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(Z",
            "Ljava/util/ArrayList",
            "<",
            "Ljava/lang/Integer;",
            ">;",
            "Lcom/android/internal/os/ProcessCpuTracker;",
            "Landroid/util/SparseArray",
            "<",
            "Ljava/lang/Boolean;",
            ">;[",
            "Ljava/lang/String;",
            ")",
            "Ljava/io/File;"
        }
    .end annotation

    .prologue
    .line 7657
    .local p1, "firstPids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    .local p3, "lastPids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Boolean;>;"
    const-string/jumbo v13, "dalvik.vm.stack-trace-file"

    const/4 v14, 0x0

    invoke-static {v13, v14}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v12

    .line 7658
    .local v12, "tracesPath":Ljava/lang/String;
    if-eqz v12, :cond_0

    invoke-virtual {v12}, Ljava/lang/String;->length()I

    move-result v13

    if-nez v13, :cond_1

    .line 7659
    :cond_0
    const/4 v11, 0x0

    .line 7717
    :goto_0
    return-object v11

    .line 7662
    :cond_1
    new-instance v11, Ljava/io/File;

    invoke-direct {v11, v12}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 7664
    .local v11, "tracesFile":Ljava/io/File;
    :try_start_0
    invoke-virtual {v11}, Ljava/io/File;->getParentFile()Ljava/io/File;

    move-result-object v10

    .line 7665
    .local v10, "tracesDir":Ljava/io/File;
    invoke-virtual {v10}, Ljava/io/File;->exists()Z

    move-result v13

    if-nez v13, :cond_2

    .line 7666
    invoke-virtual {v10}, Ljava/io/File;->mkdirs()Z

    .line 7667
    invoke-static {v10}, Landroid/os/SELinux;->restorecon(Ljava/io/File;)Z

    move-result v13

    if-nez v13, :cond_2

    .line 7668
    const/4 v11, 0x0

    goto :goto_0

    .line 7671
    :cond_2
    invoke-virtual {v10}, Ljava/io/File;->getPath()Ljava/lang/String;

    move-result-object v13

    const/16 v14, 0x1fd

    const/4 v15, -0x1

    const/16 v16, -0x1

    invoke-static/range {v13 .. v16}, Landroid/os/FileUtils;->setPermissions(Ljava/lang/String;III)I

    .line 7673
    if-eqz p0, :cond_3

    invoke-virtual {v11}, Ljava/io/File;->exists()Z

    move-result v13

    if-eqz v13, :cond_3

    .line 7674
    invoke-static {}, Landroid/os/Debug;->isProductShip()I

    move-result v13

    const/4 v14, 0x1

    if-ne v13, v14, :cond_4

    .line 7675
    invoke-virtual {v11}, Ljava/io/File;->delete()Z

    .line 7709
    :cond_3
    :goto_1
    invoke-virtual {v11}, Ljava/io/File;->createNewFile()Z

    .line 7710
    invoke-virtual {v11}, Ljava/io/File;->getPath()Ljava/lang/String;

    move-result-object v13

    const/16 v14, 0x1b6

    const/4 v15, -0x1

    const/16 v16, -0x1

    invoke-static/range {v13 .. v16}, Landroid/os/FileUtils;->setPermissions(Ljava/lang/String;III)I
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 7716
    move-object/from16 v0, p1

    move-object/from16 v1, p2

    move-object/from16 v2, p3

    move-object/from16 v3, p4

    invoke-static {v12, v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->dumpStackTraces(Ljava/lang/String;Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker;Landroid/util/SparseArray;[Ljava/lang/String;)V

    goto :goto_0

    .line 7678
    :cond_4
    :try_start_1
    const-string/jumbo v13, "traces"

    const-string v14, ".txt"

    invoke-static {v13, v14}, Lcom/android/server/am/ActivityManagerService;->generateFilename(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v9

    .line 7679
    .local v9, "targetFileName":Ljava/lang/String;
    const-string v7, "/data/log/"

    .line 7680
    .local v7, "targetDirPath":Ljava/lang/String;
    new-instance v8, Ljava/io/File;

    new-instance v13, Ljava/lang/StringBuilder;

    invoke-direct {v13}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v13, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v13

    invoke-virtual {v13, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v13

    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v13

    invoke-direct {v8, v13}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 7682
    .local v8, "targetFile":Ljava/io/File;
    new-instance v6, Ljava/io/File;

    invoke-direct {v6, v7}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 7683
    .local v6, "targetDir":Ljava/io/File;
    invoke-virtual {v6}, Ljava/io/File;->exists()Z

    move-result v13

    if-nez v13, :cond_6

    .line 7684
    invoke-virtual {v6}, Ljava/io/File;->mkdirs()Z

    .line 7701
    :cond_5
    :goto_2
    invoke-virtual {v11, v8}, Ljava/io/File;->renameTo(Ljava/io/File;)Z

    .line 7703
    invoke-static {v8, v7}, Lcom/android/server/am/ActivityManagerService;->zipTraceFile(Ljava/io/File;Ljava/lang/String;)Z

    move-result v13

    if-eqz v13, :cond_3

    .line 7704
    invoke-virtual {v8}, Ljava/io/File;->delete()Z
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0

    goto :goto_1

    .line 7711
    .end local v6    # "targetDir":Ljava/io/File;
    .end local v7    # "targetDirPath":Ljava/lang/String;
    .end local v8    # "targetFile":Ljava/io/File;
    .end local v9    # "targetFileName":Ljava/lang/String;
    .end local v10    # "tracesDir":Ljava/io/File;
    :catch_0
    move-exception v4

    .line 7712
    .local v4, "e":Ljava/io/IOException;
    const-string v13, "ActivityManager"

    new-instance v14, Ljava/lang/StringBuilder;

    invoke-direct {v14}, Ljava/lang/StringBuilder;-><init>()V

    const-string v15, "Unable to prepare ANR traces file: "

    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v14

    invoke-virtual {v14, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v14

    invoke-virtual {v14}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v14

    invoke-static {v13, v14, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 7713
    const/4 v11, 0x0

    goto/16 :goto_0

    .line 7686
    .end local v4    # "e":Ljava/io/IOException;
    .restart local v6    # "targetDir":Ljava/io/File;
    .restart local v7    # "targetDirPath":Ljava/lang/String;
    .restart local v8    # "targetFile":Ljava/io/File;
    .restart local v9    # "targetFileName":Ljava/lang/String;
    .restart local v10    # "tracesDir":Ljava/io/File;
    :cond_6
    :try_start_2
    new-instance v13, Lcom/android/server/am/ActivityManagerService$5;

    invoke-direct {v13}, Lcom/android/server/am/ActivityManagerService$5;-><init>()V

    invoke-virtual {v6, v13}, Ljava/io/File;->listFiles(Ljava/io/FilenameFilter;)[Ljava/io/File;

    move-result-object v5

    .line 7695
    .local v5, "files":[Ljava/io/File;
    invoke-static {v5}, Ljava/util/Arrays;->sort([Ljava/lang/Object;)V

    .line 7696
    array-length v13, v5

    const/16 v14, 0x1e

    if-lt v13, v14, :cond_5

    .line 7697
    const/4 v13, 0x0

    aget-object v13, v5, v13

    invoke-virtual {v13}, Ljava/io/File;->delete()Z
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    goto :goto_2
.end method

.method private static dumpStackTraces(Ljava/lang/String;Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker;Landroid/util/SparseArray;[Ljava/lang/String;)V
    .locals 16
    .param p0, "tracesPath"    # Ljava/lang/String;
    .param p2, "processCpuTracker"    # Lcom/android/internal/os/ProcessCpuTracker;
    .param p4, "nativeProcs"    # [Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList",
            "<",
            "Ljava/lang/Integer;",
            ">;",
            "Lcom/android/internal/os/ProcessCpuTracker;",
            "Landroid/util/SparseArray",
            "<",
            "Ljava/lang/Boolean;",
            ">;[",
            "Ljava/lang/String;",
            ")V"
        }
    .end annotation

    .prologue
    .line 7724
    .local p1, "firstPids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    .local p3, "lastPids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Boolean;>;"
    new-instance v10, Lcom/android/server/am/ActivityManagerService$6;

    const/16 v14, 0x8

    move-object/from16 v0, p0

    invoke-direct {v10, v0, v14}, Lcom/android/server/am/ActivityManagerService$6;-><init>(Ljava/lang/String;I)V

    .line 7730
    .local v10, "observer":Landroid/os/FileObserver;
    :try_start_0
    invoke-virtual {v10}, Landroid/os/FileObserver;->startWatching()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    .line 7733
    if-eqz p1, :cond_0

    .line 7735
    :try_start_1
    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v8

    .line 7736
    .local v8, "num":I
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_0
    if-ge v5, v8, :cond_0

    .line 7737
    monitor-enter v10
    :try_end_1
    .catch Ljava/lang/InterruptedException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_3

    .line 7738
    :try_start_2
    move-object/from16 v0, p1

    invoke-virtual {v0, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Ljava/lang/Integer;

    invoke-virtual {v14}, Ljava/lang/Integer;->intValue()I

    move-result v14

    const/4 v15, 0x3

    invoke-static {v14, v15}, Landroid/os/Process;->sendSignal(II)V

    .line 7739
    const-wide/16 v14, 0xc8

    invoke-virtual {v10, v14, v15}, Ljava/lang/Object;->wait(J)V

    .line 7740
    monitor-exit v10

    .line 7736
    add-int/lit8 v5, v5, 0x1

    goto :goto_0

    .line 7740
    :catchall_0
    move-exception v14

    monitor-exit v10
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v14
    :try_end_3
    .catch Ljava/lang/InterruptedException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    .line 7742
    .end local v5    # "i":I
    .end local v8    # "num":I
    :catch_0
    move-exception v4

    .line 7743
    .local v4, "e":Ljava/lang/InterruptedException;
    :try_start_4
    const-string v14, "ActivityManager"

    invoke-static {v14, v4}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 7748
    .end local v4    # "e":Ljava/lang/InterruptedException;
    :cond_0
    if-eqz p4, :cond_1

    .line 7749
    invoke-static/range {p4 .. p4}, Landroid/os/Process;->getPidsForCommands([Ljava/lang/String;)[I

    move-result-object v12

    .line 7750
    .local v12, "pids":[I
    if-eqz v12, :cond_1

    .line 7751
    move-object v3, v12

    .local v3, "arr$":[I
    array-length v7, v3

    .local v7, "len$":I
    const/4 v6, 0x0

    .local v6, "i$":I
    :goto_1
    if-ge v6, v7, :cond_1

    aget v11, v3, v6

    .line 7752
    .local v11, "pid":I
    move-object/from16 v0, p0

    invoke-static {v11, v0}, Landroid/os/Debug;->dumpNativeBacktraceToFile(ILjava/lang/String;)V

    .line 7751
    add-int/lit8 v6, v6, 0x1

    goto :goto_1

    .line 7758
    .end local v3    # "arr$":[I
    .end local v6    # "i$":I
    .end local v7    # "len$":I
    .end local v11    # "pid":I
    .end local v12    # "pids":[I
    :cond_1
    if-eqz p2, :cond_3

    .line 7759
    invoke-virtual/range {p2 .. p2}, Lcom/android/internal/os/ProcessCpuTracker;->init()V

    .line 7760
    invoke-static {}, Ljava/lang/System;->gc()V

    .line 7761
    invoke-virtual/range {p2 .. p2}, Lcom/android/internal/os/ProcessCpuTracker;->update()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_3

    .line 7763
    :try_start_5
    monitor-enter p2
    :try_end_5
    .catch Ljava/lang/InterruptedException; {:try_start_5 .. :try_end_5} :catch_1
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    .line 7764
    const-wide/16 v14, 0x1f4

    :try_start_6
    move-object/from16 v0, p2

    invoke-virtual {v0, v14, v15}, Ljava/lang/Object;->wait(J)V

    .line 7765
    monitor-exit p2
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 7768
    :goto_2
    :try_start_7
    invoke-virtual/range {p2 .. p2}, Lcom/android/internal/os/ProcessCpuTracker;->update()V

    .line 7771
    invoke-virtual/range {p2 .. p2}, Lcom/android/internal/os/ProcessCpuTracker;->countWorkingStats()I

    move-result v2

    .line 7772
    .local v2, "N":I
    const/4 v9, 0x0

    .line 7773
    .local v9, "numProcs":I
    const/4 v5, 0x0

    .restart local v5    # "i":I
    :goto_3
    if-ge v5, v2, :cond_3

    const/4 v14, 0x5

    if-ge v9, v14, :cond_3

    .line 7774
    move-object/from16 v0, p2

    invoke-virtual {v0, v5}, Lcom/android/internal/os/ProcessCpuTracker;->getWorkingStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v13

    .line 7775
    .local v13, "stats":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    iget v14, v13, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move-object/from16 v0, p3

    invoke-virtual {v0, v14}, Landroid/util/SparseArray;->indexOfKey(I)I
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_3

    move-result v14

    if-ltz v14, :cond_2

    .line 7776
    add-int/lit8 v9, v9, 0x1

    .line 7778
    :try_start_8
    monitor-enter v10
    :try_end_8
    .catch Ljava/lang/InterruptedException; {:try_start_8 .. :try_end_8} :catch_2
    .catchall {:try_start_8 .. :try_end_8} :catchall_3

    .line 7779
    :try_start_9
    iget v14, v13, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    const/4 v15, 0x3

    invoke-static {v14, v15}, Landroid/os/Process;->sendSignal(II)V

    .line 7780
    const-wide/16 v14, 0xc8

    invoke-virtual {v10, v14, v15}, Ljava/lang/Object;->wait(J)V

    .line 7781
    monitor-exit v10
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    .line 7773
    :cond_2
    :goto_4
    add-int/lit8 v5, v5, 0x1

    goto :goto_3

    .line 7765
    .end local v2    # "N":I
    .end local v5    # "i":I
    .end local v9    # "numProcs":I
    .end local v13    # "stats":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :catchall_1
    move-exception v14

    :try_start_a
    monitor-exit p2
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_1

    :try_start_b
    throw v14
    :try_end_b
    .catch Ljava/lang/InterruptedException; {:try_start_b .. :try_end_b} :catch_1
    .catchall {:try_start_b .. :try_end_b} :catchall_3

    .line 7766
    :catch_1
    move-exception v14

    goto :goto_2

    .line 7781
    .restart local v2    # "N":I
    .restart local v5    # "i":I
    .restart local v9    # "numProcs":I
    .restart local v13    # "stats":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :catchall_2
    move-exception v14

    :try_start_c
    monitor-exit v10
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_2

    :try_start_d
    throw v14
    :try_end_d
    .catch Ljava/lang/InterruptedException; {:try_start_d .. :try_end_d} :catch_2
    .catchall {:try_start_d .. :try_end_d} :catchall_3

    .line 7782
    :catch_2
    move-exception v4

    .line 7783
    .restart local v4    # "e":Ljava/lang/InterruptedException;
    :try_start_e
    const-string v14, "ActivityManager"

    invoke-static {v14, v4}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_3

    goto :goto_4

    .line 7790
    .end local v2    # "N":I
    .end local v4    # "e":Ljava/lang/InterruptedException;
    .end local v5    # "i":I
    .end local v9    # "numProcs":I
    .end local v13    # "stats":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :catchall_3
    move-exception v14

    invoke-virtual {v10}, Landroid/os/FileObserver;->stopWatching()V

    throw v14

    :cond_3
    invoke-virtual {v10}, Landroid/os/FileObserver;->stopWatching()V

    .line 7792
    return-void
.end method

.method private enforceWriteSettingsPermission(Ljava/lang/String;)V
    .locals 7
    .param p1, "func"    # Ljava/lang/String;

    .prologue
    .line 24070
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 24071
    .local v3, "uid":I
    if-nez v3, :cond_1

    .line 24089
    :cond_0
    return-void

    .line 24075
    :cond_1
    const/4 v1, 0x0

    .line 24076
    .local v1, "pkgName":Ljava/lang/String;
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v5

    .line 24077
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v6

    invoke-virtual {v4, v6}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 24078
    .local v2, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v2, :cond_2

    .line 24079
    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 24081
    :cond_2
    monitor-exit v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 24083
    if-nez v1, :cond_3

    .line 24084
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v4, v3}, Landroid/provider/Settings;->getPackageNameForUid(Landroid/content/Context;I)Ljava/lang/String;

    move-result-object v1

    .line 24087
    :cond_3
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const/4 v5, 0x0

    invoke-static {v4, v3, v1, v5}, Landroid/provider/Settings;->checkAndNoteWriteSettingsOperation(Landroid/content/Context;ILjava/lang/String;Z)Z

    move-result v4

    if-nez v4, :cond_0

    .line 24092
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Permission Denial: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " from pid="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", uid="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " requires "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, "android.permission.WRITE_SETTINGS"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 24096
    .local v0, "msg":Ljava/lang/String;
    const-string v4, "ActivityManager"

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 24097
    new-instance v4, Ljava/lang/SecurityException;

    invoke-direct {v4, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 24081
    .end local v0    # "msg":Ljava/lang/String;
    .end local v2    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v4

    :try_start_1
    monitor-exit v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v4
.end method

.method private enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;Lcom/android/internal/os/IResultReceiver;Landroid/os/IBinder;ILandroid/os/Bundle;J)Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;
    .locals 12
    .param p1, "requestType"    # I
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "hint"    # Ljava/lang/String;
    .param p4, "receiver"    # Lcom/android/internal/os/IResultReceiver;
    .param p5, "activityToken"    # Landroid/os/IBinder;
    .param p6, "userHandle"    # I
    .param p7, "args"    # Landroid/os/Bundle;
    .param p8, "timeout"    # J

    .prologue
    .line 15919
    const-string v3, "android.permission.GET_TOP_ACTIVITY_INFO"

    const-string/jumbo v6, "enqueueAssistContext()"

    invoke-virtual {p0, v3, v6}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 15921
    monitor-enter p0

    .line 15922
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v3

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStack;->topActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v4

    .line 15923
    .local v4, "activity":Lcom/android/server/am/ActivityRecord;
    if-nez v4, :cond_0

    .line 15924
    const-string v3, "ActivityManager"

    const-string/jumbo v6, "getAssistContextExtras failed: no top activity"

    invoke-static {v3, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15925
    const/4 v2, 0x0

    monitor-exit p0

    .line 15956
    :goto_0
    return-object v2

    .line 15927
    :cond_0
    iget-object v3, v4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v3, :cond_1

    iget-object v3, v4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v3, :cond_2

    .line 15928
    :cond_1
    const-string v3, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "getAssistContextExtras failed: no process for "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v3, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15929
    const/4 v2, 0x0

    monitor-exit p0

    goto :goto_0

    .line 15957
    .end local v4    # "activity":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v3

    .line 15931
    .restart local v4    # "activity":Lcom/android/server/am/ActivityRecord;
    :cond_2
    if-eqz p5, :cond_3

    .line 15932
    :try_start_1
    invoke-static/range {p5 .. p5}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v10

    .line 15933
    .local v10, "caller":Lcom/android/server/am/ActivityRecord;
    if-eq v4, v10, :cond_3

    .line 15934
    const-string v3, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "enqueueAssistContext failed: caller "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " is not current top "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v3, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15936
    const/4 v2, 0x0

    monitor-exit p0

    goto :goto_0

    .line 15940
    .end local v10    # "caller":Lcom/android/server/am/ActivityRecord;
    :cond_3
    new-instance v5, Landroid/os/Bundle;

    invoke-direct {v5}, Landroid/os/Bundle;-><init>()V

    .line 15941
    .local v5, "extras":Landroid/os/Bundle;
    if-eqz p7, :cond_4

    .line 15942
    move-object/from16 v0, p7

    invoke-virtual {v5, v0}, Landroid/os/Bundle;->putAll(Landroid/os/Bundle;)V

    .line 15944
    :cond_4
    const-string v3, "android.intent.extra.ASSIST_PACKAGE"

    iget-object v6, v4, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-virtual {v5, v3, v6}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 15945
    const-string v3, "android.intent.extra.ASSIST_UID"

    iget-object v6, v4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v6, v6, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v5, v3, v6}, Landroid/os/Bundle;->putInt(Ljava/lang/String;I)V

    .line 15946
    new-instance v2, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    move-object v3, p0

    move-object v6, p2

    move-object v7, p3

    move-object/from16 v8, p4

    move/from16 v9, p6

    invoke-direct/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActivityRecord;Landroid/os/Bundle;Landroid/content/Intent;Ljava/lang/String;Lcom/android/internal/os/IResultReceiver;I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 15948
    .local v2, "pae":Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;
    :try_start_2
    iget-object v3, v4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    iget-object v6, v4, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    invoke-interface {v3, v6, v2, p1}, Landroid/app/IApplicationThread;->requestAssistContextExtras(Landroid/os/IBinder;Landroid/os/IBinder;I)V

    .line 15950
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPendingAssistExtras:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15951
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    move-wide/from16 v0, p8

    invoke-virtual {v3, v2, v0, v1}, Lcom/android/server/am/ActivityManagerService$UiHandler;->postDelayed(Ljava/lang/Runnable;J)Z
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 15956
    :try_start_3
    monitor-exit p0

    goto/16 :goto_0

    .line 15952
    :catch_0
    move-exception v11

    .line 15953
    .local v11, "e":Landroid/os/RemoteException;
    const-string v3, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "getAssistContextExtras failed: crash calling "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v3, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15954
    const/4 v2, 0x0

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto/16 :goto_0
.end method

.method private final enqueueUidChangeLocked(Lcom/android/server/am/UidRecord;Z)V
    .locals 3
    .param p1, "uidRec"    # Lcom/android/server/am/UidRecord;
    .param p2, "gone"    # Z

    .prologue
    .line 26034
    iget-object v1, p1, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    if-nez v1, :cond_1

    .line 26035
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingUidChanges:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-nez v1, :cond_0

    .line 26038
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    const/16 v2, 0x36

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$UiHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v1}, Landroid/os/Message;->sendToTarget()V

    .line 26040
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAvailUidChanges:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 26041
    .local v0, "NA":I
    if-lez v0, :cond_2

    .line 26042
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAvailUidChanges:Ljava/util/ArrayList;

    add-int/lit8 v2, v0, -0x1

    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/UidRecord$ChangeItem;

    iput-object v1, p1, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    .line 26050
    :goto_0
    iget-object v1, p1, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    iput-object p1, v1, Lcom/android/server/am/UidRecord$ChangeItem;->uidRecord:Lcom/android/server/am/UidRecord;

    .line 26051
    iget-object v1, p1, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    iget v2, p1, Lcom/android/server/am/UidRecord;->uid:I

    iput v2, v1, Lcom/android/server/am/UidRecord$ChangeItem;->uid:I

    .line 26052
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingUidChanges:Ljava/util/ArrayList;

    iget-object v2, p1, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 26054
    .end local v0    # "NA":I
    :cond_1
    iget-object v1, p1, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    iput-boolean p2, v1, Lcom/android/server/am/UidRecord$ChangeItem;->gone:Z

    .line 26055
    iget-object v1, p1, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    iget v2, p1, Lcom/android/server/am/UidRecord;->setProcState:I

    iput v2, v1, Lcom/android/server/am/UidRecord$ChangeItem;->processState:I

    .line 26056
    return-void

    .line 26046
    .restart local v0    # "NA":I
    :cond_2
    new-instance v1, Lcom/android/server/am/UidRecord$ChangeItem;

    invoke-direct {v1}, Lcom/android/server/am/UidRecord$ChangeItem;-><init>()V

    iput-object v1, p1, Lcom/android/server/am/UidRecord;->pendingChange:Lcom/android/server/am/UidRecord$ChangeItem;

    goto :goto_0
.end method

.method private fillInProcMemInfo(Lcom/android/server/am/ProcessRecord;Landroid/app/ActivityManager$RunningAppProcessInfo;)V
    .locals 3
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "outInfo"    # Landroid/app/ActivityManager$RunningAppProcessInfo;

    .prologue
    .line 18383
    iget v2, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->pid:I

    .line 18384
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->uid:I

    .line 18385
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-ne v2, p1, :cond_0

    .line 18386
    iget v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    or-int/lit8 v2, v2, 0x1

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    .line 18388
    :cond_0
    iget-boolean v2, p1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v2, :cond_1

    .line 18389
    iget v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    or-int/lit8 v2, v2, 0x2

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    .line 18391
    :cond_1
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-lez v2, :cond_2

    .line 18392
    iget v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    or-int/lit8 v2, v2, 0x4

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    .line 18394
    :cond_2
    iget v2, p1, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->lastTrimLevel:I

    .line 18395
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 18396
    .local v0, "adj":I
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 18397
    .local v1, "procState":I
    invoke-static {v1, v0, p2}, Lcom/android/server/am/ActivityManagerService;->procStateToImportance(IILandroid/app/ActivityManager$RunningAppProcessInfo;)I

    move-result v2

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->importance:I

    .line 18398
    iget v2, p1, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonCode:I

    .line 18399
    iget v2, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->processState:I

    .line 18400
    return-void
.end method

.method private findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;
    .locals 10
    .param p1, "app"    # Landroid/os/IBinder;
    .param p2, "reason"    # Ljava/lang/String;

    .prologue
    const/4 v6, 0x0

    .line 17891
    if-nez p1, :cond_0

    move-object v5, v6

    .line 17911
    :goto_0
    return-object v5

    .line 17895
    :cond_0
    monitor-enter p0

    .line 17896
    :try_start_0
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v7}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v7

    invoke-virtual {v7}, Landroid/util/ArrayMap;->size()I

    move-result v1

    .line 17897
    .local v1, "NP":I
    const/4 v4, 0x0

    .local v4, "ip":I
    :goto_1
    if-ge v4, v1, :cond_3

    .line 17898
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v7}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v7

    invoke-virtual {v7, v4}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/util/SparseArray;

    .line 17899
    .local v2, "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v0

    .line 17900
    .local v0, "NA":I
    const/4 v3, 0x0

    .local v3, "ia":I
    :goto_2
    if-ge v3, v0, :cond_2

    .line 17901
    invoke-virtual {v2, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ProcessRecord;

    .line 17902
    .local v5, "p":Lcom/android/server/am/ProcessRecord;
    iget-object v7, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v7, :cond_1

    iget-object v7, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v7}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v7

    if-ne v7, p1, :cond_1

    .line 17903
    monitor-exit p0

    goto :goto_0

    .line 17912
    .end local v0    # "NA":I
    .end local v1    # "NP":I
    .end local v2    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v3    # "ia":I
    .end local v4    # "ip":I
    .end local v5    # "p":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v6

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v6

    .line 17900
    .restart local v0    # "NA":I
    .restart local v1    # "NP":I
    .restart local v2    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v3    # "ia":I
    .restart local v4    # "ip":I
    .restart local v5    # "p":Lcom/android/server/am/ProcessRecord;
    :cond_1
    add-int/lit8 v3, v3, 0x1

    goto :goto_2

    .line 17897
    .end local v5    # "p":Lcom/android/server/am/ProcessRecord;
    :cond_2
    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    .line 17908
    .end local v0    # "NA":I
    .end local v2    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v3    # "ia":I
    :cond_3
    :try_start_1
    const-string v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Can\'t find mystery application for "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " from pid="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " uid="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, ": "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 17911
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-object v5, v6

    goto :goto_0
.end method

.method private findOrCreateUriPermissionLocked(Ljava/lang/String;Ljava/lang/String;ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;
    .locals 3
    .param p1, "sourcePkg"    # Ljava/lang/String;
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "targetUid"    # I
    .param p4, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;

    .prologue
    .line 11449
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v2, p3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/util/ArrayMap;

    .line 11450
    .local v1, "targetUris":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-nez v1, :cond_0

    .line 11451
    invoke-static {}, Lcom/google/android/collect/Maps;->newArrayMap()Landroid/util/ArrayMap;

    move-result-object v1

    .line 11452
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v2, p3, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 11455
    :cond_0
    invoke-virtual {v1, p4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/UriPermission;

    .line 11456
    .local v0, "perm":Lcom/android/server/am/UriPermission;
    if-nez v0, :cond_1

    .line 11457
    new-instance v0, Lcom/android/server/am/UriPermission;

    .end local v0    # "perm":Lcom/android/server/am/UriPermission;
    invoke-direct {v0, p1, p2, p3, p4}, Lcom/android/server/am/UriPermission;-><init>(Ljava/lang/String;Ljava/lang/String;ILcom/android/server/am/ActivityManagerService$GrantUri;)V

    .line 11458
    .restart local v0    # "perm":Lcom/android/server/am/UriPermission;
    invoke-virtual {v1, p4, v0}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 11461
    :cond_1
    return-object v0
.end method

.method private findProcessLocked(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;
    .locals 15
    .param p1, "process"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "callName"    # Ljava/lang/String;

    .prologue
    .line 27176
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    const/4 v5, 0x1

    const/4 v6, 0x2

    const/4 v8, 0x0

    move-object v1, p0

    move/from16 v4, p2

    move-object/from16 v7, p3

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    .line 27178
    const/4 v12, 0x0

    .line 27180
    .local v12, "proc":Lcom/android/server/am/ProcessRecord;
    :try_start_0
    invoke-static/range {p1 .. p1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v11

    .line 27181
    .local v11, "pid":I
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v2
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    .line 27182
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v1, v11}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    move-object v0, v1

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    move-object v12, v0

    .line 27183
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 27187
    .end local v11    # "pid":I
    :goto_0
    if-nez v12, :cond_0

    .line 27188
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v1}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v9

    .line 27190
    .local v9, "all":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;>;"
    move-object/from16 v0, p1

    invoke-virtual {v9, v0}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Landroid/util/SparseArray;

    .line 27191
    .local v13, "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    if-eqz v13, :cond_0

    invoke-virtual {v13}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-lez v1, :cond_0

    .line 27192
    const/4 v1, 0x0

    invoke-virtual {v13, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v12

    .end local v12    # "proc":Lcom/android/server/am/ProcessRecord;
    check-cast v12, Lcom/android/server/am/ProcessRecord;

    .line 27193
    .restart local v12    # "proc":Lcom/android/server/am/ProcessRecord;
    const/4 v1, -0x1

    move/from16 v0, p2

    if-eq v0, v1, :cond_0

    iget v1, v12, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v0, p2

    if-eq v1, v0, :cond_0

    .line 27194
    const/4 v10, 0x1

    .local v10, "i":I
    :goto_1
    invoke-virtual {v13}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-ge v10, v1, :cond_0

    .line 27195
    invoke-virtual {v13, v10}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/android/server/am/ProcessRecord;

    .line 27196
    .local v14, "thisProc":Lcom/android/server/am/ProcessRecord;
    iget v1, v14, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v0, p2

    if-ne v1, v0, :cond_1

    .line 27197
    move-object v12, v14

    .line 27205
    .end local v9    # "all":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;>;"
    .end local v10    # "i":I
    .end local v13    # "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v14    # "thisProc":Lcom/android/server/am/ProcessRecord;
    :cond_0
    return-object v12

    .line 27183
    .restart local v11    # "pid":I
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v1
    :try_end_3
    .catch Ljava/lang/NumberFormatException; {:try_start_3 .. :try_end_3} :catch_0

    .line 27184
    .end local v11    # "pid":I
    :catch_0
    move-exception v1

    goto :goto_0

    .line 27194
    .restart local v9    # "all":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;>;"
    .restart local v10    # "i":I
    .restart local v13    # "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v14    # "thisProc":Lcom/android/server/am/ProcessRecord;
    :cond_1
    add-int/lit8 v10, v10, 0x1

    goto :goto_1
.end method

.method private findUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;
    .locals 2
    .param p1, "targetUid"    # I
    .param p2, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;

    .prologue
    .line 11440
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/ArrayMap;

    .line 11441
    .local v0, "targetUris":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-eqz v0, :cond_0

    .line 11442
    invoke-virtual {v0, p2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/UriPermission;

    .line 11444
    :goto_0
    return-object v1

    :cond_0
    const/4 v1, 0x0

    goto :goto_0
.end method

.method private forceStopPackageLocked(Ljava/lang/String;ILjava/lang/String;)V
    .locals 18
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .param p3, "reason"    # Ljava/lang/String;

    .prologue
    .line 8636
    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x0

    const/4 v8, 0x0

    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v9

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v10, p3

    invoke-direct/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 8638
    new-instance v4, Landroid/content/Intent;

    const-string v1, "android.intent.action.PACKAGE_RESTARTED"

    const-string/jumbo v2, "package"

    const/4 v3, 0x0

    move-object/from16 v0, p1

    invoke-static {v2, v0, v3}, Landroid/net/Uri;->fromParts(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v2

    invoke-direct {v4, v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 8640
    .local v4, "intent":Landroid/content/Intent;
    move-object/from16 v0, p0

    iget-boolean v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v1, :cond_0

    .line 8641
    const/high16 v1, 0x50000000

    invoke-virtual {v4, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 8644
    :cond_0
    const-string v1, "android.intent.extra.UID"

    move/from16 v0, p2

    invoke-virtual {v4, v1, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 8645
    const-string v1, "android.intent.extra.user_handle"

    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    invoke-virtual {v4, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 8646
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, -0x1

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    sget v15, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v16, 0x3e8

    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v17

    move-object/from16 v1, p0

    invoke-direct/range {v1 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 8649
    return-void
.end method

.method private final forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z
    .locals 24
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "appId"    # I
    .param p3, "callerWillRestart"    # Z
    .param p4, "purgeCache"    # Z
    .param p5, "doit"    # Z
    .param p6, "evenPersistent"    # Z
    .param p7, "uninstalling"    # Z
    .param p8, "userId"    # I
    .param p9, "reason"    # Ljava/lang/String;

    .prologue
    .line 8866
    const/4 v3, -0x1

    move/from16 v0, p8

    if-ne v0, v3, :cond_0

    if-nez p1, :cond_0

    .line 8867
    const-string v3, "ActivityManager"

    const-string v4, "Can\'t force stop all processes of all users, that is insane!"

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8870
    :cond_0
    if-gez p2, :cond_1

    if-eqz p1, :cond_1

    .line 8872
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v3

    const/4 v4, 0x0

    move-object/from16 v0, p1

    invoke-interface {v3, v0, v4}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I

    move-result v3

    invoke-static {v3}, Landroid/os/UserHandle;->getAppId(I)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result p2

    .line 8878
    :cond_1
    :goto_0
    if-eqz p5, :cond_9

    .line 8879
    if-eqz p1, :cond_4

    .line 8880
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Force stopping "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " appid="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " user="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p8

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ": "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p9

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 8886
    :goto_1
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v3}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v21

    .line 8887
    .local v21, "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Ljava/lang/Long;>;>;"
    invoke-virtual/range {v21 .. v21}, Landroid/util/ArrayMap;->size()I

    move-result v3

    add-int/lit8 v18, v3, -0x1

    .local v18, "ip":I
    :goto_2
    if-ltz v18, :cond_a

    .line 8888
    move-object/from16 v0, v21

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Landroid/util/SparseArray;

    .line 8889
    .local v14, "ba":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Long;>;"
    invoke-virtual {v14}, Landroid/util/SparseArray;->size()I

    move-result v3

    add-int/lit8 v17, v3, -0x1

    .local v17, "i":I
    :goto_3
    if-ltz v17, :cond_7

    .line 8890
    const/16 v22, 0x0

    .line 8891
    .local v22, "remove":Z
    move/from16 v0, v17

    invoke-virtual {v14, v0}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v16

    .line 8892
    .local v16, "entUid":I
    if-eqz p1, :cond_6

    .line 8893
    const/4 v3, -0x1

    move/from16 v0, p8

    if-ne v0, v3, :cond_5

    .line 8894
    invoke-static/range {v16 .. v16}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    move/from16 v0, p2

    if-ne v3, v0, :cond_2

    .line 8895
    const/16 v22, 0x1

    .line 8905
    :cond_2
    :goto_4
    if-eqz v22, :cond_3

    .line 8906
    move/from16 v0, v17

    invoke-virtual {v14, v0}, Landroid/util/SparseArray;->removeAt(I)V

    .line 8889
    :cond_3
    add-int/lit8 v17, v17, -0x1

    goto :goto_3

    .line 8883
    .end local v14    # "ba":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Long;>;"
    .end local v16    # "entUid":I
    .end local v17    # "i":I
    .end local v18    # "ip":I
    .end local v21    # "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Ljava/lang/Long;>;>;"
    .end local v22    # "remove":Z
    :cond_4
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Force stopping u"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p8

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ": "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p9

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 8898
    .restart local v14    # "ba":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Long;>;"
    .restart local v16    # "entUid":I
    .restart local v17    # "i":I
    .restart local v18    # "ip":I
    .restart local v21    # "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Ljava/lang/Long;>;>;"
    .restart local v22    # "remove":Z
    :cond_5
    move/from16 v0, p8

    move/from16 v1, p2

    invoke-static {v0, v1}, Landroid/os/UserHandle;->getUid(II)I

    move-result v3

    move/from16 v0, v16

    if-ne v0, v3, :cond_2

    .line 8899
    const/16 v22, 0x1

    goto :goto_4

    .line 8902
    :cond_6
    invoke-static/range {v16 .. v16}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v3

    move/from16 v0, p8

    if-ne v3, v0, :cond_2

    .line 8903
    const/16 v22, 0x1

    goto :goto_4

    .line 8909
    .end local v16    # "entUid":I
    .end local v22    # "remove":Z
    :cond_7
    invoke-virtual {v14}, Landroid/util/SparseArray;->size()I

    move-result v3

    if-nez v3, :cond_8

    .line 8910
    move-object/from16 v0, v21

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->removeAt(I)Ljava/lang/Object;

    .line 8887
    :cond_8
    add-int/lit8 v18, v18, -0x1

    goto/16 :goto_2

    .line 8914
    .end local v14    # "ba":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Long;>;"
    .end local v17    # "i":I
    .end local v18    # "ip":I
    .end local v21    # "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Ljava/lang/Long;>;>;"
    :cond_9
    sget-boolean v3, Lcom/android/server/am/ActivityManagerDebugConfig;->SAFE_DEBUG:Z

    if-eqz v3, :cond_a

    .line 8915
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Force stopping "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " appid="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " user="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p8

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ": "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p9

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", doit=false"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 8918
    :cond_a
    const/16 v7, -0x64

    const/4 v9, 0x1

    if-nez p1, :cond_c

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "stop user "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, p8

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    :goto_5
    move-object/from16 v3, p0

    move-object/from16 v4, p1

    move/from16 v5, p2

    move/from16 v6, p8

    move/from16 v8, p3

    move/from16 v10, p5

    move/from16 v11, p6

    invoke-direct/range {v3 .. v12}, Lcom/android/server/am/ActivityManagerService;->killPackageProcessesLocked(Ljava/lang/String;IIIZZZZLjava/lang/String;)Z

    move-result v15

    .line 8928
    .local v15, "didSomething":Z
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v3

    const-string v4, "CscFeature_Common_SupportDeviceReporting"

    invoke-virtual {v3, v4}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_b

    if-eqz p5, :cond_b

    if-eqz v15, :cond_b

    .line 8932
    const/16 v3, 0x190

    const/4 v4, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, p2

    invoke-direct {v0, v3, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->sendAppStateMsg(ILjava/lang/String;II)V

    .line 8936
    :cond_b
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v5, 0x0

    move-object/from16 v4, p1

    move/from16 v6, p5

    move/from16 v7, p6

    move/from16 v8, p8

    invoke-virtual/range {v3 .. v8}, Lcom/android/server/am/ActivityStackSupervisor;->finishDisabledPackageActivitiesLocked(Ljava/lang/String;Ljava/util/Set;ZZI)Z

    move-result v3

    if-eqz v3, :cond_e

    .line 8938
    if-nez p5, :cond_d

    .line 8939
    const/4 v3, 0x1

    .line 9052
    :goto_6
    return v3

    .line 8918
    .end local v15    # "didSomething":Z
    :cond_c
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "stop "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " cause "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p9

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    goto :goto_5

    .line 8941
    .restart local v15    # "didSomething":Z
    :cond_d
    const/4 v15, 0x1

    .line 8944
    :cond_e
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v5, 0x0

    const/4 v8, 0x1

    move-object/from16 v4, p1

    move/from16 v6, p8

    move/from16 v7, p6

    move/from16 v9, p5

    invoke-virtual/range {v3 .. v9}, Lcom/android/server/am/ActiveServices;->bringDownDisabledPackageServicesLocked(Ljava/lang/String;Ljava/util/Set;IZZZ)Z

    move-result v3

    if-eqz v3, :cond_10

    .line 8946
    if-nez p5, :cond_f

    .line 8947
    const/4 v3, 0x1

    goto :goto_6

    .line 8949
    :cond_f
    const/4 v15, 0x1

    .line 8952
    :cond_10
    if-nez p1, :cond_11

    .line 8954
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, p8

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->remove(I)V

    .line 8957
    :cond_11
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    .line 8958
    .local v9, "providers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ContentProviderRecord;>;"
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    const/4 v5, 0x0

    move-object/from16 v4, p1

    move/from16 v6, p5

    move/from16 v7, p6

    move/from16 v8, p8

    invoke-virtual/range {v3 .. v9}, Lcom/android/server/am/ProviderMap;->collectPackageProvidersLocked(Ljava/lang/String;Ljava/util/Set;ZZILjava/util/ArrayList;)Z

    move-result v3

    if-eqz v3, :cond_13

    .line 8960
    if-nez p5, :cond_12

    .line 8961
    const/4 v3, 0x1

    goto :goto_6

    .line 8963
    :cond_12
    const/4 v15, 0x1

    .line 8965
    :cond_13
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v17, v3, -0x1

    .restart local v17    # "i":I
    :goto_7
    if-ltz v17, :cond_14

    .line 8966
    const/4 v4, 0x0

    move/from16 v0, v17

    invoke-virtual {v9, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ContentProviderRecord;

    const/4 v5, 0x1

    move-object/from16 v0, p0

    invoke-direct {v0, v4, v3, v5}, Lcom/android/server/am/ActivityManagerService;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z

    .line 8965
    add-int/lit8 v17, v17, -0x1

    goto :goto_7

    .line 8970
    :cond_14
    const/4 v3, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, p8

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionsForPackageLocked(Ljava/lang/String;IZ)V

    .line 8972
    if-eqz p5, :cond_15

    .line 8973
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v3, v3

    add-int/lit8 v17, v3, -0x1

    :goto_8
    if-ltz v17, :cond_15

    .line 8974
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object v3, v3, v17

    const/4 v4, 0x0

    move-object/from16 v0, p1

    move/from16 v1, p8

    move/from16 v2, p5

    invoke-virtual {v3, v0, v4, v1, v2}, Lcom/android/server/am/BroadcastQueue;->cleanupDisabledPackageReceiversLocked(Ljava/lang/String;Ljava/util/Set;IZ)Z

    move-result v3

    or-int/2addr v15, v3

    .line 8973
    add-int/lit8 v17, v17, -0x1

    goto :goto_8

    .line 8979
    :cond_15
    if-eqz p1, :cond_16

    if-eqz p7, :cond_1e

    .line 8984
    :cond_16
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->size()I

    move-result v3

    if-lez v3, :cond_1e

    .line 8985
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v19

    .line 8987
    .local v19, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;>;"
    :cond_17
    :goto_9
    invoke-interface/range {v19 .. v19}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_1e

    .line 8988
    invoke-interface/range {v19 .. v19}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v23

    check-cast v23, Ljava/lang/ref/WeakReference;

    .line 8989
    .local v23, "wpir":Ljava/lang/ref/WeakReference;, "Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;"
    if-nez v23, :cond_18

    .line 8990
    invoke-interface/range {v19 .. v19}, Ljava/util/Iterator;->remove()V

    goto :goto_9

    .line 8993
    :cond_18
    invoke-virtual/range {v23 .. v23}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v20

    check-cast v20, Lcom/android/server/am/PendingIntentRecord;

    .line 8994
    .local v20, "pir":Lcom/android/server/am/PendingIntentRecord;
    if-nez v20, :cond_19

    .line 8995
    invoke-interface/range {v19 .. v19}, Ljava/util/Iterator;->remove()V

    goto :goto_9

    .line 8998
    :cond_19
    if-nez p1, :cond_1b

    .line 9000
    move-object/from16 v0, v20

    iget-object v3, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->userId:I

    move/from16 v0, p8

    if-ne v3, v0, :cond_17

    .line 9018
    :cond_1a
    if-nez p5, :cond_1d

    .line 9019
    const/4 v3, 0x1

    goto/16 :goto_6

    .line 9005
    :cond_1b
    move-object/from16 v0, v20

    iget v3, v0, Lcom/android/server/am/PendingIntentRecord;->uid:I

    invoke-static {v3}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    move/from16 v0, p2

    if-ne v3, v0, :cond_17

    .line 9009
    const/4 v3, -0x1

    move/from16 v0, p8

    if-eq v0, v3, :cond_1c

    move-object/from16 v0, v20

    iget-object v3, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->userId:I

    move/from16 v0, p8

    if-ne v3, v0, :cond_17

    .line 9013
    :cond_1c
    move-object/from16 v0, v20

    iget-object v3, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_1a

    goto :goto_9

    .line 9021
    :cond_1d
    const/4 v15, 0x1

    .line 9022
    invoke-interface/range {v19 .. v19}, Ljava/util/Iterator;->remove()V

    .line 9023
    const/4 v3, 0x1

    move-object/from16 v0, v20

    iput-boolean v3, v0, Lcom/android/server/am/PendingIntentRecord;->canceled:Z

    .line 9024
    move-object/from16 v0, v20

    iget-object v3, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;

    if-eqz v3, :cond_17

    move-object/from16 v0, v20

    iget-object v3, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;

    iget-object v3, v3, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    if-eqz v3, :cond_17

    .line 9025
    move-object/from16 v0, v20

    iget-object v3, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;

    iget-object v3, v3, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    move-object/from16 v0, v20

    iget-object v4, v0, Lcom/android/server/am/PendingIntentRecord;->ref:Ljava/lang/ref/WeakReference;

    invoke-virtual {v3, v4}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z

    goto/16 :goto_9

    .line 9031
    .end local v19    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;>;"
    .end local v20    # "pir":Lcom/android/server/am/PendingIntentRecord;
    .end local v23    # "wpir":Ljava/lang/ref/WeakReference;, "Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;"
    :cond_1e
    if-eqz p5, :cond_20

    .line 9032
    if-eqz p4, :cond_1f

    if-eqz p1, :cond_1f

    .line 9033
    invoke-static {}, Lcom/android/server/AttributeCache;->instance()Lcom/android/server/AttributeCache;

    move-result-object v13

    .line 9034
    .local v13, "ac":Lcom/android/server/AttributeCache;
    if-eqz v13, :cond_1f

    .line 9035
    move-object/from16 v0, p1

    invoke-virtual {v13, v0}, Lcom/android/server/AttributeCache;->removePackage(Ljava/lang/String;)V

    .line 9038
    .end local v13    # "ac":Lcom/android/server/AttributeCache;
    :cond_1f
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-eqz v3, :cond_20

    .line 9039
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    .line 9048
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->scheduleIdleLocked()V

    :cond_20
    move v3, v15

    .line 9052
    goto/16 :goto_6

    .line 8874
    .end local v9    # "providers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ContentProviderRecord;>;"
    .end local v15    # "didSomething":Z
    .end local v17    # "i":I
    :catch_0
    move-exception v3

    goto/16 :goto_0
.end method

.method private forceStopUserLocked(ILjava/lang/String;)V
    .locals 18
    .param p1, "userId"    # I
    .param p2, "reason"    # Ljava/lang/String;

    .prologue
    .line 8652
    const/4 v2, 0x0

    const/4 v3, -0x1

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move/from16 v9, p1

    move-object/from16 v10, p2

    invoke-direct/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 8653
    new-instance v4, Landroid/content/Intent;

    const-string v1, "android.intent.action.USER_STOPPED"

    invoke-direct {v4, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 8654
    .local v4, "intent":Landroid/content/Intent;
    const/high16 v1, 0x50000000

    invoke-virtual {v4, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 8656
    const-string v1, "android.intent.extra.user_handle"

    move/from16 v0, p1

    invoke-virtual {v4, v1, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 8657
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, -0x1

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    sget v15, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v16, 0x3e8

    const/16 v17, -0x1

    move-object/from16 v1, p0

    invoke-direct/range {v1 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 8660
    return-void
.end method

.method private final generateApplicationProvidersLocked(Lcom/android/server/am/ProcessRecord;)Ljava/util/List;
    .locals 13
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/android/server/am/ProcessRecord;",
            ")",
            "Ljava/util/List",
            "<",
            "Landroid/content/pm/ProviderInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 13802
    const/4 v8, 0x0

    .line 13804
    .local v8, "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v11, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    const/16 v12, 0xc00

    invoke-interface {v1, v3, v11, v12}, Landroid/content/pm/IPackageManager;->queryContentProviders(Ljava/lang/String;II)Landroid/content/pm/ParceledListSlice;

    move-result-object v9

    .line 13807
    .local v9, "slice":Landroid/content/pm/ParceledListSlice;, "Landroid/content/pm/ParceledListSlice<Landroid/content/pm/ProviderInfo;>;"
    if-eqz v9, :cond_0

    invoke-virtual {v9}, Landroid/content/pm/ParceledListSlice;->getList()Ljava/util/List;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v8

    .line 13812
    .end local v9    # "slice":Landroid/content/pm/ParceledListSlice;, "Landroid/content/pm/ParceledListSlice<Landroid/content/pm/ProviderInfo;>;"
    :goto_0
    iget v10, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 13813
    .local v10, "userId":I
    if-eqz v8, :cond_5

    .line 13814
    invoke-interface {v8}, Ljava/util/List;->size()I

    move-result v6

    .line 13815
    .local v6, "N":I
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v3

    add-int/2addr v3, v6

    invoke-virtual {v1, v3}, Landroid/util/ArrayMap;->ensureCapacity(I)V

    .line 13816
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_1
    if-ge v7, v6, :cond_5

    .line 13817
    invoke-interface {v8, v7}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/ProviderInfo;

    .line 13819
    .local v2, "cpi":Landroid/content/pm/ProviderInfo;
    iget-object v1, v2, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    iget-object v3, v2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v11, v2, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    iget v12, v2, Landroid/content/pm/ProviderInfo;->flags:I

    invoke-virtual {p0, v1, v3, v11, v12}, Lcom/android/server/am/ActivityManagerService;->isSingleton(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)Z

    move-result v5

    .line 13821
    .local v5, "singleton":Z
    if-eqz v5, :cond_1

    iget v1, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    if-eqz v1, :cond_1

    .line 13826
    invoke-interface {v8, v7}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 13827
    add-int/lit8 v6, v6, -0x1

    .line 13828
    add-int/lit8 v7, v7, -0x1

    .line 13816
    :goto_2
    add-int/lit8 v7, v7, 0x1

    goto :goto_1

    .line 13807
    .end local v2    # "cpi":Landroid/content/pm/ProviderInfo;
    .end local v5    # "singleton":Z
    .end local v6    # "N":I
    .end local v7    # "i":I
    .end local v10    # "userId":I
    .restart local v9    # "slice":Landroid/content/pm/ParceledListSlice;, "Landroid/content/pm/ParceledListSlice<Landroid/content/pm/ProviderInfo;>;"
    :cond_0
    const/4 v8, 0x0

    goto :goto_0

    .line 13832
    .end local v9    # "slice":Landroid/content/pm/ParceledListSlice;, "Landroid/content/pm/ParceledListSlice<Landroid/content/pm/ProviderInfo;>;"
    .restart local v2    # "cpi":Landroid/content/pm/ProviderInfo;
    .restart local v5    # "singleton":Z
    .restart local v6    # "N":I
    .restart local v7    # "i":I
    .restart local v10    # "userId":I
    :cond_1
    new-instance v4, Landroid/content/ComponentName;

    iget-object v1, v2, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    iget-object v3, v2, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-direct {v4, v1, v3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 13833
    .local v4, "comp":Landroid/content/ComponentName;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v1, v4, v10}, Lcom/android/server/am/ProviderMap;->getProviderByClass(Landroid/content/ComponentName;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v0

    .line 13834
    .local v0, "cpr":Lcom/android/server/am/ContentProviderRecord;
    if-nez v0, :cond_2

    .line 13835
    new-instance v0, Lcom/android/server/am/ContentProviderRecord;

    .end local v0    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object v1, p0

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ContentProviderRecord;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/content/pm/ProviderInfo;Landroid/content/pm/ApplicationInfo;Landroid/content/ComponentName;Z)V

    .line 13836
    .restart local v0    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v1, v4, v0}, Lcom/android/server/am/ProviderMap;->putProviderByClass(Landroid/content/ComponentName;Lcom/android/server/am/ContentProviderRecord;)V

    .line 13840
    :cond_2
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    iget-object v3, v2, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v1, v3, v0}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 13841
    iget-boolean v1, v2, Landroid/content/pm/ProviderInfo;->multiprocess:Z

    if-eqz v1, :cond_3

    const-string v1, "android"

    iget-object v3, v2, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_4

    .line 13846
    :cond_3
    iget-object v1, v2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v3, v2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->versionCode:I

    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {p1, v1, v3, v11}, Lcom/android/server/am/ProcessRecord;->addPackage(Ljava/lang/String;ILcom/android/server/am/ProcessStatsService;)Z

    .line 13849
    :cond_4
    iget-object v1, v2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->ensurePackageDexOpt(Ljava/lang/String;)V

    goto :goto_2

    .line 13852
    .end local v0    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v2    # "cpi":Landroid/content/pm/ProviderInfo;
    .end local v4    # "comp":Landroid/content/ComponentName;
    .end local v5    # "singleton":Z
    .end local v6    # "N":I
    .end local v7    # "i":I
    :cond_5
    return-object v8

    .line 13808
    .end local v10    # "userId":I
    :catch_0
    move-exception v1

    goto/16 :goto_0
.end method

.method private static generateFilename(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    .locals 6
    .param p0, "filePrefix"    # Ljava/lang/String;
    .param p1, "filePostfix"    # Ljava/lang/String;

    .prologue
    .line 7577
    new-instance v0, Ljava/text/SimpleDateFormat;

    const-string/jumbo v1, "yyyy-MM-dd-HH-mm-ss-SSS"

    invoke-direct {v0, v1}, Ljava/text/SimpleDateFormat;-><init>(Ljava/lang/String;)V

    .line 7578
    .local v0, "dayTime":Ljava/text/SimpleDateFormat;
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "_"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    new-instance v2, Ljava/util/Date;

    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v4

    invoke-direct {v2, v4, v5}, Ljava/util/Date;-><init>(J)V

    invoke-virtual {v0, v2}, Ljava/text/SimpleDateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    return-object v1
.end method

.method private generateProcessError(Lcom/android/server/am/ProcessRecord;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/app/ActivityManager$ProcessErrorStateInfo;
    .locals 2
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "condition"    # I
    .param p3, "activity"    # Ljava/lang/String;
    .param p4, "shortMsg"    # Ljava/lang/String;
    .param p5, "longMsg"    # Ljava/lang/String;
    .param p6, "stackTrace"    # Ljava/lang/String;

    .prologue
    .line 17405
    new-instance v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;

    invoke-direct {v0}, Landroid/app/ActivityManager$ProcessErrorStateInfo;-><init>()V

    .line 17407
    .local v0, "report":Landroid/app/ActivityManager$ProcessErrorStateInfo;
    iput p2, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->condition:I

    .line 17408
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iput-object v1, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->processName:Ljava/lang/String;

    .line 17409
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    iput v1, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->pid:I

    .line 17410
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    iput v1, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->uid:I

    .line 17411
    iput-object p3, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->tag:Ljava/lang/String;

    .line 17412
    iput-object p4, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->shortMsg:Ljava/lang/String;

    .line 17413
    iput-object p5, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->longMsg:Ljava/lang/String;

    .line 17414
    iput-object p6, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->stackTrace:Ljava/lang/String;

    .line 17416
    return-object v0
.end method

.method private static getCSCVersion()Ljava/lang/String;
    .locals 6

    .prologue
    .line 16730
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->mCurCSCver:Ljava/lang/String;

    if-eqz v5, :cond_0

    .line 16731
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->mCurCSCver:Ljava/lang/String;

    .line 16758
    .local v2, "fileReader":Ljava/io/FileReader;
    :goto_0
    return-object v5

    .line 16734
    .end local v2    # "fileReader":Ljava/io/FileReader;
    :cond_0
    const/4 v2, 0x0

    .line 16736
    .restart local v2    # "fileReader":Ljava/io/FileReader;
    :try_start_0
    new-instance v3, Ljava/io/FileReader;

    const-string v5, "/system/CSCVersion.txt"

    invoke-direct {v3, v5}, Ljava/io/FileReader;-><init>(Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 16737
    .end local v2    # "fileReader":Ljava/io/FileReader;
    .local v3, "fileReader":Ljava/io/FileReader;
    :try_start_1
    new-instance v4, Ljava/io/BufferedReader;

    invoke-direct {v4, v3}, Ljava/io/BufferedReader;-><init>(Ljava/io/Reader;)V

    .line 16739
    .local v4, "reader":Ljava/io/BufferedReader;
    invoke-virtual {v4}, Ljava/io/BufferedReader;->readLine()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v5

    sput-object v5, Lcom/android/server/am/ActivityManagerService;->mCurCSCver:Ljava/lang/String;
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_4
    .catchall {:try_start_1 .. :try_end_1} :catchall_4

    .line 16744
    if-eqz v3, :cond_4

    .line 16746
    :try_start_2
    invoke-virtual {v3}, Ljava/io/FileReader;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 16750
    const/4 v2, 0x0

    .line 16755
    .end local v3    # "fileReader":Ljava/io/FileReader;
    .end local v4    # "reader":Ljava/io/BufferedReader;
    .restart local v2    # "fileReader":Ljava/io/FileReader;
    :cond_1
    :goto_1
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->mCurCSCver:Ljava/lang/String;

    if-nez v5, :cond_2

    .line 16756
    const-string v5, "DUMMY"

    sput-object v5, Lcom/android/server/am/ActivityManagerService;->mCurCSCver:Ljava/lang/String;

    .line 16758
    :cond_2
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->mCurCSCver:Ljava/lang/String;

    goto :goto_0

    .line 16747
    .end local v2    # "fileReader":Ljava/io/FileReader;
    .restart local v3    # "fileReader":Ljava/io/FileReader;
    .restart local v4    # "reader":Ljava/io/BufferedReader;
    :catch_0
    move-exception v1

    .line 16748
    .local v1, "e1":Ljava/io/IOException;
    :try_start_3
    invoke-virtual {v1}, Ljava/io/IOException;->printStackTrace()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 16750
    const/4 v2, 0x0

    .line 16751
    .end local v3    # "fileReader":Ljava/io/FileReader;
    .restart local v2    # "fileReader":Ljava/io/FileReader;
    goto :goto_1

    .line 16750
    .end local v1    # "e1":Ljava/io/IOException;
    .end local v2    # "fileReader":Ljava/io/FileReader;
    .restart local v3    # "fileReader":Ljava/io/FileReader;
    :catchall_0
    move-exception v5

    const/4 v2, 0x0

    .end local v3    # "fileReader":Ljava/io/FileReader;
    .restart local v2    # "fileReader":Ljava/io/FileReader;
    throw v5

    .line 16740
    .end local v4    # "reader":Ljava/io/BufferedReader;
    :catch_1
    move-exception v0

    .line 16742
    .local v0, "e":Ljava/lang/Exception;
    :goto_2
    :try_start_4
    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 16744
    if-eqz v2, :cond_1

    .line 16746
    :try_start_5
    invoke-virtual {v2}, Ljava/io/FileReader;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_2
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 16750
    const/4 v2, 0x0

    .line 16751
    goto :goto_1

    .line 16747
    :catch_2
    move-exception v1

    .line 16748
    .restart local v1    # "e1":Ljava/io/IOException;
    :try_start_6
    invoke-virtual {v1}, Ljava/io/IOException;->printStackTrace()V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 16750
    const/4 v2, 0x0

    .line 16751
    goto :goto_1

    .line 16750
    .end local v1    # "e1":Ljava/io/IOException;
    :catchall_1
    move-exception v5

    const/4 v2, 0x0

    throw v5

    .line 16744
    .end local v0    # "e":Ljava/lang/Exception;
    :catchall_2
    move-exception v5

    :goto_3
    if-eqz v2, :cond_3

    .line 16746
    :try_start_7
    invoke-virtual {v2}, Ljava/io/FileReader;->close()V
    :try_end_7
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_3
    .catchall {:try_start_7 .. :try_end_7} :catchall_3

    .line 16750
    const/4 v2, 0x0

    :cond_3
    :goto_4
    throw v5

    .line 16747
    :catch_3
    move-exception v1

    .line 16748
    .restart local v1    # "e1":Ljava/io/IOException;
    :try_start_8
    invoke-virtual {v1}, Ljava/io/IOException;->printStackTrace()V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_3

    .line 16750
    const/4 v2, 0x0

    .line 16751
    goto :goto_4

    .line 16750
    .end local v1    # "e1":Ljava/io/IOException;
    :catchall_3
    move-exception v5

    const/4 v2, 0x0

    throw v5

    .line 16744
    .end local v2    # "fileReader":Ljava/io/FileReader;
    .restart local v3    # "fileReader":Ljava/io/FileReader;
    :catchall_4
    move-exception v5

    move-object v2, v3

    .end local v3    # "fileReader":Ljava/io/FileReader;
    .restart local v2    # "fileReader":Ljava/io/FileReader;
    goto :goto_3

    .line 16740
    .end local v2    # "fileReader":Ljava/io/FileReader;
    .restart local v3    # "fileReader":Ljava/io/FileReader;
    :catch_4
    move-exception v0

    move-object v2, v3

    .end local v3    # "fileReader":Ljava/io/FileReader;
    .restart local v2    # "fileReader":Ljava/io/FileReader;
    goto :goto_2

    .end local v2    # "fileReader":Ljava/io/FileReader;
    .restart local v3    # "fileReader":Ljava/io/FileReader;
    .restart local v4    # "reader":Ljava/io/BufferedReader;
    :cond_4
    move-object v2, v3

    .end local v3    # "fileReader":Ljava/io/FileReader;
    .restart local v2    # "fileReader":Ljava/io/FileReader;
    goto :goto_1
.end method

.method private static getCalledPreBootReceiversFile()Ljava/io/File;
    .locals 4

    .prologue
    .line 16672
    invoke-static {}, Landroid/os/Environment;->getDataDirectory()Ljava/io/File;

    move-result-object v0

    .line 16673
    .local v0, "dataDir":Ljava/io/File;
    new-instance v2, Ljava/io/File;

    const-string/jumbo v3, "system"

    invoke-direct {v2, v0, v3}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    .line 16674
    .local v2, "systemDir":Ljava/io/File;
    new-instance v1, Ljava/io/File;

    const-string v3, "called_pre_boots.dat"

    invoke-direct {v1, v2, v3}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    .line 16675
    .local v1, "fname":Ljava/io/File;
    return-object v1
.end method

.method private getCallingRecordLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 10176
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 10177
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 10178
    const/4 v1, 0x0

    .line 10180
    :goto_0
    return-object v1

    :cond_0
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->resultTo:Lcom/android/server/am/ActivityRecord;

    goto :goto_0
.end method

.method private getCommonServicesLocked(Z)Ljava/util/HashMap;
    .locals 3
    .param p1, "isolated"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(Z)",
            "Ljava/util/HashMap",
            "<",
            "Ljava/lang/String;",
            "Landroid/os/IBinder;",
            ">;"
        }
    .end annotation

    .prologue
    .line 4141
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;

    if-nez v0, :cond_0

    .line 4142
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;

    .line 4146
    if-nez p1, :cond_0

    .line 4148
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;

    const-string/jumbo v1, "package"

    const-string/jumbo v2, "package"

    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 4149
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;

    const-string/jumbo v1, "window"

    const-string/jumbo v2, "window"

    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 4150
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;

    const-string v1, "alarm"

    const-string v2, "alarm"

    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 4154
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;

    return-object v0
.end method

.method private getComponentInfo(Landroid/content/pm/ResolveInfo;)Landroid/content/pm/ComponentInfo;
    .locals 2
    .param p1, "curt"    # Landroid/content/pm/ResolveInfo;

    .prologue
    .line 29194
    iget-object v0, p1, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    if-eqz v0, :cond_0

    iget-object v0, p1, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    .line 29196
    :goto_0
    return-object v0

    .line 29195
    :cond_0
    iget-object v0, p1, Landroid/content/pm/ResolveInfo;->serviceInfo:Landroid/content/pm/ServiceInfo;

    if-eqz v0, :cond_1

    iget-object v0, p1, Landroid/content/pm/ResolveInfo;->serviceInfo:Landroid/content/pm/ServiceInfo;

    goto :goto_0

    .line 29196
    :cond_1
    iget-object v0, p1, Landroid/content/pm/ResolveInfo;->providerInfo:Landroid/content/pm/ProviderInfo;

    if-eqz v0, :cond_2

    iget-object v0, p1, Landroid/content/pm/ResolveInfo;->providerInfo:Landroid/content/pm/ProviderInfo;

    goto :goto_0

    .line 29197
    :cond_2
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v1, "Missing ComponentInfo in arrangeSplitReceiver"

    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method private getContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)Landroid/app/IActivityManager$ContentProviderHolder;
    .locals 6
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "token"    # Landroid/os/IBinder;
    .param p3, "userId"    # I

    .prologue
    .line 14725
    const/4 v1, 0x0

    const/4 v4, 0x1

    move-object v0, p0

    move-object v2, p1

    move-object v3, p2

    move v5, p3

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->getContentProviderImpl(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/os/IBinder;ZI)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v0

    return-object v0
.end method

.method private final getContentProviderImpl(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/os/IBinder;ZI)Landroid/app/IActivityManager$ContentProviderHolder;
    .locals 47
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "token"    # Landroid/os/IBinder;
    .param p4, "stable"    # Z
    .param p5, "userId"    # I

    .prologue
    .line 14263
    const/16 v24, 0x0

    .line 14264
    .local v24, "conn":Lcom/android/server/am/ContentProviderConnection;
    const/16 v25, 0x0

    .line 14266
    .local v25, "cpi":Landroid/content/pm/ProviderInfo;
    monitor-enter p0

    .line 14267
    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v44

    .line 14269
    .local v44, "startTime":J
    const/16 v42, 0x0

    .line 14270
    .local v42, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p1, :cond_0

    .line 14271
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v42

    .line 14272
    if-nez v42, :cond_0

    .line 14273
    new-instance v7, Ljava/lang/SecurityException;

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Unable to find app for caller "

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, p1

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v11, " (pid="

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v11

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v11, ") when getting content provider "

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, p2

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-direct {v7, v8}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 14630
    .end local v42    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v44    # "startTime":J
    :catchall_0
    move-exception v7

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v7

    .line 14280
    .restart local v42    # "r":Lcom/android/server/am/ProcessRecord;
    .restart local v44    # "startTime":J
    :cond_0
    const/16 v23, 0x1

    .line 14282
    .local v23, "checkCrossUser":Z
    :try_start_1
    const-string/jumbo v7, "getContentProviderImpl: getProviderByName"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14285
    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    move-object/from16 v0, p2

    move/from16 v1, p5

    invoke-virtual {v7, v0, v1}, Lcom/android/server/am/ProviderMap;->getProviderByName(Ljava/lang/String;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v6

    .line 14288
    .local v6, "cpr":Lcom/android/server/am/ContentProviderRecord;
    if-nez v6, :cond_3

    if-eqz p5, :cond_3

    .line 14289
    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    const/4 v8, 0x0

    move-object/from16 v0, p2

    invoke-virtual {v7, v0, v8}, Lcom/android/server/am/ProviderMap;->getProviderByName(Ljava/lang/String;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v6

    .line 14290
    if-eqz v6, :cond_29

    .line 14291
    iget-object v0, v6, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    move-object/from16 v25, v0

    .line 14292
    move-object/from16 v0, v25

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    move-object/from16 v0, v25

    iget-object v8, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v0, v25

    iget-object v11, v0, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    move-object/from16 v0, v25

    iget v12, v0, Landroid/content/pm/ProviderInfo;->flags:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v7, v8, v11, v12}, Lcom/android/server/am/ActivityManagerService;->isSingleton(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)Z

    move-result v7

    if-eqz v7, :cond_1

    move-object/from16 v0, v42

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move-object/from16 v0, v25

    iget-object v8, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v8, v8, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v7, v8}, Lcom/android/server/am/ActivityManagerService;->isValidSingletonCall(II)Z

    move-result v7

    if-eqz v7, :cond_1

    .line 14295
    const/16 p5, 0x0

    .line 14296
    const/16 v23, 0x0

    move-object/from16 v26, v6

    .line 14316
    .end local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .local v26, "cpr":Lcom/android/server/am/ContentProviderRecord;
    :goto_0
    if-eqz v26, :cond_5

    const/16 v41, 0x1

    .line 14317
    .local v41, "providerRunning":Z
    :goto_1
    if-eqz v41, :cond_b

    .line 14318
    move-object/from16 v0, v26

    iget-object v0, v0, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    move-object/from16 v25, v0

    .line 14320
    const-string/jumbo v7, "getContentProviderImpl: before checkContentProviderPermission"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14321
    move-object/from16 v0, p0

    move-object/from16 v1, v25

    move-object/from16 v2, v42

    move/from16 v3, p5

    move/from16 v4, v23

    invoke-direct {v0, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->checkContentProviderPermissionLocked(Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ProcessRecord;IZ)Ljava/lang/String;

    move-result-object v37

    .local v37, "msg":Ljava/lang/String;
    if-eqz v37, :cond_6

    .line 14323
    new-instance v7, Ljava/lang/SecurityException;

    move-object/from16 v0, v37

    invoke-direct {v7, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 14298
    .end local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v37    # "msg":Ljava/lang/String;
    .end local v41    # "providerRunning":Z
    .restart local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_1
    invoke-static/range {p5 .. p5}, Landroid/os/PersonaManager;->isBBCContainer(I)Z

    move-result v7

    if-eqz v7, :cond_2

    .line 14299
    const/16 p5, 0x0

    .line 14300
    const/16 v23, 0x0

    move-object/from16 v26, v6

    .end local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    goto :goto_0

    .line 14303
    .end local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_2
    const/4 v6, 0x0

    .line 14304
    const/16 v25, 0x0

    move-object/from16 v26, v6

    .end local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    goto :goto_0

    .line 14308
    .end local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_3
    if-nez p5, :cond_29

    .line 14309
    if-eqz v42, :cond_4

    move-object/from16 v0, v42

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move/from16 v22, v0

    .line 14310
    .local v22, "callingUid":I
    :goto_2
    invoke-static/range {v22 .. v22}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v7

    invoke-static {v7}, Landroid/os/PersonaManager;->isBBCContainer(I)Z

    move-result v7

    if-eqz v7, :cond_29

    .line 14311
    const-string v7, "ActivityManager"

    const-string v8, "Calling from bbc to user 0"

    invoke-static {v7, v8}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 14312
    const/16 v23, 0x0

    move-object/from16 v26, v6

    .end local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    goto :goto_0

    .line 14309
    .end local v22    # "callingUid":I
    .end local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_4
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v22

    goto :goto_2

    .line 14316
    .end local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_5
    const/16 v41, 0x0

    goto :goto_1

    .line 14325
    .restart local v37    # "msg":Ljava/lang/String;
    .restart local v41    # "providerRunning":Z
    :cond_6
    const-string/jumbo v7, "getContentProviderImpl: after checkContentProviderPermission"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14327
    if-eqz v42, :cond_7

    move-object/from16 v0, v26

    move-object/from16 v1, v42

    invoke-virtual {v0, v1}, Lcom/android/server/am/ContentProviderRecord;->canRunHere(Lcom/android/server/am/ProcessRecord;)Z

    move-result v7

    if-eqz v7, :cond_7

    .line 14332
    const/4 v7, 0x0

    move-object/from16 v0, v26

    invoke-virtual {v0, v7}, Lcom/android/server/am/ContentProviderRecord;->newHolder(Lcom/android/server/am/ContentProviderConnection;)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v31

    .line 14335
    .local v31, "holder":Landroid/app/IActivityManager$ContentProviderHolder;
    const/4 v7, 0x0

    move-object/from16 v0, v31

    iput-object v7, v0, Landroid/app/IActivityManager$ContentProviderHolder;->provider:Landroid/content/IContentProvider;

    .line 14336
    monitor-exit p0

    move-object/from16 v6, v26

    .line 14696
    .end local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v31    # "holder":Landroid/app/IActivityManager$ContentProviderHolder;
    .end local v37    # "msg":Ljava/lang/String;
    .restart local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :goto_3
    return-object v31

    .line 14339
    .end local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v37    # "msg":Ljava/lang/String;
    :cond_7
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v38

    .line 14341
    .local v38, "origId":J
    const-string/jumbo v7, "getContentProviderImpl: incProviderCountLocked"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14345
    move-object/from16 v0, p0

    move-object/from16 v1, v42

    move-object/from16 v2, v26

    move-object/from16 v3, p3

    move/from16 v4, p4

    invoke-virtual {v0, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->incProviderCountLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Lcom/android/server/am/ContentProviderConnection;

    move-result-object v24

    .line 14346
    if-eqz v24, :cond_8

    move-object/from16 v0, v24

    iget v7, v0, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    move-object/from16 v0, v24

    iget v8, v0, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    add-int/2addr v7, v8

    const/4 v8, 0x1

    if-ne v7, v8, :cond_8

    .line 14347
    move-object/from16 v0, v26

    iget-object v7, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    if-eqz v7, :cond_8

    move-object/from16 v0, v42

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    const/4 v8, 0x2

    if-gt v7, v8, :cond_8

    .line 14352
    const-string/jumbo v7, "getContentProviderImpl: before updateLruProcess"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14353
    move-object/from16 v0, v26

    iget-object v7, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    const/4 v8, 0x0

    const/4 v11, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v7, v8, v11}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    .line 14354
    const-string/jumbo v7, "getContentProviderImpl: after updateLruProcess"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14358
    :cond_8
    move-object/from16 v0, v26

    iget-object v7, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    if-eqz v7, :cond_a

    .line 14367
    const-string/jumbo v7, "getContentProviderImpl: before updateOomAdj"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14368
    move-object/from16 v0, v26

    iget-object v7, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p0

    invoke-virtual {v0, v7}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v46

    .line 14369
    .local v46, "success":Z
    move-object/from16 v0, v26

    iget-object v7, v0, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v7, v7, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p0

    move-object/from16 v1, v42

    move-object/from16 v2, p2

    invoke-direct {v0, v1, v7, v2}, Lcom/android/server/am/ActivityManagerService;->maybeUpdateProviderUsageStatsLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V

    .line 14370
    const-string/jumbo v7, "getContentProviderImpl: after updateOomAdj"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14376
    if-nez v46, :cond_a

    .line 14381
    const-string v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Existing provider "

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, v26

    iget-object v11, v0, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {v11}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v11

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v11, " is crashing; detaching "

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, v42

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 14383
    move-object/from16 v0, p0

    move-object/from16 v1, v24

    move-object/from16 v2, v26

    move-object/from16 v3, p3

    move/from16 v4, p4

    invoke-virtual {v0, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->decProviderCountLocked(Lcom/android/server/am/ContentProviderConnection;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Z

    move-result v36

    .line 14384
    .local v36, "lastRef":Z
    const-string/jumbo v7, "getContentProviderImpl: before appDied"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14385
    move-object/from16 v0, v26

    iget-object v7, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p0

    invoke-virtual {v0, v7}, Lcom/android/server/am/ActivityManagerService;->appDiedLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 14386
    const-string/jumbo v7, "getContentProviderImpl: after appDied"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14387
    if-nez v36, :cond_9

    .line 14390
    const/16 v31, 0x0

    monitor-exit p0

    move-object/from16 v6, v26

    .end local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    goto/16 :goto_3

    .line 14392
    .end local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_9
    const/16 v41, 0x0

    .line 14393
    const/16 v24, 0x0

    .line 14397
    .end local v36    # "lastRef":Z
    .end local v46    # "success":Z
    :cond_a
    invoke-static/range {v38 .. v39}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 14401
    .end local v37    # "msg":Ljava/lang/String;
    .end local v38    # "origId":J
    :cond_b
    if-nez v41, :cond_28

    .line 14403
    :try_start_2
    const-string/jumbo v7, "getContentProviderImpl: before resolveContentProvider"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14404
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v7

    const/16 v8, 0xc00

    move-object/from16 v0, p2

    move/from16 v1, p5

    invoke-interface {v7, v0, v8, v1}, Landroid/content/pm/IPackageManager;->resolveContentProvider(Ljava/lang/String;II)Landroid/content/pm/ProviderInfo;

    move-result-object v25

    .line 14407
    const-string/jumbo v7, "getContentProviderImpl: after resolveContentProvider"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_6
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 14411
    :goto_4
    :try_start_3
    invoke-static/range {p5 .. p5}, Landroid/os/PersonaManager;->isBBCContainer(I)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-result v33

    .line 14412
    .local v33, "isbbc":Z
    if-eqz v33, :cond_c

    if-nez v25, :cond_c

    .line 14414
    :try_start_4
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v7

    const/16 v8, 0xc00

    const/4 v11, 0x0

    move-object/from16 v0, p2

    invoke-interface {v7, v0, v8, v11}, Landroid/content/pm/IPackageManager;->resolveContentProvider(Ljava/lang/String;II)Landroid/content/pm/ProviderInfo;
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_5
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    move-result-object v25

    .line 14417
    const/16 p5, 0x0

    .line 14422
    :cond_c
    :goto_5
    if-nez v25, :cond_d

    .line 14423
    const/16 v31, 0x0

    :try_start_5
    monitor-exit p0

    move-object/from16 v6, v26

    .end local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    goto/16 :goto_3

    .line 14460
    .end local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_d
    move-object/from16 v0, v25

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    move-object/from16 v0, v25

    iget-object v8, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v0, v25

    iget-object v11, v0, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    move-object/from16 v0, v25

    iget v12, v0, Landroid/content/pm/ProviderInfo;->flags:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v7, v8, v11, v12}, Lcom/android/server/am/ActivityManagerService;->isSingleton(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)Z

    move-result v7

    if-eqz v7, :cond_f

    move-object/from16 v0, v42

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move-object/from16 v0, v25

    iget-object v8, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v8, v8, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v7, v8}, Lcom/android/server/am/ActivityManagerService;->isValidSingletonCall(II)Z

    move-result v7

    if-eqz v7, :cond_f

    const/16 v43, 0x1

    .line 14463
    .local v43, "singleton":Z
    :goto_6
    if-eqz v43, :cond_e

    .line 14464
    const/16 p5, 0x0

    .line 14466
    :cond_e
    move-object/from16 v0, v25

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v0, p0

    move/from16 v1, p5

    invoke-virtual {v0, v7, v1}, Lcom/android/server/am/ActivityManagerService;->getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v7

    move-object/from16 v0, v25

    iput-object v7, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 14467
    const-string/jumbo v7, "getContentProviderImpl: got app info for user"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14470
    const-string/jumbo v7, "getContentProviderImpl: before checkContentProviderPermission"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14471
    if-nez v43, :cond_10

    if-nez v33, :cond_10

    const/4 v7, 0x1

    :goto_7
    move-object/from16 v0, p0

    move-object/from16 v1, v25

    move-object/from16 v2, v42

    move/from16 v3, p5

    invoke-direct {v0, v1, v2, v3, v7}, Lcom/android/server/am/ActivityManagerService;->checkContentProviderPermissionLocked(Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ProcessRecord;IZ)Ljava/lang/String;

    move-result-object v37

    .restart local v37    # "msg":Ljava/lang/String;
    if-eqz v37, :cond_11

    .line 14473
    new-instance v7, Ljava/lang/SecurityException;

    move-object/from16 v0, v37

    invoke-direct {v7, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 14460
    .end local v37    # "msg":Ljava/lang/String;
    .end local v43    # "singleton":Z
    :cond_f
    const/16 v43, 0x0

    goto :goto_6

    .line 14471
    .restart local v43    # "singleton":Z
    :cond_10
    const/4 v7, 0x0

    goto :goto_7

    .line 14475
    .restart local v37    # "msg":Ljava/lang/String;
    :cond_11
    const-string/jumbo v7, "getContentProviderImpl: after checkContentProviderPermission"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14477
    move-object/from16 v0, p0

    iget-boolean v7, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v7, :cond_12

    move-object/from16 v0, p0

    iget-boolean v7, v0, Lcom/android/server/am/ActivityManagerService;->mDidUpdate:Z

    if-nez v7, :cond_12

    move-object/from16 v0, p0

    iget-boolean v7, v0, Lcom/android/server/am/ActivityManagerService;->mWaitingUpdate:Z

    if-nez v7, :cond_12

    move-object/from16 v0, v25

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    const-string/jumbo v8, "system"

    invoke-virtual {v7, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-nez v7, :cond_12

    .line 14482
    new-instance v7, Ljava/lang/IllegalArgumentException;

    const-string v8, "Attempt to launch content provider before system ready"

    invoke-direct {v7, v8}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 14488
    :cond_12
    const/4 v7, 0x0

    move-object/from16 v0, p0

    move/from16 v1, p5

    invoke-virtual {v0, v1, v7}, Lcom/android/server/am/ActivityManagerService;->isUserRunningLocked(IZ)Z

    move-result v7

    if-nez v7, :cond_13

    .line 14489
    const-string v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Unable to launch app "

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, v25

    iget-object v11, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v11, v11, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v11, "/"

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, v25

    iget-object v11, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v11, v11, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v11, " for provider "

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, p2

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v11, ": user "

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move/from16 v0, p5

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v11, " is stopped"

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14493
    const/16 v31, 0x0

    monitor-exit p0

    move-object/from16 v6, v26

    .end local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    goto/16 :goto_3

    .line 14497
    .end local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_13
    sget-boolean v7, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    if-eqz v7, :cond_14

    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    if-eqz v7, :cond_14

    .line 14498
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    new-instance v7, Landroid/content/ComponentName;

    move-object/from16 v0, v25

    iget-object v8, v0, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v25

    iget-object v11, v0, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-direct {v7, v8, v11}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    const/4 v9, -0x1

    const/4 v10, -0x1

    const-string/jumbo v11, "provider"

    const/4 v12, 0x0

    move-object/from16 v8, p1

    invoke-virtual/range {v6 .. v12}, Lcom/android/server/am/MARsPolicyManager;->isRestrictedPackage(Landroid/content/ComponentName;Landroid/app/IApplicationThread;IILjava/lang/String;Landroid/content/Intent;)Z

    move-result v7

    if-eqz v7, :cond_14

    .line 14500
    const/16 v31, 0x0

    monitor-exit p0

    move-object/from16 v6, v26

    .end local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    goto/16 :goto_3

    .line 14505
    .end local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_14
    new-instance v10, Landroid/content/ComponentName;

    move-object/from16 v0, v25

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v25

    iget-object v8, v0, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-direct {v10, v7, v8}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 14506
    .local v10, "comp":Landroid/content/ComponentName;
    const-string/jumbo v7, "getContentProviderImpl: before getProviderByClass"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14507
    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    move/from16 v0, p5

    invoke-virtual {v7, v10, v0}, Lcom/android/server/am/ProviderMap;->getProviderByClass(Landroid/content/ComponentName;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v26

    .line 14508
    const-string/jumbo v7, "getContentProviderImpl: after getProviderByClass"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14509
    if-nez v26, :cond_15

    const/16 v30, 0x1

    .line 14510
    .local v30, "firstClass":Z
    :goto_8
    if-eqz v30, :cond_27

    .line 14511
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    move-result-wide v34

    .line 14513
    .local v34, "ident":J
    :try_start_6
    const-string/jumbo v7, "getContentProviderImpl: before getApplicationInfo"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14514
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v7

    move-object/from16 v0, v25

    iget-object v8, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v8, v8, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/16 v11, 0x400

    move/from16 v0, p5

    invoke-interface {v7, v8, v11, v0}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v9

    .line 14519
    .local v9, "ai":Landroid/content/pm/ApplicationInfo;
    const-string/jumbo v7, "getContentProviderImpl: after getApplicationInfo"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14520
    if-nez v9, :cond_16

    .line 14521
    const-string v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "No package info for content provider "

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, v25

    iget-object v11, v0, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_0
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 14523
    const/16 v31, 0x0

    .line 14530
    :try_start_7
    invoke-static/range {v34 .. v35}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    move-object/from16 v6, v26

    .end local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    goto/16 :goto_3

    .line 14509
    .end local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v9    # "ai":Landroid/content/pm/ApplicationInfo;
    .end local v30    # "firstClass":Z
    .end local v34    # "ident":J
    .restart local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_15
    const/16 v30, 0x0

    goto :goto_8

    .line 14525
    .restart local v9    # "ai":Landroid/content/pm/ApplicationInfo;
    .restart local v30    # "firstClass":Z
    .restart local v34    # "ident":J
    :cond_16
    :try_start_8
    move-object/from16 v0, p0

    move/from16 v1, p5

    invoke-virtual {v0, v9, v1}, Lcom/android/server/am/ActivityManagerService;->getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v9

    .line 14526
    new-instance v6, Lcom/android/server/am/ContentProviderRecord;

    move-object/from16 v7, p0

    move-object/from16 v8, v25

    move/from16 v11, v43

    invoke-direct/range {v6 .. v11}, Lcom/android/server/am/ContentProviderRecord;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/content/pm/ProviderInfo;Landroid/content/pm/ApplicationInfo;Landroid/content/ComponentName;Z)V
    :try_end_8
    .catch Landroid/os/RemoteException; {:try_start_8 .. :try_end_8} :catch_0
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .line 14530
    .end local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :try_start_9
    invoke-static/range {v34 .. v35}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14534
    .end local v9    # "ai":Landroid/content/pm/ApplicationInfo;
    .end local v34    # "ident":J
    :goto_9
    const-string/jumbo v7, "getContentProviderImpl: now have ContentProviderRecord"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14536
    if-eqz v42, :cond_17

    move-object/from16 v0, v42

    invoke-virtual {v6, v0}, Lcom/android/server/am/ContentProviderRecord;->canRunHere(Lcom/android/server/am/ProcessRecord;)Z

    move-result v7

    if-eqz v7, :cond_17

    .line 14541
    const/4 v7, 0x0

    invoke-virtual {v6, v7}, Lcom/android/server/am/ContentProviderRecord;->newHolder(Lcom/android/server/am/ContentProviderConnection;)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v31

    monitor-exit p0

    goto/16 :goto_3

    .line 14527
    .end local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v34    # "ident":J
    :catch_0
    move-exception v7

    .line 14530
    invoke-static/range {v34 .. v35}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    move-object/from16 v6, v26

    .line 14531
    .end local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    goto :goto_9

    .line 14530
    .end local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :catchall_1
    move-exception v7

    invoke-static/range {v34 .. v35}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v7

    .line 14551
    .end local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v34    # "ident":J
    .restart local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_17
    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v21

    .line 14553
    .local v21, "N":I
    const/16 v32, 0x0

    .local v32, "i":I
    :goto_a
    move/from16 v0, v32

    move/from16 v1, v21

    if-ge v0, v1, :cond_18

    .line 14554
    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    move/from16 v0, v32

    invoke-virtual {v7, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    if-ne v7, v6, :cond_1e

    .line 14561
    :cond_18
    move/from16 v0, v32

    move/from16 v1, v21

    if-lt v0, v1, :cond_1a

    .line 14562
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    move-result-wide v38

    .line 14567
    .restart local v38    # "origId":J
    :try_start_a
    const-string/jumbo v7, "getContentProviderImpl: before set stopped state"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14568
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v7

    iget-object v8, v6, Lcom/android/server/am/ContentProviderRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v8, v8, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v11, 0x0

    move/from16 v0, p5

    invoke-interface {v7, v8, v11, v0}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;ZI)V

    .line 14570
    const-string/jumbo v7, "getContentProviderImpl: after set stopped state"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V
    :try_end_a
    .catch Landroid/os/RemoteException; {:try_start_a .. :try_end_a} :catch_4
    .catch Ljava/lang/IllegalArgumentException; {:try_start_a .. :try_end_a} :catch_1
    .catchall {:try_start_a .. :try_end_a} :catchall_3

    .line 14578
    :goto_b
    :try_start_b
    const-string/jumbo v7, "getContentProviderImpl: looking for process record"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14579
    move-object/from16 v0, v25

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    iget-object v8, v6, Lcom/android/server/am/ContentProviderRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v8, v8, Landroid/content/pm/ApplicationInfo;->uid:I

    const/4 v11, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v7, v8, v11}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v40

    .line 14581
    .local v40, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v40, :cond_1f

    move-object/from16 v0, v40

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v7, :cond_1f

    .line 14584
    move-object/from16 v0, v40

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    move-object/from16 v0, v25

    iget-object v8, v0, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v7, v8}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v7

    if-nez v7, :cond_19

    .line 14585
    const-string/jumbo v7, "getContentProviderImpl: scheduling install"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14586
    move-object/from16 v0, v40

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    move-object/from16 v0, v25

    iget-object v8, v0, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v7, v8, v6}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_3

    .line 14588
    :try_start_c
    move-object/from16 v0, v40

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move-object/from16 v0, v25

    invoke-interface {v7, v0}, Landroid/app/IApplicationThread;->scheduleInstallProvider(Landroid/content/pm/ProviderInfo;)V
    :try_end_c
    .catch Landroid/os/RemoteException; {:try_start_c .. :try_end_c} :catch_3
    .catchall {:try_start_c .. :try_end_c} :catchall_3

    .line 14607
    :cond_19
    :goto_c
    :try_start_d
    move-object/from16 v0, v40

    iput-object v0, v6, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    .line 14608
    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v7, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_3

    .line 14610
    :try_start_e
    invoke-static/range {v38 .. v39}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14614
    .end local v38    # "origId":J
    .end local v40    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_1a
    const-string/jumbo v7, "getContentProviderImpl: updating data structures"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14618
    if-eqz v30, :cond_1b

    .line 14619
    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v7, v10, v6}, Lcom/android/server/am/ProviderMap;->putProviderByClass(Landroid/content/ComponentName;Lcom/android/server/am/ContentProviderRecord;)V

    .line 14622
    :cond_1b
    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    move-object/from16 v0, p2

    invoke-virtual {v7, v0, v6}, Lcom/android/server/am/ProviderMap;->putProviderByName(Ljava/lang/String;Lcom/android/server/am/ContentProviderRecord;)V

    .line 14623
    move-object/from16 v0, p0

    move-object/from16 v1, v42

    move-object/from16 v2, p3

    move/from16 v3, p4

    invoke-virtual {v0, v1, v6, v2, v3}, Lcom/android/server/am/ActivityManagerService;->incProviderCountLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Lcom/android/server/am/ContentProviderConnection;

    move-result-object v24

    .line 14624
    if-eqz v24, :cond_1c

    .line 14625
    const/4 v7, 0x1

    move-object/from16 v0, v24

    iput-boolean v7, v0, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    .line 14628
    .end local v10    # "comp":Landroid/content/ComponentName;
    .end local v21    # "N":I
    .end local v30    # "firstClass":Z
    .end local v32    # "i":I
    .end local v33    # "isbbc":Z
    .end local v37    # "msg":Ljava/lang/String;
    .end local v43    # "singleton":Z
    :cond_1c
    :goto_d
    const-string/jumbo v7, "getContentProviderImpl: done!"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14630
    monitor-exit p0
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_0

    .line 14632
    const/16 v29, 0x0

    .line 14633
    .local v29, "expireTimeout":Z
    const/16 v27, 0x0

    .line 14635
    .local v27, "dumpStackTrace":Z
    monitor-enter v6

    .line 14636
    :cond_1d
    :goto_e
    :try_start_f
    iget-object v7, v6, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    if-nez v7, :cond_25

    .line 14637
    iget-object v7, v6, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    if-nez v7, :cond_20

    .line 14638
    const-string v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Unable to launch app "

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, v25

    iget-object v11, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v11, v11, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v11, "/"

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, v25

    iget-object v11, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v11, v11, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v11, " for provider "

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, p2

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v11, ": launching app became null"

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14642
    const/16 v7, 0x7554

    const/4 v8, 0x4

    new-array v8, v8, [Ljava/lang/Object;

    const/4 v11, 0x0

    move-object/from16 v0, v25

    iget-object v12, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v12, v12, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v12}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v12

    invoke-static {v12}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v12

    aput-object v12, v8, v11

    const/4 v11, 0x1

    move-object/from16 v0, v25

    iget-object v12, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v12, v12, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    aput-object v12, v8, v11

    const/4 v11, 0x2

    move-object/from16 v0, v25

    iget-object v12, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v12, v12, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v12}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v12

    aput-object v12, v8, v11

    const/4 v11, 0x3

    aput-object p2, v8, v11

    invoke-static {v7, v8}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 14646
    const/16 v31, 0x0

    monitor-exit v6

    goto/16 :goto_3

    .line 14681
    :catchall_2
    move-exception v7

    monitor-exit v6
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_2

    throw v7

    .line 14553
    .end local v27    # "dumpStackTrace":Z
    .end local v29    # "expireTimeout":Z
    .restart local v10    # "comp":Landroid/content/ComponentName;
    .restart local v21    # "N":I
    .restart local v30    # "firstClass":Z
    .restart local v32    # "i":I
    .restart local v33    # "isbbc":Z
    .restart local v37    # "msg":Ljava/lang/String;
    .restart local v43    # "singleton":Z
    :cond_1e
    add-int/lit8 v32, v32, 0x1

    goto/16 :goto_a

    .line 14572
    .restart local v38    # "origId":J
    :catch_1
    move-exception v28

    .line 14573
    .local v28, "e":Ljava/lang/IllegalArgumentException;
    :try_start_10
    const-string v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Failed trying to unstop package "

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    iget-object v11, v6, Lcom/android/server/am/ContentProviderRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v11, v11, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v11, ": "

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, v28

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_3

    goto/16 :goto_b

    .line 14610
    .end local v28    # "e":Ljava/lang/IllegalArgumentException;
    :catchall_3
    move-exception v7

    :try_start_11
    invoke-static/range {v38 .. v39}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v7
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_0

    .line 14593
    .restart local v40    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_1f
    :try_start_12
    const-string/jumbo v7, "getContentProviderImpl: before start process"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14594
    move-object/from16 v0, v25

    iget-object v12, v0, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    iget-object v13, v6, Lcom/android/server/am/ContentProviderRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    const/4 v14, 0x0

    const/4 v15, 0x0

    const-string v16, "content provider"

    new-instance v17, Landroid/content/ComponentName;

    move-object/from16 v0, v25

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v7, v7, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v25

    iget-object v8, v0, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    move-object/from16 v0, v17

    invoke-direct {v0, v7, v8}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    const/16 v18, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    move-object/from16 v11, p0

    invoke-virtual/range {v11 .. v20}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v40

    .line 14598
    const-string/jumbo v7, "getContentProviderImpl: after start process"

    move-object/from16 v0, p0

    move-wide/from16 v1, v44

    invoke-direct {v0, v1, v2, v7}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 14599
    if-nez v40, :cond_19

    .line 14600
    const-string v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Unable to launch app "

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, v25

    iget-object v11, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v11, v11, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v11, "/"

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, v25

    iget-object v11, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v11, v11, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v11, " for provider "

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, p2

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v11, ": process is bad"

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_3

    .line 14604
    const/16 v31, 0x0

    .line 14610
    :try_start_13
    invoke-static/range {v38 .. v39}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_0

    goto/16 :goto_3

    .line 14652
    .end local v10    # "comp":Landroid/content/ComponentName;
    .end local v21    # "N":I
    .end local v30    # "firstClass":Z
    .end local v32    # "i":I
    .end local v33    # "isbbc":Z
    .end local v37    # "msg":Ljava/lang/String;
    .end local v38    # "origId":J
    .end local v40    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v43    # "singleton":Z
    .restart local v27    # "dumpStackTrace":Z
    .restart local v29    # "expireTimeout":Z
    :cond_20
    if-eqz v24, :cond_21

    .line 14653
    const/4 v7, 0x1

    :try_start_14
    move-object/from16 v0, v24

    iput-boolean v7, v0, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    .line 14658
    :cond_21
    sget v7, Lcom/android/server/am/ActivityManagerService;->PROC_START_TIMEOUT:I

    mul-int/lit8 v7, v7, 0x6

    int-to-long v12, v7

    invoke-virtual {v6, v12, v13}, Ljava/lang/Object;->wait(J)V

    .line 14660
    iget-object v7, v6, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    if-nez v7, :cond_23

    .line 14661
    if-eqz v24, :cond_22

    iget-object v7, v6, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    if-eqz v7, :cond_22

    .line 14662
    const-string v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Still waiting to start provider "

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v11, " launchingApp="

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    iget-object v11, v6, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v11, " conn="

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual/range {v24 .. v24}, Lcom/android/server/am/ContentProviderConnection;->toClientString()Ljava/lang/String;

    move-result-object v11

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 14664
    :cond_22
    if-nez v27, :cond_23

    .line 14666
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v7

    const/4 v8, 0x3

    invoke-static {v7, v8}, Landroid/os/Process;->sendSignal(II)V

    .line 14668
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v7

    const/4 v8, 0x3

    invoke-static {v7, v8}, Landroid/os/Process;->sendSignal(II)V
    :try_end_14
    .catch Ljava/lang/InterruptedException; {:try_start_14 .. :try_end_14} :catch_2
    .catchall {:try_start_14 .. :try_end_14} :catchall_4

    .line 14669
    const/16 v27, 0x1

    .line 14676
    :cond_23
    if-eqz v24, :cond_1d

    .line 14677
    const/4 v7, 0x0

    :try_start_15
    move-object/from16 v0, v24

    iput-boolean v7, v0, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    goto/16 :goto_e

    .line 14674
    :catch_2
    move-exception v7

    .line 14676
    if-eqz v24, :cond_1d

    .line 14677
    const/4 v7, 0x0

    move-object/from16 v0, v24

    iput-boolean v7, v0, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    goto/16 :goto_e

    .line 14676
    :catchall_4
    move-exception v7

    if-eqz v24, :cond_24

    .line 14677
    const/4 v8, 0x0

    move-object/from16 v0, v24

    iput-boolean v8, v0, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    :cond_24
    throw v7

    .line 14681
    :cond_25
    monitor-exit v6
    :try_end_15
    .catchall {:try_start_15 .. :try_end_15} :catchall_2

    .line 14696
    if-eqz v6, :cond_26

    move-object/from16 v0, v24

    invoke-virtual {v6, v0}, Lcom/android/server/am/ContentProviderRecord;->newHolder(Lcom/android/server/am/ContentProviderConnection;)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v7

    :goto_f
    move-object/from16 v31, v7

    goto/16 :goto_3

    :cond_26
    const/4 v7, 0x0

    goto :goto_f

    .line 14589
    .end local v27    # "dumpStackTrace":Z
    .end local v29    # "expireTimeout":Z
    .restart local v10    # "comp":Landroid/content/ComponentName;
    .restart local v21    # "N":I
    .restart local v30    # "firstClass":Z
    .restart local v32    # "i":I
    .restart local v33    # "isbbc":Z
    .restart local v37    # "msg":Ljava/lang/String;
    .restart local v38    # "origId":J
    .restart local v40    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v43    # "singleton":Z
    :catch_3
    move-exception v7

    goto/16 :goto_c

    .line 14571
    .end local v40    # "proc":Lcom/android/server/am/ProcessRecord;
    :catch_4
    move-exception v7

    goto/16 :goto_b

    .line 14418
    .end local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v10    # "comp":Landroid/content/ComponentName;
    .end local v21    # "N":I
    .end local v30    # "firstClass":Z
    .end local v32    # "i":I
    .end local v37    # "msg":Ljava/lang/String;
    .end local v38    # "origId":J
    .end local v43    # "singleton":Z
    .restart local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :catch_5
    move-exception v7

    goto/16 :goto_5

    .line 14408
    .end local v33    # "isbbc":Z
    :catch_6
    move-exception v7

    goto/16 :goto_4

    .restart local v10    # "comp":Landroid/content/ComponentName;
    .restart local v30    # "firstClass":Z
    .restart local v33    # "isbbc":Z
    .restart local v37    # "msg":Ljava/lang/String;
    .restart local v43    # "singleton":Z
    :cond_27
    move-object/from16 v6, v26

    .end local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    goto/16 :goto_9

    .end local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v10    # "comp":Landroid/content/ComponentName;
    .end local v30    # "firstClass":Z
    .end local v33    # "isbbc":Z
    .end local v37    # "msg":Ljava/lang/String;
    .end local v43    # "singleton":Z
    .restart local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_28
    move-object/from16 v6, v26

    .end local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    goto/16 :goto_d

    .end local v41    # "providerRunning":Z
    :cond_29
    move-object/from16 v26, v6

    .end local v6    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v26    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    goto/16 :goto_0
.end method

.method public static getInputDispatchingTimeoutLocked(Lcom/android/server/am/ActivityRecord;)J
    .locals 2
    .param p0, "r"    # Lcom/android/server/am/ActivityRecord;

    .prologue
    .line 15745
    if-eqz p0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-static {v0}, Lcom/android/server/am/ActivityManagerService;->getInputDispatchingTimeoutLocked(Lcom/android/server/am/ProcessRecord;)J

    move-result-wide v0

    :goto_0
    return-wide v0

    :cond_0
    sget v0, Lcom/android/server/am/ActivityManagerService;->KEY_DISPATCHING_TIMEOUT:I

    int-to-long v0, v0

    goto :goto_0
.end method

.method public static getInputDispatchingTimeoutLocked(Lcom/android/server/am/ProcessRecord;)J
    .locals 2
    .param p0, "r"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 15749
    if-eqz p0, :cond_1

    iget-object v0, p0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-nez v0, :cond_0

    iget-boolean v0, p0, Lcom/android/server/am/ProcessRecord;->usingWrapper:Z

    if-eqz v0, :cond_1

    .line 15750
    :cond_0
    sget v0, Lcom/android/server/am/ActivityManagerService;->INSTRUMENTATION_KEY_DISPATCHING_TIMEOUT:I

    int-to-long v0, v0

    .line 15752
    :goto_0
    return-wide v0

    :cond_1
    sget v0, Lcom/android/server/am/ActivityManagerService;->KEY_DISPATCHING_TIMEOUT:I

    int-to-long v0, v0

    goto :goto_0
.end method

.method private final getKsmInfo()[J
    .locals 13

    .prologue
    const/4 v12, 0x1

    const-wide/16 v10, 0x1000

    const-wide/16 v8, 0x400

    const/4 v7, 0x0

    const/4 v6, 0x0

    .line 20529
    const/4 v3, 0x4

    new-array v1, v3, [J

    .line 20530
    .local v1, "longOut":[J
    new-array v0, v12, [I

    const/16 v3, 0x2020

    aput v3, v0, v6

    .line 20533
    .local v0, "SINGLE_LONG_FORMAT":[I
    new-array v2, v12, [J

    .line 20534
    .local v2, "longTmp":[J
    const-string v3, "/sys/kernel/mm/ksm/pages_shared"

    invoke-static {v3, v0, v7, v2, v7}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    .line 20536
    aget-wide v4, v2, v6

    mul-long/2addr v4, v10

    div-long/2addr v4, v8

    aput-wide v4, v1, v6

    .line 20537
    const-wide/16 v4, 0x0

    aput-wide v4, v2, v6

    .line 20538
    const-string v3, "/sys/kernel/mm/ksm/pages_sharing"

    invoke-static {v3, v0, v7, v2, v7}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    .line 20540
    aget-wide v4, v2, v6

    mul-long/2addr v4, v10

    div-long/2addr v4, v8

    aput-wide v4, v1, v12

    .line 20541
    const-wide/16 v4, 0x0

    aput-wide v4, v2, v6

    .line 20542
    const-string v3, "/sys/kernel/mm/ksm/pages_unshared"

    invoke-static {v3, v0, v7, v2, v7}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    .line 20544
    const/4 v3, 0x2

    aget-wide v4, v2, v6

    mul-long/2addr v4, v10

    div-long/2addr v4, v8

    aput-wide v4, v1, v3

    .line 20545
    const-wide/16 v4, 0x0

    aput-wide v4, v2, v6

    .line 20546
    const-string v3, "/sys/kernel/mm/ksm/pages_volatile"

    invoke-static {v3, v0, v7, v2, v7}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    .line 20548
    const/4 v3, 0x3

    aget-wide v4, v2, v6

    mul-long/2addr v4, v10

    div-long/2addr v4, v8

    aput-wide v4, v1, v3

    .line 20549
    return-object v1
.end method

.method private final getLRURecordIndexForAppLocked(Landroid/app/IApplicationThread;)I
    .locals 4
    .param p1, "thread"    # Landroid/app/IApplicationThread;

    .prologue
    .line 7399
    invoke-interface {p1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    .line 7401
    .local v2, "threadBinder":Landroid/os/IBinder;
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v0, v3, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_1

    .line 7402
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 7403
    .local v1, "rec":Lcom/android/server/am/ProcessRecord;
    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_0

    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v3}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v3

    if-ne v3, v2, :cond_0

    .line 7407
    .end local v0    # "i":I
    .end local v1    # "rec":Lcom/android/server/am/ProcessRecord;
    :goto_1
    return v0

    .line 7401
    .restart local v0    # "i":I
    .restart local v1    # "rec":Lcom/android/server/am/ProcessRecord;
    :cond_0
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 7407
    .end local v1    # "rec":Lcom/android/server/am/ProcessRecord;
    :cond_1
    const/4 v0, -0x1

    goto :goto_1
.end method

.method private static getLastDonePrebootReceiver(Ljava/io/DataInputStream;Ljava/util/ArrayList;Z)V
    .locals 9
    .param p0, "dis"    # Ljava/io/DataInputStream;
    .param p2, "bIncludeCSC"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/DataInputStream;",
            "Ljava/util/ArrayList",
            "<",
            "Landroid/content/ComponentName;",
            ">;Z)V"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    .prologue
    .line 16763
    .local p1, "lastDoneReceivers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    invoke-virtual {p0}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;

    move-result-object v7

    .line 16764
    .local v7, "vers":Ljava/lang/String;
    invoke-virtual {p0}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;

    move-result-object v3

    .line 16765
    .local v3, "codename":Ljava/lang/String;
    invoke-virtual {p0}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;

    move-result-object v1

    .line 16766
    .local v1, "build":Ljava/lang/String;
    const/4 v0, 0x1

    .line 16767
    .local v0, "bIsSameCSCVer":Z
    if-eqz p2, :cond_0

    .line 16768
    invoke-virtual {p0}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;

    move-result-object v6

    .line 16769
    .local v6, "prevCscVer":Ljava/lang/String;
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->getCSCVersion()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v8, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    .line 16771
    .end local v6    # "prevCscVer":Ljava/lang/String;
    :cond_0
    sget-object v8, Landroid/os/Build$VERSION;->RELEASE:Ljava/lang/String;

    invoke-virtual {v8, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_1

    sget-object v8, Landroid/os/Build$VERSION;->CODENAME:Ljava/lang/String;

    invoke-virtual {v8, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_1

    sget-object v8, Landroid/os/Build$VERSION;->INCREMENTAL:Ljava/lang/String;

    invoke-virtual {v8, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_1

    if-eqz v0, :cond_1

    .line 16775
    invoke-virtual {p0}, Ljava/io/DataInputStream;->readInt()I

    move-result v4

    .line 16776
    .local v4, "num":I
    :goto_0
    if-lez v4, :cond_1

    .line 16777
    add-int/lit8 v4, v4, -0x1

    .line 16778
    invoke-virtual {p0}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;

    move-result-object v5

    .line 16779
    .local v5, "pkg":Ljava/lang/String;
    invoke-virtual {p0}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;

    move-result-object v2

    .line 16780
    .local v2, "cls":Ljava/lang/String;
    new-instance v8, Landroid/content/ComponentName;

    invoke-direct {v8, v5, v2}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {p1, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_0

    .line 16783
    .end local v2    # "cls":Ljava/lang/String;
    .end local v4    # "num":I
    .end local v5    # "pkg":Ljava/lang/String;
    :cond_1
    return-void
.end method

.method private getLowRamTimeSinceIdle(J)J
    .locals 7
    .param p1, "now"    # J

    .prologue
    const-wide/16 v0, 0x0

    .line 16534
    iget-wide v2, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamTimeSinceLastIdle:J

    iget-wide v4, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    cmp-long v4, v4, v0

    if-lez v4, :cond_0

    iget-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    sub-long v0, p1, v0

    :cond_0
    add-long/2addr v0, v2

    return-wide v0
.end method

.method private getMaxCpus()I
    .locals 10

    .prologue
    .line 29053
    const/4 v3, 0x0

    .line 29054
    .local v3, "cpuNum":I
    const/4 v1, 0x0

    .line 29055
    .local v1, "buf":Ljava/io/BufferedReader;
    const-string v0, "/sys/devices/system/cpu/present"

    .line 29058
    .local v0, "CPU_PRESENT":Ljava/lang/String;
    :try_start_0
    new-instance v2, Ljava/io/BufferedReader;

    new-instance v7, Ljava/io/FileReader;

    const-string v8, "/sys/devices/system/cpu/present"

    invoke-direct {v7, v8}, Ljava/io/FileReader;-><init>(Ljava/lang/String;)V

    invoke-direct {v2, v7}, Ljava/io/BufferedReader;-><init>(Ljava/io/Reader;)V
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_3
    .catch Ljava/lang/NullPointerException; {:try_start_0 .. :try_end_0} :catch_5
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_0 .. :try_end_0} :catch_7
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 29059
    .end local v1    # "buf":Ljava/io/BufferedReader;
    .local v2, "buf":Ljava/io/BufferedReader;
    if-eqz v2, :cond_0

    .line 29060
    :try_start_1
    invoke-virtual {v2}, Ljava/io/BufferedReader;->readLine()Ljava/lang/String;

    move-result-object v6

    .line 29061
    .local v6, "kmax":Ljava/lang/String;
    const-string/jumbo v7, "splitIntent"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "CPU_PRESENT ="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 29063
    if-eqz v6, :cond_0

    .line 29064
    const/16 v7, 0x2d

    invoke-virtual {v6, v7}, Ljava/lang/String;->indexOf(I)I

    move-result v4

    .line 29065
    .local v4, "dash_start":I
    if-lez v4, :cond_1

    invoke-virtual {v6}, Ljava/lang/String;->length()I

    move-result v7

    if-ge v4, v7, :cond_1

    .line 29066
    add-int/lit8 v7, v4, 0x1

    invoke-virtual {v6, v7}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v6

    .line 29067
    invoke-static {v6}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
    :try_end_1
    .catch Ljava/lang/NumberFormatException; {:try_start_1 .. :try_end_1} :catch_d
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_c
    .catch Ljava/lang/NullPointerException; {:try_start_1 .. :try_end_1} :catch_b
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_1 .. :try_end_1} :catch_a
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    move-result v7

    add-int/lit8 v3, v7, 0x1

    .line 29084
    .end local v4    # "dash_start":I
    .end local v6    # "kmax":Ljava/lang/String;
    :cond_0
    :goto_0
    if-eqz v2, :cond_2

    .line 29085
    :try_start_2
    invoke-virtual {v2}, Ljava/io/BufferedReader;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    :goto_1
    move-object v1, v2

    .line 29094
    .end local v2    # "buf":Ljava/io/BufferedReader;
    .restart local v1    # "buf":Ljava/io/BufferedReader;
    :goto_2
    return v3

    .line 29069
    .end local v1    # "buf":Ljava/io/BufferedReader;
    .restart local v2    # "buf":Ljava/io/BufferedReader;
    .restart local v4    # "dash_start":I
    .restart local v6    # "kmax":Ljava/lang/String;
    :cond_1
    const/4 v3, 0x0

    goto :goto_0

    .line 29087
    .end local v4    # "dash_start":I
    .end local v6    # "kmax":Ljava/lang/String;
    :cond_2
    const/4 v3, 0x0

    goto :goto_1

    .line 29089
    :catch_0
    move-exception v5

    .line 29090
    .local v5, "e":Ljava/io/IOException;
    const-string/jumbo v7, "splitIntent"

    const-string/jumbo v8, "getMaxCpus, close() failed"

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    move-object v1, v2

    .line 29092
    .end local v2    # "buf":Ljava/io/BufferedReader;
    .restart local v1    # "buf":Ljava/io/BufferedReader;
    goto :goto_2

    .line 29073
    .end local v5    # "e":Ljava/io/IOException;
    :catch_1
    move-exception v5

    .line 29074
    .local v5, "e":Ljava/lang/NumberFormatException;
    :goto_3
    :try_start_3
    const-string/jumbo v7, "splitIntent"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "getMaxCpus, invalid int : "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 29075
    const/4 v3, 0x0

    .line 29084
    if-eqz v1, :cond_3

    .line 29085
    :try_start_4
    invoke-virtual {v1}, Ljava/io/BufferedReader;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_2

    goto :goto_2

    .line 29089
    :catch_2
    move-exception v5

    .line 29090
    .local v5, "e":Ljava/io/IOException;
    const-string/jumbo v7, "splitIntent"

    const-string/jumbo v8, "getMaxCpus, close() failed"

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    .line 29087
    .local v5, "e":Ljava/lang/NumberFormatException;
    :cond_3
    const/4 v3, 0x0

    goto :goto_2

    .line 29076
    .end local v5    # "e":Ljava/lang/NumberFormatException;
    :catch_3
    move-exception v5

    .line 29077
    .local v5, "e":Ljava/io/IOException;
    :goto_4
    :try_start_5
    const-string/jumbo v7, "splitIntent"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "getMaxCpus, CPU cpu/present read failed."

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 29084
    if-eqz v1, :cond_4

    .line 29085
    :try_start_6
    invoke-virtual {v1}, Ljava/io/BufferedReader;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_4

    goto :goto_2

    .line 29089
    :catch_4
    move-exception v5

    .line 29090
    const-string/jumbo v7, "splitIntent"

    const-string/jumbo v8, "getMaxCpus, close() failed"

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    .line 29087
    :cond_4
    const/4 v3, 0x0

    goto :goto_2

    .line 29078
    .end local v5    # "e":Ljava/io/IOException;
    :catch_5
    move-exception v5

    .line 29079
    .local v5, "e":Ljava/lang/NullPointerException;
    :goto_5
    :try_start_7
    const-string/jumbo v7, "splitIntent"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "getMaxCpus, NPE error : "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    .line 29084
    if-eqz v1, :cond_5

    .line 29085
    :try_start_8
    invoke-virtual {v1}, Ljava/io/BufferedReader;->close()V
    :try_end_8
    .catch Ljava/io/IOException; {:try_start_8 .. :try_end_8} :catch_6

    goto/16 :goto_2

    .line 29089
    :catch_6
    move-exception v5

    .line 29090
    .local v5, "e":Ljava/io/IOException;
    const-string/jumbo v7, "splitIntent"

    const-string/jumbo v8, "getMaxCpus, close() failed"

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_2

    .line 29087
    .local v5, "e":Ljava/lang/NullPointerException;
    :cond_5
    const/4 v3, 0x0

    goto/16 :goto_2

    .line 29080
    .end local v5    # "e":Ljava/lang/NullPointerException;
    :catch_7
    move-exception v5

    .line 29081
    .local v5, "e":Ljava/lang/IndexOutOfBoundsException;
    :goto_6
    :try_start_9
    const-string/jumbo v7, "splitIntent"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "getMaxCpus, IndexOutOfBounds error : "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    .line 29084
    if-eqz v1, :cond_6

    .line 29085
    :try_start_a
    invoke-virtual {v1}, Ljava/io/BufferedReader;->close()V
    :try_end_a
    .catch Ljava/io/IOException; {:try_start_a .. :try_end_a} :catch_8

    goto/16 :goto_2

    .line 29089
    :catch_8
    move-exception v5

    .line 29090
    .local v5, "e":Ljava/io/IOException;
    const-string/jumbo v7, "splitIntent"

    const-string/jumbo v8, "getMaxCpus, close() failed"

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_2

    .line 29087
    .local v5, "e":Ljava/lang/IndexOutOfBoundsException;
    :cond_6
    const/4 v3, 0x0

    goto/16 :goto_2

    .line 29083
    .end local v5    # "e":Ljava/lang/IndexOutOfBoundsException;
    :catchall_0
    move-exception v7

    .line 29084
    :goto_7
    if-eqz v1, :cond_7

    .line 29085
    :try_start_b
    invoke-virtual {v1}, Ljava/io/BufferedReader;->close()V
    :try_end_b
    .catch Ljava/io/IOException; {:try_start_b .. :try_end_b} :catch_9

    .line 29091
    :goto_8
    throw v7

    .line 29087
    :cond_7
    const/4 v3, 0x0

    goto :goto_8

    .line 29089
    :catch_9
    move-exception v5

    .line 29090
    .local v5, "e":Ljava/io/IOException;
    const-string/jumbo v8, "splitIntent"

    const-string/jumbo v9, "getMaxCpus, close() failed"

    invoke-static {v8, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_8

    .line 29083
    .end local v1    # "buf":Ljava/io/BufferedReader;
    .end local v5    # "e":Ljava/io/IOException;
    .restart local v2    # "buf":Ljava/io/BufferedReader;
    :catchall_1
    move-exception v7

    move-object v1, v2

    .end local v2    # "buf":Ljava/io/BufferedReader;
    .restart local v1    # "buf":Ljava/io/BufferedReader;
    goto :goto_7

    .line 29080
    .end local v1    # "buf":Ljava/io/BufferedReader;
    .restart local v2    # "buf":Ljava/io/BufferedReader;
    :catch_a
    move-exception v5

    move-object v1, v2

    .end local v2    # "buf":Ljava/io/BufferedReader;
    .restart local v1    # "buf":Ljava/io/BufferedReader;
    goto :goto_6

    .line 29078
    .end local v1    # "buf":Ljava/io/BufferedReader;
    .restart local v2    # "buf":Ljava/io/BufferedReader;
    :catch_b
    move-exception v5

    move-object v1, v2

    .end local v2    # "buf":Ljava/io/BufferedReader;
    .restart local v1    # "buf":Ljava/io/BufferedReader;
    goto :goto_5

    .line 29076
    .end local v1    # "buf":Ljava/io/BufferedReader;
    .restart local v2    # "buf":Ljava/io/BufferedReader;
    :catch_c
    move-exception v5

    move-object v1, v2

    .end local v2    # "buf":Ljava/io/BufferedReader;
    .restart local v1    # "buf":Ljava/io/BufferedReader;
    goto/16 :goto_4

    .line 29073
    .end local v1    # "buf":Ljava/io/BufferedReader;
    .restart local v2    # "buf":Ljava/io/BufferedReader;
    :catch_d
    move-exception v5

    move-object v1, v2

    .end local v2    # "buf":Ljava/io/BufferedReader;
    .restart local v1    # "buf":Ljava/io/BufferedReader;
    goto/16 :goto_3
.end method

.method private getProcessName(Ljava/lang/Object;I)Ljava/lang/String;
    .locals 6
    .param p1, "obj"    # Ljava/lang/Object;
    .param p2, "type"    # I

    .prologue
    .line 29208
    const/4 v3, 0x0

    .line 29209
    .local v3, "curt":Landroid/content/pm/ResolveInfo;
    const/4 v2, 0x0

    .line 29210
    .local v2, "ci":Landroid/content/pm/ComponentInfo;
    const/4 v0, 0x0

    .line 29211
    .local v0, "actName":Ljava/lang/String;
    const/4 v1, 0x0

    .line 29213
    .local v1, "appName":Ljava/lang/String;
    instance-of v4, p1, Landroid/content/pm/ResolveInfo;

    if-eqz v4, :cond_0

    move-object v3, p1

    .line 29214
    check-cast v3, Landroid/content/pm/ResolveInfo;

    .line 29215
    invoke-direct {p0, v3}, Lcom/android/server/am/ActivityManagerService;->getComponentInfo(Landroid/content/pm/ResolveInfo;)Landroid/content/pm/ComponentInfo;

    move-result-object v2

    .line 29216
    iget-object v0, v2, Landroid/content/pm/ComponentInfo;->processName:Ljava/lang/String;

    .line 29217
    iget-object v4, v2, Landroid/content/pm/ComponentInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v4, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    .line 29224
    const/4 v4, 0x2

    if-ne p2, v4, :cond_1

    .line 29227
    .end local v1    # "appName":Ljava/lang/String;
    :goto_0
    return-object v1

    .line 29220
    .restart local v1    # "appName":Ljava/lang/String;
    :cond_0
    new-instance v4, Ljava/lang/IllegalStateException;

    const-string v5, "SPLIT_INTENT, Object type error"

    invoke-direct {v4, v5}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v4

    :cond_1
    move-object v1, v0

    .line 29227
    goto :goto_0
.end method

.method private getProfileIdsLocked(I)Ljava/util/Set;
    .locals 6
    .param p1, "userId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I)",
            "Ljava/util/Set",
            "<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation

    .prologue
    .line 27409
    new-instance v3, Ljava/util/HashSet;

    invoke-direct {v3}, Ljava/util/HashSet;-><init>()V

    .line 27410
    .local v3, "userIds":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v4

    const/4 v5, 0x0

    invoke-virtual {v4, p1, v5}, Lcom/android/server/pm/UserManagerService;->getProfiles(IZ)Ljava/util/List;

    move-result-object v1

    .line 27412
    .local v1, "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-interface {v1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    .local v0, "i$":Ljava/util/Iterator;
    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_0

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/UserInfo;

    .line 27413
    .local v2, "user":Landroid/content/pm/UserInfo;
    iget v4, v2, Landroid/content/pm/UserInfo;->id:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-interface {v3, v4}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    goto :goto_0

    .line 27415
    .end local v2    # "user":Landroid/content/pm/UserInfo;
    :cond_0
    return-object v3
.end method

.method private getProviderInfoLocked(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;
    .locals 4
    .param p1, "authority"    # Ljava/lang/String;
    .param p2, "userHandle"    # I

    .prologue
    .line 11425
    const/4 v1, 0x0

    .line 11426
    .local v1, "pi":Landroid/content/pm/ProviderInfo;
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v2, p1, p2}, Lcom/android/server/am/ProviderMap;->getProviderByName(Ljava/lang/String;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v0

    .line 11427
    .local v0, "cpr":Lcom/android/server/am/ContentProviderRecord;
    if-eqz v0, :cond_0

    .line 11428
    iget-object v1, v0, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    .line 11436
    :goto_0
    return-object v1

    .line 11431
    :cond_0
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    const/16 v3, 0x800

    invoke-interface {v2, p1, v3, p2}, Landroid/content/pm/IPackageManager;->resolveContentProvider(Ljava/lang/String;II)Landroid/content/pm/ProviderInfo;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    goto :goto_0

    .line 11433
    :catch_0
    move-exception v2

    goto :goto_0
.end method

.method private getWallpaperManagerLocked()Lcom/android/server/wallpaper/WallpaperManagerService;
    .locals 1

    .prologue
    .line 6543
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWms:Lcom/android/server/wallpaper/WallpaperManagerService;

    if-nez v0, :cond_0

    .line 6544
    const-string/jumbo v0, "wallpaper"

    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    check-cast v0, Lcom/android/server/wallpaper/WallpaperManagerService;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWms:Lcom/android/server/wallpaper/WallpaperManagerService;

    .line 6546
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWms:Lcom/android/server/wallpaper/WallpaperManagerService;

    return-object v0
.end method

.method private handleAppCrashLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    .locals 17
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "reason"    # Ljava/lang/String;
    .param p3, "shortMsg"    # Ljava/lang/String;
    .param p4, "longMsg"    # Ljava/lang/String;
    .param p5, "stackTrace"    # Ljava/lang/String;

    .prologue
    .line 17456
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    .line 17459
    .local v4, "now":J
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-nez v3, :cond_2

    .line 17460
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v3, v6, v7}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Ljava/lang/Long;

    .line 17464
    .local v10, "crashTime":Ljava/lang/Long;
    :goto_0
    if-eqz v10, :cond_4

    invoke-virtual {v10}, Ljava/lang/Long;->longValue()J

    move-result-wide v6

    const-wide/32 v14, 0xea60

    add-long/2addr v6, v14

    cmp-long v3, v4, v6

    if-gez v3, :cond_4

    .line 17466
    const-string v3, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Process "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v7, v7, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " has crashed too many times: killing!"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v3, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 17468
    const/16 v3, 0x7550

    const/4 v6, 0x3

    new-array v6, v6, [Ljava/lang/Object;

    const/4 v7, 0x0

    move-object/from16 v0, p1

    iget v8, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v8

    aput-object v8, v6, v7

    const/4 v7, 0x1

    move-object/from16 v0, p1

    iget-object v8, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v8, v8, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    aput-object v8, v6, v7

    const/4 v7, 0x2

    move-object/from16 v0, p1

    iget v8, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v8

    aput-object v8, v6, v7

    invoke-static {v3, v6}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 17470
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Lcom/android/server/am/ActivityStackSupervisor;->handleAppCrashLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 17471
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-nez v3, :cond_3

    .line 17476
    const/16 v3, 0x753f

    const/4 v6, 0x3

    new-array v6, v6, [Ljava/lang/Object;

    const/4 v7, 0x0

    move-object/from16 v0, p1

    iget v8, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v8

    aput-object v8, v6, v7

    const/4 v7, 0x1

    move-object/from16 v0, p1

    iget v8, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v8

    aput-object v8, v6, v7

    const/4 v7, 0x2

    move-object/from16 v0, p1

    iget-object v8, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v8, v8, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    aput-object v8, v6, v7

    invoke-static {v3, v6}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 17478
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-nez v3, :cond_0

    .line 17481
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v15, v3, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move/from16 v16, v0

    new-instance v3, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;

    move-object/from16 v6, p3

    move-object/from16 v7, p4

    move-object/from16 v8, p5

    invoke-direct/range {v3 .. v8}, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;-><init>(JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    move/from16 v0, v16

    invoke-virtual {v14, v15, v0, v3}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    .line 17483
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v3, v6, v7}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)Ljava/lang/Object;

    .line 17485
    :cond_0
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->bad:Z

    .line 17486
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->removed:Z

    .line 17489
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v3

    const-string v6, "CscFeature_Common_SupportDeviceReporting"

    invoke-virtual {v3, v6}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_1

    .line 17492
    const/16 v3, 0x190

    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    const/4 v8, 0x3

    move-object/from16 v0, p0

    invoke-direct {v0, v3, v6, v7, v8}, Lcom/android/server/am/ActivityManagerService;->sendAppStateMsg(ILjava/lang/String;II)V

    .line 17499
    :cond_1
    const/4 v3, 0x0

    const/4 v6, 0x0

    const-string/jumbo v7, "crash"

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v1, v3, v6, v7}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z

    .line 17500
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    .line 17501
    const/4 v3, 0x0

    .line 17544
    :goto_1
    return v3

    .line 17462
    .end local v10    # "crashTime":Ljava/lang/Long;
    :cond_2
    const/4 v10, 0x0

    .restart local v10    # "crashTime":Ljava/lang/Long;
    goto/16 :goto_0

    .line 17503
    :cond_3
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    .line 17509
    :goto_2
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    add-int/lit8 v11, v3, -0x1

    .local v11, "i":I
    :goto_3
    if-ltz v11, :cond_5

    .line 17512
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v3, v11}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/am/ServiceRecord;

    .line 17513
    .local v13, "sr":Lcom/android/server/am/ServiceRecord;
    iget v3, v13, Lcom/android/server/am/ServiceRecord;->crashCount:I

    add-int/lit8 v3, v3, 0x1

    iput v3, v13, Lcom/android/server/am/ServiceRecord;->crashCount:I

    .line 17509
    add-int/lit8 v11, v11, -0x1

    goto :goto_3

    .line 17505
    .end local v11    # "i":I
    .end local v13    # "sr":Lcom/android/server/am/ServiceRecord;
    :cond_4
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, p1

    move-object/from16 v1, p2

    invoke-virtual {v3, v0, v1}, Lcom/android/server/am/ActivityStackSupervisor;->finishTopRunningActivityLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)V

    goto :goto_2

    .line 17520
    .restart local v11    # "i":I
    :cond_5
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    .line 17521
    .local v2, "activities":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityRecord;>;"
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v0, v3, :cond_7

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-lez v3, :cond_7

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v3, v3, 0x1

    if-nez v3, :cond_7

    .line 17523
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v9, v3, -0x1

    .local v9, "activityNdx":I
    :goto_4
    if-ltz v9, :cond_7

    .line 17524
    invoke-virtual {v2, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/am/ActivityRecord;

    .line 17525
    .local v12, "r":Lcom/android/server/am/ActivityRecord;
    invoke-virtual {v12}, Lcom/android/server/am/ActivityRecord;->isHomeActivity()Z

    move-result v3

    if-eqz v3, :cond_6

    .line 17526
    const-string v3, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Clearing package preferred activities from "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v7, v12, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v3, v6}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 17528
    :try_start_0
    invoke-static {}, Landroid/app/ActivityThread;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v3

    iget-object v6, v12, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-interface {v3, v6}, Landroid/content/pm/IPackageManager;->clearPackagePreferredActivities(Ljava/lang/String;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 17523
    :cond_6
    :goto_5
    add-int/lit8 v9, v9, -0x1

    goto :goto_4

    .line 17537
    .end local v9    # "activityNdx":I
    .end local v12    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_7
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-nez v3, :cond_8

    .line 17540
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v8

    invoke-virtual {v3, v6, v7, v8}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    .line 17543
    :cond_8
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->crashHandler:Ljava/lang/Runnable;

    if-eqz v3, :cond_9

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->crashHandler:Ljava/lang/Runnable;

    invoke-virtual {v3, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 17544
    :cond_9
    const/4 v3, 0x1

    goto/16 :goto_1

    .line 17530
    .restart local v9    # "activityNdx":I
    .restart local v12    # "r":Lcom/android/server/am/ActivityRecord;
    :catch_0
    move-exception v3

    goto :goto_5
.end method

.method private final handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
    .locals 11
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "restarting"    # Z
    .param p3, "allowRestart"    # Z

    .prologue
    .line 7320
    iget v6, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 7321
    .local v6, "pid":I
    const/4 v8, -0x1

    invoke-direct {p0, p1, p2, p3, v8}, Lcom/android/server/am/ActivityManagerService;->cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;ZZI)Z

    move-result v5

    .line 7322
    .local v5, "kept":Z
    if-nez v5, :cond_0

    if-nez p2, :cond_0

    .line 7323
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 7324
    if-lez v6, :cond_0

    .line 7325
    invoke-static {v6}, Lcom/android/server/am/ProcessList;->remove(I)V

    .line 7329
    :cond_0
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    if-ne v8, p1, :cond_1

    .line 7330
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->clearProfilerLocked()V

    .line 7335
    :cond_1
    if-nez p2, :cond_2

    .line 7336
    invoke-static {}, Lcom/android/server/am/VirtualScreenManagerService;->self()Lcom/android/server/am/VirtualScreenManagerService;

    move-result-object v8

    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v9, v9, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v8, v9}, Lcom/android/server/am/VirtualScreenManagerService;->removeVirtualScreen(Ljava/lang/String;)V

    .line 7342
    :cond_2
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v8, p1}, Lcom/android/server/am/ActivityStackSupervisor;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v2

    .line 7344
    .local v2, "hasVisibleActivities":Z
    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->clear()V

    .line 7346
    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-eqz v8, :cond_3

    .line 7347
    const-string v8, "ActivityManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Crash of app "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    iget-object v10, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " running instrumentation "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    iget-object v10, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v8, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7349
    new-instance v4, Landroid/os/Bundle;

    invoke-direct {v4}, Landroid/os/Bundle;-><init>()V

    .line 7350
    .local v4, "info":Landroid/os/Bundle;
    const-string/jumbo v8, "shortMsg"

    const-string v9, "Process crashed."

    invoke-virtual {v4, v8, v9}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 7351
    const/4 v8, 0x0

    invoke-virtual {p0, p1, v8, v4}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V

    .line 7354
    .end local v4    # "info":Landroid/os/Bundle;
    :cond_3
    if-nez p2, :cond_6

    .line 7356
    const/4 v3, 0x0

    .line 7358
    .local v3, "ignoreResumeTop":Z
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mTargetDismiss:Landroid/content/Intent;

    if-eqz v8, :cond_4

    .line 7359
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mTargetDismiss:Landroid/content/Intent;

    invoke-virtual {v8}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    .line 7360
    .local v1, "comp":Landroid/content/ComponentName;
    if-eqz v1, :cond_4

    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v8, v8, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    if-eqz v8, :cond_4

    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v8, v8, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v8, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_4

    .line 7363
    const/4 v8, 0x0

    iput-boolean v8, p0, Lcom/android/server/am/ActivityManagerService;->mIsKeyguardWaitingForActivityDrawnRequested:Z

    .line 7364
    const/4 v8, 0x0

    iput-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mTargetDismiss:Landroid/content/Intent;

    .line 7368
    .end local v1    # "comp":Landroid/content/ComponentName;
    :cond_4
    if-nez v2, :cond_5

    iget-boolean v8, p0, Lcom/android/server/am/ActivityManagerService;->mIsKeyguardWaitingForActivityDrawnRequested:Z

    if-eqz v8, :cond_5

    .line 7369
    const/4 v3, 0x1

    .line 7373
    :cond_5
    if-nez v3, :cond_6

    if-eqz v2, :cond_6

    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v8}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    move-result v8

    if-nez v8, :cond_6

    .line 7379
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v9, 0x0

    const/4 v10, 0x0

    invoke-virtual {v8, v9, v10}, Lcom/android/server/am/ActivityStackSupervisor;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;I)V

    .line 7387
    .end local v3    # "ignoreResumeTop":Z
    :cond_6
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mScaledAppNames:Ljava/util/Map;

    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-interface {v8, v9}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/Integer;

    .line 7388
    .local v0, "IpidTemp":Ljava/lang/Integer;
    if-eqz v0, :cond_7

    .line 7389
    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    move-result v7

    .line 7390
    .local v7, "pidTemp":I
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v8, v7}, Lcom/android/server/wm/WindowManagerService;->removeScaledPid(I)V

    .line 7391
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mScaledAppNames:Ljava/util/Map;

    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-interface {v8, v9}, Ljava/util/Map;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7392
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mDssHelper:Landroid/os/DssHelper;

    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v8, v9}, Landroid/os/DssHelper;->removeAdssPackage(Ljava/lang/String;)V

    .line 7396
    .end local v7    # "pidTemp":I
    :cond_7
    return-void
.end method

.method private hasUsageStatsPermission(Ljava/lang/String;)Z
    .locals 6
    .param p1, "callingPackage"    # Ljava/lang/String;

    .prologue
    const/4 v1, 0x1

    const/4 v2, 0x0

    .line 5898
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    const/16 v4, 0x2b

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    invoke-virtual {v3, v4, v5, p1}, Lcom/android/server/AppOpsService;->checkOperation(IILjava/lang/String;)I

    move-result v0

    .line 5900
    .local v0, "mode":I
    const/4 v3, 0x3

    if-ne v0, v3, :cond_2

    .line 5901
    const-string v3, "android.permission.PACKAGE_USAGE_STATS"

    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v3

    if-nez v3, :cond_1

    .line 5904
    :cond_0
    :goto_0
    return v1

    :cond_1
    move v1, v2

    .line 5901
    goto :goto_0

    .line 5904
    :cond_2
    if-eqz v0, :cond_0

    move v1, v2

    goto :goto_0
.end method

.method private isApplicationClearDataDisabled(Ljava/lang/String;I)Z
    .locals 3
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I

    .prologue
    .line 28573
    const/4 v0, 0x0

    .line 28574
    .local v0, "blocked":Z
    if-eqz p1, :cond_0

    .line 28576
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mApplicationPolicy:Landroid/app/enterprise/ApplicationPolicy;

    if-eqz v1, :cond_0

    .line 28577
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mApplicationPolicy:Landroid/app/enterprise/ApplicationPolicy;

    const/4 v2, 0x1

    invoke-virtual {v1, p1, p2, v2}, Landroid/app/enterprise/ApplicationPolicy;->isApplicationClearDataDisabled(Ljava/lang/String;IZ)Z

    move-result v0

    .line 28581
    :cond_0
    return v0
.end method

.method private isCallerSetSelf(ILjava/lang/String;)Z
    .locals 7
    .param p1, "uid"    # I
    .param p2, "packageName"    # Ljava/lang/String;

    .prologue
    const/4 v2, 0x1

    const/4 v3, 0x0

    .line 29883
    const/4 v1, 0x0

    .line 29885
    .local v1, "info":Landroid/content/pm/ApplicationInfo;
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v4

    const/4 v5, 0x0

    invoke-virtual {v4, p2, v5}, Landroid/content/pm/PackageManager;->getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v1

    .line 29889
    if-eqz v1, :cond_1

    iget v4, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    if-ne v4, p1, :cond_1

    :cond_0
    :goto_0
    return v2

    :cond_1
    move v2, v3

    goto :goto_0

    .line 29886
    :catch_0
    move-exception v0

    .line 29887
    .local v0, "e":Ljava/lang/Exception;
    :try_start_1
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Exception - isCallerSetSelf:"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 29889
    if-eqz v1, :cond_2

    iget v4, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    if-eq v4, p1, :cond_0

    :cond_2
    move v2, v3

    goto :goto_0

    .end local v0    # "e":Ljava/lang/Exception;
    :catchall_0
    move-exception v4

    if-eqz v1, :cond_3

    iget v4, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    if-eq v4, p1, :cond_0

    :cond_3
    move v2, v3

    goto :goto_0
.end method

.method private isForceStopDisabled(Lcom/android/server/am/TaskRecord;)Z
    .locals 1
    .param p1, "tr"    # Lcom/android/server/am/TaskRecord;

    .prologue
    .line 28533
    const/4 v0, 0x0

    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->isForceStopDisabled(Lcom/android/server/am/TaskRecord;Z)Z

    move-result v0

    return v0
.end method

.method private isForceStopDisabled(Lcom/android/server/am/TaskRecord;Z)Z
    .locals 7
    .param p1, "tr"    # Lcom/android/server/am/TaskRecord;
    .param p2, "skipMDMCheck"    # Z

    .prologue
    const/4 v3, 0x0

    .line 28537
    if-nez p2, :cond_2

    if-eqz p1, :cond_2

    .line 28538
    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->getRootActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v6

    .line 28539
    .local v6, "rootActivity":Lcom/android/server/am/ActivityRecord;
    const/4 v1, 0x0

    .line 28540
    .local v1, "packageName":Ljava/lang/String;
    if-eqz v6, :cond_1

    .line 28541
    iget-object v1, v6, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    .line 28545
    :cond_0
    :goto_0
    if-eqz v1, :cond_2

    invoke-virtual {v1}, Ljava/lang/String;->isEmpty()Z

    move-result v0

    if-nez v0, :cond_2

    .line 28546
    iget v2, p1, Lcom/android/server/am/TaskRecord;->userId:I

    .local v2, "userId":I
    move-object v0, p0

    move-object v4, v3

    move-object v5, v3

    .line 28547
    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->isForceStopDisabled(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    .line 28550
    .end local v1    # "packageName":Ljava/lang/String;
    .end local v2    # "userId":I
    .end local v6    # "rootActivity":Lcom/android/server/am/ActivityRecord;
    :goto_1
    return v0

    .line 28542
    .restart local v1    # "packageName":Ljava/lang/String;
    .restart local v6    # "rootActivity":Lcom/android/server/am/ActivityRecord;
    :cond_1
    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->getBaseIntent()Landroid/content/Intent;

    move-result-object v0

    if-eqz v0, :cond_0

    .line 28543
    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->getBaseIntent()Landroid/content/Intent;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    goto :goto_0

    .line 28550
    .end local v1    # "packageName":Ljava/lang/String;
    .end local v6    # "rootActivity":Lcom/android/server/am/ActivityRecord;
    :cond_2
    const/4 v0, 0x0

    goto :goto_1
.end method

.method private isForceStopDisabled(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    .locals 7
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "errorType"    # Ljava/lang/String;
    .param p4, "errorClass"    # Ljava/lang/String;
    .param p5, "errorReason"    # Ljava/lang/String;

    .prologue
    .line 28555
    const/4 v6, 0x0

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move-object v3, p3

    move-object v4, p4

    move-object v5, p5

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->isForceStopDisabled(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Z

    move-result v0

    return v0
.end method

.method private isForceStopDisabled(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Z
    .locals 7
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "errorType"    # Ljava/lang/String;
    .param p4, "errorClass"    # Ljava/lang/String;
    .param p5, "errorReason"    # Ljava/lang/String;
    .param p6, "skipMDMCheck"    # Z

    .prologue
    .line 28560
    if-nez p6, :cond_0

    if-eqz p1, :cond_0

    .line 28563
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mApplicationPolicy:Landroid/app/enterprise/ApplicationPolicy;

    if-eqz v0, :cond_0

    .line 28564
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mApplicationPolicy:Landroid/app/enterprise/ApplicationPolicy;

    const/4 v6, 0x1

    move-object v1, p1

    move v2, p2

    move-object v3, p3

    move-object v4, p4

    move-object v5, p5

    invoke-virtual/range {v0 .. v6}, Landroid/app/enterprise/ApplicationPolicy;->isApplicationForceStopDisabled(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Z

    move-result v0

    .line 28569
    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method private isGetTasksAllowed(Ljava/lang/String;II)Z
    .locals 2
    .param p1, "caller"    # Ljava/lang/String;
    .param p2, "callingPid"    # I
    .param p3, "callingUid"    # I

    .prologue
    .line 12590
    const-string v1, "android.permission.REAL_GET_TASKS"

    invoke-virtual {p0, v1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v1

    if-nez v1, :cond_2

    const/4 v0, 0x1

    .line 12592
    .local v0, "allowed":Z
    :goto_0
    if-nez v0, :cond_0

    .line 12593
    const-string v1, "android.permission.GET_TASKS"

    invoke-virtual {p0, v1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v1

    if-nez v1, :cond_0

    .line 12600
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    invoke-interface {v1, p3}, Landroid/content/pm/IPackageManager;->isUidPrivileged(I)Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v1

    if-eqz v1, :cond_0

    .line 12601
    const/4 v0, 0x1

    .line 12609
    :cond_0
    :goto_1
    if-nez v0, :cond_1

    .line 12613
    :cond_1
    return v0

    .line 12590
    .end local v0    # "allowed":Z
    :cond_2
    const/4 v0, 0x0

    goto :goto_0

    .line 12605
    .restart local v0    # "allowed":Z
    :catch_0
    move-exception v1

    goto :goto_1
.end method

.method private isImsProcess(Ljava/lang/String;)Z
    .locals 1
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    .line 30072
    if-eqz p1, :cond_1

    .line 30073
    const-string v0, "com.sec.ims.android"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_0

    const-string v0, "com.samsung.commonimsservice"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_0

    const-string v0, "com.sec.imsservice"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_0

    const-string v0, "com.sec.android.voltesettings"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 30077
    :cond_0
    const/4 v0, 0x1

    .line 30081
    :goto_0
    return v0

    :cond_1
    const/4 v0, 0x0

    goto :goto_0
.end method

.method private isKnox(I)Z
    .locals 1
    .param p1, "userID"    # I

    .prologue
    .line 8354
    const/16 v0, 0x64

    if-lt p1, v0, :cond_0

    const/16 v0, 0xc3

    if-ge p1, v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method private isLauncherableApp(Ljava/lang/String;)Z
    .locals 6
    .param p1, "pkgName"    # Ljava/lang/String;

    .prologue
    .line 29578
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v3}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v2

    .line 29579
    .local v2, "packageManager":Landroid/content/pm/PackageManager;
    invoke-virtual {v2, p1}, Landroid/content/pm/PackageManager;->getLaunchIntentForPackage(Ljava/lang/String;)Landroid/content/Intent;

    move-result-object v1

    .line 29580
    .local v1, "intent":Landroid/content/Intent;
    if-nez v1, :cond_0

    .line 29581
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "isLauncherableApp not launcherable:"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 29582
    const/4 v3, 0x0

    .line 29587
    .end local v1    # "intent":Landroid/content/Intent;
    .end local v2    # "packageManager":Landroid/content/pm/PackageManager;
    :goto_0
    return v3

    .line 29584
    :catch_0
    move-exception v0

    .line 29585
    .local v0, "e":Ljava/lang/Exception;
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "isLaucherableApp exception="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 29587
    .end local v0    # "e":Ljava/lang/Exception;
    :cond_0
    const/4 v3, 0x1

    goto :goto_0
.end method

.method private isNeedSleepDualScreenstate()Z
    .locals 1

    .prologue
    .line 28598
    const/4 v0, 0x0

    return v0
.end method

.method private isNotRunningApp(Ljava/lang/String;)Z
    .locals 9
    .param p1, "pkgName"    # Ljava/lang/String;

    .prologue
    const/4 v4, 0x1

    const/4 v5, 0x0

    .line 29600
    :try_start_0
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v6}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v3

    .line 29601
    .local v3, "pm":Landroid/content/pm/PackageManager;
    if-eqz v3, :cond_1

    if-eqz p1, :cond_1

    .line 29602
    const/4 v6, 0x0

    invoke-virtual {v3, p1, v6}, Landroid/content/pm/PackageManager;->getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v1

    .line 29603
    .local v1, "appInfo":Landroid/content/pm/ApplicationInfo;
    if-eqz v1, :cond_1

    .line 29604
    iget-object v6, v1, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    iget v7, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    const/4 v8, 0x1

    invoke-virtual {p0, v6, v7, v8}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 29605
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    if-eqz v0, :cond_0

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v6, :cond_1

    .line 29606
    :cond_0
    const-string v6, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "isNotRunningApp - "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " : not running"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 29619
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v1    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .end local v3    # "pm":Landroid/content/pm/PackageManager;
    :goto_0
    return v4

    .line 29615
    :catch_0
    move-exception v2

    .line 29616
    .local v2, "e":Ljava/lang/Exception;
    const-string v4, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Exception on isNotRunningApp for Package["

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, "], exception is "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 29618
    .end local v2    # "e":Ljava/lang/Exception;
    :cond_1
    const-string v4, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "isNotRunningApp - "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " : running already"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    move v4, v5

    .line 29619
    goto :goto_0
.end method

.method private isPermissionAlertDialogDisplay(Landroid/content/Intent;Ljava/lang/String;I)Z
    .locals 4
    .param p1, "intent"    # Landroid/content/Intent;
    .param p2, "resolvedType"    # Ljava/lang/String;
    .param p3, "userId"    # I

    .prologue
    .line 6417
    const-string v2, "AASAMSGAASA"

    const-string/jumbo v3, "isPermissionAlertDialogDisplay called!"

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 6418
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    .line 6419
    .local v0, "data":Ljava/util/HashMap;
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v1

    .line 6420
    .local v1, "msg":Landroid/os/Message;
    const/16 v2, 0x41

    iput v2, v1, Landroid/os/Message;->what:I

    .line 6421
    iput-object v0, v1, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 6422
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v2, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 6424
    const/4 v2, 0x0

    return v2
.end method

.method private isPossibleToStart(Landroid/content/Intent;)Z
    .locals 8
    .param p1, "intent"    # Landroid/content/Intent;

    .prologue
    const/4 v3, 0x0

    const/4 v4, 0x1

    .line 6108
    if-nez p1, :cond_1

    .line 6142
    :cond_0
    :goto_0
    return v3

    .line 6112
    :cond_1
    invoke-virtual {p1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v5

    if-eqz v5, :cond_2

    invoke-virtual {p1}, Landroid/content/Intent;->getCategories()Ljava/util/Set;

    move-result-object v5

    if-eqz v5, :cond_2

    invoke-virtual {p1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v5

    const-string v6, "android.intent.action.MAIN"

    invoke-virtual {v5, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_2

    invoke-virtual {p1}, Landroid/content/Intent;->getCategories()Ljava/util/Set;

    move-result-object v5

    const-string v6, "android.intent.category.HOME"

    invoke-interface {v5, v6}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_2

    move v3, v4

    .line 6115
    goto :goto_0

    .line 6118
    :cond_2
    invoke-virtual {p1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v5

    if-eqz v5, :cond_4

    invoke-virtual {p1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v5

    const-string v6, "android.intent.action.CALL_PRIVILEGED"

    invoke-virtual {v5, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_3

    invoke-virtual {p1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v5

    const-string v6, "android.intent.action.ACTION_REQUEST_SHUTDOWN"

    invoke-virtual {v5, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_4

    :cond_3
    move v3, v4

    .line 6120
    goto :goto_0

    .line 6123
    :cond_4
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mCheckSIOPLevelList:Ljava/util/HashMap;

    if-eqz v5, :cond_7

    invoke-virtual {p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v5

    if-eqz v5, :cond_7

    invoke-virtual {p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v5

    invoke-virtual {v5}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v5

    if-eqz v5, :cond_7

    .line 6124
    invoke-virtual {p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v5

    invoke-virtual {v5}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    .line 6125
    .local v1, "mPackageName":Ljava/lang/String;
    const-string v5, "checkingSIOP"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "isPossibleToStart  : "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 6127
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mCheckSIOPLevelList:Ljava/util/HashMap;

    invoke-virtual {v5, v1}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_5

    .line 6128
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCheckSIOPLevelList:Ljava/util/HashMap;

    invoke-virtual {v3, v1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/Boolean;

    invoke-virtual {v3}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v3

    goto/16 :goto_0

    .line 6130
    :cond_5
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mCheckSIOPLevelList:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v5

    invoke-interface {v5}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    .line 6131
    .local v0, "it":Ljava/util/Iterator;
    :cond_6
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_7

    .line 6132
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 6133
    .local v2, "pairs":Ljava/util/Map$Entry;
    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v1, v5}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v5

    if-eqz v5, :cond_6

    .line 6134
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v3}, Ljava/lang/Boolean;->valueOf(Ljava/lang/String;)Ljava/lang/Boolean;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v3

    goto/16 :goto_0

    .line 6139
    .end local v0    # "it":Ljava/util/Iterator;
    .end local v1    # "mPackageName":Ljava/lang/String;
    .end local v2    # "pairs":Ljava/util/Map$Entry;
    :cond_7
    iget v5, p0, Lcom/android/server/am/ActivityManagerService;->mSIOPLevel:I

    const/16 v6, 0x8

    if-eq v5, v6, :cond_0

    iget v5, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryOverheatLevel:I

    if-gtz v5, :cond_0

    move v3, v4

    .line 6142
    goto/16 :goto_0
.end method

.method private isReceivingBroadcast(Lcom/android/server/am/ProcessRecord;)Lcom/android/server/am/BroadcastQueue;
    .locals 6
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 24666
    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->curReceiver:Lcom/android/server/am/BroadcastRecord;

    .line 24667
    .local v4, "r":Lcom/android/server/am/BroadcastRecord;
    if-eqz v4, :cond_0

    .line 24668
    iget-object v3, v4, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    .line 24682
    :goto_0
    return-object v3

    .line 24672
    :cond_0
    monitor-enter p0

    .line 24673
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .local v0, "arr$":[Lcom/android/server/am/BroadcastQueue;
    array-length v2, v0

    .local v2, "len$":I
    const/4 v1, 0x0

    .local v1, "i$":I
    :goto_1
    if-ge v1, v2, :cond_2

    aget-object v3, v0, v1

    .line 24674
    .local v3, "queue":Lcom/android/server/am/BroadcastQueue;
    iget-object v4, v3, Lcom/android/server/am/BroadcastQueue;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;

    .line 24675
    if-eqz v4, :cond_1

    iget-object v5, v4, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;

    if-ne v5, p1, :cond_1

    .line 24677
    monitor-exit p0

    goto :goto_0

    .line 24680
    .end local v0    # "arr$":[Lcom/android/server/am/BroadcastQueue;
    .end local v1    # "i$":I
    .end local v2    # "len$":I
    .end local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    :catchall_0
    move-exception v5

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v5

    .line 24673
    .restart local v0    # "arr$":[Lcom/android/server/am/BroadcastQueue;
    .restart local v1    # "i$":I
    .restart local v2    # "len$":I
    .restart local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 24680
    .end local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_2
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 24682
    const/4 v3, 0x0

    goto :goto_0
.end method

.method private isSEAMSContainerRange(I)Z
    .locals 1
    .param p1, "category"    # I

    .prologue
    .line 13974
    const/16 v0, 0x66

    if-lt p1, v0, :cond_0

    const/16 v0, 0x69

    if-le p1, v0, :cond_1

    :cond_0
    const/16 v0, 0xc9

    if-lt p1, v0, :cond_2

    const/16 v0, 0x1f4

    if-gt p1, v0, :cond_2

    .line 13975
    :cond_1
    const/4 v0, 0x1

    .line 13977
    :goto_0
    return v0

    :cond_2
    const/4 v0, 0x0

    goto :goto_0
.end method

.method private isSMFreezedPkg(Ljava/lang/String;)Z
    .locals 4
    .param p1, "pkgName"    # Ljava/lang/String;

    .prologue
    const/4 v0, 0x1

    .line 29625
    sget-boolean v1, Lcom/android/server/LpnetManagerService;->AppStartRestrictionInScreenOn:Z

    if-eqz v1, :cond_0

    .line 29626
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->isAutoRunBlockedApp(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 29641
    :goto_0
    return v0

    .line 29629
    :cond_0
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-eqz v1, :cond_2

    .line 29630
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mScreenOn:Z

    if-nez v1, :cond_2

    .line 29631
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mSMPackagesList:Ljava/util/HashSet;

    if-eqz v1, :cond_2

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mSMPackagesList:Ljava/util/HashSet;

    invoke-virtual {v1}, Ljava/util/HashSet;->size()I

    move-result v1

    if-lez v1, :cond_2

    .line 29632
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mSMPackagesList:Ljava/util/HashSet;

    invoke-virtual {v1, p1}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 29633
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, ""

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ", not Starting, SM Freezed App"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 29636
    :cond_1
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, ""

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", Starting"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 29641
    :cond_2
    const/4 v0, 0x0

    goto :goto_0
.end method

.method private isSamsungService(Ljava/lang/String;)Z
    .locals 10
    .param p1, "pkgName"    # Ljava/lang/String;

    .prologue
    const/4 v3, 0x1

    const/4 v6, 0x0

    .line 29555
    const-string/jumbo v7, "system"

    invoke-virtual {v7, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-nez v7, :cond_0

    const-string v7, "com.sec."

    invoke-virtual {p1, v7}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v7

    if-nez v7, :cond_0

    const-string v7, "com.samsung."

    invoke-virtual {p1, v7}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_1

    .line 29573
    :cond_0
    :goto_0
    return v3

    .line 29558
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 29559
    .local v4, "token":J
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v7}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v2

    .line 29561
    .local v2, "packageManager":Landroid/content/pm/PackageManager;
    const/4 v7, 0x0

    :try_start_0
    invoke-virtual {v2, p1, v7}, Landroid/content/pm/PackageManager;->getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v0

    .line 29562
    .local v0, "appInfo":Landroid/content/pm/ApplicationInfo;
    const-string v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "isSamsungService pkgName: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, ", FLAG_SYSTEM : "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    iget v9, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v9, v9, 0x1

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 29563
    iget v7, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v7, v7, 0x1

    if-nez v7, :cond_2

    const-string v7, "android"

    invoke-virtual {v2, v7, p1}, Landroid/content/pm/PackageManager;->checkSignatures(Ljava/lang/String;Ljava/lang/String;)I

    move-result v7

    if-nez v7, :cond_3

    .line 29565
    :cond_2
    const-string v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "isSamsungService true:"

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 29571
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    :cond_3
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .end local v0    # "appInfo":Landroid/content/pm/ApplicationInfo;
    :goto_1
    move v3, v6

    .line 29573
    goto :goto_0

    .line 29568
    :catch_0
    move-exception v1

    .line 29569
    .local v1, "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    :try_start_1
    const-string v3, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "isSamsungService exception="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v3, v7}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 29571
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_1

    .end local v1    # "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    :catchall_0
    move-exception v3

    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method private isScreenPinningAllowed()Z
    .locals 10

    .prologue
    const/4 v2, 0x0

    const/4 v9, 0x1

    .line 29725
    const/4 v8, 0x1

    .line 29726
    .local v8, "isScreenPinAllowed":Z
    const-string v0, "content://com.sec.knox.provider/RestrictionPolicy3"

    invoke-static {v0}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v1

    .line 29727
    .local v1, "uri":Landroid/net/Uri;
    new-array v4, v9, [Ljava/lang/String;

    const/4 v0, 0x0

    const-string/jumbo v3, "false"

    aput-object v3, v4, v0

    .line 29728
    .local v4, "selectionArgs":[Ljava/lang/String;
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const-string/jumbo v3, "isScreenPinningAllowedAsUser"

    move-object v5, v2

    invoke-virtual/range {v0 .. v5}, Landroid/content/ContentResolver;->query(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;

    move-result-object v6

    .line 29732
    .local v6, "cr":Landroid/database/Cursor;
    if-eqz v6, :cond_1

    .line 29734
    :try_start_0
    invoke-interface {v6}, Landroid/database/Cursor;->moveToFirst()Z

    .line 29735
    const-string/jumbo v0, "isScreenPinningAllowedAsUser"

    invoke-interface {v6, v0}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I

    move-result v0

    invoke-interface {v6, v0}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;

    move-result-object v0

    const-string/jumbo v2, "false"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    if-eqz v0, :cond_0

    .line 29738
    const/4 v8, 0x0

    .line 29743
    :cond_0
    invoke-interface {v6}, Landroid/database/Cursor;->close()V

    :goto_0
    move v0, v8

    .line 29748
    :goto_1
    return v0

    .line 29740
    :catch_0
    move-exception v7

    .line 29741
    .local v7, "ignore":Ljava/lang/Exception;
    :try_start_1
    const-string v0, "ActivityManager"

    const-string/jumbo v2, "exception querying sec provider"

    invoke-static {v0, v2}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 29743
    invoke-interface {v6}, Landroid/database/Cursor;->close()V

    goto :goto_0

    .end local v7    # "ignore":Ljava/lang/Exception;
    :catchall_0
    move-exception v0

    invoke-interface {v6}, Landroid/database/Cursor;->close()V

    throw v0

    :cond_1
    move v0, v9

    .line 29748
    goto :goto_1
.end method

.method private isShouldBlockCase(Ljava/lang/String;Ljava/lang/String;)Z
    .locals 3
    .param p1, "caller"    # Ljava/lang/String;
    .param p2, "callee"    # Ljava/lang/String;

    .prologue
    .line 29591
    const-string v0, "com.sec.android.cloudagent"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    const-string v0, "com.baidu.netdisk_ss"

    invoke-virtual {v0, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 29592
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "isShouldBlockCase: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " call "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 29593
    const/4 v0, 0x1

    .line 29595
    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method private isSystemUid(I)Z
    .locals 2
    .param p1, "uid"    # I

    .prologue
    .line 29894
    invoke-static {p1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    .line 29895
    .local v0, "appid":I
    const/16 v1, 0x3e8

    if-eq v0, v1, :cond_0

    if-nez p1, :cond_1

    :cond_0
    const/4 v1, 0x1

    :goto_0
    return v1

    :cond_1
    const/4 v1, 0x0

    goto :goto_0
.end method

.method private final killPackageProcessesLocked(Ljava/lang/String;IIIZZZZLjava/lang/String;)Z
    .locals 17
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "appId"    # I
    .param p3, "userId"    # I
    .param p4, "minOomAdj"    # I
    .param p5, "callerWillRestart"    # Z
    .param p6, "allowRestart"    # Z
    .param p7, "doit"    # Z
    .param p8, "evenPersistent"    # Z
    .param p9, "reason"    # Ljava/lang/String;

    .prologue
    .line 8665
    new-instance v13, Ljava/util/ArrayList;

    invoke-direct {v13}, Ljava/util/ArrayList;-><init>()V

    .line 8670
    .local v13, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v14}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v14

    invoke-virtual {v14}, Landroid/util/ArrayMap;->size()I

    move-result v6

    .line 8671
    .local v6, "NP":I
    const/4 v11, 0x0

    .local v11, "ip":I
    :goto_0
    if-ge v11, v6, :cond_e

    .line 8672
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v14}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v14

    invoke-virtual {v14, v11}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Landroid/util/SparseArray;

    .line 8673
    .local v8, "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    move-result v5

    .line 8674
    .local v5, "NA":I
    const/4 v10, 0x0

    .local v10, "ia":I
    :goto_1
    if-ge v10, v5, :cond_d

    .line 8675
    invoke-virtual {v8, v10}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/am/ProcessRecord;

    .line 8676
    .local v7, "app":Lcom/android/server/am/ProcessRecord;
    iget-boolean v14, v7, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v14, :cond_1

    if-nez p8, :cond_1

    .line 8674
    :cond_0
    :goto_2
    add-int/lit8 v10, v10, 0x1

    goto :goto_1

    .line 8680
    :cond_1
    iget-boolean v14, v7, Lcom/android/server/am/ProcessRecord;->removed:Z

    if-eqz v14, :cond_2

    .line 8681
    if-eqz p7, :cond_0

    .line 8682
    invoke-virtual {v13, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 8689
    :cond_2
    const-string v14, ""

    if-eqz v14, :cond_3

    const-string v14, ""

    invoke-virtual {v14}, Ljava/lang/String;->isEmpty()Z

    move-result v14

    if-nez v14, :cond_3

    .line 8691
    iget-object v14, v7, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    const-string/jumbo v15, "diagandroid.iqd"

    invoke-virtual {v14, v15}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v14

    if-nez v14, :cond_0

    .line 8698
    :cond_3
    iget v14, v7, Lcom/android/server/am/ProcessRecord;->setAdj:I

    move/from16 v0, p4

    if-lt v14, v0, :cond_0

    .line 8703
    const/4 v14, 0x5

    move/from16 v0, p4

    if-lt v0, v14, :cond_4

    .line 8704
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mRecentsProcess:Lcom/android/server/am/ProcessRecord;

    if-eq v7, v14, :cond_0

    .line 8713
    :cond_4
    if-nez p1, :cond_7

    .line 8714
    const/4 v14, -0x1

    move/from16 v0, p3

    if-eq v0, v14, :cond_5

    iget v14, v7, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v0, p3

    if-ne v14, v0, :cond_0

    .line 8717
    :cond_5
    if-ltz p2, :cond_6

    iget v14, v7, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v14}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v14

    move/from16 v0, p2

    if-ne v14, v0, :cond_0

    .line 8753
    :cond_6
    if-nez p7, :cond_c

    .line 8754
    const/4 v14, 0x1

    .line 8769
    .end local v5    # "NA":I
    .end local v7    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v8    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v10    # "ia":I
    :goto_3
    return v14

    .line 8724
    .restart local v5    # "NA":I
    .restart local v7    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v8    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v10    # "ia":I
    :cond_7
    iget-object v14, v7, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    if-eqz v14, :cond_a

    iget-object v14, v7, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    move-object/from16 v0, p1

    invoke-virtual {v14, v0}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v14

    if-eqz v14, :cond_a

    const/4 v12, 0x1

    .line 8726
    .local v12, "isDep":Z
    :goto_4
    if-nez v12, :cond_8

    iget v14, v7, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v14}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v14

    move/from16 v0, p2

    if-ne v14, v0, :cond_0

    .line 8729
    :cond_8
    const/4 v14, -0x1

    move/from16 v0, p3

    if-eq v0, v14, :cond_9

    iget v14, v7, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v0, p3

    if-eq v14, v0, :cond_9

    const/4 v14, -0x4

    move/from16 v0, p3

    if-ne v0, v14, :cond_0

    .line 8738
    :cond_9
    sget-object v14, Landroid/os/PersonaManager$KnoxContainerVersion;->KNOX_CONTAINER_VERSION_2_4_0:Landroid/os/PersonaManager$KnoxContainerVersion;

    invoke-static {v14}, Landroid/os/PersonaManager;->isKnoxVersionSupported(Landroid/os/PersonaManager$KnoxContainerVersion;)Z

    move-result v14

    if-eqz v14, :cond_b

    .line 8739
    const/4 v14, -0x4

    move/from16 v0, p3

    if-ne v0, v14, :cond_b

    iget v14, v7, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v14}, Landroid/os/PersonaManager;->isKnoxId(I)Z

    move-result v14

    if-eqz v14, :cond_b

    .line 8740
    const-string v14, "ActivityManager"

    new-instance v15, Ljava/lang/StringBuilder;

    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v16, "skip killing package "

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    move-object/from16 v0, p1

    invoke-virtual {v15, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string v16, " for "

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    iget v0, v7, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v16, v0

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v15

    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v15

    invoke-static {v14, v15}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_2

    .line 8724
    .end local v12    # "isDep":Z
    :cond_a
    const/4 v12, 0x0

    goto :goto_4

    .line 8747
    .restart local v12    # "isDep":Z
    :cond_b
    iget-object v14, v7, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p1

    invoke-virtual {v14, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v14

    if-nez v14, :cond_6

    if-nez v12, :cond_6

    goto/16 :goto_2

    .line 8756
    .end local v12    # "isDep":Z
    :cond_c
    const/4 v14, 0x1

    iput-boolean v14, v7, Lcom/android/server/am/ProcessRecord;->removed:Z

    .line 8757
    invoke-virtual {v13, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto/16 :goto_2

    .line 8671
    .end local v7    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_d
    add-int/lit8 v11, v11, 0x1

    goto/16 :goto_0

    .line 8761
    .end local v5    # "NA":I
    .end local v8    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v10    # "ia":I
    :cond_e
    invoke-virtual {v13}, Ljava/util/ArrayList;->size()I

    move-result v4

    .line 8762
    .local v4, "N":I
    const/4 v9, 0x0

    .local v9, "i":I
    :goto_5
    if-ge v9, v4, :cond_f

    .line 8763
    invoke-virtual {v13, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p0

    move/from16 v1, p5

    move/from16 v2, p6

    move-object/from16 v3, p9

    invoke-direct {v0, v14, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z

    .line 8765
    invoke-virtual {v13, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/android/server/am/ProcessRecord;

    const/4 v15, 0x1

    move-object/from16 v0, p0

    invoke-virtual {v0, v14, v15}, Lcom/android/server/am/ActivityManagerService;->cleanupAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z

    .line 8762
    add-int/lit8 v9, v9, 0x1

    goto :goto_5

    .line 8768
    :cond_f
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 8769
    if-lez v4, :cond_10

    const/4 v14, 0x1

    goto/16 :goto_3

    :cond_10
    const/4 v14, 0x0

    goto/16 :goto_3
.end method

.method public static killProcessGroup(II)V
    .locals 3
    .param p0, "uid"    # I
    .param p1, "pid"    # I

    .prologue
    .line 4623
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->killProcessGroupHandler:Landroid/os/Handler;

    sget-object v1, Lcom/android/server/am/ActivityManagerService;->killProcessGroupHandler:Landroid/os/Handler;

    const/4 v2, 0x0

    invoke-virtual {v1, v2, p0, p1}, Landroid/os/Handler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 4624
    return-void
.end method

.method private killProcessesBelowAdj(ILjava/lang/String;)Z
    .locals 11
    .param p1, "belowAdj"    # I
    .param p2, "reason"    # Ljava/lang/String;

    .prologue
    .line 16421
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    const/16 v7, 0x3e8

    if-eq v6, v7, :cond_0

    .line 16422
    new-instance v6, Ljava/lang/SecurityException;

    const-string/jumbo v7, "killProcessesBelowAdj() only available to system"

    invoke-direct {v6, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 16425
    :cond_0
    const/4 v2, 0x0

    .line 16426
    .local v2, "killed":Z
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v7

    .line 16427
    :try_start_0
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    move-result v5

    .line 16428
    .local v5, "size":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v5, :cond_4

    .line 16429
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v6, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v3

    .line 16430
    .local v3, "pid":I
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v6, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 16431
    .local v4, "proc":Lcom/android/server/am/ProcessRecord;
    if-nez v4, :cond_2

    .line 16428
    :cond_1
    :goto_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 16433
    :cond_2
    iget v0, v4, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 16443
    .local v0, "adj":I
    if-le v0, p1, :cond_1

    iget-boolean v6, v4, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v6, :cond_1

    .line 16446
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v6

    const-string v8, "CscFeature_Common_SupportDeviceReporting"

    invoke-virtual {v6, v8}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_3

    .line 16449
    const/16 v6, 0x190

    iget-object v8, v4, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v8, v8, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v9, v4, Lcom/android/server/am/ProcessRecord;->pid:I

    const/4 v10, 0x0

    invoke-direct {p0, v6, v8, v9, v10}, Lcom/android/server/am/ActivityManagerService;->sendAppStateMsg(ILjava/lang/String;II)V

    .line 16453
    :cond_3
    const/4 v6, 0x1

    invoke-virtual {v4, p2, v6}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 16454
    const/4 v2, 0x1

    goto :goto_1

    .line 16458
    .end local v0    # "adj":I
    .end local v3    # "pid":I
    .end local v4    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_4
    monitor-exit v7

    .line 16459
    return v2

    .line 16458
    .end local v1    # "i":I
    .end local v5    # "size":I
    :catchall_0
    move-exception v6

    monitor-exit v7
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v6
.end method

.method private loadResourcesOnSystemReady()V
    .locals 2

    .prologue
    .line 16656
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    .line 16657
    .local v0, "res":Landroid/content/res/Resources;
    const v1, 0x1120089

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mHasRecents:Z

    .line 16658
    const v1, 0x1050002

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    move-result v1

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mThumbnailWidth:I

    .line 16659
    const v1, 0x1050001

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    move-result v1

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mThumbnailHeight:I

    .line 16662
    const v1, 0x11200d4

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mIsSupportManualScreenPinning:Z

    .line 16664
    return-void
.end method

.method private lockScreenShownToString()Ljava/lang/String;
    .locals 2

    .prologue
    .line 15482
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    packed-switch v0, :pswitch_data_0

    .line 15486
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Unknown="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    :goto_0
    return-object v0

    .line 15483
    :pswitch_0
    const-string v0, "LOCK_SCREEN_HIDDEN"

    goto :goto_0

    .line 15484
    :pswitch_1
    const-string v0, "LOCK_SCREEN_LEAVING"

    goto :goto_0

    .line 15485
    :pswitch_2
    const-string v0, "LOCK_SCREEN_SHOWN"

    goto :goto_0

    .line 15482
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
    .end packed-switch
.end method

.method private logStrictModeViolationToDropBox(Lcom/android/server/am/ProcessRecord;Landroid/os/StrictMode$ViolationInfo;)V
    .locals 18
    .param p1, "process"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "info"    # Landroid/os/StrictMode$ViolationInfo;

    .prologue
    .line 17719
    if-nez p2, :cond_1

    .line 17832
    :cond_0
    :goto_0
    return-void

    .line 17722
    :cond_1
    if-eqz p1, :cond_2

    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit16 v2, v2, 0x81

    if-eqz v2, :cond_8

    :cond_2
    const/4 v11, 0x1

    .line 17725
    .local v11, "isSystemApp":Z
    :goto_1
    if-nez p1, :cond_9

    const-string/jumbo v14, "unknown"

    .line 17726
    .local v14, "processName":Ljava/lang/String;
    :goto_2
    if-eqz v11, :cond_a

    const-string/jumbo v7, "system_app_strictmode"

    .line 17727
    .local v7, "dropboxTag":Ljava/lang/String;
    :goto_3
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v3, "dropbox"

    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/os/DropBoxManager;

    .line 17731
    .local v6, "dbox":Landroid/os/DropBoxManager;
    if-eqz v6, :cond_0

    invoke-virtual {v6, v7}, Landroid/os/DropBoxManager;->isTagEnabled(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 17735
    if-eqz v11, :cond_b

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mStrictModeBuffer:Ljava/lang/StringBuilder;

    .line 17736
    .local v5, "sb":Ljava/lang/StringBuilder;
    :goto_4
    monitor-enter v5

    .line 17737
    :try_start_0
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->length()I

    move-result v2

    if-nez v2, :cond_c

    const/4 v9, 0x1

    .line 17738
    .local v9, "bufferWasEmpty":Z
    :goto_5
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v1, v14, v5}, Lcom/android/server/am/ActivityManagerService;->appendDropBoxProcessHeaders(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 17739
    const-string v2, "Build: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    sget-object v3, Landroid/os/Build;->FINGERPRINT:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17740
    const-string v2, "System-App: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v11}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17741
    const-string v2, "Uptime-Millis: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget-wide v0, v0, Landroid/os/StrictMode$ViolationInfo;->violationUptimeMillis:J

    move-wide/from16 v16, v0

    move-wide/from16 v0, v16

    invoke-virtual {v2, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17742
    move-object/from16 v0, p2

    iget v2, v0, Landroid/os/StrictMode$ViolationInfo;->violationNumThisLoop:I

    if-eqz v2, :cond_3

    .line 17743
    const-string v2, "Loop-Violation-Number: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget v3, v0, Landroid/os/StrictMode$ViolationInfo;->violationNumThisLoop:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17745
    :cond_3
    move-object/from16 v0, p2

    iget v2, v0, Landroid/os/StrictMode$ViolationInfo;->numAnimationsRunning:I

    if-eqz v2, :cond_4

    .line 17746
    const-string v2, "Animations-Running: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget v3, v0, Landroid/os/StrictMode$ViolationInfo;->numAnimationsRunning:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17748
    :cond_4
    move-object/from16 v0, p2

    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->broadcastIntentAction:Ljava/lang/String;

    if-eqz v2, :cond_5

    .line 17749
    const-string v2, "Broadcast-Intent-Action: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget-object v3, v0, Landroid/os/StrictMode$ViolationInfo;->broadcastIntentAction:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17751
    :cond_5
    move-object/from16 v0, p2

    iget v2, v0, Landroid/os/StrictMode$ViolationInfo;->durationMillis:I

    const/4 v3, -0x1

    if-eq v2, v3, :cond_6

    .line 17752
    const-string v2, "Duration-Millis: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget v3, v0, Landroid/os/StrictMode$ViolationInfo;->durationMillis:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17754
    :cond_6
    move-object/from16 v0, p2

    iget-wide v2, v0, Landroid/os/StrictMode$ViolationInfo;->numInstances:J

    const-wide/16 v16, -0x1

    cmp-long v2, v2, v16

    if-eqz v2, :cond_7

    .line 17755
    const-string v2, "Instance-Count: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget-wide v0, v0, Landroid/os/StrictMode$ViolationInfo;->numInstances:J

    move-wide/from16 v16, v0

    move-wide/from16 v0, v16

    invoke-virtual {v2, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17757
    :cond_7
    move-object/from16 v0, p2

    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->tags:[Ljava/lang/String;

    if-eqz v2, :cond_d

    .line 17758
    move-object/from16 v0, p2

    iget-object v8, v0, Landroid/os/StrictMode$ViolationInfo;->tags:[Ljava/lang/String;

    .local v8, "arr$":[Ljava/lang/String;
    array-length v12, v8

    .local v12, "len$":I
    const/4 v10, 0x0

    .local v10, "i$":I
    :goto_6
    if-ge v10, v12, :cond_d

    aget-object v15, v8, v10

    .line 17759
    .local v15, "tag":Ljava/lang/String;
    const-string v2, "Span-Tag: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 17758
    add-int/lit8 v10, v10, 0x1

    goto :goto_6

    .line 17722
    .end local v5    # "sb":Ljava/lang/StringBuilder;
    .end local v6    # "dbox":Landroid/os/DropBoxManager;
    .end local v7    # "dropboxTag":Ljava/lang/String;
    .end local v8    # "arr$":[Ljava/lang/String;
    .end local v9    # "bufferWasEmpty":Z
    .end local v10    # "i$":I
    .end local v11    # "isSystemApp":Z
    .end local v12    # "len$":I
    .end local v14    # "processName":Ljava/lang/String;
    .end local v15    # "tag":Ljava/lang/String;
    :cond_8
    const/4 v11, 0x0

    goto/16 :goto_1

    .line 17725
    .restart local v11    # "isSystemApp":Z
    :cond_9
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    goto/16 :goto_2

    .line 17726
    .restart local v14    # "processName":Ljava/lang/String;
    :cond_a
    const-string/jumbo v7, "data_app_strictmode"

    goto/16 :goto_3

    .line 17735
    .restart local v6    # "dbox":Landroid/os/DropBoxManager;
    .restart local v7    # "dropboxTag":Ljava/lang/String;
    :cond_b
    new-instance v5, Ljava/lang/StringBuilder;

    const/16 v2, 0x400

    invoke-direct {v5, v2}, Ljava/lang/StringBuilder;-><init>(I)V

    goto/16 :goto_4

    .line 17737
    .restart local v5    # "sb":Ljava/lang/StringBuilder;
    :cond_c
    const/4 v9, 0x0

    goto/16 :goto_5

    .line 17762
    .restart local v9    # "bufferWasEmpty":Z
    :cond_d
    :try_start_1
    const-string v2, "\n"

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17763
    move-object/from16 v0, p2

    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->crashInfo:Landroid/app/ApplicationErrorReport$CrashInfo;

    if-eqz v2, :cond_e

    move-object/from16 v0, p2

    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->crashInfo:Landroid/app/ApplicationErrorReport$CrashInfo;

    iget-object v2, v2, Landroid/app/ApplicationErrorReport$CrashInfo;->stackTrace:Ljava/lang/String;

    if-eqz v2, :cond_e

    .line 17764
    move-object/from16 v0, p2

    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->crashInfo:Landroid/app/ApplicationErrorReport$CrashInfo;

    iget-object v2, v2, Landroid/app/ApplicationErrorReport$CrashInfo;->stackTrace:Ljava/lang/String;

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17765
    const-string v2, "\n"

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17767
    :cond_e
    move-object/from16 v0, p2

    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->message:Ljava/lang/String;

    if-eqz v2, :cond_f

    .line 17768
    move-object/from16 v0, p2

    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->message:Ljava/lang/String;

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17769
    const-string v2, "\n"

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17774
    :cond_f
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->length()I

    move-result v2

    const/high16 v3, 0x10000

    if-le v2, v3, :cond_11

    const/4 v13, 0x1

    .line 17775
    .local v13, "needsFlush":Z
    :goto_7
    monitor-exit v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 17784
    if-eqz v11, :cond_10

    if-eqz v13, :cond_12

    .line 17785
    :cond_10
    new-instance v2, Lcom/android/server/am/ActivityManagerService$22;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Error dump: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v3, p0

    invoke-direct/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService$22;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;Ljava/lang/StringBuilder;Landroid/os/DropBoxManager;Ljava/lang/String;)V

    invoke-virtual {v2}, Lcom/android/server/am/ActivityManagerService$22;->start()V

    goto/16 :goto_0

    .line 17774
    .end local v13    # "needsFlush":Z
    :cond_11
    const/4 v13, 0x0

    goto :goto_7

    .line 17775
    .end local v9    # "bufferWasEmpty":Z
    :catchall_0
    move-exception v2

    :try_start_2
    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v2

    .line 17803
    .restart local v9    # "bufferWasEmpty":Z
    .restart local v13    # "needsFlush":Z
    :cond_12
    if-eqz v9, :cond_0

    .line 17812
    new-instance v2, Lcom/android/server/am/ActivityManagerService$23;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Error dump: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    move-object/from16 v0, p0

    invoke-direct {v2, v0, v3, v6, v7}, Lcom/android/server/am/ActivityManagerService$23;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;Landroid/os/DropBoxManager;Ljava/lang/String;)V

    invoke-virtual {v2}, Lcom/android/server/am/ActivityManagerService$23;->start()V

    goto/16 :goto_0
.end method

.method private makeAppCrashingLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    .locals 7
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "shortMsg"    # Ljava/lang/String;
    .param p3, "longMsg"    # Ljava/lang/String;
    .param p4, "stackTrace"    # Ljava/lang/String;

    .prologue
    const/4 v2, 0x1

    .line 17372
    iput-boolean v2, p1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    .line 17373
    const/4 v3, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v4, p2

    move-object v5, p3

    move-object v6, p4

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->generateProcessError(Lcom/android/server/am/ProcessRecord;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/app/ActivityManager$ProcessErrorStateInfo;

    move-result-object v0

    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->crashingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    .line 17375
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->startAppProblemLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 17376
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->stopFreezingAllLocked()V

    .line 17377
    const-string/jumbo v2, "force-crash"

    move-object v0, p0

    move-object v1, p1

    move-object v3, p2

    move-object v4, p3

    move-object v5, p4

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->handleAppCrashLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    return v0
.end method

.method private makeAppNotRespondingLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    .locals 7
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "activity"    # Ljava/lang/String;
    .param p3, "shortMsg"    # Ljava/lang/String;
    .param p4, "longMsg"    # Ljava/lang/String;

    .prologue
    .line 17382
    const/4 v0, 0x1

    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    .line 17383
    const/4 v2, 0x2

    const/4 v6, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v3, p2

    move-object v4, p3

    move-object v5, p4

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->generateProcessError(Lcom/android/server/am/ProcessRecord;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/app/ActivityManager$ProcessErrorStateInfo;

    move-result-object v0

    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    .line 17386
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->startAppProblemLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 17387
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->stopFreezingAllLocked()V

    .line 17388
    return-void
.end method

.method private maybePrunePersistedUriGrantsLocked(I)Z
    .locals 9
    .param p1, "uid"    # I

    .prologue
    const/4 v6, 0x0

    .line 12338
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v7, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/util/ArrayMap;

    .line 12339
    .local v3, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-nez v3, :cond_1

    .line 12363
    :cond_0
    :goto_0
    return v6

    .line 12340
    :cond_1
    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v7

    const/16 v8, 0x80

    if-lt v7, v8, :cond_0

    .line 12342
    invoke-static {}, Lcom/google/android/collect/Lists;->newArrayList()Ljava/util/ArrayList;

    move-result-object v4

    .line 12343
    .local v4, "persisted":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/UriPermission;>;"
    invoke-virtual {v3}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v7

    invoke-interface {v7}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .local v1, "i$":Ljava/util/Iterator;
    :cond_2
    :goto_1
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_3

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/UriPermission;

    .line 12344
    .local v2, "perm":Lcom/android/server/am/UriPermission;
    iget v7, v2, Lcom/android/server/am/UriPermission;->persistedModeFlags:I

    if-eqz v7, :cond_2

    .line 12345
    invoke-virtual {v4, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_1

    .line 12349
    .end local v2    # "perm":Lcom/android/server/am/UriPermission;
    :cond_3
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v7

    add-int/lit8 v5, v7, -0x80

    .line 12350
    .local v5, "trimCount":I
    if-lez v5, :cond_0

    .line 12352
    new-instance v6, Lcom/android/server/am/UriPermission$PersistedTimeComparator;

    invoke-direct {v6}, Lcom/android/server/am/UriPermission$PersistedTimeComparator;-><init>()V

    invoke-static {v4, v6}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 12353
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_2
    if-ge v0, v5, :cond_4

    .line 12354
    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/UriPermission;

    .line 12359
    .restart local v2    # "perm":Lcom/android/server/am/UriPermission;
    const/4 v6, -0x1

    invoke-virtual {v2, v6}, Lcom/android/server/am/UriPermission;->releasePersistableModes(I)Z

    .line 12360
    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionIfNeededLocked(Lcom/android/server/am/UriPermission;)V

    .line 12353
    add-int/lit8 v0, v0, 0x1

    goto :goto_2

    .line 12363
    .end local v2    # "perm":Lcom/android/server/am/UriPermission;
    :cond_4
    const/4 v6, 0x1

    goto :goto_0
.end method

.method private maybeUpdateProviderUsageStatsLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V
    .locals 8
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "providerPkgName"    # Ljava/lang/String;
    .param p3, "authority"    # Ljava/lang/String;

    .prologue
    .line 26060
    if-nez p1, :cond_1

    .line 26072
    :cond_0
    :goto_0
    return-void

    .line 26061
    :cond_1
    iget v4, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v5, 0x6

    if-gt v4, v5, :cond_0

    .line 26062
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v4, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/UserState;

    .line 26063
    .local v1, "userState":Lcom/android/server/am/UserState;
    if-eqz v1, :cond_0

    .line 26064
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v2

    .line 26065
    .local v2, "now":J
    iget-object v4, v1, Lcom/android/server/am/UserState;->mProviderLastReportedFg:Landroid/util/ArrayMap;

    invoke-virtual {v4, p3}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/Long;

    .line 26066
    .local v0, "lastReported":Ljava/lang/Long;
    if-eqz v0, :cond_2

    invoke-virtual {v0}, Ljava/lang/Long;->longValue()J

    move-result-wide v4

    const-wide/32 v6, 0xea60

    sub-long v6, v2, v6

    cmp-long v4, v4, v6

    if-gez v4, :cond_0

    .line 26067
    :cond_2
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v4, p3, p2, v5}, Landroid/app/usage/UsageStatsManagerInternal;->reportContentProviderUsage(Ljava/lang/String;Ljava/lang/String;I)V

    .line 26069
    iget-object v4, v1, Lcom/android/server/am/UserState;->mProviderLastReportedFg:Landroid/util/ArrayMap;

    invoke-static {v2, v3}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v5

    invoke-virtual {v4, p3, v5}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_0
.end method

.method private maybeUpdateUsageStatsLocked(Lcom/android/server/am/ProcessRecord;J)V
    .locals 12
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "nowElapsed"    # J

    .prologue
    const/4 v10, 0x6

    const/4 v1, 0x1

    const/4 v3, 0x0

    const-wide/16 v8, 0x0

    .line 26080
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-nez v4, :cond_1

    .line 26117
    :cond_0
    :goto_0
    return-void

    .line 26087
    :cond_1
    iget v4, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v5, 0x3

    if-gt v4, v5, :cond_3

    .line 26088
    const/4 v1, 0x1

    .line 26089
    .local v1, "isInteraction":Z
    iput-wide v8, p1, Lcom/android/server/am/ProcessRecord;->fgInteractionTime:J

    .line 26102
    :goto_1
    if-eqz v1, :cond_8

    iget-boolean v3, p1, Lcom/android/server/am/ProcessRecord;->reportedInteraction:Z

    if-eqz v3, :cond_2

    iget-wide v4, p1, Lcom/android/server/am/ProcessRecord;->interactionEventTime:J

    sub-long v4, p2, v4

    const-wide/32 v6, 0x5265c00

    cmp-long v3, v4, v6

    if-lez v3, :cond_8

    .line 26104
    :cond_2
    iput-wide p2, p1, Lcom/android/server/am/ProcessRecord;->interactionEventTime:J

    .line 26105
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->getPackageList()[Ljava/lang/String;

    move-result-object v2

    .line 26106
    .local v2, "packages":[Ljava/lang/String;
    if-eqz v2, :cond_8

    .line 26107
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_2
    array-length v3, v2

    if-ge v0, v3, :cond_8

    .line 26108
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    aget-object v4, v2, v0

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v3, v4, v5, v10}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Ljava/lang/String;II)V

    .line 26107
    add-int/lit8 v0, v0, 0x1

    goto :goto_2

    .line 26090
    .end local v0    # "i":I
    .end local v1    # "isInteraction":Z
    .end local v2    # "packages":[Ljava/lang/String;
    :cond_3
    iget v4, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v5, 0x5

    if-gt v4, v5, :cond_6

    .line 26091
    iget-wide v4, p1, Lcom/android/server/am/ProcessRecord;->fgInteractionTime:J

    cmp-long v4, v4, v8

    if-nez v4, :cond_4

    .line 26092
    iput-wide p2, p1, Lcom/android/server/am/ProcessRecord;->fgInteractionTime:J

    .line 26093
    const/4 v1, 0x0

    .restart local v1    # "isInteraction":Z
    goto :goto_1

    .line 26095
    .end local v1    # "isInteraction":Z
    :cond_4
    iget-wide v4, p1, Lcom/android/server/am/ProcessRecord;->fgInteractionTime:J

    const-wide/32 v6, 0x1b7740

    add-long/2addr v4, v6

    cmp-long v4, p2, v4

    if-lez v4, :cond_5

    .restart local v1    # "isInteraction":Z
    :goto_3
    goto :goto_1

    .end local v1    # "isInteraction":Z
    :cond_5
    move v1, v3

    goto :goto_3

    .line 26098
    :cond_6
    iget v4, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    if-gt v4, v10, :cond_7

    .line 26100
    .restart local v1    # "isInteraction":Z
    :goto_4
    iput-wide v8, p1, Lcom/android/server/am/ProcessRecord;->fgInteractionTime:J

    goto :goto_1

    .end local v1    # "isInteraction":Z
    :cond_7
    move v1, v3

    .line 26098
    goto :goto_4

    .line 26113
    .restart local v1    # "isInteraction":Z
    :cond_8
    iput-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->reportedInteraction:Z

    .line 26114
    if-nez v1, :cond_0

    .line 26115
    iput-wide v8, p1, Lcom/android/server/am/ProcessRecord;->interactionEventTime:J

    goto :goto_0
.end method

.method private final moveTaskBackwardsLocked(I)V
    .locals 2
    .param p1, "task"    # I

    .prologue
    .line 13387
    const-string v0, "ActivityManager"

    const-string/jumbo v1, "moveTaskBackwards not yet implemented!"

    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 13388
    return-void
.end method

.method private static native nativeMigrateFromBoost()I
.end method

.method private static native nativeMigrateToBoost()I
.end method

.method private needToBlockImsRequest(Ljava/lang/String;I)Z
    .locals 1
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I

    .prologue
    .line 30085
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->isImsProcess(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-static {}, Landroid/app/ActivityManager;->getCurrentUser()I

    move-result v0

    if-eq p2, v0, :cond_0

    .line 30086
    const/4 v0, 0x1

    .line 30089
    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method static procStateToImportance(IILandroid/app/ActivityManager$RunningAppProcessInfo;)I
    .locals 2
    .param p0, "procState"    # I
    .param p1, "memAdj"    # I
    .param p2, "currApp"    # Landroid/app/ActivityManager$RunningAppProcessInfo;

    .prologue
    .line 18372
    invoke-static {p0}, Landroid/app/ActivityManager$RunningAppProcessInfo;->procStateToImportance(I)I

    move-result v0

    .line 18373
    .local v0, "imp":I
    const/16 v1, 0x190

    if-ne v0, v1, :cond_0

    .line 18374
    iput p1, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->lru:I

    .line 18378
    :goto_0
    return v0

    .line 18376
    :cond_0
    const/4 v1, 0x0

    iput v1, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->lru:I

    goto :goto_0
.end method

.method private static processClass(Lcom/android/server/am/ProcessRecord;)Ljava/lang/String;
    .locals 2
    .param p0, "process"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 17959
    if-eqz p0, :cond_0

    iget v0, p0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v1, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-ne v0, v1, :cond_1

    .line 17960
    :cond_0
    const-string/jumbo v0, "system_server"

    .line 17964
    :goto_0
    return-object v0

    .line 17961
    :cond_1
    iget-object v0, p0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v0, v0, 0x1

    if-eqz v0, :cond_2

    .line 17962
    const-string/jumbo v0, "system_app"

    goto :goto_0

    .line 17964
    :cond_2
    const-string/jumbo v0, "data_app"

    goto :goto_0
.end method

.method private final processContentProviderPublishTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 3
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    const/4 v2, 0x1

    .line 9153
    invoke-virtual {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->cleanupAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z

    .line 9154
    const/4 v0, 0x0

    const-string/jumbo v1, "timeout publishing content providers"

    invoke-direct {p0, p1, v0, v2, v1}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z

    .line 9155
    return-void
.end method

.method private final processStartTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 11
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    const/4 v10, 0x2

    const/4 v9, 0x0

    const/4 v8, 0x1

    .line 9158
    iget v3, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 9159
    .local v3, "pid":I
    const/4 v1, 0x0

    .line 9160
    .local v1, "gone":Z
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v5

    .line 9161
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 9162
    .local v2, "knownApp":Lcom/android/server/am/ProcessRecord;
    if-eqz v2, :cond_0

    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v4, :cond_0

    .line 9163
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->remove(I)V

    .line 9164
    const/4 v1, 0x1

    .line 9166
    :cond_0
    monitor-exit v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 9168
    if-eqz v1, :cond_6

    .line 9169
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Process "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " failed to attach"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9170
    const/16 v4, 0x7555

    const/4 v5, 0x4

    new-array v5, v5, [Ljava/lang/Object;

    iget v6, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v5, v9

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v5, v8

    iget v6, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v5, v10

    const/4 v6, 0x3

    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aput-object v7, v5, v6

    invoke-static {v4, v5}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 9172
    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-direct {p0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->removeProcessNameLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    .line 9173
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-ne v4, p1, :cond_1

    .line 9174
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0x19

    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget v7, v7, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v5, v6, v7, v9}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 9176
    const/4 v4, 0x0

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    .line 9178
    :cond_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v5, v6}, Lcom/android/server/am/BatteryStatsService;->noteProcessFinish(Ljava/lang/String;I)V

    .line 9179
    iget-boolean v4, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v4, :cond_2

    .line 9180
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v5, v6}, Lcom/android/server/am/BatteryStatsService;->removeIsolatedUid(II)V

    .line 9183
    :cond_2
    invoke-virtual {p0, p1, v8}, Lcom/android/server/am/ActivityManagerService;->cleanupAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z

    .line 9185
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v4, p1}, Lcom/android/server/am/ActiveServices;->processStartTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 9188
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v4

    const-string v5, "CscFeature_Common_SupportDeviceReporting"

    invoke-virtual {v4, v5}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_3

    .line 9191
    const/16 v4, 0x190

    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-direct {p0, v4, v5, v3, v10}, Lcom/android/server/am/ActivityManagerService;->sendAppStateMsg(ILjava/lang/String;II)V

    .line 9195
    :cond_3
    const-string/jumbo v4, "start timeout"

    invoke-virtual {p1, v4, v8}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 9196
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 9197
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    if-eqz v4, :cond_4

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v4, v4, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v4, v4, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v4, v3, :cond_4

    .line 9198
    const-string v4, "ActivityManager"

    const-string v5, "Unattached app died before backup, skipping"

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9200
    :try_start_1
    const-string v4, "backup"

    invoke-static {v4}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v4

    invoke-static {v4}, Landroid/app/backup/IBackupManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/app/backup/IBackupManager;

    move-result-object v0

    .line 9202
    .local v0, "bm":Landroid/app/backup/IBackupManager;
    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-interface {v0, v4}, Landroid/app/backup/IBackupManager;->agentDisconnected(Ljava/lang/String;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 9207
    .end local v0    # "bm":Landroid/app/backup/IBackupManager;
    :cond_4
    :goto_0
    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->isPendingBroadcastProcessLocked(I)Z

    move-result v4

    if-eqz v4, :cond_5

    .line 9208
    const-string v4, "ActivityManager"

    const-string v5, "Unattached app died before broadcast acknowledged, skipping"

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9209
    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->skipPendingBroadcastLocked(I)V

    .line 9214
    :cond_5
    :goto_1
    return-void

    .line 9166
    .end local v2    # "knownApp":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v4

    :try_start_2
    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v4

    .line 9212
    .restart local v2    # "knownApp":Lcom/android/server/am/ProcessRecord;
    :cond_6
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Spurious process start timeout - pid not known for "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 9203
    :catch_0
    move-exception v4

    goto :goto_0
.end method

.method private pruneDeletedContainerProfilesLocked(Ljava/util/List;)Ljava/util/List;
    .locals 7
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List",
            "<",
            "Landroid/content/pm/UserInfo;",
            ">;)",
            "Ljava/util/List",
            "<",
            "Landroid/content/pm/UserInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 27925
    .local p1, "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v5

    const/4 v6, 0x1

    invoke-virtual {v5, v6}, Lcom/android/server/pm/PersonaManagerService;->getPersonas(Z)Ljava/util/List;

    move-result-object v1

    .line 27926
    .local v1, "activePersonas":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/PersonaInfo;>;"
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 27927
    .local v0, "activePersonaIds":Ljava/util/List;, "Ljava/util/List<Ljava/lang/Integer;>;"
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v5

    if-ge v2, v5, :cond_1

    .line 27928
    invoke-interface {v1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/pm/PersonaInfo;

    .line 27929
    .local v3, "tempPersonaInfo":Landroid/content/pm/PersonaInfo;
    if-eqz v3, :cond_0

    .line 27930
    new-instance v5, Ljava/lang/Integer;

    iget v6, v3, Landroid/content/pm/PersonaInfo;->id:I

    invoke-direct {v5, v6}, Ljava/lang/Integer;-><init>(I)V

    invoke-interface {v0, v5}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 27927
    :cond_0
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 27933
    .end local v3    # "tempPersonaInfo":Landroid/content/pm/PersonaInfo;
    :cond_1
    const/4 v2, 0x0

    :goto_1
    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result v5

    if-ge v2, v5, :cond_4

    .line 27934
    invoke-interface {p1, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/content/pm/UserInfo;

    .line 27935
    .local v4, "tempUserInfo":Landroid/content/pm/UserInfo;
    if-eqz v4, :cond_2

    iget v5, v4, Landroid/content/pm/UserInfo;->id:I

    const/16 v6, 0x64

    if-lt v5, v6, :cond_2

    iget v5, v4, Landroid/content/pm/UserInfo;->id:I

    const/16 v6, 0xc8

    if-gt v5, v6, :cond_2

    .line 27936
    new-instance v5, Ljava/lang/Integer;

    iget v6, v4, Landroid/content/pm/UserInfo;->id:I

    invoke-direct {v5, v6}, Ljava/lang/Integer;-><init>(I)V

    invoke-interface {v0, v5}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_3

    .line 27933
    :cond_2
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 27940
    :cond_3
    invoke-interface {p1, v2}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 27941
    add-int/lit8 v2, v2, -0x1

    goto :goto_2

    .line 27946
    .end local v4    # "tempUserInfo":Landroid/content/pm/UserInfo;
    :cond_4
    return-object p1
.end method

.method private readGrantedUriPermissionsLocked()V
    .locals 27

    .prologue
    .line 12180
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v10

    .line 12182
    .local v10, "now":J
    const/4 v7, 0x0

    .line 12184
    .local v7, "fis":Ljava/io/FileInputStream;
    :try_start_0
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mGrantFile:Landroid/util/AtomicFile;

    move-object/from16 v24, v0

    invoke-virtual/range {v24 .. v24}, Landroid/util/AtomicFile;->openRead()Ljava/io/FileInputStream;

    move-result-object v7

    .line 12185
    invoke-static {}, Landroid/util/Xml;->newPullParser()Lorg/xmlpull/v1/XmlPullParser;

    move-result-object v8

    .line 12186
    .local v8, "in":Lorg/xmlpull/v1/XmlPullParser;
    sget-object v24, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    invoke-virtual/range {v24 .. v24}, Ljava/nio/charset/Charset;->name()Ljava/lang/String;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-interface {v8, v7, v0}, Lorg/xmlpull/v1/XmlPullParser;->setInput(Ljava/io/InputStream;Ljava/lang/String;)V

    .line 12189
    :cond_0
    :goto_0
    invoke-interface {v8}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    move-result v21

    .local v21, "type":I
    const/16 v24, 0x1

    move/from16 v0, v21

    move/from16 v1, v24

    if-eq v0, v1, :cond_3

    .line 12190
    invoke-interface {v8}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v17

    .line 12191
    .local v17, "tag":Ljava/lang/String;
    const/16 v24, 0x2

    move/from16 v0, v21

    move/from16 v1, v24

    if-ne v0, v1, :cond_0

    .line 12192
    const-string/jumbo v24, "uri-grant"

    move-object/from16 v0, v24

    move-object/from16 v1, v17

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v24

    if-eqz v24, :cond_0

    .line 12195
    const-string/jumbo v24, "userHandle"

    const/16 v25, -0x2710

    move-object/from16 v0, v24

    move/from16 v1, v25

    invoke-static {v8, v0, v1}, Lcom/android/internal/util/XmlUtils;->readIntAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;I)I

    move-result v23

    .line 12197
    .local v23, "userHandle":I
    const/16 v24, -0x2710

    move/from16 v0, v23

    move/from16 v1, v24

    if-eq v0, v1, :cond_1

    .line 12199
    move/from16 v16, v23

    .line 12200
    .local v16, "sourceUserId":I
    move/from16 v20, v23

    .line 12205
    .local v20, "targetUserId":I
    :goto_1
    const/16 v24, 0x0

    const-string/jumbo v25, "sourcePkg"

    move-object/from16 v0, v24

    move-object/from16 v1, v25

    invoke-interface {v8, v0, v1}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v15

    .line 12206
    .local v15, "sourcePkg":Ljava/lang/String;
    const/16 v24, 0x0

    const-string/jumbo v25, "targetPkg"

    move-object/from16 v0, v24

    move-object/from16 v1, v25

    invoke-interface {v8, v0, v1}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v18

    .line 12207
    .local v18, "targetPkg":Ljava/lang/String;
    const/16 v24, 0x0

    const-string/jumbo v25, "uri"

    move-object/from16 v0, v24

    move-object/from16 v1, v25

    invoke-interface {v8, v0, v1}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v24 .. v24}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v22

    .line 12208
    .local v22, "uri":Landroid/net/Uri;
    const-string/jumbo v24, "prefix"

    move-object/from16 v0, v24

    invoke-static {v8, v0}, Lcom/android/internal/util/XmlUtils;->readBooleanAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z

    move-result v14

    .line 12209
    .local v14, "prefix":Z
    const-string/jumbo v24, "modeFlags"

    move-object/from16 v0, v24

    invoke-static {v8, v0}, Lcom/android/internal/util/XmlUtils;->readIntAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)I

    move-result v9

    .line 12210
    .local v9, "modeFlags":I
    const-string/jumbo v24, "createdTime"

    move-object/from16 v0, v24

    invoke-static {v8, v0, v10, v11}, Lcom/android/internal/util/XmlUtils;->readLongAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;J)J

    move-result-wide v4

    .line 12213
    .local v4, "createdTime":J
    invoke-virtual/range {v22 .. v22}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v24

    move-object/from16 v0, p0

    move-object/from16 v1, v24

    move/from16 v2, v16

    invoke-direct {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->getProviderInfoLocked(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;

    move-result-object v13

    .line 12215
    .local v13, "pi":Landroid/content/pm/ProviderInfo;
    if-eqz v13, :cond_2

    iget-object v0, v13, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    invoke-virtual {v15, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_0 .. :try_end_0} :catch_2
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v24

    if-eqz v24, :cond_2

    .line 12216
    const/16 v19, -0x1

    .line 12218
    .local v19, "targetUid":I
    :try_start_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v24

    move-object/from16 v0, v24

    move-object/from16 v1, v18

    move/from16 v2, v20

    invoke-interface {v0, v1, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_3
    .catch Ljava/io/FileNotFoundException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_1
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_1 .. :try_end_1} :catch_2
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v19

    .line 12222
    :goto_2
    const/16 v24, -0x1

    move/from16 v0, v19

    move/from16 v1, v24

    if-eq v0, v1, :cond_0

    .line 12223
    :try_start_2
    new-instance v24, Lcom/android/server/am/ActivityManagerService$GrantUri;

    move-object/from16 v0, v24

    move/from16 v1, v16

    move-object/from16 v2, v22

    invoke-direct {v0, v1, v2, v14}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    move-object/from16 v0, p0

    move-object/from16 v1, v18

    move/from16 v2, v19

    move-object/from16 v3, v24

    invoke-direct {v0, v15, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->findOrCreateUriPermissionLocked(Ljava/lang/String;Ljava/lang/String;ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object v12

    .line 12226
    .local v12, "perm":Lcom/android/server/am/UriPermission;
    invoke-virtual {v12, v9, v4, v5}, Lcom/android/server/am/UriPermission;->initPersistedModes(IJ)V
    :try_end_2
    .catch Ljava/io/FileNotFoundException; {:try_start_2 .. :try_end_2} :catch_0
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_2 .. :try_end_2} :catch_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto/16 :goto_0

    .line 12235
    .end local v4    # "createdTime":J
    .end local v8    # "in":Lorg/xmlpull/v1/XmlPullParser;
    .end local v9    # "modeFlags":I
    .end local v12    # "perm":Lcom/android/server/am/UriPermission;
    .end local v13    # "pi":Landroid/content/pm/ProviderInfo;
    .end local v14    # "prefix":Z
    .end local v15    # "sourcePkg":Ljava/lang/String;
    .end local v16    # "sourceUserId":I
    .end local v17    # "tag":Ljava/lang/String;
    .end local v18    # "targetPkg":Ljava/lang/String;
    .end local v19    # "targetUid":I
    .end local v20    # "targetUserId":I
    .end local v21    # "type":I
    .end local v22    # "uri":Landroid/net/Uri;
    .end local v23    # "userHandle":I
    :catch_0
    move-exception v24

    .line 12242
    invoke-static {v7}, Llibcore/io/IoUtils;->closeQuietly(Ljava/lang/AutoCloseable;)V

    .line 12244
    :goto_3
    return-void

    .line 12202
    .restart local v8    # "in":Lorg/xmlpull/v1/XmlPullParser;
    .restart local v17    # "tag":Ljava/lang/String;
    .restart local v21    # "type":I
    .restart local v23    # "userHandle":I
    :cond_1
    :try_start_3
    const-string/jumbo v24, "sourceUserId"

    move-object/from16 v0, v24

    invoke-static {v8, v0}, Lcom/android/internal/util/XmlUtils;->readIntAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)I

    move-result v16

    .line 12203
    .restart local v16    # "sourceUserId":I
    const-string/jumbo v24, "targetUserId"

    move-object/from16 v0, v24

    invoke-static {v8, v0}, Lcom/android/internal/util/XmlUtils;->readIntAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)I

    move-result v20

    .restart local v20    # "targetUserId":I
    goto/16 :goto_1

    .line 12229
    .restart local v4    # "createdTime":J
    .restart local v9    # "modeFlags":I
    .restart local v13    # "pi":Landroid/content/pm/ProviderInfo;
    .restart local v14    # "prefix":Z
    .restart local v15    # "sourcePkg":Ljava/lang/String;
    .restart local v18    # "targetPkg":Ljava/lang/String;
    .restart local v22    # "uri":Landroid/net/Uri;
    :cond_2
    const-string v24, "ActivityManager"

    new-instance v25, Ljava/lang/StringBuilder;

    invoke-direct/range {v25 .. v25}, Ljava/lang/StringBuilder;-><init>()V

    const-string v26, "Persisted grant for "

    invoke-virtual/range {v25 .. v26}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v25

    move-object/from16 v0, v25

    move-object/from16 v1, v22

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v25

    const-string v26, " had source "

    invoke-virtual/range {v25 .. v26}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v25

    move-object/from16 v0, v25

    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v25

    const-string v26, " but instead found "

    invoke-virtual/range {v25 .. v26}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v25

    move-object/from16 v0, v25

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v25

    invoke-virtual/range {v25 .. v25}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v25

    invoke-static/range {v24 .. v25}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catch Ljava/io/FileNotFoundException; {:try_start_3 .. :try_end_3} :catch_0
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_1
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_3 .. :try_end_3} :catch_2
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto/16 :goto_0

    .line 12237
    .end local v4    # "createdTime":J
    .end local v8    # "in":Lorg/xmlpull/v1/XmlPullParser;
    .end local v9    # "modeFlags":I
    .end local v13    # "pi":Landroid/content/pm/ProviderInfo;
    .end local v14    # "prefix":Z
    .end local v15    # "sourcePkg":Ljava/lang/String;
    .end local v16    # "sourceUserId":I
    .end local v17    # "tag":Ljava/lang/String;
    .end local v18    # "targetPkg":Ljava/lang/String;
    .end local v20    # "targetUserId":I
    .end local v21    # "type":I
    .end local v22    # "uri":Landroid/net/Uri;
    .end local v23    # "userHandle":I
    :catch_1
    move-exception v6

    .line 12238
    .local v6, "e":Ljava/io/IOException;
    :try_start_4
    const-string v24, "ActivityManager"

    const-string v25, "Failed reading Uri grants"

    move-object/from16 v0, v24

    move-object/from16 v1, v25

    invoke-static {v0, v1, v6}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 12242
    invoke-static {v7}, Llibcore/io/IoUtils;->closeQuietly(Ljava/lang/AutoCloseable;)V

    goto :goto_3

    .end local v6    # "e":Ljava/io/IOException;
    .restart local v8    # "in":Lorg/xmlpull/v1/XmlPullParser;
    .restart local v21    # "type":I
    :cond_3
    invoke-static {v7}, Llibcore/io/IoUtils;->closeQuietly(Ljava/lang/AutoCloseable;)V

    goto :goto_3

    .line 12239
    .end local v8    # "in":Lorg/xmlpull/v1/XmlPullParser;
    .end local v21    # "type":I
    :catch_2
    move-exception v6

    .line 12240
    .local v6, "e":Lorg/xmlpull/v1/XmlPullParserException;
    :try_start_5
    const-string v24, "ActivityManager"

    const-string v25, "Failed reading Uri grants"

    move-object/from16 v0, v24

    move-object/from16 v1, v25

    invoke-static {v0, v1, v6}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 12242
    invoke-static {v7}, Llibcore/io/IoUtils;->closeQuietly(Ljava/lang/AutoCloseable;)V

    goto :goto_3

    .end local v6    # "e":Lorg/xmlpull/v1/XmlPullParserException;
    :catchall_0
    move-exception v24

    invoke-static {v7}, Llibcore/io/IoUtils;->closeQuietly(Ljava/lang/AutoCloseable;)V

    throw v24

    .line 12220
    .restart local v4    # "createdTime":J
    .restart local v8    # "in":Lorg/xmlpull/v1/XmlPullParser;
    .restart local v9    # "modeFlags":I
    .restart local v13    # "pi":Landroid/content/pm/ProviderInfo;
    .restart local v14    # "prefix":Z
    .restart local v15    # "sourcePkg":Ljava/lang/String;
    .restart local v16    # "sourceUserId":I
    .restart local v17    # "tag":Ljava/lang/String;
    .restart local v18    # "targetPkg":Ljava/lang/String;
    .restart local v19    # "targetUid":I
    .restart local v20    # "targetUserId":I
    .restart local v21    # "type":I
    .restart local v22    # "uri":Landroid/net/Uri;
    .restart local v23    # "userHandle":I
    :catch_3
    move-exception v24

    goto/16 :goto_2
.end method

.method private static readLastDonePreBootReceivers()Ljava/util/ArrayList;
    .locals 16
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/ArrayList",
            "<",
            "Landroid/content/ComponentName;",
            ">;"
        }
    .end annotation

    .prologue
    const/16 v15, 0x2710

    .line 16681
    new-instance v12, Ljava/util/ArrayList;

    invoke-direct {v12}, Ljava/util/ArrayList;-><init>()V

    .line 16682
    .local v12, "lastDoneReceivers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->getCalledPreBootReceiversFile()Ljava/io/File;

    move-result-object v6

    .line 16683
    .local v6, "file":Ljava/io/File;
    const/4 v7, 0x0

    .line 16684
    .local v7, "fis":Ljava/io/FileInputStream;
    const/4 v0, 0x0

    .line 16685
    .local v0, "dis":Ljava/io/DataInputStream;
    const/4 v9, 0x0

    .line 16686
    .local v9, "fis_migration":Ljava/io/FileInputStream;
    const/4 v2, 0x0

    .line 16688
    .local v2, "dis_migration":Ljava/io/DataInputStream;
    :try_start_0
    new-instance v8, Ljava/io/FileInputStream;

    invoke-direct {v8, v6}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_3
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 16689
    .end local v7    # "fis":Ljava/io/FileInputStream;
    .local v8, "fis":Ljava/io/FileInputStream;
    :try_start_1
    new-instance v1, Ljava/io/DataInputStream;

    new-instance v13, Ljava/io/BufferedInputStream;

    const/16 v14, 0x800

    invoke-direct {v13, v8, v14}, Ljava/io/BufferedInputStream;-><init>(Ljava/io/InputStream;I)V

    invoke-direct {v1, v13}, Ljava/io/DataInputStream;-><init>(Ljava/io/InputStream;)V
    :try_end_1
    .catch Ljava/io/FileNotFoundException; {:try_start_1 .. :try_end_1} :catch_e
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_c
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    .line 16690
    .end local v0    # "dis":Ljava/io/DataInputStream;
    .local v1, "dis":Ljava/io/DataInputStream;
    :try_start_2
    invoke-virtual {v1}, Ljava/io/DataInputStream;->readInt()I

    move-result v11

    .line 16691
    .local v11, "fvers":I
    if-ne v11, v15, :cond_0

    .line 16692
    const/4 v13, 0x1

    invoke-static {v1, v12, v13}, Lcom/android/server/am/ActivityManagerService;->getLastDonePrebootReceiver(Ljava/io/DataInputStream;Ljava/util/ArrayList;Z)V
    :try_end_2
    .catch Ljava/io/FileNotFoundException; {:try_start_2 .. :try_end_2} :catch_f
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_d
    .catchall {:try_start_2 .. :try_end_2} :catchall_3

    .line 16717
    :cond_0
    if-eqz v8, :cond_7

    .line 16719
    :try_start_3
    invoke-virtual {v8}, Ljava/io/FileInputStream;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0

    move-object v0, v1

    .end local v1    # "dis":Ljava/io/DataInputStream;
    .restart local v0    # "dis":Ljava/io/DataInputStream;
    move-object v7, v8

    .line 16724
    .end local v8    # "fis":Ljava/io/FileInputStream;
    .end local v11    # "fvers":I
    .restart local v7    # "fis":Ljava/io/FileInputStream;
    :cond_1
    :goto_0
    return-object v12

    .line 16720
    .end local v0    # "dis":Ljava/io/DataInputStream;
    .end local v7    # "fis":Ljava/io/FileInputStream;
    .restart local v1    # "dis":Ljava/io/DataInputStream;
    .restart local v8    # "fis":Ljava/io/FileInputStream;
    .restart local v11    # "fvers":I
    :catch_0
    move-exception v13

    move-object v0, v1

    .end local v1    # "dis":Ljava/io/DataInputStream;
    .restart local v0    # "dis":Ljava/io/DataInputStream;
    move-object v7, v8

    .line 16721
    .end local v8    # "fis":Ljava/io/FileInputStream;
    .restart local v7    # "fis":Ljava/io/FileInputStream;
    goto :goto_0

    .line 16694
    .end local v11    # "fvers":I
    :catch_1
    move-exception v13

    .line 16717
    :goto_1
    if-eqz v7, :cond_1

    .line 16719
    :try_start_4
    invoke-virtual {v7}, Ljava/io/FileInputStream;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_2

    goto :goto_0

    .line 16720
    :catch_2
    move-exception v13

    goto :goto_0

    .line 16695
    :catch_3
    move-exception v4

    .line 16696
    .local v4, "e":Ljava/io/IOException;
    :goto_2
    :try_start_5
    const-string v13, "ActivityManager"

    const-string v14, "Failure reading last done pre-boot receivers"

    invoke-static {v13, v14, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 16698
    :try_start_6
    new-instance v10, Ljava/io/FileInputStream;

    invoke-direct {v10, v6}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    .line 16699
    .end local v9    # "fis_migration":Ljava/io/FileInputStream;
    .local v10, "fis_migration":Ljava/io/FileInputStream;
    :try_start_7
    new-instance v3, Ljava/io/DataInputStream;

    new-instance v13, Ljava/io/BufferedInputStream;

    const/16 v14, 0x800

    invoke-direct {v13, v10, v14}, Ljava/io/BufferedInputStream;-><init>(Ljava/io/InputStream;I)V

    invoke-direct {v3, v13}, Ljava/io/DataInputStream;-><init>(Ljava/io/InputStream;)V
    :try_end_7
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_a
    .catchall {:try_start_7 .. :try_end_7} :catchall_5

    .line 16700
    .end local v2    # "dis_migration":Ljava/io/DataInputStream;
    .local v3, "dis_migration":Ljava/io/DataInputStream;
    :try_start_8
    invoke-virtual {v3}, Ljava/io/DataInputStream;->readInt()I

    move-result v11

    .line 16701
    .restart local v11    # "fvers":I
    if-ne v11, v15, :cond_2

    .line 16702
    const/4 v13, 0x0

    invoke-static {v3, v12, v13}, Lcom/android/server/am/ActivityManagerService;->getLastDonePrebootReceiver(Ljava/io/DataInputStream;Ljava/util/ArrayList;Z)V
    :try_end_8
    .catch Ljava/io/IOException; {:try_start_8 .. :try_end_8} :catch_b
    .catchall {:try_start_8 .. :try_end_8} :catchall_6

    .line 16707
    :cond_2
    if-eqz v10, :cond_6

    .line 16709
    :try_start_9
    invoke-virtual {v10}, Ljava/io/FileInputStream;->close()V
    :try_end_9
    .catch Ljava/io/IOException; {:try_start_9 .. :try_end_9} :catch_5
    .catchall {:try_start_9 .. :try_end_9} :catchall_4

    move-object v2, v3

    .end local v3    # "dis_migration":Ljava/io/DataInputStream;
    .restart local v2    # "dis_migration":Ljava/io/DataInputStream;
    move-object v9, v10

    .line 16714
    .end local v10    # "fis_migration":Ljava/io/FileInputStream;
    .end local v11    # "fvers":I
    .restart local v9    # "fis_migration":Ljava/io/FileInputStream;
    :cond_3
    :goto_3
    :try_start_a
    const-string v13, "ActivityManager"

    const-string v14, "# lastDoneReceivers migration #"

    invoke-static {v13, v14}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 16715
    invoke-static {v12}, Lcom/android/server/am/ActivityManagerService;->writeLastDonePreBootReceivers(Ljava/util/ArrayList;)V
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_1

    .line 16717
    if-eqz v7, :cond_1

    .line 16719
    :try_start_b
    invoke-virtual {v7}, Ljava/io/FileInputStream;->close()V
    :try_end_b
    .catch Ljava/io/IOException; {:try_start_b .. :try_end_b} :catch_4

    goto :goto_0

    .line 16720
    :catch_4
    move-exception v13

    goto :goto_0

    .line 16710
    .end local v2    # "dis_migration":Ljava/io/DataInputStream;
    .end local v9    # "fis_migration":Ljava/io/FileInputStream;
    .restart local v3    # "dis_migration":Ljava/io/DataInputStream;
    .restart local v10    # "fis_migration":Ljava/io/FileInputStream;
    .restart local v11    # "fvers":I
    :catch_5
    move-exception v13

    move-object v2, v3

    .end local v3    # "dis_migration":Ljava/io/DataInputStream;
    .restart local v2    # "dis_migration":Ljava/io/DataInputStream;
    move-object v9, v10

    .line 16711
    .end local v10    # "fis_migration":Ljava/io/FileInputStream;
    .restart local v9    # "fis_migration":Ljava/io/FileInputStream;
    goto :goto_3

    .line 16704
    .end local v11    # "fvers":I
    :catch_6
    move-exception v5

    .line 16705
    .local v5, "e1":Ljava/io/IOException;
    :goto_4
    :try_start_c
    invoke-virtual {v5}, Ljava/io/IOException;->printStackTrace()V
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_0

    .line 16707
    if-eqz v9, :cond_3

    .line 16709
    :try_start_d
    invoke-virtual {v9}, Ljava/io/FileInputStream;->close()V
    :try_end_d
    .catch Ljava/io/IOException; {:try_start_d .. :try_end_d} :catch_7
    .catchall {:try_start_d .. :try_end_d} :catchall_1

    goto :goto_3

    .line 16710
    :catch_7
    move-exception v13

    goto :goto_3

    .line 16707
    .end local v5    # "e1":Ljava/io/IOException;
    :catchall_0
    move-exception v13

    :goto_5
    if-eqz v9, :cond_4

    .line 16709
    :try_start_e
    invoke-virtual {v9}, Ljava/io/FileInputStream;->close()V
    :try_end_e
    .catch Ljava/io/IOException; {:try_start_e .. :try_end_e} :catch_8
    .catchall {:try_start_e .. :try_end_e} :catchall_1

    .line 16711
    :cond_4
    :goto_6
    :try_start_f
    throw v13
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_1

    .line 16717
    .end local v4    # "e":Ljava/io/IOException;
    :catchall_1
    move-exception v13

    :goto_7
    if-eqz v7, :cond_5

    .line 16719
    :try_start_10
    invoke-virtual {v7}, Ljava/io/FileInputStream;->close()V
    :try_end_10
    .catch Ljava/io/IOException; {:try_start_10 .. :try_end_10} :catch_9

    .line 16721
    :cond_5
    :goto_8
    throw v13

    .line 16710
    .restart local v4    # "e":Ljava/io/IOException;
    :catch_8
    move-exception v14

    goto :goto_6

    .line 16720
    .end local v4    # "e":Ljava/io/IOException;
    :catch_9
    move-exception v14

    goto :goto_8

    .line 16717
    .end local v7    # "fis":Ljava/io/FileInputStream;
    .restart local v8    # "fis":Ljava/io/FileInputStream;
    :catchall_2
    move-exception v13

    move-object v7, v8

    .end local v8    # "fis":Ljava/io/FileInputStream;
    .restart local v7    # "fis":Ljava/io/FileInputStream;
    goto :goto_7

    .end local v0    # "dis":Ljava/io/DataInputStream;
    .end local v7    # "fis":Ljava/io/FileInputStream;
    .restart local v1    # "dis":Ljava/io/DataInputStream;
    .restart local v8    # "fis":Ljava/io/FileInputStream;
    :catchall_3
    move-exception v13

    move-object v0, v1

    .end local v1    # "dis":Ljava/io/DataInputStream;
    .restart local v0    # "dis":Ljava/io/DataInputStream;
    move-object v7, v8

    .end local v8    # "fis":Ljava/io/FileInputStream;
    .restart local v7    # "fis":Ljava/io/FileInputStream;
    goto :goto_7

    .end local v2    # "dis_migration":Ljava/io/DataInputStream;
    .end local v9    # "fis_migration":Ljava/io/FileInputStream;
    .restart local v3    # "dis_migration":Ljava/io/DataInputStream;
    .restart local v4    # "e":Ljava/io/IOException;
    .restart local v10    # "fis_migration":Ljava/io/FileInputStream;
    .restart local v11    # "fvers":I
    :catchall_4
    move-exception v13

    move-object v2, v3

    .end local v3    # "dis_migration":Ljava/io/DataInputStream;
    .restart local v2    # "dis_migration":Ljava/io/DataInputStream;
    move-object v9, v10

    .end local v10    # "fis_migration":Ljava/io/FileInputStream;
    .restart local v9    # "fis_migration":Ljava/io/FileInputStream;
    goto :goto_7

    .line 16707
    .end local v9    # "fis_migration":Ljava/io/FileInputStream;
    .end local v11    # "fvers":I
    .restart local v10    # "fis_migration":Ljava/io/FileInputStream;
    :catchall_5
    move-exception v13

    move-object v9, v10

    .end local v10    # "fis_migration":Ljava/io/FileInputStream;
    .restart local v9    # "fis_migration":Ljava/io/FileInputStream;
    goto :goto_5

    .end local v2    # "dis_migration":Ljava/io/DataInputStream;
    .end local v9    # "fis_migration":Ljava/io/FileInputStream;
    .restart local v3    # "dis_migration":Ljava/io/DataInputStream;
    .restart local v10    # "fis_migration":Ljava/io/FileInputStream;
    :catchall_6
    move-exception v13

    move-object v2, v3

    .end local v3    # "dis_migration":Ljava/io/DataInputStream;
    .restart local v2    # "dis_migration":Ljava/io/DataInputStream;
    move-object v9, v10

    .end local v10    # "fis_migration":Ljava/io/FileInputStream;
    .restart local v9    # "fis_migration":Ljava/io/FileInputStream;
    goto :goto_5

    .line 16704
    .end local v9    # "fis_migration":Ljava/io/FileInputStream;
    .restart local v10    # "fis_migration":Ljava/io/FileInputStream;
    :catch_a
    move-exception v5

    move-object v9, v10

    .end local v10    # "fis_migration":Ljava/io/FileInputStream;
    .restart local v9    # "fis_migration":Ljava/io/FileInputStream;
    goto :goto_4

    .end local v2    # "dis_migration":Ljava/io/DataInputStream;
    .end local v9    # "fis_migration":Ljava/io/FileInputStream;
    .restart local v3    # "dis_migration":Ljava/io/DataInputStream;
    .restart local v10    # "fis_migration":Ljava/io/FileInputStream;
    :catch_b
    move-exception v5

    move-object v2, v3

    .end local v3    # "dis_migration":Ljava/io/DataInputStream;
    .restart local v2    # "dis_migration":Ljava/io/DataInputStream;
    move-object v9, v10

    .end local v10    # "fis_migration":Ljava/io/FileInputStream;
    .restart local v9    # "fis_migration":Ljava/io/FileInputStream;
    goto :goto_4

    .line 16695
    .end local v4    # "e":Ljava/io/IOException;
    .end local v7    # "fis":Ljava/io/FileInputStream;
    .restart local v8    # "fis":Ljava/io/FileInputStream;
    :catch_c
    move-exception v4

    move-object v7, v8

    .end local v8    # "fis":Ljava/io/FileInputStream;
    .restart local v7    # "fis":Ljava/io/FileInputStream;
    goto :goto_2

    .end local v0    # "dis":Ljava/io/DataInputStream;
    .end local v7    # "fis":Ljava/io/FileInputStream;
    .restart local v1    # "dis":Ljava/io/DataInputStream;
    .restart local v8    # "fis":Ljava/io/FileInputStream;
    :catch_d
    move-exception v4

    move-object v0, v1

    .end local v1    # "dis":Ljava/io/DataInputStream;
    .restart local v0    # "dis":Ljava/io/DataInputStream;
    move-object v7, v8

    .end local v8    # "fis":Ljava/io/FileInputStream;
    .restart local v7    # "fis":Ljava/io/FileInputStream;
    goto :goto_2

    .line 16694
    .end local v7    # "fis":Ljava/io/FileInputStream;
    .restart local v8    # "fis":Ljava/io/FileInputStream;
    :catch_e
    move-exception v13

    move-object v7, v8

    .end local v8    # "fis":Ljava/io/FileInputStream;
    .restart local v7    # "fis":Ljava/io/FileInputStream;
    goto/16 :goto_1

    .end local v0    # "dis":Ljava/io/DataInputStream;
    .end local v7    # "fis":Ljava/io/FileInputStream;
    .restart local v1    # "dis":Ljava/io/DataInputStream;
    .restart local v8    # "fis":Ljava/io/FileInputStream;
    :catch_f
    move-exception v13

    move-object v0, v1

    .end local v1    # "dis":Ljava/io/DataInputStream;
    .restart local v0    # "dis":Ljava/io/DataInputStream;
    move-object v7, v8

    .end local v8    # "fis":Ljava/io/FileInputStream;
    .restart local v7    # "fis":Ljava/io/FileInputStream;
    goto/16 :goto_1

    .end local v2    # "dis_migration":Ljava/io/DataInputStream;
    .end local v9    # "fis_migration":Ljava/io/FileInputStream;
    .restart local v3    # "dis_migration":Ljava/io/DataInputStream;
    .restart local v4    # "e":Ljava/io/IOException;
    .restart local v10    # "fis_migration":Ljava/io/FileInputStream;
    .restart local v11    # "fvers":I
    :cond_6
    move-object v2, v3

    .end local v3    # "dis_migration":Ljava/io/DataInputStream;
    .restart local v2    # "dis_migration":Ljava/io/DataInputStream;
    move-object v9, v10

    .end local v10    # "fis_migration":Ljava/io/FileInputStream;
    .restart local v9    # "fis_migration":Ljava/io/FileInputStream;
    goto :goto_3

    .end local v0    # "dis":Ljava/io/DataInputStream;
    .end local v4    # "e":Ljava/io/IOException;
    .end local v7    # "fis":Ljava/io/FileInputStream;
    .restart local v1    # "dis":Ljava/io/DataInputStream;
    .restart local v8    # "fis":Ljava/io/FileInputStream;
    :cond_7
    move-object v0, v1

    .end local v1    # "dis":Ljava/io/DataInputStream;
    .restart local v0    # "dis":Ljava/io/DataInputStream;
    move-object v7, v8

    .end local v8    # "fis":Ljava/io/FileInputStream;
    .restart local v7    # "fis":Ljava/io/FileInputStream;
    goto/16 :goto_0
.end method

.method private removeAllRecentTasksLocked(I)Z
    .locals 6
    .param p1, "flags"    # I

    .prologue
    .line 13246
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 13248
    .local v2, "ident":J
    :try_start_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v5}, Lcom/android/server/am/RecentTasks;->size()I

    move-result v0

    .line 13249
    .local v0, "N":I
    add-int/lit8 v1, v0, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_2

    .line 13251
    if-nez v1, :cond_1

    and-int/lit8 v5, p1, 0x20

    if-eqz v5, :cond_1

    .line 13249
    :cond_0
    :goto_1
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 13256
    :cond_1
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v5, v1}, Lcom/android/server/am/RecentTasks;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/TaskRecord;

    .line 13257
    .local v4, "tr":Lcom/android/server/am/TaskRecord;
    invoke-virtual {v4}, Lcom/android/server/am/TaskRecord;->isHomeTask()Z

    move-result v5

    if-nez v5, :cond_0

    invoke-virtual {v4}, Lcom/android/server/am/TaskRecord;->isRecentTask()Z

    move-result v5

    if-nez v5, :cond_0

    .line 13260
    invoke-direct {p0, v4, p1}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdIfNeededLocked(Lcom/android/server/am/TaskRecord;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_1

    .line 13263
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v4    # "tr":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v5

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v5

    .restart local v0    # "N":I
    .restart local v1    # "i":I
    :cond_2
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13265
    const/4 v5, 0x1

    return v5
.end method

.method private removeAllTasksLocked(I)Z
    .locals 8
    .param p1, "flags"    # I

    .prologue
    .line 13228
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v7}, Lcom/android/server/am/ActivityStackSupervisor;->getStacks()Ljava/util/ArrayList;

    move-result-object v5

    .line 13229
    .local v5, "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityStack;>;"
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 13231
    .local v2, "ident":J
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    :try_start_0
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v7

    add-int/lit8 v7, v7, -0x1

    if-gt v0, v7, :cond_2

    .line 13232
    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ActivityStack;

    .line 13233
    .local v4, "stack":Lcom/android/server/am/ActivityStack;
    invoke-virtual {v4}, Lcom/android/server/am/ActivityStack;->isHomeStack()Z

    move-result v7

    if-eqz v7, :cond_1

    .line 13231
    :cond_0
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 13235
    :cond_1
    invoke-virtual {v4}, Lcom/android/server/am/ActivityStack;->getAllTasks()Ljava/util/ArrayList;

    move-result-object v7

    invoke-virtual {v7}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .local v1, "i$":Ljava/util/Iterator;
    :goto_1
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_0

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/TaskRecord;

    .line 13236
    .local v6, "tr":Lcom/android/server/am/TaskRecord;
    invoke-direct {p0, v6, p1}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdIfNeededLocked(Lcom/android/server/am/TaskRecord;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_1

    .line 13240
    .end local v1    # "i$":Ljava/util/Iterator;
    .end local v4    # "stack":Lcom/android/server/am/ActivityStack;
    .end local v6    # "tr":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v7

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v7

    :cond_2
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13242
    const/4 v7, 0x1

    return v7
.end method

.method private removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    .locals 6
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "token"    # Landroid/os/IBinder;
    .param p3, "userId"    # I

    .prologue
    .line 14770
    monitor-enter p0

    .line 14771
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v3, p1, p3}, Lcom/android/server/am/ProviderMap;->getProviderByName(Ljava/lang/String;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v1

    .line 14772
    .local v1, "cpr":Lcom/android/server/am/ContentProviderRecord;
    if-nez v1, :cond_0

    .line 14775
    monitor-exit p0

    .line 14794
    :goto_0
    return-void

    .line 14779
    :cond_0
    new-instance v0, Landroid/content/ComponentName;

    iget-object v3, v1, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v3, v3, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    iget-object v4, v1, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v4, v4, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-direct {v0, v3, v4}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 14780
    .local v0, "comp":Landroid/content/ComponentName;
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v3, v0, p3}, Lcom/android/server/am/ProviderMap;->getProviderByClass(Landroid/content/ComponentName;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v2

    .line 14781
    .local v2, "localCpr":Lcom/android/server/am/ContentProviderRecord;
    invoke-virtual {v2}, Lcom/android/server/am/ContentProviderRecord;->hasExternalProcessHandles()Z

    move-result v3

    if-eqz v3, :cond_2

    .line 14782
    invoke-virtual {v2, p2}, Lcom/android/server/am/ContentProviderRecord;->removeExternalProcessHandleLocked(Landroid/os/IBinder;)Z

    move-result v3

    if-eqz v3, :cond_1

    .line 14783
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 14793
    :goto_1
    monitor-exit p0

    goto :goto_0

    .end local v0    # "comp":Landroid/content/ComponentName;
    .end local v1    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v2    # "localCpr":Lcom/android/server/am/ContentProviderRecord;
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v3

    .line 14785
    .restart local v0    # "comp":Landroid/content/ComponentName;
    .restart local v1    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v2    # "localCpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_1
    :try_start_1
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attmpt to remove content provider "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " with no external reference for token: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, "."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 14790
    :cond_2
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attmpt to remove content provider: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " with no external references."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_1
.end method

.method private final removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z
    .locals 11
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "cpr"    # Lcom/android/server/am/ContentProviderRecord;
    .param p3, "always"    # Z

    .prologue
    const/4 v10, 0x1

    .line 21335
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v6, p2}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v3

    .line 21337
    .local v3, "inLaunching":Z
    if-eqz v3, :cond_0

    if-eqz p3, :cond_1

    .line 21338
    :cond_0
    monitor-enter p2

    .line 21339
    const/4 v6, 0x0

    :try_start_0
    iput-object v6, p2, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    .line 21340
    invoke-virtual {p2}, Ljava/lang/Object;->notifyAll()V

    .line 21341
    monitor-exit p2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 21342
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    iget-object v7, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    iget v8, p2, Lcom/android/server/am/ContentProviderRecord;->uid:I

    invoke-static {v8}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v8

    invoke-virtual {v6, v7, v8}, Lcom/android/server/am/ProviderMap;->removeProviderByClass(Landroid/content/ComponentName;I)V

    .line 21343
    iget-object v6, p2, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v6, v6, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    const-string v7, ";"

    invoke-virtual {v6, v7}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v5

    .line 21344
    .local v5, "names":[Ljava/lang/String;
    const/4 v4, 0x0

    .local v4, "j":I
    :goto_0
    array-length v6, v5

    if-ge v4, v6, :cond_1

    .line 21345
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    aget-object v7, v5, v4

    iget v8, p2, Lcom/android/server/am/ContentProviderRecord;->uid:I

    invoke-static {v8}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v8

    invoke-virtual {v6, v7, v8}, Lcom/android/server/am/ProviderMap;->removeProviderByName(Ljava/lang/String;I)V

    .line 21344
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 21341
    .end local v4    # "j":I
    .end local v5    # "names":[Ljava/lang/String;
    :catchall_0
    move-exception v6

    :try_start_1
    monitor-exit p2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v6

    .line 21349
    :cond_1
    iget-object v6, p2, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v6

    add-int/lit8 v2, v6, -0x1

    .local v2, "i":I
    :goto_1
    if-ltz v2, :cond_b

    .line 21350
    iget-object v6, p2, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v6, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ContentProviderConnection;

    .line 21351
    .local v1, "conn":Lcom/android/server/am/ContentProviderConnection;
    iget-boolean v6, v1, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    if-eqz v6, :cond_3

    .line 21355
    if-eqz v3, :cond_3

    if-nez p3, :cond_3

    .line 21349
    :cond_2
    :goto_2
    add-int/lit8 v2, v2, -0x1

    goto :goto_1

    .line 21359
    :cond_3
    iget-object v0, v1, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    .line 21362
    .local v0, "capp":Lcom/android/server/am/ProcessRecord;
    const-string v6, "com.sec.android.app.launcher"

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_4

    const-string v6, "com.sec.android.app.camera"

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_5

    .line 21364
    :cond_4
    const-string v6, "ActivityManager"

    const-string v7, "Do not kill Launcher when DB-connected process is died"

    invoke-static {v6, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    .line 21369
    :cond_5
    iput-boolean v10, v1, Lcom/android/server/am/ContentProviderConnection;->dead:Z

    .line 21370
    iget v6, v1, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    if-lez v6, :cond_a

    .line 21371
    iget-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-nez v6, :cond_2

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v6, :cond_2

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    if-eqz v6, :cond_2

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v7, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v6, v7, :cond_2

    .line 21376
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v6

    const-string v7, "CscFeature_Common_SupportDeviceReporting"

    invoke-virtual {v6, v7}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_6

    .line 21379
    const/16 v6, 0x190

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v7, v7, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v8, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    const/4 v9, 0x0

    invoke-direct {p0, v6, v7, v8, v9}, Lcom/android/server/am/ActivityManagerService;->sendAppStateMsg(ILjava/lang/String;II)V

    .line 21383
    :cond_6
    sget-boolean v6, Lcom/android/server/am/SmartAdjustManager;->DB_CONN_KILL_SKIP:Z

    if-eqz v6, :cond_8

    .line 21384
    const-string v7, "ActivityManager_SAMP"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Skip DB-connected Kill : depends on provider "

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v8, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {v8}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, " in dying proc "

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    if-eqz p1, :cond_7

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    :goto_3
    invoke-virtual {v8, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v7, v6}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_2

    :cond_7
    const-string v6, "??"

    goto :goto_3

    .line 21388
    :cond_8
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "depends on provider "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v7, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {v7}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " in dying proc "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    if-eqz p1, :cond_9

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    :goto_4
    invoke-virtual {v7, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v0, v6, v10}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    goto/16 :goto_2

    :cond_9
    const-string v6, "??"

    goto :goto_4

    .line 21394
    :cond_a
    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v6, :cond_2

    iget-object v6, v1, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v6, v6, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    if-eqz v6, :cond_2

    .line 21396
    :try_start_2
    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    iget-object v7, v1, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v7, v7, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    invoke-interface {v7}, Landroid/content/IContentProvider;->asBinder()Landroid/os/IBinder;

    move-result-object v7

    invoke-interface {v6, v7}, Landroid/app/IApplicationThread;->unstableProviderDied(Landroid/os/IBinder;)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 21401
    :goto_5
    iget-object v6, p2, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v6, v2}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 21402
    iget-object v6, v1, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    iget-object v6, v6, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v6, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_2

    .line 21403
    iget v6, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v8, p2, Lcom/android/server/am/ContentProviderRecord;->uid:I

    iget-object v9, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {p0, v6, v7, v8, v9}, Lcom/android/server/am/ActivityManagerService;->stopAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;)V

    goto/16 :goto_2

    .line 21408
    .end local v0    # "capp":Lcom/android/server/am/ProcessRecord;
    .end local v1    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :cond_b
    if-eqz v3, :cond_c

    if-eqz p3, :cond_c

    .line 21409
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v6, p2}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 21411
    :cond_c
    return v3

    .line 21397
    .restart local v0    # "capp":Lcom/android/server/am/ProcessRecord;
    .restart local v1    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :catch_0
    move-exception v6

    goto :goto_5
.end method

.method private final removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z
    .locals 11
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "callerWillRestart"    # Z
    .param p3, "allowRestart"    # Z
    .param p4, "reason"    # Ljava/lang/String;

    .prologue
    const/4 v10, 0x0

    const/4 v9, 0x0

    .line 9104
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-interface {v5, v6, v7}, Landroid/content/pm/IPackageManager;->AASAToken_UnRegisterPackage(Ljava/lang/String;I)Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 9109
    :goto_0
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 9110
    .local v0, "name":Ljava/lang/String;
    iget v3, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 9114
    .local v3, "uid":I
    invoke-direct {p0, v0, v3}, Lcom/android/server/am/ActivityManagerService;->removeProcessNameLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;

    .line 9115
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-ne v5, p1, :cond_0

    .line 9116
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v7, 0x19

    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget v8, v8, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v6, v7, v8, v9}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v6

    invoke-virtual {v5, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 9118
    iput-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    .line 9120
    :cond_0
    const/4 v1, 0x0

    .line 9121
    .local v1, "needRestart":Z
    iget v5, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v5, :cond_5

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v6, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v5, v6, :cond_5

    .line 9122
    iget v2, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 9123
    .local v2, "pid":I
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v6

    .line 9124
    :try_start_1
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v5, v2}, Landroid/util/SparseArray;->remove(I)V

    .line 9125
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v7, 0x14

    invoke-virtual {v5, v7, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V

    .line 9126
    monitor-exit v6
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 9127
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v5, v6, v7}, Lcom/android/server/am/BatteryStatsService;->noteProcessFinish(Ljava/lang/String;I)V

    .line 9128
    iget-boolean v5, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v5, :cond_1

    .line 9129
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget v6, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v5, v6, v7}, Lcom/android/server/am/BatteryStatsService;->removeIsolatedUid(II)V

    .line 9131
    :cond_1
    const/4 v4, 0x0

    .line 9132
    .local v4, "willRestart":Z
    iget-boolean v5, p1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v5, :cond_2

    iget-boolean v5, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-nez v5, :cond_2

    .line 9133
    if-nez p2, :cond_4

    .line 9134
    const/4 v4, 0x1

    .line 9139
    :cond_2
    :goto_1
    const/4 v5, 0x1

    invoke-virtual {p1, p4, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 9140
    invoke-direct {p0, p1, v4, p3}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 9141
    if-eqz v4, :cond_3

    .line 9142
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 9143
    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {p0, v5, v9, v10}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;ZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    .line 9149
    .end local v2    # "pid":I
    .end local v4    # "willRestart":Z
    :cond_3
    :goto_2
    return v1

    .line 9126
    .restart local v2    # "pid":I
    :catchall_0
    move-exception v5

    :try_start_2
    monitor-exit v6
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v5

    .line 9136
    .restart local v4    # "willRestart":Z
    :cond_4
    const/4 v1, 0x1

    goto :goto_1

    .line 9146
    .end local v2    # "pid":I
    .end local v4    # "willRestart":Z
    :cond_5
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v5, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 9105
    .end local v0    # "name":Ljava/lang/String;
    .end local v1    # "needRestart":Z
    .end local v3    # "uid":I
    :catch_0
    move-exception v5

    goto :goto_0
.end method

.method private final removeProcessNameLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;
    .locals 3
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .prologue
    .line 9056
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v1, p1, p2}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 9057
    .local v0, "old":Lcom/android/server/am/ProcessRecord;
    if-eqz v0, :cond_1

    .line 9058
    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->uidRecord:Lcom/android/server/am/UidRecord;

    iget v2, v1, Lcom/android/server/am/UidRecord;->numProcs:I

    add-int/lit8 v2, v2, -0x1

    iput v2, v1, Lcom/android/server/am/UidRecord;->numProcs:I

    .line 9059
    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->uidRecord:Lcom/android/server/am/UidRecord;

    iget v1, v1, Lcom/android/server/am/UidRecord;->numProcs:I

    if-nez v1, :cond_0

    .line 9063
    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->uidRecord:Lcom/android/server/am/UidRecord;

    const/4 v2, 0x1

    invoke-direct {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->enqueueUidChangeLocked(Lcom/android/server/am/UidRecord;Z)V

    .line 9064
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v1, p2}, Landroid/util/SparseArray;->remove(I)V

    .line 9066
    :cond_0
    const/4 v1, 0x0

    iput-object v1, v0, Lcom/android/server/am/ProcessRecord;->uidRecord:Lcom/android/server/am/UidRecord;

    .line 9068
    :cond_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {v1, p2}, Landroid/util/SparseArray;->remove(I)V

    .line 9069
    return-object v0
.end method

.method private removeTaskByIdIfNeededLocked(Lcom/android/server/am/TaskRecord;I)V
    .locals 4
    .param p1, "tr"    # Lcom/android/server/am/TaskRecord;
    .param p2, "flags"    # I

    .prologue
    .line 13269
    iget v2, p1, Lcom/android/server/am/TaskRecord;->userId:I

    iget v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    if-eq v2, v3, :cond_2

    .line 13270
    const/4 v0, 0x0

    .line 13271
    .local v0, "hasProfile":Z
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    array-length v2, v2

    if-ge v1, v2, :cond_0

    .line 13272
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    aget v2, v2, v1

    iget v3, p1, Lcom/android/server/am/TaskRecord;->userId:I

    if-ne v2, v3, :cond_1

    .line 13273
    const/4 v0, 0x1

    .line 13277
    :cond_0
    if-nez v0, :cond_2

    .line 13281
    .end local v0    # "hasProfile":Z
    .end local v1    # "i":I
    :goto_1
    return-void

    .line 13271
    .restart local v0    # "hasProfile":Z
    .restart local v1    # "i":I
    :cond_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 13280
    .end local v0    # "hasProfile":Z
    .end local v1    # "i":I
    :cond_2
    iget v2, p1, Lcom/android/server/am/TaskRecord;->taskId:I

    const/4 v3, 0x1

    invoke-direct {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZ)Z

    goto :goto_1
.end method

.method private removeTaskByIdLocked(IZ)Z
    .locals 1
    .param p1, "taskId"    # I
    .param p2, "killProcess"    # Z

    .prologue
    const/4 v0, 0x0

    .line 13153
    invoke-direct {p0, p1, p2, v0, v0}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZIZ)Z

    move-result v0

    return v0
.end method

.method private removeTaskByIdLocked(IZI)Z
    .locals 1
    .param p1, "taskId"    # I
    .param p2, "killProcess"    # Z
    .param p3, "flags"    # I

    .prologue
    .line 13161
    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, p3, v0}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZIZ)Z

    move-result v0

    return v0
.end method

.method private removeTaskByIdLocked(IZIZ)Z
    .locals 5
    .param p1, "taskId"    # I
    .param p2, "killProcess"    # Z
    .param p3, "flags"    # I
    .param p4, "skipMDMCheck"    # Z

    .prologue
    const/4 v2, 0x1

    const/4 v1, 0x0

    .line 13167
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3, p1, v1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(IZ)Lcom/android/server/am/TaskRecord;

    move-result-object v0

    .line 13168
    .local v0, "tr":Lcom/android/server/am/TaskRecord;
    if-eqz v0, :cond_2

    .line 13170
    invoke-direct {p0, v0, p4}, Lcom/android/server/am/ActivityManagerService;->isForceStopDisabled(Lcom/android/server/am/TaskRecord;Z)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 13182
    :goto_0
    return v1

    .line 13174
    :cond_0
    invoke-virtual {v0}, Lcom/android/server/am/TaskRecord;->removeTaskActivitiesLocked()V

    .line 13175
    invoke-direct {p0, v0, p2, p3}, Lcom/android/server/am/ActivityManagerService;->cleanUpRemovedTaskLocked(Lcom/android/server/am/TaskRecord;ZI)V

    .line 13176
    iget-boolean v1, v0, Lcom/android/server/am/TaskRecord;->isPersistable:Z

    if-eqz v1, :cond_1

    .line 13177
    const/4 v1, 0x0

    invoke-virtual {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->notifyTaskPersisterLocked(Lcom/android/server/am/TaskRecord;Z)V

    :cond_1
    move v1, v2

    .line 13179
    goto :goto_0

    .line 13181
    :cond_2
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Request to remove task ignored for non-existent task "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0
.end method

.method private removeTaskByIdLocked(IZZ)Z
    .locals 1
    .param p1, "taskId"    # I
    .param p2, "killProcess"    # Z
    .param p3, "skipMDMCheck"    # Z

    .prologue
    .line 13157
    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, v0, p3}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZIZ)Z

    move-result v0

    return v0
.end method

.method private removeTasksByPackageNameLocked(Ljava/lang/String;I)V
    .locals 5
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I

    .prologue
    .line 13081
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v3}, Lcom/android/server/am/RecentTasks;->size()I

    move-result v3

    add-int/lit8 v1, v3, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_2

    .line 13082
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v3, v1}, Lcom/android/server/am/RecentTasks;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/TaskRecord;

    .line 13083
    .local v2, "tr":Lcom/android/server/am/TaskRecord;
    iget v3, v2, Lcom/android/server/am/TaskRecord;->userId:I

    if-eq v3, p2, :cond_1

    .line 13081
    :cond_0
    :goto_1
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 13085
    :cond_1
    iget-object v3, v2, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v3}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    .line 13086
    .local v0, "cn":Landroid/content/ComponentName;
    if-eqz v0, :cond_0

    invoke-virtual {v0}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 13088
    iget v3, v2, Lcom/android/server/am/TaskRecord;->taskId:I

    const/4 v4, 0x1

    invoke-direct {p0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZ)Z

    goto :goto_1

    .line 13091
    .end local v0    # "cn":Landroid/content/ComponentName;
    .end local v2    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_2
    return-void
.end method

.method private removeUriPermissionsForPackageLocked(Ljava/lang/String;IZ)V
    .locals 10
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userHandle"    # I
    .param p3, "persistable"    # Z

    .prologue
    const/4 v8, -0x1

    .line 12015
    if-ne p2, v8, :cond_0

    if-nez p1, :cond_0

    .line 12016
    new-instance v7, Ljava/lang/IllegalArgumentException;

    const-string v8, "Must narrow by either package or user"

    invoke-direct {v7, v8}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 12019
    :cond_0
    const/4 v5, 0x0

    .line 12021
    .local v5, "persistChanged":Z
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    move-result v0

    .line 12022
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_7

    .line 12023
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v7, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v6

    .line 12024
    .local v6, "targetUid":I
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v7, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/util/ArrayMap;

    .line 12027
    .local v4, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-eq p2, v8, :cond_1

    invoke-static {v6}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v7

    if-ne p2, v7, :cond_6

    .line 12029
    :cond_1
    invoke-virtual {v4}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v7

    invoke-interface {v7}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v2

    .local v2, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/UriPermission;>;"
    :cond_2
    :goto_1
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_5

    .line 12030
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/UriPermission;

    .line 12033
    .local v3, "perm":Lcom/android/server/am/UriPermission;
    if-eqz p1, :cond_3

    iget-object v7, v3, Lcom/android/server/am/UriPermission;->sourcePkg:Ljava/lang/String;

    invoke-virtual {v7, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-nez v7, :cond_3

    iget-object v7, v3, Lcom/android/server/am/UriPermission;->targetPkg:Ljava/lang/String;

    invoke-virtual {v7, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_2

    .line 12035
    :cond_3
    if-eqz p3, :cond_4

    move v7, v8

    :goto_2
    const/4 v9, 0x1

    invoke-virtual {v3, v7, v9}, Lcom/android/server/am/UriPermission;->revokeModes(IZ)Z

    move-result v7

    or-int/2addr v5, v7

    .line 12040
    iget v7, v3, Lcom/android/server/am/UriPermission;->modeFlags:I

    if-nez v7, :cond_2

    .line 12041
    invoke-interface {v2}, Ljava/util/Iterator;->remove()V

    goto :goto_1

    .line 12035
    :cond_4
    const/16 v7, -0x41

    goto :goto_2

    .line 12046
    .end local v3    # "perm":Lcom/android/server/am/UriPermission;
    :cond_5
    invoke-virtual {v4}, Landroid/util/ArrayMap;->isEmpty()Z

    move-result v7

    if-eqz v7, :cond_6

    .line 12047
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v7, v6}, Landroid/util/SparseArray;->remove(I)V

    .line 12048
    add-int/lit8 v0, v0, -0x1

    .line 12049
    add-int/lit8 v1, v1, -0x1

    .line 12022
    .end local v2    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/UriPermission;>;"
    :cond_6
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 12054
    .end local v4    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    .end local v6    # "targetUid":I
    :cond_7
    if-eqz v5, :cond_8

    .line 12055
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->schedulePersistUriGrants()V

    .line 12057
    :cond_8
    return-void
.end method

.method private reportStartInstrumentationFailure(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V
    .locals 4
    .param p1, "watcher"    # Landroid/app/IInstrumentationWatcher;
    .param p2, "cn"    # Landroid/content/ComponentName;
    .param p3, "report"    # Ljava/lang/String;

    .prologue
    .line 23871
    const-string v2, "ActivityManager"

    invoke-static {v2, p3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 23873
    if-eqz p1, :cond_0

    .line 23874
    :try_start_0
    new-instance v1, Landroid/os/Bundle;

    invoke-direct {v1}, Landroid/os/Bundle;-><init>()V

    .line 23875
    .local v1, "results":Landroid/os/Bundle;
    const-string/jumbo v2, "id"

    const-string v3, "ActivityManagerService"

    invoke-virtual {v1, v2, v3}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 23876
    const-string v2, "Error"

    invoke-virtual {v1, v2, p3}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 23877
    const/4 v2, -0x1

    invoke-interface {p1, p2, v2, v1}, Landroid/app/IInstrumentationWatcher;->instrumentationStatus(Landroid/content/ComponentName;ILandroid/os/Bundle;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 23882
    .end local v1    # "results":Landroid/os/Bundle;
    :cond_0
    :goto_0
    return-void

    .line 23879
    :catch_0
    move-exception v0

    .line 23880
    .local v0, "e":Landroid/os/RemoteException;
    const-string v2, "ActivityManager"

    invoke-static {v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_0
.end method

.method private requestKnoxVpnToSendProxyBroadcast(I)V
    .locals 7
    .param p1, "uid"    # I

    .prologue
    .line 29707
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 29709
    .local v2, "origId":J
    :try_start_0
    new-instance v1, Landroid/content/Intent;

    invoke-direct {v1}, Landroid/content/Intent;-><init>()V

    .line 29710
    .local v1, "intent":Landroid/content/Intent;
    const-string/jumbo v4, "send_knoxvpn_proxy_broadcast"

    invoke-virtual {v1, v4}, Landroid/content/Intent;->setAction(Ljava/lang/String;)Landroid/content/Intent;

    .line 29711
    const-string v4, "caller"

    invoke-virtual {v1, v4, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 29712
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "The following uid has registered to recieve broadcast for proxy related updates "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 29713
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string v5, "android.permission.sec.MDM_ENTERPRISE_VPN_SOLUTION"

    invoke-virtual {v4, v1, v5}, Landroid/content/Context;->sendBroadcast(Landroid/content/Intent;Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 29717
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 29719
    .end local v1    # "intent":Landroid/content/Intent;
    :goto_0
    return-void

    .line 29714
    :catch_0
    move-exception v0

    .line 29715
    .local v0, "e":Ljava/lang/Exception;
    :try_start_1
    const-string v4, "ActivityManager"

    const-string v5, "Error occured while trying to send proxy request broadcast to knoxvpn"

    invoke-static {v4, v5}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 29717
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .end local v0    # "e":Ljava/lang/Exception;
    :catchall_0
    move-exception v4

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4
.end method

.method private resolveActivityInfo(Landroid/content/Intent;II)Landroid/content/pm/ActivityInfo;
    .locals 5
    .param p1, "intent"    # Landroid/content/Intent;
    .param p2, "flags"    # I
    .param p3, "userId"    # I

    .prologue
    .line 5748
    const/4 v0, 0x0

    .line 5749
    .local v0, "ai":Landroid/content/pm/ActivityInfo;
    invoke-virtual {p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    .line 5751
    .local v1, "comp":Landroid/content/ComponentName;
    if-eqz v1, :cond_1

    .line 5753
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v3

    invoke-interface {v3, v1, p2, p3}, Landroid/content/pm/IPackageManager;->getActivityInfo(Landroid/content/ComponentName;II)Landroid/content/pm/ActivityInfo;

    move-result-object v0

    .line 5768
    :cond_0
    :goto_0
    return-object v0

    .line 5755
    :cond_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v3

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    invoke-virtual {p1, v4}, Landroid/content/Intent;->resolveTypeIfNeeded(Landroid/content/ContentResolver;)Ljava/lang/String;

    move-result-object v4

    invoke-interface {v3, p1, v4, p2, p3}, Landroid/content/pm/IPackageManager;->resolveIntent(Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/pm/ResolveInfo;

    move-result-object v2

    .line 5760
    .local v2, "info":Landroid/content/pm/ResolveInfo;
    if-eqz v2, :cond_0

    .line 5761
    iget-object v0, v2, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 5764
    .end local v2    # "info":Landroid/content/pm/ResolveInfo;
    :catch_0
    move-exception v3

    goto :goto_0
.end method

.method private final resumedAppLocked()Lcom/android/server/am/ActivityRecord;
    .locals 7

    .prologue
    .line 26177
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->resumedAppLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 26180
    .local v0, "act":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_3

    .line 26181
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    .line 26182
    .local v1, "pkg":Ljava/lang/String;
    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 26188
    .local v2, "uid":I
    :goto_0
    iget v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    if-ne v2, v3, :cond_0

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    if-eq v1, v3, :cond_2

    if-eqz v1, :cond_0

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    invoke-virtual {v1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_2

    .line 26190
    :cond_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    if-eqz v3, :cond_1

    .line 26191
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const/16 v4, 0x4003

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    invoke-virtual {v3, v4, v5, v6}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 26194
    :cond_1
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    .line 26195
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    .line 26196
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    if-eqz v3, :cond_2

    .line 26197
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const v4, 0x8003

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    invoke-virtual {v3, v4, v5, v6}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 26201
    :cond_2
    return-object v0

    .line 26184
    .end local v1    # "pkg":Ljava/lang/String;
    .end local v2    # "uid":I
    :cond_3
    const/4 v1, 0x0

    .line 26185
    .restart local v1    # "pkg":Ljava/lang/String;
    const/4 v2, -0x1

    .restart local v2    # "uid":I
    goto :goto_0
.end method

.method private retrieveSettings()V
    .locals 9

    .prologue
    const/4 v6, 0x1

    const/4 v7, 0x0

    .line 16604
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v8}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    .line 16605
    .local v4, "resolver":Landroid/content/ContentResolver;
    const-string/jumbo v8, "debug_app"

    invoke-static {v4, v8}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 16607
    .local v2, "debugApp":Ljava/lang/String;
    const-string/jumbo v8, "wait_for_debugger"

    invoke-static {v4, v8, v7}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v8

    if-eqz v8, :cond_1

    move v5, v6

    .line 16609
    .local v5, "waitForDebugger":Z
    :goto_0
    const-string v8, "always_finish_activities"

    invoke-static {v4, v8, v7}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v8

    if-eqz v8, :cond_2

    move v0, v6

    .line 16611
    .local v0, "alwaysFinishActivities":Z
    :goto_1
    const-string/jumbo v8, "debug.force_rtl"

    invoke-static {v4, v8, v7}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v8

    if-eqz v8, :cond_3

    move v3, v6

    .line 16614
    .local v3, "forceRtl":Z
    :goto_2
    const-string/jumbo v7, "debug.force_rtl"

    if-eqz v3, :cond_4

    const-string v6, "1"

    :goto_3
    invoke-static {v7, v6}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 16616
    new-instance v1, Landroid/content/res/Configuration;

    invoke-direct {v1}, Landroid/content/res/Configuration;-><init>()V

    .line 16617
    .local v1, "configuration":Landroid/content/res/Configuration;
    invoke-static {v4, v1}, Landroid/provider/Settings$System;->getConfiguration(Landroid/content/ContentResolver;Landroid/content/res/Configuration;)V

    .line 16618
    if-eqz v3, :cond_0

    .line 16620
    iget-object v6, v1, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;

    invoke-virtual {v1, v6}, Landroid/content/res/Configuration;->setLayoutDirection(Ljava/util/Locale;)V

    .line 16623
    :cond_0
    monitor-enter p0

    .line 16624
    :try_start_0
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 16625
    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 16626
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    .line 16646
    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x1

    invoke-virtual {p0, v1, v6, v7, v8}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z

    .line 16651
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 16652
    return-void

    .end local v0    # "alwaysFinishActivities":Z
    .end local v1    # "configuration":Landroid/content/res/Configuration;
    .end local v3    # "forceRtl":Z
    .end local v5    # "waitForDebugger":Z
    :cond_1
    move v5, v7

    .line 16607
    goto :goto_0

    .restart local v5    # "waitForDebugger":Z
    :cond_2
    move v0, v7

    .line 16609
    goto :goto_1

    .restart local v0    # "alwaysFinishActivities":Z
    :cond_3
    move v3, v7

    .line 16611
    goto :goto_2

    .line 16614
    .restart local v3    # "forceRtl":Z
    :cond_4
    const-string v6, "0"

    goto :goto_3

    .line 16651
    .restart local v1    # "configuration":Landroid/content/res/Configuration;
    :catchall_0
    move-exception v6

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v6
.end method

.method private revokeUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;I)V
    .locals 15
    .param p1, "callingUid"    # I
    .param p2, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;
    .param p3, "modeFlags"    # I

    .prologue
    .line 11893
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    .line 11894
    .local v2, "pm":Landroid/content/pm/IPackageManager;
    move-object/from16 v0, p2

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v8

    .line 11895
    .local v8, "authority":Ljava/lang/String;
    move-object/from16 v0, p2

    iget v1, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    invoke-direct {p0, v8, v1}, Lcom/android/server/am/ActivityManagerService;->getProviderInfoLocked(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;

    move-result-object v3

    .line 11896
    .local v3, "pi":Landroid/content/pm/ProviderInfo;
    if-nez v3, :cond_1

    .line 11897
    const-string v1, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "No content provider found for permission revoke: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual/range {p2 .. p2}, Lcom/android/server/am/ActivityManagerService$GrantUri;->toSafeString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v1, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11965
    :cond_0
    :goto_0
    return-void

    :cond_1
    move-object v1, p0

    move-object/from16 v4, p2

    move/from16 v5, p1

    move/from16 v6, p3

    .line 11903
    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z

    move-result v1

    if-nez v1, :cond_5

    .line 11906
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    move/from16 v0, p1

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Landroid/util/ArrayMap;

    .line 11907
    .local v12, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-eqz v12, :cond_0

    .line 11908
    const/4 v13, 0x0

    .line 11909
    .local v13, "persistChanged":Z
    invoke-virtual {v12}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v10

    .local v10, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/UriPermission;>;"
    :cond_2
    :goto_1
    invoke-interface {v10}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_3

    .line 11910
    invoke-interface {v10}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/am/UriPermission;

    .line 11911
    .local v11, "perm":Lcom/android/server/am/UriPermission;
    iget-object v1, v11, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget v1, v1, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    move-object/from16 v0, p2

    iget v4, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    if-ne v1, v4, :cond_2

    iget-object v1, v11, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    move-object/from16 v0, p2

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v1, v4}, Landroid/net/Uri;->isPathPrefixMatch(Landroid/net/Uri;)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 11916
    or-int/lit8 v1, p3, 0x40

    const/4 v4, 0x0

    invoke-virtual {v11, v1, v4}, Lcom/android/server/am/UriPermission;->revokeModes(IZ)Z

    move-result v1

    or-int/2addr v13, v1

    .line 11918
    iget v1, v11, Lcom/android/server/am/UriPermission;->modeFlags:I

    if-nez v1, :cond_2

    .line 11919
    invoke-interface {v10}, Ljava/util/Iterator;->remove()V

    goto :goto_1

    .line 11923
    .end local v11    # "perm":Lcom/android/server/am/UriPermission;
    :cond_3
    invoke-virtual {v12}, Landroid/util/ArrayMap;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_4

    .line 11924
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    move/from16 v0, p1

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->remove(I)V

    .line 11926
    :cond_4
    if-eqz v13, :cond_0

    .line 11927
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->schedulePersistUriGrants()V

    goto :goto_0

    .line 11933
    .end local v10    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/UriPermission;>;"
    .end local v12    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    .end local v13    # "persistChanged":Z
    :cond_5
    const/4 v13, 0x0

    .line 11936
    .restart local v13    # "persistChanged":Z
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v7

    .line 11937
    .local v7, "N":I
    const/4 v9, 0x0

    .local v9, "i":I
    :goto_2
    if-ge v9, v7, :cond_9

    .line 11938
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v1, v9}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v14

    .line 11939
    .local v14, "targetUid":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v1, v9}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Landroid/util/ArrayMap;

    .line 11941
    .restart local v12    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    invoke-virtual {v12}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v10

    .restart local v10    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/UriPermission;>;"
    :cond_6
    :goto_3
    invoke-interface {v10}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_7

    .line 11942
    invoke-interface {v10}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/am/UriPermission;

    .line 11943
    .restart local v11    # "perm":Lcom/android/server/am/UriPermission;
    iget-object v1, v11, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget v1, v1, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    move-object/from16 v0, p2

    iget v4, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    if-ne v1, v4, :cond_6

    iget-object v1, v11, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    move-object/from16 v0, p2

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v1, v4}, Landroid/net/Uri;->isPathPrefixMatch(Landroid/net/Uri;)Z

    move-result v1

    if-eqz v1, :cond_6

    .line 11947
    or-int/lit8 v1, p3, 0x40

    const/4 v4, 0x1

    invoke-virtual {v11, v1, v4}, Lcom/android/server/am/UriPermission;->revokeModes(IZ)Z

    move-result v1

    or-int/2addr v13, v1

    .line 11949
    iget v1, v11, Lcom/android/server/am/UriPermission;->modeFlags:I

    if-nez v1, :cond_6

    .line 11950
    invoke-interface {v10}, Ljava/util/Iterator;->remove()V

    goto :goto_3

    .line 11955
    .end local v11    # "perm":Lcom/android/server/am/UriPermission;
    :cond_7
    invoke-virtual {v12}, Landroid/util/ArrayMap;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_8

    .line 11956
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v1, v14}, Landroid/util/SparseArray;->remove(I)V

    .line 11957
    add-int/lit8 v7, v7, -0x1

    .line 11958
    add-int/lit8 v9, v9, -0x1

    .line 11937
    :cond_8
    add-int/lit8 v9, v9, 0x1

    goto :goto_2

    .line 11962
    .end local v10    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/UriPermission;>;"
    .end local v12    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    .end local v14    # "targetUid":I
    :cond_9
    if-eqz v13, :cond_0

    .line 11963
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->schedulePersistUriGrants()V

    goto/16 :goto_0
.end method

.method private static scanArgs([Ljava/lang/String;Ljava/lang/String;)Z
    .locals 5
    .param p0, "args"    # [Ljava/lang/String;
    .param p1, "value"    # Ljava/lang/String;

    .prologue
    .line 21323
    if-eqz p0, :cond_1

    .line 21324
    move-object v1, p0

    .local v1, "arr$":[Ljava/lang/String;
    array-length v3, v1

    .local v3, "len$":I
    const/4 v2, 0x0

    .local v2, "i$":I
    :goto_0
    if-ge v2, v3, :cond_1

    aget-object v0, v1, v2

    .line 21325
    .local v0, "arg":Ljava/lang/String;
    invoke-virtual {p1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 21326
    const/4 v4, 0x1

    .line 21330
    .end local v0    # "arg":Ljava/lang/String;
    .end local v1    # "arr$":[Ljava/lang/String;
    .end local v2    # "i$":I
    .end local v3    # "len$":I
    :goto_1
    return v4

    .line 21324
    .restart local v0    # "arg":Ljava/lang/String;
    .restart local v1    # "arr$":[Ljava/lang/String;
    .restart local v2    # "i$":I
    .restart local v3    # "len$":I
    :cond_0
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 21330
    .end local v0    # "arg":Ljava/lang/String;
    .end local v1    # "arr$":[Ljava/lang/String;
    .end local v2    # "i$":I
    .end local v3    # "len$":I
    :cond_1
    const/4 v4, 0x0

    goto :goto_1
.end method

.method private schedulePersistUriGrants()V
    .locals 4

    .prologue
    const/16 v2, 0x26

    .line 12123
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->hasMessages(I)Z

    move-result v0

    if-nez v0, :cond_0

    .line 12124
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v1

    const-wide/16 v2, 0x2710

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 12127
    :cond_0
    return-void
.end method

.method private sendAppStateMsg(ILjava/lang/String;II)V
    .locals 2
    .param p1, "what"    # I
    .param p2, "pkgName"    # Ljava/lang/String;
    .param p3, "pid"    # I
    .param p4, "reason"    # I

    .prologue
    .line 28500
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v0

    .line 28501
    .local v0, "msg":Landroid/os/Message;
    iput p1, v0, Landroid/os/Message;->what:I

    .line 28502
    iput-object p2, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 28503
    iput p3, v0, Landroid/os/Message;->arg1:I

    .line 28504
    iput p4, v0, Landroid/os/Message;->arg2:I

    .line 28505
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 28506
    return-void
.end method

.method private sendInternetPermissionBroadcast(Landroid/content/Intent;)V
    .locals 8
    .param p1, "intent"    # Landroid/content/Intent;

    .prologue
    .line 6157
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v5

    const-string v6, "CscFeature_Common_SupportHuxPco"

    invoke-virtual {v5, v6}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v5

    if-nez v5, :cond_1

    .line 6190
    :cond_0
    :goto_0
    return-void

    .line 6161
    :cond_1
    iget v5, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    if-nez v5, :cond_0

    if-eqz p1, :cond_0

    invoke-virtual {p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v5

    if-eqz v5, :cond_0

    .line 6167
    const-string/jumbo v5, "persist.sys.pcovalue"

    const/4 v6, 0x0

    invoke-static {v5, v6}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v4

    .line 6168
    .local v4, "value":I
    const/4 v5, 0x3

    if-eq v4, v5, :cond_2

    const/4 v5, 0x5

    if-ne v4, v5, :cond_0

    .line 6172
    :cond_2
    invoke-virtual {p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v5

    invoke-virtual {v5}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    .line 6173
    .local v1, "packageName":Ljava/lang/String;
    const/4 v3, -0x1

    .line 6176
    .local v3, "permission":I
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    const-string v6, "android.permission.INTERNET"

    iget v7, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-interface {v5, v6, v1, v7}, Landroid/content/pm/IPackageManager;->checkPermission(Ljava/lang/String;Ljava/lang/String;I)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v3

    .line 6182
    :goto_1
    if-nez v3, :cond_0

    .line 6183
    new-instance v2, Landroid/content/Intent;

    const-string v5, "android.intent.action.INTERNET_PACKAGE_LAUNCHED"

    invoke-direct {v2, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 6185
    .local v2, "pcoIntent":Landroid/content/Intent;
    const-string/jumbo v5, "package_name"

    invoke-virtual {v2, v5, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 6186
    const-string v5, "com.sec.android.app.setupwizard"

    invoke-virtual {v2, v5}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    .line 6187
    const/high16 v5, 0x10000000

    invoke-virtual {v2, v5}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 6188
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v6, Landroid/os/UserHandle;

    iget v7, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-direct {v6, v7}, Landroid/os/UserHandle;-><init>(I)V

    invoke-virtual {v5, v2, v6}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    goto :goto_0

    .line 6178
    .end local v2    # "pcoIntent":Landroid/content/Intent;
    :catch_0
    move-exception v0

    .line 6179
    .local v0, "e":Landroid/os/RemoteException;
    const-string v5, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Error occurred while checking permission. StackTrace: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-static {v0}, Landroid/util/Log;->getStackTraceString(Ljava/lang/Throwable;)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1
.end method

.method private final sendPackageBroadcastLocked(I[Ljava/lang/String;I)V
    .locals 3
    .param p1, "cmd"    # I
    .param p2, "packages"    # [Ljava/lang/String;
    .param p3, "userId"    # I

    .prologue
    .line 22637
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v0, v2, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_2

    .line 22638
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 22639
    .local v1, "r":Lcom/android/server/am/ProcessRecord;
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_1

    const/4 v2, -0x1

    if-eq p3, v2, :cond_0

    iget v2, v1, Lcom/android/server/am/ProcessRecord;->userId:I

    if-ne v2, p3, :cond_1

    .line 22641
    :cond_0
    :try_start_0
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v2, p1, p2}, Landroid/app/IApplicationThread;->dispatchPackageBroadcast(I[Ljava/lang/String;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 22637
    :cond_1
    :goto_1
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 22646
    .end local v1    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_2
    return-void

    .line 22642
    .restart local v1    # "r":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v2

    goto :goto_1
.end method

.method private final setProcessTrackerStateLocked(Lcom/android/server/am/ProcessRecord;IJ)V
    .locals 7
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "memFactor"    # I
    .param p3, "now"    # J

    .prologue
    .line 26120
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v0, :cond_1

    .line 26121
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    if-eqz v0, :cond_0

    .line 26122
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->repProcState:I

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move v3, p2

    move-wide v4, p3

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/app/ProcessStats$ProcessState;->setState(IIJLandroid/util/ArrayMap;)V

    .line 26124
    :cond_0
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->repProcState:I

    if-ltz v0, :cond_1

    .line 26125
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->repProcState:I

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/am/BatteryStatsService;->noteProcessState(Ljava/lang/String;II)V

    .line 26129
    :cond_1
    return-void
.end method

.method private static final shouldShowDialogs(Landroid/content/res/Configuration;)Z
    .locals 2
    .param p0, "config"    # Landroid/content/res/Configuration;

    .prologue
    const/4 v0, 0x1

    .line 24609
    iget v1, p0, Landroid/content/res/Configuration;->keyboard:I

    if-ne v1, v0, :cond_0

    iget v1, p0, Landroid/content/res/Configuration;->touchscreen:I

    if-ne v1, v0, :cond_0

    iget v1, p0, Landroid/content/res/Configuration;->navigation:I

    if-eq v1, v0, :cond_1

    :cond_0
    :goto_0
    return v0

    :cond_1
    const/4 v0, 0x0

    goto :goto_0
.end method

.method private shouldSleepLocked()Z
    .locals 3

    .prologue
    const/4 v1, 0x1

    const/4 v0, 0x0

    .line 15322
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz v2, :cond_1

    .line 15339
    :cond_0
    :goto_0
    return v0

    .line 15327
    :cond_1
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    packed-switch v2, :pswitch_data_0

    move v0, v1

    .line 15339
    goto :goto_0

    .line 15333
    :pswitch_0
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    if-nez v2, :cond_2

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mSleepTokens:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v2

    if-nez v2, :cond_0

    :cond_2
    move v0, v1

    goto :goto_0

    .line 15327
    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_0
        :pswitch_0
    .end packed-switch
.end method

.method private showUserSwitchDialog(ILjava/lang/String;)V
    .locals 6
    .param p1, "userId"    # I
    .param p2, "userName"    # Ljava/lang/String;

    .prologue
    .line 27468
    new-instance v0, Lcom/android/server/am/UserSwitchingDialog;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const/4 v5, 0x1

    move-object v1, p0

    move v3, p1

    move-object v4, p2

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/UserSwitchingDialog;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/content/Context;ILjava/lang/String;Z)V

    .line 27470
    .local v0, "d":Landroid/app/Dialog;
    invoke-virtual {v0}, Landroid/app/Dialog;->show()V

    .line 27471
    return-void
.end method

.method private start()V
    .locals 3

    .prologue
    .line 3605
    invoke-static {}, Landroid/os/Process;->removeAllProcessGroups()V

    .line 3606
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuThread:Ljava/lang/Thread;

    invoke-virtual {v0}, Ljava/lang/Thread;->start()V

    .line 3608
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0, v1}, Lcom/android/server/am/BatteryStatsService;->publish(Landroid/content/Context;)V

    .line 3609
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0, v1}, Lcom/android/server/AppOpsService;->publish(Landroid/content/Context;)V

    .line 3610
    const-string v0, "AppOps"

    const-string v1, "AppOpsService published"

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 3611
    const-class v0, Landroid/app/ActivityManagerInternal;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$LocalService;

    const/4 v2, 0x0

    invoke-direct {v1, p0, v2}, Lcom/android/server/am/ActivityManagerService$LocalService;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActivityManagerService$1;)V

    invoke-static {v0, v1}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 3612
    return-void
.end method

.method private startImsService(Ljava/lang/String;)V
    .locals 3
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    .line 30093
    const-string v0, "com.samsung.commonimsservice"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 30094
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "[IMS-AM] startImsService() Start ["

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "] of active user ["

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/app/ActivityManager;->getCurrentUser()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "]"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 30096
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v1, Landroid/content/Intent;

    const-string v2, "com.samsung.commonimsinterface.imsstub.common.IMSService"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    invoke-virtual {v1, p1}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    move-result-object v1

    sget-object v2, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    invoke-virtual {v0, v1, v2}, Landroid/content/Context;->startServiceAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)Landroid/content/ComponentName;

    .line 30102
    :cond_0
    const-string v0, "com.sec.ims.android"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 30103
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "[IMS-AM] startImsService() Start ["

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "] of active user ["

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/app/ActivityManager;->getCurrentUser()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "]"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 30105
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v1, Landroid/content/Intent;

    const-string v2, "com.sec.ims.android.FrameworkService"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    invoke-virtual {v1, p1}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    move-result-object v1

    sget-object v2, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    invoke-virtual {v0, v1, v2}, Landroid/content/Context;->startServiceAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)Landroid/content/ComponentName;

    .line 30111
    :cond_1
    const-string v0, "com.sec.imsservice"

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 30112
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "[IMS-AM] startImsService() Start ["

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "] of active user ["

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/app/ActivityManager;->getCurrentUser()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "]"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 30114
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v1, Landroid/content/Intent;

    const-string v2, "com.sec.imsservice.service.ImsService"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    invoke-virtual {v1, p1}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    move-result-object v1

    sget-object v2, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    invoke-virtual {v0, v1, v2}, Landroid/content/Context;->startServiceAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)Landroid/content/ComponentName;

    .line 30119
    :cond_2
    return-void
.end method

.method private final startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V
    .locals 7
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "hostingType"    # Ljava/lang/String;
    .param p3, "hostingNameStr"    # Ljava/lang/String;

    .prologue
    const/4 v4, 0x0

    .line 5200
    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v5, v4

    move-object v6, v4

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V

    .line 5202
    return-void
.end method

.method private final startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
    .locals 40
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "hostingType"    # Ljava/lang/String;
    .param p3, "hostingNameStr"    # Ljava/lang/String;
    .param p4, "abiOverride"    # Ljava/lang/String;
    .param p5, "entryPoint"    # Ljava/lang/String;
    .param p6, "entryPointArgs"    # [Ljava/lang/String;

    .prologue
    .line 5206
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v38

    .line 5207
    .local v38, "startTime":J
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v4, :cond_0

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v5, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v4, v5, :cond_0

    .line 5208
    const-string/jumbo v4, "startProcess: removing from pids map"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5209
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v5

    .line 5210
    :try_start_0
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v4, v7}, Landroid/util/SparseArray;->remove(I)V

    .line 5211
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v7, 0x14

    move-object/from16 v0, p1

    invoke-virtual {v4, v7, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V

    .line 5212
    monitor-exit v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 5213
    const-string/jumbo v4, "startProcess: done removing from pids map"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5214
    const/4 v4, 0x0

    move-object/from16 v0, p1

    invoke-virtual {v0, v4}, Lcom/android/server/am/ProcessRecord;->setPid(I)V

    .line 5217
    :cond_0
    const-string v4, "com.sec.imsservice"

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_2

    const-string/jumbo v4, "true"

    const-string/jumbo v5, "persist.radio.ims_block"

    const-string/jumbo v7, "false"

    invoke-static {v5, v7}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_2

    .line 5219
    const-string v4, "ActivityManager"

    const-string v5, "IMS Service Block"

    invoke-static {v4, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 5220
    const/4 v4, 0x0

    move-object/from16 v0, p1

    invoke-virtual {v0, v4}, Lcom/android/server/am/ProcessRecord;->setPid(I)V

    .line 5580
    :cond_1
    :goto_0
    return-void

    .line 5212
    :catchall_0
    move-exception v4

    :try_start_1
    monitor-exit v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v4

    .line 5225
    :cond_2
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    move-object/from16 v0, p0

    invoke-direct {v0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->needToBlockImsRequest(Ljava/lang/String;I)Z

    move-result v4

    if-eqz v4, :cond_3

    .line 5227
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "[IMS-AM] startProcessLocked() Block ["

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v7, v7, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, "] of non-active user ["

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, "]"

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 5229
    const/4 v4, 0x0

    move-object/from16 v0, p1

    invoke-virtual {v0, v4}, Lcom/android/server/am/ProcessRecord;->setPid(I)V

    goto :goto_0

    .line 5235
    :cond_3
    invoke-static {}, Lcom/samsung/android/feature/FloatingFeature;->getInstance()Lcom/samsung/android/feature/FloatingFeature;

    move-result-object v4

    const-string v5, "SEC_FLOATING_FEATURE_COMMON_SUPPORT_SAFETYCARE"

    invoke-virtual {v4, v5}, Lcom/samsung/android/feature/FloatingFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v4

    if-nez v4, :cond_4

    invoke-static {}, Lcom/samsung/android/feature/FloatingFeature;->getInstance()Lcom/samsung/android/feature/FloatingFeature;

    move-result-object v4

    const-string v5, "SEC_FLOATING_FEATURE_COMMON_SUPPORT_ULTRA_POWER_SAVING"

    invoke-virtual {v4, v5}, Lcom/samsung/android/feature/FloatingFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_5

    .line 5237
    :cond_4
    :try_start_2
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mEmergencyMgr:Lcom/sec/android/emergencymode/EmergencyManager;

    if-eqz v4, :cond_5

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mEmergencyMgr:Lcom/sec/android/emergencymode/EmergencyManager;

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v4, v5}, Lcom/sec/android/emergencymode/EmergencyManager;->checkInvalidProcess(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_5

    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-nez v4, :cond_5

    .line 5239
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "SkipProcess: screenState["

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mEmergencyMgr:Lcom/sec/android/emergencymode/EmergencyManager;

    invoke-virtual {v7}, Lcom/sec/android/emergencymode/EmergencyManager;->isScreenOn()Z

    move-result v7

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, "]"

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, " mEmergencyMode["

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mEmergencyMgr:Lcom/sec/android/emergencymode/EmergencyManager;

    invoke-virtual {v7}, Lcom/sec/android/emergencymode/EmergencyManager;->isEmergencyMode()Z

    move-result v7

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, "]"

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, " name="

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v7, v7, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, "/"

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, " thread="

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, " pid="

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, " sid="

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Lcom/sec/android/emergencymode/Elog;->d(Ljava/lang/String;Ljava/lang/String;)V

    .line 5246
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 5247
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 5248
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v4, v5, v7}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)Ljava/lang/Object;

    .line 5250
    const/4 v4, 0x0

    move-object/from16 v0, p1

    invoke-virtual {v0, v4}, Lcom/android/server/am/ProcessRecord;->setPid(I)V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    goto/16 :goto_0

    .line 5253
    :catch_0
    move-exception v22

    .line 5254
    .local v22, "e":Ljava/lang/Exception;
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "SkipProcess e : "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, v22

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Lcom/sec/android/emergencymode/Elog;->d(Ljava/lang/String;Ljava/lang/String;)V

    .line 5261
    .end local v22    # "e":Ljava/lang/Exception;
    :cond_5
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 5263
    const-string/jumbo v4, "startProcess: starting to update cpu stats"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5264
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStats()V

    .line 5265
    const-string/jumbo v4, "startProcess: done updating cpu stats"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5269
    :try_start_3
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-interface {v4, v5}, Landroid/content/pm/IPackageManager;->isPackageFrozen(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_7

    .line 5271
    new-instance v4, Ljava/lang/RuntimeException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Package "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v7, v7, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, " is frozen!"

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw v4
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_1
    .catch Ljava/lang/RuntimeException; {:try_start_3 .. :try_end_3} :catch_2

    .line 5273
    :catch_1
    move-exception v22

    .line 5274
    .local v22, "e":Landroid/os/RemoteException;
    :try_start_4
    invoke-virtual/range {v22 .. v22}, Landroid/os/RemoteException;->rethrowAsRuntimeException()Ljava/lang/RuntimeException;

    move-result-object v4

    throw v4
    :try_end_4
    .catch Ljava/lang/RuntimeException; {:try_start_4 .. :try_end_4} :catch_2

    .line 5571
    .end local v22    # "e":Landroid/os/RemoteException;
    :catch_2
    move-exception v22

    .line 5573
    .local v22, "e":Ljava/lang/RuntimeException;
    const/4 v4, 0x0

    move-object/from16 v0, p1

    invoke-virtual {v0, v4}, Lcom/android/server/am/ProcessRecord;->setPid(I)V

    .line 5574
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v5, v7}, Lcom/android/server/am/BatteryStatsService;->noteProcessFinish(Ljava/lang/String;I)V

    .line 5575
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v4, :cond_6

    .line 5576
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v5, v7}, Lcom/android/server/am/BatteryStatsService;->removeIsolatedUid(II)V

    .line 5578
    :cond_6
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Failure starting process "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    move-object/from16 v0, v22

    invoke-static {v4, v5, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto/16 :goto_0

    .line 5277
    .end local v22    # "e":Ljava/lang/RuntimeException;
    :cond_7
    :try_start_5
    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 5279
    .local v6, "uid":I
    invoke-static {v6}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v37

    .line 5281
    .local v37, "userid":I
    const/4 v8, 0x0

    .line 5282
    .local v8, "gids":[I
    const/4 v10, 0x1

    .line 5284
    .local v10, "mountExternal":I
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-nez v4, :cond_8

    .line 5285
    const/16 v30, 0x0

    .line 5286
    .local v30, "permGids":[I
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
    :try_end_5
    .catch Ljava/lang/RuntimeException; {:try_start_5 .. :try_end_5} :catch_2

    move-result-object v32

    .line 5310
    .local v32, "pm":Landroid/content/pm/IPackageManager;
    :try_start_6
    const-string/jumbo v4, "startProcess: getting gids from package manager"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5311
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    move-object/from16 v0, v32

    invoke-interface {v0, v4, v5}, Landroid/content/pm/IPackageManager;->getPackageGids(Ljava/lang/String;I)[I

    move-result-object v30

    .line 5312
    const-class v4, Landroid/os/storage/MountServiceInternal;

    invoke-static {v4}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v28

    check-cast v28, Landroid/os/storage/MountServiceInternal;

    .line 5314
    .local v28, "mountServiceInternal":Landroid/os/storage/MountServiceInternal;
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v28

    invoke-virtual {v0, v6, v4}, Landroid/os/storage/MountServiceInternal;->getExternalStorageMountMode(ILjava/lang/String;)I
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_3
    .catch Ljava/lang/RuntimeException; {:try_start_6 .. :try_end_6} :catch_2

    move-result v10

    .line 5326
    :try_start_7
    invoke-static/range {v30 .. v30}, Lcom/android/internal/util/ArrayUtils;->isEmpty([I)Z

    move-result v4

    if-eqz v4, :cond_24

    .line 5327
    const/4 v4, 0x2

    new-array v8, v4, [I

    .line 5332
    :goto_1
    const/4 v4, 0x0

    invoke-static {v6}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v5

    invoke-static {v5}, Landroid/os/UserHandle;->getSharedAppGid(I)I

    move-result v5

    aput v5, v8, v4

    .line 5333
    const/4 v4, 0x1

    invoke-static {v6}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v5

    invoke-static {v5}, Landroid/os/UserHandle;->getUserGid(I)I

    move-result v5

    aput v5, v8, v4

    .line 5335
    .end local v28    # "mountServiceInternal":Landroid/os/storage/MountServiceInternal;
    .end local v30    # "permGids":[I
    .end local v32    # "pm":Landroid/content/pm/IPackageManager;
    :cond_8
    const-string/jumbo v4, "startProcess: building args"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5336
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    if-eqz v4, :cond_a

    .line 5337
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v5, 0x1

    if-ne v4, v5, :cond_9

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;

    if-eqz v4, :cond_9

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;

    invoke-virtual {v5}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_9

    .line 5340
    const/4 v6, 0x0

    .line 5342
    :cond_9
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v5, 0x2

    if-ne v4, v5, :cond_a

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v4, v4, 0x10

    if-eqz v4, :cond_a

    .line 5344
    const/4 v6, 0x0

    .line 5347
    :cond_a
    const/4 v9, 0x0

    .line 5348
    .local v9, "debugFlags":I
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_b

    .line 5349
    or-int/lit8 v9, v9, 0x1

    .line 5352
    or-int/lit8 v9, v9, 0x2

    .line 5356
    :cond_b
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit16 v4, v4, 0x4000

    if-nez v4, :cond_c

    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mSafeMode:Z

    const/4 v5, 0x1

    if-ne v4, v5, :cond_d

    .line 5358
    :cond_c
    or-int/lit8 v9, v9, 0x8

    .line 5360
    :cond_d
    const-string v4, "1"

    const-string/jumbo v5, "debug.checkjni"

    invoke-static {v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_e

    .line 5361
    or-int/lit8 v9, v9, 0x2

    .line 5363
    :cond_e
    const-string/jumbo v4, "debug.usejit"

    invoke-static {v4}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v27

    .line 5364
    .local v27, "jitDebugProperty":Ljava/lang/String;
    const-string/jumbo v4, "true"

    move-object/from16 v0, v27

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_25

    .line 5365
    or-int/lit8 v9, v9, 0x20

    .line 5372
    :cond_f
    :goto_2
    const-string/jumbo v4, "debug.generate-debug-info"

    invoke-static {v4}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v23

    .line 5373
    .local v23, "genDebugInfoProperty":Ljava/lang/String;
    const-string/jumbo v4, "true"

    move-object/from16 v0, v23

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_10

    .line 5374
    or-int/lit8 v9, v9, 0x40

    .line 5376
    :cond_10
    const-string v4, "1"

    const-string/jumbo v5, "debug.jni.logging"

    invoke-static {v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_11

    .line 5377
    or-int/lit8 v9, v9, 0x10

    .line 5379
    :cond_11
    const-string v4, "1"

    const-string/jumbo v5, "debug.assert"

    invoke-static {v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_12

    .line 5380
    or-int/lit8 v9, v9, 0x4

    .line 5383
    :cond_12
    if-eqz p4, :cond_26

    move-object/from16 v15, p4

    .line 5384
    .local v15, "requiredAbi":Ljava/lang/String;
    :goto_3
    if-nez v15, :cond_13

    .line 5385
    sget-object v4, Landroid/os/Build;->SUPPORTED_ABIS:[Ljava/lang/String;

    const/4 v5, 0x0

    aget-object v15, v4, v5

    .line 5388
    :cond_13
    const/16 v16, 0x0

    .line 5389
    .local v16, "instructionSet":Ljava/lang/String;
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->primaryCpuAbi:Ljava/lang/String;

    if-eqz v4, :cond_14

    .line 5390
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->primaryCpuAbi:Ljava/lang/String;

    invoke-static {v4}, Ldalvik/system/VMRuntime;->getInstructionSet(Ljava/lang/String;)Ljava/lang/String;
    :try_end_7
    .catch Ljava/lang/RuntimeException; {:try_start_7 .. :try_end_7} :catch_2

    move-result-object v16

    .line 5394
    :cond_14
    const/16 v19, 0x0

    .line 5397
    .local v19, "aasaSeInfo":[B
    :try_start_8
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-interface {v4, v5, v6}, Landroid/content/pm/IPackageManager;->AASAToken_RegisterPackage(Ljava/lang/String;I)Z

    .line 5398
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-interface {v4, v6, v5}, Landroid/content/pm/IPackageManager;->AASA_getSEInfo(ILjava/lang/String;)[B
    :try_end_8
    .catch Landroid/os/RemoteException; {:try_start_8 .. :try_end_8} :catch_4
    .catch Ljava/lang/RuntimeException; {:try_start_8 .. :try_end_8} :catch_2

    move-result-object v19

    .line 5405
    :goto_4
    :try_start_9
    move-object/from16 v0, p1

    iput-object v8, v0, Lcom/android/server/am/ProcessRecord;->gids:[I

    .line 5406
    move-object/from16 v0, p1

    iput-object v15, v0, Lcom/android/server/am/ProcessRecord;->requiredAbi:Ljava/lang/String;

    .line 5407
    move-object/from16 v0, v16

    move-object/from16 v1, p1

    iput-object v0, v1, Lcom/android/server/am/ProcessRecord;->instructionSet:Ljava/lang/String;

    .line 5411
    if-nez p5, :cond_27

    const/16 v26, 0x1

    .line 5412
    .local v26, "isActivityProcess":Z
    :goto_5
    if-nez p5, :cond_15

    const-string p5, "android.app.ActivityThread"

    .line 5413
    :cond_15
    const-wide/16 v4, 0x40

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Start proc: "

    invoke-virtual {v7, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v7, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v5, v7}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 5415
    const-string/jumbo v4, "startProcess: asking zygote to start proc"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5417
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->sdcarduserid:Ljava/lang/String;

    invoke-static/range {v37 .. v37}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v5

    move-object/from16 v0, p0

    invoke-direct {v0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->checkUser(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_16

    .line 5418
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v4, Landroid/content/pm/ApplicationInfo;->accessInfo:I

    or-int/lit8 v5, v5, 0x1

    iput v5, v4, Landroid/content/pm/ApplicationInfo;->accessInfo:I

    .line 5420
    :cond_16
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->bluetoothuserid:Ljava/lang/String;

    invoke-static/range {v37 .. v37}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v5

    move-object/from16 v0, p0

    invoke-direct {v0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->checkUser(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_17

    .line 5421
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v4, Landroid/content/pm/ApplicationInfo;->accessInfo:I

    or-int/lit8 v5, v5, 0x2

    iput v5, v4, Landroid/content/pm/ApplicationInfo;->accessInfo:I

    .line 5423
    :cond_17
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->sdcarduseridBL:Ljava/lang/String;

    invoke-static/range {v37 .. v37}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v5

    move-object/from16 v0, p0

    invoke-direct {v0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->checkUser(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_18

    .line 5424
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v4, Landroid/content/pm/ApplicationInfo;->accessInfo:I

    or-int/lit8 v5, v5, 0x10

    iput v5, v4, Landroid/content/pm/ApplicationInfo;->accessInfo:I

    .line 5426
    :cond_18
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->bluetoothuseridBL:Ljava/lang/String;

    invoke-static/range {v37 .. v37}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v5

    move-object/from16 v0, p0

    invoke-direct {v0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->checkUser(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_19

    .line 5427
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v4, Landroid/content/pm/ApplicationInfo;->accessInfo:I

    or-int/lit8 v5, v5, 0x20

    iput v5, v4, Landroid/content/pm/ApplicationInfo;->accessInfo:I
    :try_end_9
    .catch Ljava/lang/RuntimeException; {:try_start_9 .. :try_end_9} :catch_2

    .line 5432
    :cond_19
    :try_start_a
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/16 v7, 0x80

    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v11

    invoke-interface {v4, v5, v7, v11}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v34

    .line 5435
    .local v34, "sdpAppInfo":Landroid/content/pm/ApplicationInfo;
    if-eqz v34, :cond_1a

    move-object/from16 v0, v34

    iget-object v4, v0, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;

    if-eqz v4, :cond_1a

    .line 5436
    move-object/from16 v0, v34

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;

    move-object/from16 v25, v0

    .line 5437
    .local v25, "infoBundle":Landroid/os/Bundle;
    if-eqz v25, :cond_1a

    const-string/jumbo v4, "sdp"

    move-object/from16 v0, v25

    invoke-virtual {v0, v4}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    if-eqz v4, :cond_1a

    .line 5438
    const-string/jumbo v4, "sdp"

    move-object/from16 v0, v25

    invoke-virtual {v0, v4}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v35

    .line 5440
    .local v35, "sdpMetadata":Ljava/lang/String;
    const-string/jumbo v4, "enabled"

    move-object/from16 v0, v35

    invoke-virtual {v4, v0}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_1a

    .line 5441
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v4, Landroid/content/pm/ApplicationInfo;->accessInfo:I

    or-int/lit8 v5, v5, 0x40

    iput v5, v4, Landroid/content/pm/ApplicationInfo;->accessInfo:I
    :try_end_a
    .catch Landroid/os/RemoteException; {:try_start_a .. :try_end_a} :catch_5
    .catch Ljava/lang/RuntimeException; {:try_start_a .. :try_end_a} :catch_2

    .line 5451
    .end local v25    # "infoBundle":Landroid/os/Bundle;
    .end local v34    # "sdpAppInfo":Landroid/content/pm/ApplicationInfo;
    .end local v35    # "sdpMetadata":Ljava/lang/String;
    :cond_1a
    :goto_6
    :try_start_b
    invoke-static/range {v37 .. v37}, Landroid/os/PersonaManager;->isKnoxId(I)Z

    move-result v4

    if-eqz v4, :cond_1b

    .line 5452
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v4, Landroid/content/pm/ApplicationInfo;->accessInfo:I

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v7, v7, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move/from16 v0, v37

    invoke-static {v0, v7}, Lcom/android/server/enterprise/dlp/DLPManagerPolicyService;->getAccessInfo(ILjava/lang/String;)I

    move-result v7

    or-int/2addr v5, v7

    iput v5, v4, Landroid/content/pm/ApplicationInfo;->accessInfo:I

    .line 5456
    :cond_1b
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v5, "persona"

    invoke-virtual {v4, v5}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v31

    check-cast v31, Landroid/os/PersonaManager;

    .line 5457
    .local v31, "persona":Landroid/os/PersonaManager;
    invoke-static {}, Landroid/os/PersonaManager;->getBbcEnabled()I

    move-result v20

    .line 5460
    .local v20, "bbcId":I
    const/16 v36, 0x0

    .line 5463
    .local v36, "startResult":Landroid/os/Process$ProcessStartResult;
    monitor-enter p0
    :try_end_b
    .catch Ljava/lang/RuntimeException; {:try_start_b .. :try_end_b} :catch_2

    .line 5464
    :try_start_c
    invoke-static/range {v37 .. v37}, Landroid/os/PersonaManager;->isBBCContainer(I)Z

    move-result v4

    if-eqz v4, :cond_1c

    .line 5465
    invoke-static {v6}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v4

    const/16 v5, 0x2710

    if-lt v4, v5, :cond_28

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBBCOverridePath:Ljava/util/HashMap;

    invoke-static {v6}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v5

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_28

    if-eqz v8, :cond_28

    .line 5466
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "startActivityLocked BBC : "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-static {v6}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v7

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, "/"

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mBBCOverridePath:Ljava/util/HashMap;

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 5468
    const-string/jumbo v5, "sys.kea_override_path"

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBBCOverridePath:Ljava/util/HashMap;

    invoke-static {v6}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v7

    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    invoke-virtual {v4, v7}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-static {v5, v4}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 5470
    array-length v4, v8

    add-int/lit8 v4, v4, 0x1

    new-array v0, v4, [I

    move-object/from16 v24, v0

    .line 5471
    .local v24, "gids_tmp":[I
    const/4 v4, 0x0

    const/4 v5, 0x0

    array-length v7, v8

    move-object/from16 v0, v24

    invoke-static {v8, v4, v0, v5, v7}, Ljava/lang/System;->arraycopy([II[III)V

    .line 5472
    array-length v4, v8

    const/4 v5, 0x0

    invoke-static {v5}, Landroid/os/UserHandle;->getUserGid(I)I

    move-result v5

    aput v5, v24, v4

    .line 5473
    move-object/from16 v8, v24

    .line 5474
    move-object/from16 v0, p1

    iput-object v8, v0, Lcom/android/server/am/ProcessRecord;->gids:[I

    .line 5480
    .end local v24    # "gids_tmp":[I
    :cond_1c
    :goto_7
    monitor-exit p0
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_1

    .line 5483
    if-lez v37, :cond_29

    if-lez v20, :cond_29

    move/from16 v0, v37

    move/from16 v1, v20

    if-ne v0, v1, :cond_29

    :try_start_d
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->bbcseinfo:Ljava/lang/String;

    if-eqz v4, :cond_29

    .line 5484
    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v11, v4, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v12, v4, Landroid/content/pm/ApplicationInfo;->bbcseinfo:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v13, v4, Landroid/content/pm/ApplicationInfo;->bbccategory:I

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v14, v4, Landroid/content/pm/ApplicationInfo;->accessInfo:I

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v0, v4, Landroid/content/pm/ApplicationInfo;->dataDir:Ljava/lang/String;

    move-object/from16 v17, v0

    move-object/from16 v4, p5

    move v7, v6

    move-object/from16 v18, p6

    invoke-static/range {v4 .. v18}, Landroid/os/Process;->start(Ljava/lang/String;Ljava/lang/String;II[IIIILjava/lang/String;IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Landroid/os/Process$ProcessStartResult;

    move-result-object v36

    .line 5497
    :goto_8
    const-string/jumbo v4, "startProcess: returned from zygote!"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5498
    const-wide/16 v4, 0x40

    invoke-static {v4, v5}, Landroid/os/Trace;->traceEnd(J)V

    .line 5500
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v4, :cond_1d

    .line 5501
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v5, v7}, Lcom/android/server/am/BatteryStatsService;->addIsolatedUid(II)V

    .line 5503
    :cond_1d
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v5, v7}, Lcom/android/server/am/BatteryStatsService;->noteProcessStart(Ljava/lang/String;I)V

    .line 5504
    const-string/jumbo v4, "startProcess: done updating battery stats"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5506
    const/16 v5, 0x753e

    const/4 v4, 0x6

    new-array v7, v4, [Ljava/lang/Object;

    const/4 v4, 0x0

    invoke-static {v6}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v11

    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v11

    aput-object v11, v7, v4

    const/4 v4, 0x1

    move-object/from16 v0, v36

    iget v11, v0, Landroid/os/Process$ProcessStartResult;->pid:I

    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v11

    aput-object v11, v7, v4

    const/4 v4, 0x2

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v11

    aput-object v11, v7, v4

    const/4 v4, 0x3

    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aput-object v11, v7, v4

    const/4 v4, 0x4

    aput-object p2, v7, v4

    const/4 v11, 0x5

    if-eqz p3, :cond_2b

    move-object/from16 v4, p3

    :goto_9
    aput-object v4, v7, v11

    invoke-static {v5, v7}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 5512
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v4

    const-string v5, "CscFeature_Common_SupportDeviceReporting"

    invoke-virtual {v4, v5}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_1e

    .line 5513
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v36

    iget v7, v0, Landroid/os/Process$ProcessStartResult;->pid:I

    invoke-static {v4, v5, v7}, Lcom/android/server/am/AppStateBroadcaster;->sendApplicationStart(Landroid/content/Context;Ljava/lang/String;I)V

    .line 5516
    :cond_1e
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v4, :cond_1f

    .line 5517
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, v36

    iget v7, v0, Landroid/os/Process$ProcessStartResult;->pid:I

    invoke-virtual {v4, v5, v7}, Lcom/android/server/Watchdog;->processStarted(Ljava/lang/String;I)V

    .line 5520
    :cond_1f
    const-string/jumbo v4, "startProcess: building log message"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5521
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mStringBuilder:Ljava/lang/StringBuilder;

    move-object/from16 v21, v0

    .line 5522
    .local v21, "buf":Ljava/lang/StringBuilder;
    const/4 v4, 0x0

    move-object/from16 v0, v21

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->setLength(I)V

    .line 5534
    const-string v4, "Start proc "

    move-object/from16 v0, v21

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5535
    move-object/from16 v0, v36

    iget v4, v0, Landroid/os/Process$ProcessStartResult;->pid:I

    move-object/from16 v0, v21

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 5536
    const/16 v4, 0x3a

    move-object/from16 v0, v21

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 5537
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, v21

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5538
    const/16 v4, 0x2f

    move-object/from16 v0, v21

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 5539
    move-object/from16 v0, v21

    invoke-static {v0, v6}, Landroid/os/UserHandle;->formatUid(Ljava/lang/StringBuilder;I)V

    .line 5540
    if-nez v26, :cond_20

    .line 5541
    const-string v4, " ["

    move-object/from16 v0, v21

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5542
    move-object/from16 v0, v21

    move-object/from16 v1, p5

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5543
    const-string v4, "]"

    move-object/from16 v0, v21

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5545
    :cond_20
    const-string v4, " for "

    move-object/from16 v0, v21

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5546
    move-object/from16 v0, v21

    move-object/from16 v1, p2

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5547
    if-eqz p3, :cond_21

    .line 5548
    const-string v4, " "

    move-object/from16 v0, v21

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5549
    move-object/from16 v0, v21

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5551
    :cond_21
    const-string v4, "ActivityManager"

    invoke-virtual/range {v21 .. v21}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5552
    move-object/from16 v0, v36

    iget v4, v0, Landroid/os/Process$ProcessStartResult;->pid:I

    move-object/from16 v0, p1

    invoke-virtual {v0, v4}, Lcom/android/server/am/ProcessRecord;->setPid(I)V

    .line 5553
    move-object/from16 v0, v36

    iget-boolean v4, v0, Landroid/os/Process$ProcessStartResult;->usingWrapper:Z

    move-object/from16 v0, p1

    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->usingWrapper:Z

    .line 5554
    const/4 v4, 0x0

    move-object/from16 v0, p1

    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->removed:Z

    .line 5555
    const/4 v4, 0x0

    move-object/from16 v0, p1

    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->killed:Z

    .line 5556
    const/4 v4, 0x0

    move-object/from16 v0, p1

    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    .line 5557
    const-string/jumbo v4, "startProcess: starting to update pids map"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5558
    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v7
    :try_end_d
    .catch Ljava/lang/RuntimeException; {:try_start_d .. :try_end_d} :catch_2

    .line 5559
    :try_start_e
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move-object/from16 v0, v36

    iget v5, v0, Landroid/os/Process$ProcessStartResult;->pid:I

    move-object/from16 v0, p1

    invoke-virtual {v4, v5, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 5560
    if-eqz v26, :cond_22

    .line 5561
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x14

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v29

    .line 5562
    .local v29, "msg":Landroid/os/Message;
    move-object/from16 v0, p1

    move-object/from16 v1, v29

    iput-object v0, v1, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 5563
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, v36

    iget-boolean v4, v0, Landroid/os/Process$ProcessStartResult;->usingWrapper:Z

    if-eqz v4, :cond_2c

    const-wide/32 v4, 0x124f80

    :goto_a
    move-object/from16 v0, v29

    invoke-virtual {v11, v0, v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 5566
    .end local v29    # "msg":Landroid/os/Message;
    :cond_22
    monitor-exit v7
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_2

    .line 5567
    :try_start_f
    const-string/jumbo v4, "startProcess: done updating pids map"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5568
    const-string v4, "activity"

    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_23

    const-string/jumbo v4, "service"

    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_1

    .line 5569
    :cond_23
    sget-object v4, Lcom/android/server/am/ActivityManagerService;->mActivityTrigger:Lcom/android/internal/app/ActivityTrigger;

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, v36

    iget v7, v0, Landroid/os/Process$ProcessStartResult;->pid:I

    invoke-virtual {v4, v5, v7}, Lcom/android/internal/app/ActivityTrigger;->activityStartProcessTrigger(Ljava/lang/String;I)V

    goto/16 :goto_0

    .line 5316
    .end local v9    # "debugFlags":I
    .end local v15    # "requiredAbi":Ljava/lang/String;
    .end local v16    # "instructionSet":Ljava/lang/String;
    .end local v19    # "aasaSeInfo":[B
    .end local v20    # "bbcId":I
    .end local v21    # "buf":Ljava/lang/StringBuilder;
    .end local v23    # "genDebugInfoProperty":Ljava/lang/String;
    .end local v26    # "isActivityProcess":Z
    .end local v27    # "jitDebugProperty":Ljava/lang/String;
    .end local v31    # "persona":Landroid/os/PersonaManager;
    .end local v36    # "startResult":Landroid/os/Process$ProcessStartResult;
    .restart local v30    # "permGids":[I
    .restart local v32    # "pm":Landroid/content/pm/IPackageManager;
    :catch_3
    move-exception v22

    .line 5317
    .local v22, "e":Landroid/os/RemoteException;
    invoke-virtual/range {v22 .. v22}, Landroid/os/RemoteException;->rethrowAsRuntimeException()Ljava/lang/RuntimeException;

    move-result-object v4

    throw v4

    .line 5329
    .end local v22    # "e":Landroid/os/RemoteException;
    .restart local v28    # "mountServiceInternal":Landroid/os/storage/MountServiceInternal;
    :cond_24
    move-object/from16 v0, v30

    array-length v4, v0

    add-int/lit8 v4, v4, 0x2

    new-array v8, v4, [I

    .line 5330
    const/4 v4, 0x0

    const/4 v5, 0x2

    move-object/from16 v0, v30

    array-length v7, v0

    move-object/from16 v0, v30

    invoke-static {v0, v4, v8, v5, v7}, Ljava/lang/System;->arraycopy([II[III)V

    goto/16 :goto_1

    .line 5366
    .end local v28    # "mountServiceInternal":Landroid/os/storage/MountServiceInternal;
    .end local v30    # "permGids":[I
    .end local v32    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v9    # "debugFlags":I
    .restart local v27    # "jitDebugProperty":Ljava/lang/String;
    :cond_25
    const-string/jumbo v4, "false"

    move-object/from16 v0, v27

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_f

    .line 5368
    const-string/jumbo v4, "true"

    const-string/jumbo v5, "dalvik.vm.usejit"

    invoke-static {v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_f

    .line 5369
    or-int/lit8 v9, v9, 0x20

    goto/16 :goto_2

    .line 5383
    .restart local v23    # "genDebugInfoProperty":Ljava/lang/String;
    :cond_26
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v15, v4, Landroid/content/pm/ApplicationInfo;->primaryCpuAbi:Ljava/lang/String;

    goto/16 :goto_3

    .line 5400
    .restart local v15    # "requiredAbi":Ljava/lang/String;
    .restart local v16    # "instructionSet":Ljava/lang/String;
    .restart local v19    # "aasaSeInfo":[B
    :catch_4
    move-exception v22

    .line 5401
    .restart local v22    # "e":Landroid/os/RemoteException;
    const/16 v19, 0x0

    goto/16 :goto_4

    .line 5411
    .end local v22    # "e":Landroid/os/RemoteException;
    :cond_27
    const/16 v26, 0x0

    goto/16 :goto_5

    .line 5446
    .restart local v26    # "isActivityProcess":Z
    :catch_5
    move-exception v33

    .line 5447
    .local v33, "re":Landroid/os/RemoteException;
    const-string v4, "ActivityManager"

    const-string v5, "Failed to get metadata for sdp "

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_f
    .catch Ljava/lang/RuntimeException; {:try_start_f .. :try_end_f} :catch_2

    goto/16 :goto_6

    .line 5476
    .end local v33    # "re":Landroid/os/RemoteException;
    .restart local v20    # "bbcId":I
    .restart local v31    # "persona":Landroid/os/PersonaManager;
    .restart local v36    # "startResult":Landroid/os/Process$ProcessStartResult;
    :cond_28
    :try_start_10
    const-string/jumbo v4, "sys.kea_override_path"

    invoke-static {v4}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    invoke-static {v4}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    move-result v4

    if-nez v4, :cond_1c

    .line 5477
    const-string/jumbo v4, "sys.kea_override_path"

    const/4 v5, 0x0

    invoke-static {v4, v5}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    goto/16 :goto_7

    .line 5480
    :catchall_1
    move-exception v4

    monitor-exit p0
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_1

    :try_start_11
    throw v4

    .line 5490
    :cond_29
    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v11, v4, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    if-eqz v19, :cond_2a

    new-instance v12, Ljava/lang/String;

    move-object/from16 v0, v19

    invoke-direct {v12, v0}, Ljava/lang/String;-><init>([B)V

    :goto_b
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v13, v4, Landroid/content/pm/ApplicationInfo;->category:I

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v14, v4, Landroid/content/pm/ApplicationInfo;->accessInfo:I

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v0, v4, Landroid/content/pm/ApplicationInfo;->dataDir:Ljava/lang/String;

    move-object/from16 v17, v0

    move-object/from16 v4, p5

    move v7, v6

    move-object/from16 v18, p6

    invoke-static/range {v4 .. v18}, Landroid/os/Process;->start(Ljava/lang/String;Ljava/lang/String;II[IIIILjava/lang/String;IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Landroid/os/Process$ProcessStartResult;

    move-result-object v36

    goto/16 :goto_8

    :cond_2a
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v12, v4, Landroid/content/pm/ApplicationInfo;->seinfo:Ljava/lang/String;

    goto :goto_b

    .line 5506
    :cond_2b
    const-string v4, ""
    :try_end_11
    .catch Ljava/lang/RuntimeException; {:try_start_11 .. :try_end_11} :catch_2

    goto/16 :goto_9

    .line 5563
    .restart local v21    # "buf":Ljava/lang/StringBuilder;
    .restart local v29    # "msg":Landroid/os/Message;
    :cond_2c
    :try_start_12
    sget v4, Lcom/android/server/am/ActivityManagerService;->PROC_START_TIMEOUT:I

    int-to-long v4, v4

    goto/16 :goto_a

    .line 5566
    .end local v29    # "msg":Landroid/os/Message;
    :catchall_2
    move-exception v4

    monitor-exit v7
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_2

    :try_start_13
    throw v4
    :try_end_13
    .catch Ljava/lang/RuntimeException; {:try_start_13 .. :try_end_13} :catch_2
.end method

.method private startSplitIntentLocked(Lcom/android/server/am/BroadcastRecord;)V
    .locals 27
    .param p1, "r"    # Lcom/android/server/am/BroadcastRecord;

    .prologue
    .line 29098
    move-object/from16 v0, p0

    iget-boolean v1, v0, Lcom/android/server/am/ActivityManagerService;->mSplitStart:Z

    if-nez v1, :cond_3

    .line 29099
    const/4 v1, 0x1

    move-object/from16 v0, p0

    iput-boolean v1, v0, Lcom/android/server/am/ActivityManagerService;->mSplitStart:Z

    .line 29100
    const/4 v1, 0x0

    move-object/from16 v0, p0

    iput v1, v0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueFinishedNum:I

    .line 29101
    move-object/from16 v0, p0

    iget v1, v0, Lcom/android/server/am/ActivityManagerService;->mInitBgSplitQueueNum:I

    move-object/from16 v0, p0

    iput v1, v0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    .line 29106
    move-object/from16 v0, p1

    iget-object v1, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v1

    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I

    sub-int/2addr v1, v2

    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    add-int/lit8 v2, v2, 0x1

    div-int v22, v1, v2

    .line 29107
    .local v22, "divideNum":I
    move-object/from16 v0, p1

    iget-object v1, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v1

    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I

    sub-int/2addr v1, v2

    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    add-int/lit8 v2, v2, 0x1

    rem-int v24, v1, v2

    .line 29109
    .local v24, "remainder":I
    const/16 v23, 0x0

    .local v23, "i":I
    :goto_0
    move-object/from16 v0, p0

    iget v1, v0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    add-int/lit8 v1, v1, 0x1

    move/from16 v0, v23

    if-ge v0, v1, :cond_2

    .line 29110
    if-lez v24, :cond_0

    .line 29114
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    add-int/lit8 v2, v22, 0x1

    aput v2, v1, v23

    .line 29115
    add-int/lit8 v24, v24, -0x1

    .line 29120
    :goto_1
    if-nez v23, :cond_1

    .line 29122
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    const/4 v2, 0x0

    aget v3, v1, v2

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I

    add-int/2addr v3, v4

    aput v3, v1, v2

    .line 29109
    :goto_2
    add-int/lit8 v23, v23, 0x1

    goto :goto_0

    .line 29118
    :cond_0
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    aput v22, v1, v23

    goto :goto_1

    .line 29128
    :cond_1
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    aget v2, v1, v23

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    add-int/lit8 v4, v23, -0x1

    aget v3, v3, v4

    add-int/2addr v2, v3

    aput v2, v1, v23

    goto :goto_2

    .line 29133
    :cond_2
    invoke-direct/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->arrangeSplitReceiver(Lcom/android/server/am/BroadcastRecord;)Z

    move-result v25

    .line 29135
    .local v25, "result":Z
    if-nez v25, :cond_4

    .line 29136
    const-string/jumbo v1, "splitIntent"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "arrangeSplitReceiver return false!! intent : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v3}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " !! do not split it!!"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 29139
    const/4 v1, 0x0

    move-object/from16 v0, p1

    iput-boolean v1, v0, Lcom/android/server/am/BroadcastRecord;->splitCheck:Z

    .line 29140
    const/4 v1, 0x0

    move-object/from16 v0, p0

    iput-boolean v1, v0, Lcom/android/server/am/ActivityManagerService;->mSplitStart:Z

    .line 29190
    .end local v22    # "divideNum":I
    .end local v23    # "i":I
    .end local v24    # "remainder":I
    .end local v25    # "result":Z
    :cond_3
    :goto_3
    return-void

    .line 29145
    .restart local v22    # "divideNum":I
    .restart local v23    # "i":I
    .restart local v24    # "remainder":I
    .restart local v25    # "result":Z
    :cond_4
    move-object/from16 v0, p0

    iget v1, v0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    new-array v0, v1, [Ljava/util/List;

    move-object/from16 v21, v0

    .line 29146
    .local v21, "bgSplitQueueReceivers":[Ljava/util/List;
    const-string/jumbo v1, "splitIntent"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Split this intent : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v3}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ", mSplitNum[0]="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    const/4 v4, 0x0

    aget v3, v3, v4

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ", mSplitNum[1]="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    const/4 v4, 0x1

    aget v3, v3, v4

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ", mSplitNum[2]="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    const/4 v4, 0x2

    aget v3, v3, v4

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ", mBgSplitQueueNum="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " divideNum= "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move/from16 v0, v22

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " r.nextReceiver= "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " receivers.size="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v3}, Ljava/util/List;->size()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 29155
    const/16 v23, 0x0

    :goto_4
    move-object/from16 v0, p0

    iget v1, v0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    add-int/lit8 v1, v1, -0x1

    move/from16 v0, v23

    if-ge v0, v1, :cond_5

    .line 29156
    new-instance v1, Ljava/util/ArrayList;

    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    aget v3, v3, v23

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    add-int/lit8 v5, v23, 0x1

    aget v4, v4, v5

    invoke-interface {v2, v3, v4}, Ljava/util/List;->subList(II)Ljava/util/List;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    aput-object v1, v21, v23

    .line 29158
    const-string/jumbo v1, "splitIntent"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "backgroundsplit_"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move/from16 v0, v23

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    aget v3, v3, v23

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " ~ "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    add-int/lit8 v4, v23, 0x1

    aget v3, v3, v4

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 29155
    add-int/lit8 v23, v23, 0x1

    goto :goto_4

    .line 29161
    :cond_5
    move-object/from16 v0, p0

    iget v1, v0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    add-int/lit8 v1, v1, -0x1

    new-instance v2, Ljava/util/ArrayList;

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    add-int/lit8 v5, v5, -0x1

    aget v4, v4, v5

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v5}, Ljava/util/List;->size()I

    move-result v5

    invoke-interface {v3, v4, v5}, Ljava/util/List;->subList(II)Ljava/util/List;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    aput-object v2, v21, v1

    .line 29163
    const-string/jumbo v1, "splitIntent"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "backgroundsplit_2 : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    add-int/lit8 v4, v4, -0x1

    aget v3, v3, v4

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " ~ "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v3}, Ljava/util/List;->size()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 29167
    move-object/from16 v0, p0

    iget v1, v0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    new-array v0, v1, [Lcom/android/server/am/BroadcastRecord;

    move-object/from16 v26, v0

    .line 29170
    .local v26, "splitBGpendingrr":[Lcom/android/server/am/BroadcastRecord;
    move-object/from16 v0, p1

    iget-object v1, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v1

    add-int/lit8 v23, v1, -0x1

    :goto_5
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    const/4 v2, 0x0

    aget v1, v1, v2

    move/from16 v0, v23

    if-lt v0, v1, :cond_6

    .line 29171
    move-object/from16 v0, p1

    iget-object v1, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    move/from16 v0, v23

    invoke-interface {v1, v0}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 29170
    add-int/lit8 v23, v23, -0x1

    goto :goto_5

    .line 29173
    :cond_6
    const-string/jumbo v1, "splitIntent"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Remove duplicated receivers in background queue.  mSplitNum[0]="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mSplitNum:[I

    const/4 v4, 0x0

    aget v3, v3, v4

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " r.nextReceiver= "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " receivers.size="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v3}, Ljava/util/List;->size()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 29178
    const/16 v23, 0x0

    :goto_6
    move-object/from16 v0, p0

    iget v1, v0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    move/from16 v0, v23

    if-ge v0, v1, :cond_7

    .line 29179
    new-instance v1, Lcom/android/server/am/BroadcastRecord;

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBgSplitBroadcastQueue:[Lcom/android/server/am/BroadcastQueue;

    aget-object v2, v2, v23

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/BroadcastRecord;->callerApp:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/BroadcastRecord;->callerPackage:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/BroadcastRecord;->callingPid:I

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/am/BroadcastRecord;->callingUid:I

    move-object/from16 v0, p1

    iget-object v8, v0, Lcom/android/server/am/BroadcastRecord;->resolvedType:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v9, v0, Lcom/android/server/am/BroadcastRecord;->requiredPermissions:[Ljava/lang/String;

    move-object/from16 v0, p1

    iget v10, v0, Lcom/android/server/am/BroadcastRecord;->appOp:I

    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/BroadcastRecord;->options:Landroid/app/BroadcastOptions;

    aget-object v12, v21, v23

    move-object/from16 v0, p1

    iget-object v13, v0, Lcom/android/server/am/BroadcastRecord;->resultTo:Landroid/content/IIntentReceiver;

    move-object/from16 v0, p1

    iget v14, v0, Lcom/android/server/am/BroadcastRecord;->resultCode:I

    move-object/from16 v0, p1

    iget-object v15, v0, Lcom/android/server/am/BroadcastRecord;->resultData:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/BroadcastRecord;->resultExtras:Landroid/os/Bundle;

    move-object/from16 v16, v0

    move-object/from16 v0, p1

    iget-boolean v0, v0, Lcom/android/server/am/BroadcastRecord;->ordered:Z

    move/from16 v17, v0

    move-object/from16 v0, p1

    iget-boolean v0, v0, Lcom/android/server/am/BroadcastRecord;->sticky:Z

    move/from16 v18, v0

    const/16 v19, 0x0

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/BroadcastRecord;->userId:I

    move/from16 v20, v0

    invoke-direct/range {v1 .. v20}, Lcom/android/server/am/BroadcastRecord;-><init>(Lcom/android/server/am/BroadcastQueue;Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IILjava/lang/String;[Ljava/lang/String;ILandroid/app/BroadcastOptions;Ljava/util/List;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZI)V

    aput-object v1, v26, v23

    .line 29184
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mBgSplitBroadcastQueue:[Lcom/android/server/am/BroadcastQueue;

    aget-object v1, v1, v23

    aget-object v2, v26, v23

    invoke-virtual {v1, v2}, Lcom/android/server/am/BroadcastQueue;->enqueueOrderedBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 29185
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mBgSplitBroadcastQueue:[Lcom/android/server/am/BroadcastQueue;

    aget-object v1, v1, v23

    invoke-virtual {v1}, Lcom/android/server/am/BroadcastQueue;->scheduleBroadcastsLocked()V

    .line 29178
    add-int/lit8 v23, v23, 0x1

    goto :goto_6

    .line 29187
    :cond_7
    const-string/jumbo v1, "splitIntent"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "finish to split intent : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v3}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " !! Enqueue -> schedule it!!"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_3
.end method

.method private startUser(IZ)Z
    .locals 39
    .param p1, "userId"    # I
    .param p2, "foreground"    # Z

    .prologue
    .line 27474
    const-string v4, "android.permission.INTERACT_ACROSS_USERS_FULL"

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v4

    if-eqz v4, :cond_0

    .line 27476
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Permission Denial: switchUser() from pid="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", uid="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " requires "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v31

    .line 27480
    .local v31, "msg":Ljava/lang/String;
    const-string v4, "ActivityManager"

    move-object/from16 v0, v31

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 27481
    new-instance v4, Ljava/lang/SecurityException;

    move-object/from16 v0, v31

    invoke-direct {v4, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 27484
    .end local v31    # "msg":Ljava/lang/String;
    :cond_0
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v4

    if-eqz v4, :cond_1

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v4

    move/from16 v0, p1

    invoke-virtual {v4, v0}, Lcom/android/server/pm/PersonaManagerService;->getPersonaInfo(I)Landroid/content/pm/PersonaInfo;

    move-result-object v30

    .line 27485
    .local v30, "knoxInfo":Landroid/content/pm/PersonaInfo;
    :goto_0
    if-eqz v30, :cond_4

    .line 27486
    move-object/from16 v0, v30

    iget-boolean v4, v0, Landroid/content/pm/PersonaInfo;->removePersona:Z

    if-eqz v4, :cond_2

    .line 27487
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "blocking starting removed user for "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, p1

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 27488
    const/4 v4, 0x0

    .line 27677
    :goto_1
    return v4

    .line 27484
    .end local v30    # "knoxInfo":Landroid/content/pm/PersonaInfo;
    :cond_1
    const/16 v30, 0x0

    goto :goto_0

    .line 27491
    .restart local v30    # "knoxInfo":Landroid/content/pm/PersonaInfo;
    :cond_2
    invoke-virtual/range {v30 .. v30}, Landroid/content/pm/PersonaInfo;->getAdminUid()I

    move-result v4

    invoke-static {v4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    move/from16 v0, p1

    if-eq v4, v0, :cond_4

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v4

    if-eqz v4, :cond_4

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v4

    sget-object v5, Landroid/content/pm/PersonaState;->SUPER_LOCKED:Landroid/content/pm/PersonaState;

    move/from16 v0, p1

    invoke-virtual {v4, v5, v0}, Lcom/android/server/pm/PersonaManagerService;->inState(Landroid/content/pm/PersonaState;I)Z

    move-result v4

    if-nez v4, :cond_3

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v4

    sget-object v5, Landroid/content/pm/PersonaState;->TIMA_COMPROMISED:Landroid/content/pm/PersonaState;

    move/from16 v0, p1

    invoke-virtual {v4, v5, v0}, Lcom/android/server/pm/PersonaManagerService;->inState(Landroid/content/pm/PersonaState;I)Z

    move-result v4

    if-eqz v4, :cond_4

    .line 27492
    :cond_3
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "blocking non-BYOD super locked user "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, p1

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 27493
    const/4 v4, 0x0

    goto :goto_1

    .line 27500
    :cond_4
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v28

    .line 27502
    .local v28, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 27503
    :try_start_1
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    move/from16 v33, v0

    .line 27504
    .local v33, "oldUserId":I
    move/from16 v0, v33

    move/from16 v1, p1

    if-ne v0, v1, :cond_5

    .line 27505
    const/4 v4, 0x1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 27674
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_1

    .line 27508
    :cond_5
    :try_start_2
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v5, 0x0

    const/4 v6, 0x0

    const-string/jumbo v8, "startUser"

    const/4 v9, 0x0

    invoke-virtual {v4, v5, v6, v8, v9}, Lcom/android/server/am/ActivityStackSupervisor;->setLockTaskModeLocked(Lcom/android/server/am/TaskRecord;ILjava/lang/String;Z)V

    .line 27511
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v4

    move/from16 v0, p1

    invoke-virtual {v4, v0}, Lcom/android/server/pm/UserManagerService;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v36

    .line 27512
    .local v36, "userInfo":Landroid/content/pm/UserInfo;
    if-nez v36, :cond_6

    .line 27513
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "No user info for user #"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, p1

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 27514
    const/4 v4, 0x0

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 27674
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto/16 :goto_1

    .line 27516
    :cond_6
    if-eqz p2, :cond_7

    :try_start_3
    invoke-virtual/range {v36 .. v36}, Landroid/content/pm/UserInfo;->isManagedProfile()Z

    move-result v4

    if-eqz v4, :cond_7

    .line 27517
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Cannot switch to User #"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, p1

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ": not a full user"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 27518
    const/4 v4, 0x0

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 27674
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto/16 :goto_1

    .line 27521
    :cond_7
    if-eqz p2, :cond_8

    .line 27522
    :try_start_4
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const v5, 0x10a008b

    const v6, 0x10a008a

    invoke-virtual {v4, v5, v6}, Lcom/android/server/wm/WindowManagerService;->startFreezingScreen(II)V

    .line 27526
    :cond_8
    const/16 v32, 0x0

    .line 27529
    .local v32, "needStart":Z
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v4

    if-eqz v4, :cond_12

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v4

    move/from16 v0, p1

    invoke-virtual {v4, v0}, Lcom/android/server/pm/PersonaManagerService;->exists(I)Z

    move-result v4

    if-eqz v4, :cond_12

    const/16 v27, 0x1

    .line 27533
    .local v27, "isPersona":Z
    :goto_2
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move/from16 v0, p1

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    if-nez v4, :cond_a

    .line 27534
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    new-instance v5, Lcom/android/server/am/UserState;

    new-instance v6, Landroid/os/UserHandle;

    move/from16 v0, p1

    invoke-direct {v6, v0}, Landroid/os/UserHandle;-><init>(I)V

    const/4 v8, 0x0

    invoke-direct {v5, v6, v8}, Lcom/android/server/am/UserState;-><init>(Landroid/os/UserHandle;Z)V

    move/from16 v0, p1

    invoke-virtual {v4, v0, v5}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 27536
    if-eqz v27, :cond_9

    .line 27537
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v4

    move/from16 v0, p1

    invoke-virtual {v4, v0}, Lcom/android/server/pm/PersonaManagerService;->getPersonaInfo(I)Landroid/content/pm/PersonaInfo;

    move-result-object v34

    .line 27538
    .local v34, "personaInfo":Landroid/content/pm/PersonaInfo;
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v4

    sget-object v5, Landroid/content/pm/PersonaState;->SUPER_LOCKED:Landroid/content/pm/PersonaState;

    move/from16 v0, p1

    invoke-virtual {v4, v5, v0}, Lcom/android/server/pm/PersonaManagerService;->inState(Landroid/content/pm/PersonaState;I)Z

    move-result v4

    if-eqz v4, :cond_9

    .line 27539
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move/from16 v0, p1

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v37

    check-cast v37, Lcom/android/server/am/UserState;

    .line 27540
    .local v37, "userStartedState":Lcom/android/server/am/UserState;
    if-eqz v37, :cond_9

    .line 27541
    const/4 v4, 0x4

    move-object/from16 v0, v37

    iput v4, v0, Lcom/android/server/am/UserState;->mContainerState:I

    .line 27542
    invoke-virtual/range {v34 .. v34}, Landroid/content/pm/PersonaInfo;->getAdminUid()I

    move-result v4

    invoke-static {v4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    move/from16 v0, p1

    if-ne v4, v0, :cond_13

    .line 27543
    invoke-virtual/range {v34 .. v34}, Landroid/content/pm/PersonaInfo;->getAdminUid()I

    move-result v4

    move-object/from16 v0, v37

    iput v4, v0, Lcom/android/server/am/UserState;->mAdminUid:I

    .line 27547
    :goto_3
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move/from16 v0, p1

    move-object/from16 v1, v37

    invoke-virtual {v4, v0, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 27552
    .end local v34    # "personaInfo":Landroid/content/pm/PersonaInfo;
    .end local v37    # "userStartedState":Lcom/android/server/am/UserState;
    :cond_9
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateStartedUserArrayLocked()V

    .line 27553
    const/16 v32, 0x1

    .line 27556
    :cond_a
    invoke-static/range {p1 .. p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v35

    .line 27557
    .local v35, "userIdInt":Ljava/lang/Integer;
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    move-object/from16 v0, v35

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 27558
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    move-object/from16 v0, v35

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 27560
    if-eqz p2, :cond_14

    .line 27561
    move/from16 v0, p1

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    .line 27562
    const/16 v4, -0x2710

    move-object/from16 v0, p0

    iput v4, v0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    .line 27563
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCurrentProfileIdsLocked()V

    .line 27564
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    move/from16 v0, p1

    invoke-virtual {v4, v0, v5}, Lcom/android/server/wm/WindowManagerService;->setCurrentUser(I[I)V

    .line 27567
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const/4 v5, 0x0

    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowManagerService;->lockNow(Landroid/os/Bundle;)V

    .line 27571
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mMultiWindowPolicy:Lcom/android/server/am/MultiWindowPolicy;

    const-string/jumbo v5, "startUser"

    invoke-virtual {v4, v5}, Lcom/android/server/am/MultiWindowPolicy;->initMWSetting(Ljava/lang/String;)V

    .line 27582
    :goto_4
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move/from16 v0, p1

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v38

    check-cast v38, Lcom/android/server/am/UserState;

    .line 27586
    .local v38, "uss":Lcom/android/server/am/UserState;
    move-object/from16 v0, v38

    iget v4, v0, Lcom/android/server/am/UserState;->mState:I

    const/4 v5, 0x2

    if-ne v4, v5, :cond_15

    .line 27590
    const/4 v4, 0x1

    move-object/from16 v0, v38

    iput v4, v0, Lcom/android/server/am/UserState;->mState:I

    .line 27591
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateStartedUserArrayLocked()V

    .line 27592
    const/16 v32, 0x1

    .line 27601
    :cond_b
    :goto_5
    move-object/from16 v0, v38

    iget v4, v0, Lcom/android/server/am/UserState;->mState:I

    if-nez v4, :cond_c

    .line 27605
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0x2a

    const/4 v8, 0x0

    move/from16 v0, p1

    invoke-virtual {v5, v6, v0, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 27608
    :cond_c
    if-eqz p2, :cond_d

    .line 27609
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0x2b

    move/from16 v0, p1

    move/from16 v1, v33

    invoke-virtual {v5, v6, v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 27611
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x22

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 27612
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x24

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 27613
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0x22

    move/from16 v0, v33

    move/from16 v1, p1

    move-object/from16 v2, v38

    invoke-virtual {v5, v6, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 27615
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0x24

    move/from16 v0, v33

    move/from16 v1, p1

    move-object/from16 v2, v38

    invoke-virtual {v5, v6, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v5

    const-wide/16 v8, 0x7d0

    invoke-virtual {v4, v5, v8, v9}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 27619
    :cond_d
    if-eqz v32, :cond_e

    .line 27621
    new-instance v7, Landroid/content/Intent;

    const-string v4, "android.intent.action.USER_STARTED"

    invoke-direct {v7, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 27622
    .local v7, "intent":Landroid/content/Intent;
    const/high16 v4, 0x50000000

    invoke-virtual {v7, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 27624
    const-string v4, "android.intent.extra.user_handle"

    move/from16 v0, p1

    invoke-virtual {v7, v4, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 27625
    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, -0x1

    const/4 v15, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x0

    sget v18, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v19, 0x3e8

    move-object/from16 v4, p0

    move/from16 v20, p1

    invoke-direct/range {v4 .. v20}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 27630
    .end local v7    # "intent":Landroid/content/Intent;
    :cond_e
    move-object/from16 v0, v36

    iget v4, v0, Landroid/content/pm/UserInfo;->flags:I

    and-int/lit8 v4, v4, 0x10

    if-nez v4, :cond_f

    .line 27631
    if-eqz p1, :cond_16

    .line 27632
    new-instance v7, Landroid/content/Intent;

    const-string v4, "android.intent.action.USER_INITIALIZE"

    invoke-direct {v7, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 27633
    .restart local v7    # "intent":Landroid/content/Intent;
    const/high16 v4, 0x10000000

    invoke-virtual {v7, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 27634
    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    new-instance v8, Lcom/android/server/am/ActivityManagerService$31;

    move-object/from16 v9, p0

    move-object/from16 v10, v38

    move/from16 v11, p2

    move/from16 v12, v33

    move/from16 v13, p1

    invoke-direct/range {v8 .. v13}, Lcom/android/server/am/ActivityManagerService$31;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/UserState;ZII)V

    const/4 v15, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v18, 0x0

    const/16 v19, -0x1

    const/16 v20, 0x0

    const/16 v21, 0x1

    const/16 v22, 0x0

    sget v23, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v24, 0x3e8

    move-object/from16 v9, p0

    move-object v10, v4

    move-object v11, v5

    move-object v12, v7

    move-object v13, v6

    move-object v14, v8

    move/from16 v25, p1

    invoke-direct/range {v9 .. v25}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 27643
    const/4 v4, 0x1

    move-object/from16 v0, v38

    iput-boolean v4, v0, Lcom/android/server/am/UserState;->initializing:Z

    .line 27649
    .end local v7    # "intent":Landroid/content/Intent;
    :cond_f
    :goto_6
    if-eqz p2, :cond_17

    .line 27650
    move-object/from16 v0, v38

    iget-boolean v4, v0, Lcom/android/server/am/UserState;->initializing:Z

    if-nez v4, :cond_10

    .line 27651
    move-object/from16 v0, p0

    move-object/from16 v1, v38

    move/from16 v2, v33

    move/from16 v3, p1

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->moveUserToForeground(Lcom/android/server/am/UserState;II)V

    .line 27657
    :cond_10
    :goto_7
    if-eqz v32, :cond_11

    .line 27658
    new-instance v7, Landroid/content/Intent;

    const-string v4, "android.intent.action.USER_STARTING"

    invoke-direct {v7, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 27659
    .restart local v7    # "intent":Landroid/content/Intent;
    const/high16 v4, 0x40000000    # 2.0f

    invoke-virtual {v7, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 27660
    const-string v4, "android.intent.extra.user_handle"

    move/from16 v0, p1

    invoke-virtual {v7, v4, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 27661
    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v8, 0x0

    new-instance v9, Lcom/android/server/am/ActivityManagerService$32;

    move-object/from16 v0, p0

    invoke-direct {v9, v0}, Lcom/android/server/am/ActivityManagerService$32;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v4, 0x1

    new-array v13, v4, [Ljava/lang/String;

    const/4 v4, 0x0

    const-string v14, "android.permission.INTERACT_ACROSS_USERS"

    aput-object v14, v13, v4

    const/4 v14, -0x1

    const/4 v15, 0x0

    const/16 v16, 0x1

    const/16 v17, 0x0

    sget v18, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v19, 0x3e8

    const/16 v20, -0x1

    move-object/from16 v4, p0

    invoke-direct/range {v4 .. v20}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 27672
    .end local v7    # "intent":Landroid/content/Intent;
    :cond_11
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 27674
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 27677
    const/4 v4, 0x1

    goto/16 :goto_1

    .line 27529
    .end local v27    # "isPersona":Z
    .end local v35    # "userIdInt":Ljava/lang/Integer;
    .end local v38    # "uss":Lcom/android/server/am/UserState;
    :cond_12
    const/16 v27, 0x0

    goto/16 :goto_2

    .line 27545
    .restart local v27    # "isPersona":Z
    .restart local v34    # "personaInfo":Landroid/content/pm/PersonaInfo;
    .restart local v37    # "userStartedState":Lcom/android/server/am/UserState;
    :cond_13
    const/4 v4, 0x0

    :try_start_5
    move-object/from16 v0, v37

    iput v4, v0, Lcom/android/server/am/UserState;->mAdminUid:I

    goto/16 :goto_3

    .line 27672
    .end local v27    # "isPersona":Z
    .end local v32    # "needStart":Z
    .end local v33    # "oldUserId":I
    .end local v34    # "personaInfo":Landroid/content/pm/PersonaInfo;
    .end local v36    # "userInfo":Landroid/content/pm/UserInfo;
    .end local v37    # "userStartedState":Lcom/android/server/am/UserState;
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    throw v4
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 27674
    :catchall_1
    move-exception v4

    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4

    .line 27575
    .restart local v27    # "isPersona":Z
    .restart local v32    # "needStart":Z
    .restart local v33    # "oldUserId":I
    .restart local v35    # "userIdInt":Ljava/lang/Integer;
    .restart local v36    # "userInfo":Landroid/content/pm/UserInfo;
    :cond_14
    :try_start_7
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v26

    .line 27576
    .local v26, "currentUserIdInt":Ljava/lang/Integer;
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCurrentProfileIdsLocked()V

    .line 27577
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowManagerService;->setCurrentProfileIds([I)V

    .line 27578
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    move-object/from16 v0, v26

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 27579
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    move-object/from16 v0, v26

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto/16 :goto_4

    .line 27593
    .end local v26    # "currentUserIdInt":Ljava/lang/Integer;
    .restart local v38    # "uss":Lcom/android/server/am/UserState;
    :cond_15
    move-object/from16 v0, v38

    iget v4, v0, Lcom/android/server/am/UserState;->mState:I

    const/4 v5, 0x3

    if-ne v4, v5, :cond_b

    .line 27596
    const/4 v4, 0x0

    move-object/from16 v0, v38

    iput v4, v0, Lcom/android/server/am/UserState;->mState:I

    .line 27597
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateStartedUserArrayLocked()V

    .line 27598
    const/16 v32, 0x1

    goto/16 :goto_5

    .line 27645
    :cond_16
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v4

    move-object/from16 v0, v36

    iget v5, v0, Landroid/content/pm/UserInfo;->id:I

    invoke-virtual {v4, v5}, Lcom/android/server/pm/UserManagerService;->makeInitialized(I)V

    goto/16 :goto_6

    .line 27654
    :cond_17
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move/from16 v0, p1

    move-object/from16 v1, v38

    invoke-virtual {v4, v0, v1}, Lcom/android/server/am/ActivityStackSupervisor;->startBackgroundUserLocked(ILcom/android/server/am/UserState;)V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    goto/16 :goto_7
.end method

.method private stopGuestUserIfBackground()V
    .locals 7

    .prologue
    .line 27863
    monitor-enter p0

    .line 27864
    :try_start_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 27865
    .local v1, "num":I
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    if-ge v0, v1, :cond_2

    .line 27866
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Integer;

    .line 27867
    .local v2, "oldUserId":Ljava/lang/Integer;
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v6

    invoke-virtual {v5, v6}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/UserState;

    .line 27868
    .local v3, "oldUss":Lcom/android/server/am/UserState;
    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v5

    if-eqz v5, :cond_0

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v5

    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    if-eq v5, v6, :cond_0

    iget v5, v3, Lcom/android/server/am/UserState;->mState:I

    const/4 v6, 0x2

    if-eq v5, v6, :cond_0

    iget v5, v3, Lcom/android/server/am/UserState;->mState:I

    const/4 v6, 0x3

    if-ne v5, v6, :cond_1

    .line 27865
    :cond_0
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 27873
    :cond_1
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v6

    invoke-virtual {v5, v6}, Lcom/android/server/pm/UserManagerService;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v4

    .line 27874
    .local v4, "userInfo":Landroid/content/pm/UserInfo;
    if-eqz v4, :cond_0

    invoke-virtual {v4}, Landroid/content/pm/UserInfo;->isGuest()Z

    move-result v5

    if-eqz v5, :cond_0

    .line 27876
    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v5

    const/4 v6, 0x0

    invoke-direct {p0, v5, v6}, Lcom/android/server/am/ActivityManagerService;->stopUserLocked(ILandroid/app/IStopUserCallback;)I

    .line 27880
    .end local v2    # "oldUserId":Ljava/lang/Integer;
    .end local v3    # "oldUss":Lcom/android/server/am/UserState;
    .end local v4    # "userInfo":Landroid/content/pm/UserInfo;
    :cond_2
    monitor-exit p0

    .line 27881
    return-void

    .line 27880
    .end local v0    # "i":I
    .end local v1    # "num":I
    :catchall_0
    move-exception v5

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v5
.end method

.method private stopProfilerLocked(Lcom/android/server/am/ProcessRecord;I)V
    .locals 4
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "profileType"    # I

    .prologue
    .line 27080
    if-eqz p1, :cond_0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    if-ne p1, v1, :cond_1

    .line 27081
    :cond_0
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    .line 27082
    iget p2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    .line 27083
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->clearProfilerLocked()V

    .line 27085
    :cond_1
    if-nez p1, :cond_2

    .line 27093
    :goto_0
    return-void

    .line 27089
    :cond_2
    :try_start_0
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    const/4 v2, 0x0

    const/4 v3, 0x0

    invoke-interface {v1, v2, v3, p2}, Landroid/app/IApplicationThread;->profilerControl(ZLandroid/app/ProfilerInfo;I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 27090
    :catch_0
    move-exception v0

    .line 27091
    .local v0, "e":Landroid/os/RemoteException;
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Process disappeared"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method private stopUserLocked(ILandroid/app/IStopUserCallback;)I
    .locals 30
    .param p1, "userId"    # I
    .param p2, "callback"    # Landroid/app/IStopUserCallback;

    .prologue
    .line 28052
    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    move/from16 v0, p1

    if-ne v5, v0, :cond_0

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    const/16 v7, -0x2710

    if-ne v5, v7, :cond_0

    .line 28053
    const/4 v5, -0x2

    .line 28135
    :goto_0
    return v5

    .line 28056
    :cond_0
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move/from16 v0, p1

    invoke-virtual {v5, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/UserState;

    .line 28057
    .local v6, "uss":Lcom/android/server/am/UserState;
    if-nez v6, :cond_2

    .line 28060
    if-eqz p2, :cond_1

    .line 28061
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v7, Lcom/android/server/am/ActivityManagerService$34;

    move-object/from16 v0, p0

    move-object/from16 v1, p2

    move/from16 v2, p1

    invoke-direct {v7, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService$34;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/app/IStopUserCallback;I)V

    invoke-virtual {v5, v7}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 28071
    :cond_1
    const/4 v5, 0x0

    goto :goto_0

    .line 28074
    :cond_2
    if-eqz p2, :cond_3

    .line 28075
    iget-object v5, v6, Lcom/android/server/am/UserState;->mStopCallbacks:Ljava/util/ArrayList;

    move-object/from16 v0, p2

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 28078
    :cond_3
    iget v5, v6, Lcom/android/server/am/UserState;->mState:I

    const/4 v7, 0x2

    if-eq v5, v7, :cond_4

    iget v5, v6, Lcom/android/server/am/UserState;->mState:I

    const/4 v7, 0x3

    if-eq v5, v7, :cond_4

    .line 28080
    const/4 v5, 0x2

    iput v5, v6, Lcom/android/server/am/UserState;->mState:I

    .line 28081
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateStartedUserArrayLocked()V

    .line 28083
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v28

    .line 28088
    .local v28, "ident":J
    :try_start_0
    new-instance v13, Landroid/content/Intent;

    const-string v5, "android.intent.action.USER_STOPPING"

    invoke-direct {v13, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 28089
    .local v13, "stoppingIntent":Landroid/content/Intent;
    const/high16 v5, 0x40000000    # 2.0f

    invoke-virtual {v13, v5}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 28090
    const-string v5, "android.intent.extra.user_handle"

    move/from16 v0, p1

    invoke-virtual {v13, v5, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 28091
    const-string v5, "android.intent.extra.SHUTDOWN_USERSPACE_ONLY"

    const/4 v7, 0x1

    invoke-virtual {v13, v5, v7}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 28092
    new-instance v8, Landroid/content/Intent;

    const-string v5, "android.intent.action.ACTION_SHUTDOWN"

    invoke-direct {v8, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 28094
    .local v8, "shutdownIntent":Landroid/content/Intent;
    new-instance v9, Lcom/android/server/am/ActivityManagerService$35;

    move-object/from16 v0, p0

    invoke-direct {v9, v0, v6}, Lcom/android/server/am/ActivityManagerService$35;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/UserState;)V

    .line 28102
    .local v9, "shutdownReceiver":Landroid/content/IIntentReceiver;
    new-instance v4, Lcom/android/server/am/ActivityManagerService$36;

    move-object/from16 v5, p0

    move/from16 v7, p1

    invoke-direct/range {v4 .. v9}, Lcom/android/server/am/ActivityManagerService$36;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/UserState;ILandroid/content/Intent;Landroid/content/IIntentReceiver;)V

    .line 28126
    .local v4, "stoppingReceiver":Landroid/content/IIntentReceiver;
    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v14, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v18, 0x0

    const/4 v5, 0x1

    new-array v0, v5, [Ljava/lang/String;

    move-object/from16 v19, v0

    const/4 v5, 0x0

    const-string v7, "android.permission.INTERACT_ACROSS_USERS"

    aput-object v7, v19, v5

    const/16 v20, -0x1

    const/16 v21, 0x0

    const/16 v22, 0x1

    const/16 v23, 0x0

    sget v24, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v25, 0x3e8

    const/16 v26, -0x1

    move-object/from16 v10, p0

    move-object v15, v4

    invoke-direct/range {v10 .. v26}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 28131
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 28135
    .end local v4    # "stoppingReceiver":Landroid/content/IIntentReceiver;
    .end local v8    # "shutdownIntent":Landroid/content/Intent;
    .end local v9    # "shutdownReceiver":Landroid/content/IIntentReceiver;
    .end local v13    # "stoppingIntent":Landroid/content/Intent;
    .end local v28    # "ident":J
    :cond_4
    const/4 v5, 0x0

    goto/16 :goto_0

    .line 28131
    .restart local v28    # "ident":J
    :catchall_0
    move-exception v5

    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v5
.end method

.method private upDateWidgetList()V
    .locals 11

    .prologue
    .line 9970
    :try_start_0
    invoke-static {}, Landroid/app/ActivityManager;->getCurrentUser()I

    move-result v0

    .line 9971
    .local v0, "currentUserId":I
    new-instance v1, Ljava/io/File;

    invoke-static {v0}, Landroid/os/Environment;->getUserSystemDirectory(I)Ljava/io/File;

    move-result-object v7

    const-string v8, "appwidgets.xml"

    invoke-direct {v1, v7, v8}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    .line 9972
    .local v1, "file":Ljava/io/File;
    new-instance v4, Ljava/io/FileInputStream;

    invoke-direct {v4, v1}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V

    .line 9973
    .local v4, "stream":Ljava/io/InputStream;
    invoke-static {}, Landroid/util/Xml;->newPullParser()Lorg/xmlpull/v1/XmlPullParser;

    move-result-object v2

    .line 9974
    .local v2, "parser":Lorg/xmlpull/v1/XmlPullParser;
    const/4 v7, 0x0

    invoke-interface {v2, v4, v7}, Lorg/xmlpull/v1/XmlPullParser;->setInput(Ljava/io/InputStream;Ljava/lang/String;)V

    .line 9975
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mWidgetList:Ljava/lang/Object;

    monitor-enter v8
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_0 .. :try_end_0} :catch_2
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1

    .line 9976
    const/4 v6, 0x0

    .line 9978
    .local v6, "type":I
    :cond_0
    :try_start_1
    invoke-interface {v2}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    move-result v6

    .line 9979
    const/4 v7, 0x2

    if-ne v6, v7, :cond_1

    .line 9980
    invoke-interface {v2}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v5

    .line 9981
    .local v5, "tag":Ljava/lang/String;
    const-string/jumbo v7, "p"

    invoke-virtual {v7, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_1

    .line 9982
    const/4 v7, 0x0

    const-string/jumbo v9, "pkg"

    invoke-interface {v2, v7, v9}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    .line 9983
    .local v3, "pkg":Ljava/lang/String;
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mWidgetOnHomescreen:Ljava/util/HashSet;

    invoke-virtual {v7, v3}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_2

    .line 9984
    const-string v7, "ActivityManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v9, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " already exist in list."

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v7, v9}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9991
    .end local v3    # "pkg":Ljava/lang/String;
    .end local v5    # "tag":Ljava/lang/String;
    :cond_1
    :goto_0
    const/4 v7, 0x1

    if-ne v6, v7, :cond_0

    .line 9992
    monitor-exit v8

    .line 9997
    .end local v0    # "currentUserId":I
    .end local v1    # "file":Ljava/io/File;
    .end local v2    # "parser":Lorg/xmlpull/v1/XmlPullParser;
    .end local v4    # "stream":Ljava/io/InputStream;
    .end local v6    # "type":I
    :goto_1
    return-void

    .line 9986
    .restart local v0    # "currentUserId":I
    .restart local v1    # "file":Ljava/io/File;
    .restart local v2    # "parser":Lorg/xmlpull/v1/XmlPullParser;
    .restart local v3    # "pkg":Ljava/lang/String;
    .restart local v4    # "stream":Ljava/io/InputStream;
    .restart local v5    # "tag":Ljava/lang/String;
    .restart local v6    # "type":I
    :cond_2
    const-string v7, "ActivityManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Add "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " into list."

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v7, v9}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9987
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mWidgetOnHomescreen:Ljava/util/HashSet;

    invoke-virtual {v7, v3}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    goto :goto_0

    .line 9992
    .end local v3    # "pkg":Ljava/lang/String;
    .end local v5    # "tag":Ljava/lang/String;
    :catchall_0
    move-exception v7

    monitor-exit v8
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    throw v7
    :try_end_2
    .catch Ljava/io/FileNotFoundException; {:try_start_2 .. :try_end_2} :catch_0
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_2 .. :try_end_2} :catch_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1

    .line 9993
    .end local v0    # "currentUserId":I
    .end local v1    # "file":Ljava/io/File;
    .end local v2    # "parser":Lorg/xmlpull/v1/XmlPullParser;
    .end local v4    # "stream":Ljava/io/InputStream;
    .end local v6    # "type":I
    :catch_0
    move-exception v7

    goto :goto_1

    .line 9995
    :catch_1
    move-exception v7

    goto :goto_1

    .line 9994
    :catch_2
    move-exception v7

    goto :goto_1
.end method

.method private updateCurrentProfileIdsLocked()V
    .locals 11

    .prologue
    const/4 v9, 0x0

    .line 27374
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v7

    iget v8, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-virtual {v7, v8, v9}, Lcom/android/server/pm/UserManagerService;->getProfiles(IZ)Ljava/util/List;

    move-result-object v2

    .line 27378
    .local v2, "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-static {}, Landroid/os/PersonaManager;->getKnoxInfo()Landroid/os/Bundle;

    move-result-object v6

    .line 27379
    .local v6, "versionInfo":Landroid/os/Bundle;
    const-string v7, "2.0"

    const-string/jumbo v8, "version"

    invoke-virtual {v6, v8}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_2

    .line 27380
    invoke-direct {p0, v2}, Lcom/android/server/am/ActivityManagerService;->pruneDeletedContainerProfilesLocked(Ljava/util/List;)Ljava/util/List;

    move-result-object v3

    .line 27381
    .local v3, "prunedProfiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-interface {v3}, Ljava/util/List;->size()I

    move-result v7

    new-array v0, v7, [I

    .line 27382
    .local v0, "currentProfileIds":[I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    array-length v7, v0

    if-ge v1, v7, :cond_0

    .line 27383
    invoke-interface {v3, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/content/pm/UserInfo;

    iget v7, v7, Landroid/content/pm/UserInfo;->id:I

    aput v7, v0, v1

    .line 27382
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 27385
    :cond_0
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    .line 27396
    .end local v3    # "prunedProfiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    :goto_1
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    monitor-enter v8

    .line 27397
    :try_start_0
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    invoke-virtual {v7}, Landroid/util/SparseIntArray;->clear()V

    .line 27398
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v7

    const/4 v9, 0x0

    invoke-virtual {v7, v9}, Lcom/android/server/pm/UserManagerService;->getUsers(Z)Ljava/util/List;

    move-result-object v5

    .line 27399
    .local v5, "users":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    const/4 v1, 0x0

    :goto_2
    invoke-interface {v5}, Ljava/util/List;->size()I

    move-result v7

    if-ge v1, v7, :cond_4

    .line 27400
    invoke-interface {v5, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/content/pm/UserInfo;

    .line 27401
    .local v4, "user":Landroid/content/pm/UserInfo;
    iget v7, v4, Landroid/content/pm/UserInfo;->profileGroupId:I

    const/4 v9, -0x1

    if-eq v7, v9, :cond_1

    .line 27402
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    iget v9, v4, Landroid/content/pm/UserInfo;->id:I

    iget v10, v4, Landroid/content/pm/UserInfo;->profileGroupId:I

    invoke-virtual {v7, v9, v10}, Landroid/util/SparseIntArray;->put(II)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 27399
    :cond_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    .line 27389
    .end local v0    # "currentProfileIds":[I
    .end local v1    # "i":I
    .end local v4    # "user":Landroid/content/pm/UserInfo;
    .end local v5    # "users":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    :cond_2
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v7

    new-array v0, v7, [I

    .line 27390
    .restart local v0    # "currentProfileIds":[I
    const/4 v1, 0x0

    .restart local v1    # "i":I
    :goto_3
    array-length v7, v0

    if-ge v1, v7, :cond_3

    .line 27391
    invoke-interface {v2, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/content/pm/UserInfo;

    iget v7, v7, Landroid/content/pm/UserInfo;->id:I

    aput v7, v0, v1

    .line 27390
    add-int/lit8 v1, v1, 0x1

    goto :goto_3

    .line 27393
    :cond_3
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    goto :goto_1

    .line 27405
    .restart local v5    # "users":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    :cond_4
    :try_start_1
    monitor-exit v8

    .line 27406
    return-void

    .line 27405
    .end local v5    # "users":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    :catchall_0
    move-exception v7

    monitor-exit v8
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v7
.end method

.method private updateEventDispatchingLocked()V
    .locals 2

    .prologue
    .line 15510
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-eqz v0, :cond_0

    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    if-nez v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowManagerService;->setEventDispatching(Z)V

    .line 15511
    return-void

    .line 15510
    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method private updateLruProcessInternalLocked(Lcom/android/server/am/ProcessRecord;JILjava/lang/String;Ljava/lang/Object;Lcom/android/server/am/ProcessRecord;)I
    .locals 6
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "now"    # J
    .param p4, "index"    # I
    .param p5, "what"    # Ljava/lang/String;
    .param p6, "obj"    # Ljava/lang/Object;
    .param p7, "srcApp"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 4574
    iput-wide p2, p1, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J

    .line 4576
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-lez v2, :cond_0

    move v0, p4

    .line 4607
    .end local p4    # "index":I
    .local v0, "index":I
    :goto_0
    return v0

    .line 4580
    .end local v0    # "index":I
    .restart local p4    # "index":I
    :cond_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    monitor-enter v3

    .line 4581
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, p1}, Ljava/util/ArrayList;->lastIndexOf(Ljava/lang/Object;)I

    move-result v1

    .line 4582
    .local v1, "lrui":I
    if-gez v1, :cond_1

    .line 4583
    const-string v2, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Adding dependent process "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " not on LRU list: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " from "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 4585
    monitor-exit v3

    move v0, p4

    .end local p4    # "index":I
    .restart local v0    # "index":I
    goto :goto_0

    .line 4588
    .end local v0    # "index":I
    .restart local p4    # "index":I
    :cond_1
    if-lt v1, p4, :cond_2

    .line 4591
    monitor-exit v3

    move v0, p4

    .end local p4    # "index":I
    .restart local v0    # "index":I
    goto :goto_0

    .line 4594
    .end local v0    # "index":I
    .restart local p4    # "index":I
    :cond_2
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    if-lt v1, v2, :cond_3

    .line 4596
    monitor-exit v3

    move v0, p4

    .end local p4    # "index":I
    .restart local v0    # "index":I
    goto :goto_0

    .line 4599
    .end local v0    # "index":I
    .restart local p4    # "index":I
    :cond_3
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 4600
    if-lez p4, :cond_4

    .line 4601
    add-int/lit8 p4, p4, -0x1

    .line 4605
    :cond_4
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, p4, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 4606
    monitor-exit v3

    move v0, p4

    .line 4607
    .end local p4    # "index":I
    .restart local v0    # "index":I
    goto :goto_0

    .line 4606
    .end local v0    # "index":I
    .end local v1    # "lrui":I
    .restart local p4    # "index":I
    :catchall_0
    move-exception v2

    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method private final updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)Z
    .locals 9
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "cachedAdj"    # I
    .param p3, "TOP_APP"    # Lcom/android/server/am/ProcessRecord;
    .param p4, "doingAll"    # Z
    .param p5, "now"    # J

    .prologue
    .line 26133
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v0, :cond_0

    .line 26134
    const/4 v0, 0x0

    .line 26139
    :goto_0
    return v0

    .line 26137
    :cond_0
    invoke-direct/range {p0 .. p6}, Lcom/android/server/am/ActivityManagerService;->computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)I

    .line 26139
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v6

    move-object v1, p0

    move-object v2, p1

    move v3, p4

    move-wide v4, p5

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->applyOomAdjLocked(Lcom/android/server/am/ProcessRecord;ZJJ)Z

    move-result v0

    goto :goto_0
.end method

.method private updateStartedUserArrayLocked()V
    .locals 7

    .prologue
    const/4 v6, 0x3

    const/4 v5, 0x2

    .line 28283
    const/4 v1, 0x0

    .line 28284
    .local v1, "num":I
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    if-ge v0, v3, :cond_1

    .line 28285
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/UserState;

    .line 28287
    .local v2, "uss":Lcom/android/server/am/UserState;
    iget v3, v2, Lcom/android/server/am/UserState;->mState:I

    if-eq v3, v5, :cond_0

    iget v3, v2, Lcom/android/server/am/UserState;->mState:I

    if-eq v3, v6, :cond_0

    .line 28289
    add-int/lit8 v1, v1, 0x1

    .line 28284
    :cond_0
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 28292
    .end local v2    # "uss":Lcom/android/server/am/UserState;
    :cond_1
    new-array v3, v1, [I

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    .line 28293
    const/4 v1, 0x0

    .line 28294
    const/4 v0, 0x0

    :goto_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    if-ge v0, v3, :cond_3

    .line 28295
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/UserState;

    .line 28296
    .restart local v2    # "uss":Lcom/android/server/am/UserState;
    iget v3, v2, Lcom/android/server/am/UserState;->mState:I

    if-eq v3, v5, :cond_2

    iget v3, v2, Lcom/android/server/am/UserState;->mState:I

    if-eq v3, v6, :cond_2

    .line 28298
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v4

    aput v4, v3, v1

    .line 28299
    add-int/lit8 v1, v1, 0x1

    .line 28294
    :cond_2
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 28302
    .end local v2    # "uss":Lcom/android/server/am/UserState;
    :cond_3
    return-void
.end method

.method private writeGrantedUriPermissions()V
    .locals 12

    .prologue
    .line 12133
    invoke-static {}, Lcom/google/android/collect/Lists;->newArrayList()Ljava/util/ArrayList;

    move-result-object v7

    .line 12134
    .local v7, "persist":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/UriPermission$Snapshot;>;"
    monitor-enter p0

    .line 12135
    :try_start_0
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v9}, Landroid/util/SparseArray;->size()I

    move-result v8

    .line 12136
    .local v8, "size":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v8, :cond_2

    .line 12137
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v9, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/util/ArrayMap;

    .line 12138
    .local v6, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    invoke-virtual {v6}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v9

    invoke-interface {v9}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v3

    .local v3, "i$":Ljava/util/Iterator;
    :cond_0
    :goto_1
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v9

    if-eqz v9, :cond_1

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/UriPermission;

    .line 12139
    .local v5, "perm":Lcom/android/server/am/UriPermission;
    iget v9, v5, Lcom/android/server/am/UriPermission;->persistedModeFlags:I

    if-eqz v9, :cond_0

    .line 12140
    invoke-virtual {v5}, Lcom/android/server/am/UriPermission;->snapshot()Lcom/android/server/am/UriPermission$Snapshot;

    move-result-object v9

    invoke-virtual {v7, v9}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_1

    .line 12144
    .end local v2    # "i":I
    .end local v3    # "i$":Ljava/util/Iterator;
    .end local v5    # "perm":Lcom/android/server/am/UriPermission;
    .end local v6    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    .end local v8    # "size":I
    :catchall_0
    move-exception v9

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v9

    .line 12136
    .restart local v2    # "i":I
    .restart local v3    # "i$":Ljava/util/Iterator;
    .restart local v6    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    .restart local v8    # "size":I
    :cond_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 12144
    .end local v3    # "i$":Ljava/util/Iterator;
    .end local v6    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    :cond_2
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 12146
    const/4 v1, 0x0

    .line 12148
    .local v1, "fos":Ljava/io/FileOutputStream;
    :try_start_2
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mGrantFile:Landroid/util/AtomicFile;

    invoke-virtual {v9}, Landroid/util/AtomicFile;->startWrite()Ljava/io/FileOutputStream;

    move-result-object v1

    .line 12150
    new-instance v4, Lcom/android/internal/util/FastXmlSerializer;

    invoke-direct {v4}, Lcom/android/internal/util/FastXmlSerializer;-><init>()V

    .line 12151
    .local v4, "out":Lorg/xmlpull/v1/XmlSerializer;
    sget-object v9, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    invoke-virtual {v9}, Ljava/nio/charset/Charset;->name()Ljava/lang/String;

    move-result-object v9

    invoke-interface {v4, v1, v9}, Lorg/xmlpull/v1/XmlSerializer;->setOutput(Ljava/io/OutputStream;Ljava/lang/String;)V

    .line 12152
    const/4 v9, 0x0

    const/4 v10, 0x1

    invoke-static {v10}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v10

    invoke-interface {v4, v9, v10}, Lorg/xmlpull/v1/XmlSerializer;->startDocument(Ljava/lang/String;Ljava/lang/Boolean;)V

    .line 12153
    const/4 v9, 0x0

    const-string/jumbo v10, "uri-grants"

    invoke-interface {v4, v9, v10}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 12154
    invoke-virtual {v7}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v3

    .restart local v3    # "i$":Ljava/util/Iterator;
    :goto_2
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v9

    if-eqz v9, :cond_4

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/UriPermission$Snapshot;

    .line 12155
    .local v5, "perm":Lcom/android/server/am/UriPermission$Snapshot;
    const/4 v9, 0x0

    const-string/jumbo v10, "uri-grant"

    invoke-interface {v4, v9, v10}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 12156
    const-string/jumbo v9, "sourceUserId"

    iget-object v10, v5, Lcom/android/server/am/UriPermission$Snapshot;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget v10, v10, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    invoke-static {v4, v9, v10}, Lcom/android/internal/util/XmlUtils;->writeIntAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;I)V

    .line 12157
    const-string/jumbo v9, "targetUserId"

    iget v10, v5, Lcom/android/server/am/UriPermission$Snapshot;->targetUserId:I

    invoke-static {v4, v9, v10}, Lcom/android/internal/util/XmlUtils;->writeIntAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;I)V

    .line 12158
    const/4 v9, 0x0

    const-string/jumbo v10, "sourcePkg"

    iget-object v11, v5, Lcom/android/server/am/UriPermission$Snapshot;->sourcePkg:Ljava/lang/String;

    invoke-interface {v4, v9, v10, v11}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 12159
    const/4 v9, 0x0

    const-string/jumbo v10, "targetPkg"

    iget-object v11, v5, Lcom/android/server/am/UriPermission$Snapshot;->targetPkg:Ljava/lang/String;

    invoke-interface {v4, v9, v10, v11}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 12160
    const/4 v9, 0x0

    const-string/jumbo v10, "uri"

    iget-object v11, v5, Lcom/android/server/am/UriPermission$Snapshot;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-object v11, v11, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-static {v11}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v11

    invoke-interface {v4, v9, v10, v11}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 12161
    const-string/jumbo v9, "prefix"

    iget-object v10, v5, Lcom/android/server/am/UriPermission$Snapshot;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-boolean v10, v10, Lcom/android/server/am/ActivityManagerService$GrantUri;->prefix:Z

    invoke-static {v4, v9, v10}, Lcom/android/internal/util/XmlUtils;->writeBooleanAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Z)V

    .line 12162
    const-string/jumbo v9, "modeFlags"

    iget v10, v5, Lcom/android/server/am/UriPermission$Snapshot;->persistedModeFlags:I

    invoke-static {v4, v9, v10}, Lcom/android/internal/util/XmlUtils;->writeIntAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;I)V

    .line 12163
    const-string/jumbo v9, "createdTime"

    iget-wide v10, v5, Lcom/android/server/am/UriPermission$Snapshot;->persistedCreateTime:J

    invoke-static {v4, v9, v10, v11}, Lcom/android/internal/util/XmlUtils;->writeLongAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;J)V

    .line 12164
    const/4 v9, 0x0

    const-string/jumbo v10, "uri-grant"

    invoke-interface {v4, v9, v10}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    goto :goto_2

    .line 12170
    .end local v3    # "i$":Ljava/util/Iterator;
    .end local v4    # "out":Lorg/xmlpull/v1/XmlSerializer;
    .end local v5    # "perm":Lcom/android/server/am/UriPermission$Snapshot;
    :catch_0
    move-exception v0

    .line 12171
    .local v0, "e":Ljava/io/IOException;
    if-eqz v1, :cond_3

    .line 12172
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mGrantFile:Landroid/util/AtomicFile;

    invoke-virtual {v9, v1}, Landroid/util/AtomicFile;->failWrite(Ljava/io/FileOutputStream;)V

    .line 12175
    .end local v0    # "e":Ljava/io/IOException;
    :cond_3
    :goto_3
    return-void

    .line 12166
    .restart local v3    # "i$":Ljava/util/Iterator;
    .restart local v4    # "out":Lorg/xmlpull/v1/XmlSerializer;
    :cond_4
    const/4 v9, 0x0

    :try_start_3
    const-string/jumbo v10, "uri-grants"

    invoke-interface {v4, v9, v10}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 12167
    invoke-interface {v4}, Lorg/xmlpull/v1/XmlSerializer;->endDocument()V

    .line 12169
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mGrantFile:Landroid/util/AtomicFile;

    invoke-virtual {v9, v1}, Landroid/util/AtomicFile;->finishWrite(Ljava/io/FileOutputStream;)V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0

    goto :goto_3
.end method

.method private static writeLastDonePreBootReceivers(Ljava/util/ArrayList;)V
    .locals 9
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList",
            "<",
            "Landroid/content/ComponentName;",
            ">;)V"
        }
    .end annotation

    .prologue
    .line 16786
    .local p0, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->getCalledPreBootReceiversFile()Ljava/io/File;

    move-result-object v3

    .line 16787
    .local v3, "file":Ljava/io/File;
    const/4 v4, 0x0

    .line 16788
    .local v4, "fos":Ljava/io/FileOutputStream;
    const/4 v0, 0x0

    .line 16790
    .local v0, "dos":Ljava/io/DataOutputStream;
    :try_start_0
    new-instance v5, Ljava/io/FileOutputStream;

    invoke-direct {v5, v3}, Ljava/io/FileOutputStream;-><init>(Ljava/io/File;)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 16791
    .end local v4    # "fos":Ljava/io/FileOutputStream;
    .local v5, "fos":Ljava/io/FileOutputStream;
    :try_start_1
    new-instance v1, Ljava/io/DataOutputStream;

    new-instance v7, Ljava/io/BufferedOutputStream;

    const/16 v8, 0x800

    invoke-direct {v7, v5, v8}, Ljava/io/BufferedOutputStream;-><init>(Ljava/io/OutputStream;I)V

    invoke-direct {v1, v7}, Ljava/io/DataOutputStream;-><init>(Ljava/io/OutputStream;)V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_4
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 16792
    .end local v0    # "dos":Ljava/io/DataOutputStream;
    .local v1, "dos":Ljava/io/DataOutputStream;
    const/16 v7, 0x2710

    :try_start_2
    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeInt(I)V

    .line 16793
    sget-object v7, Landroid/os/Build$VERSION;->RELEASE:Ljava/lang/String;

    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V

    .line 16794
    sget-object v7, Landroid/os/Build$VERSION;->CODENAME:Ljava/lang/String;

    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V

    .line 16795
    sget-object v7, Landroid/os/Build$VERSION;->INCREMENTAL:Ljava/lang/String;

    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V

    .line 16796
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->getCSCVersion()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V

    .line 16797
    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v7

    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeInt(I)V

    .line 16798
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_0
    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v7

    if-ge v6, v7, :cond_0

    .line 16799
    invoke-virtual {p0, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/content/ComponentName;

    invoke-virtual {v7}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V

    .line 16800
    invoke-virtual {p0, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/content/ComponentName;

    invoke-virtual {v7}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_5
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 16798
    add-int/lit8 v6, v6, 0x1

    goto :goto_0

    .line 16806
    :cond_0
    invoke-static {v5}, Landroid/os/FileUtils;->sync(Ljava/io/FileOutputStream;)Z

    .line 16807
    if-eqz v1, :cond_3

    .line 16809
    :try_start_3
    invoke-virtual {v1}, Ljava/io/DataOutputStream;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0

    move-object v0, v1

    .end local v1    # "dos":Ljava/io/DataOutputStream;
    .restart local v0    # "dos":Ljava/io/DataOutputStream;
    move-object v4, v5

    .line 16816
    .end local v5    # "fos":Ljava/io/FileOutputStream;
    .end local v6    # "i":I
    .restart local v4    # "fos":Ljava/io/FileOutputStream;
    :cond_1
    :goto_1
    return-void

    .line 16810
    .end local v0    # "dos":Ljava/io/DataOutputStream;
    .end local v4    # "fos":Ljava/io/FileOutputStream;
    .restart local v1    # "dos":Ljava/io/DataOutputStream;
    .restart local v5    # "fos":Ljava/io/FileOutputStream;
    .restart local v6    # "i":I
    :catch_0
    move-exception v2

    .line 16812
    .local v2, "e":Ljava/io/IOException;
    invoke-virtual {v2}, Ljava/io/IOException;->printStackTrace()V

    move-object v0, v1

    .end local v1    # "dos":Ljava/io/DataOutputStream;
    .restart local v0    # "dos":Ljava/io/DataOutputStream;
    move-object v4, v5

    .line 16813
    .end local v5    # "fos":Ljava/io/FileOutputStream;
    .restart local v4    # "fos":Ljava/io/FileOutputStream;
    goto :goto_1

    .line 16802
    .end local v2    # "e":Ljava/io/IOException;
    .end local v6    # "i":I
    :catch_1
    move-exception v2

    .line 16803
    .restart local v2    # "e":Ljava/io/IOException;
    :goto_2
    :try_start_4
    const-string v7, "ActivityManager"

    const-string v8, "Failure writing last done pre-boot receivers"

    invoke-static {v7, v8, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 16804
    invoke-virtual {v3}, Ljava/io/File;->delete()Z
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 16806
    invoke-static {v4}, Landroid/os/FileUtils;->sync(Ljava/io/FileOutputStream;)Z

    .line 16807
    if-eqz v0, :cond_1

    .line 16809
    :try_start_5
    invoke-virtual {v0}, Ljava/io/DataOutputStream;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_2

    goto :goto_1

    .line 16810
    :catch_2
    move-exception v2

    .line 16812
    invoke-virtual {v2}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_1

    .line 16806
    .end local v2    # "e":Ljava/io/IOException;
    :catchall_0
    move-exception v7

    :goto_3
    invoke-static {v4}, Landroid/os/FileUtils;->sync(Ljava/io/FileOutputStream;)Z

    .line 16807
    if-eqz v0, :cond_2

    .line 16809
    :try_start_6
    invoke-virtual {v0}, Ljava/io/DataOutputStream;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_3

    .line 16813
    :cond_2
    :goto_4
    throw v7

    .line 16810
    :catch_3
    move-exception v2

    .line 16812
    .restart local v2    # "e":Ljava/io/IOException;
    invoke-virtual {v2}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_4

    .line 16806
    .end local v2    # "e":Ljava/io/IOException;
    .end local v4    # "fos":Ljava/io/FileOutputStream;
    .restart local v5    # "fos":Ljava/io/FileOutputStream;
    :catchall_1
    move-exception v7

    move-object v4, v5

    .end local v5    # "fos":Ljava/io/FileOutputStream;
    .restart local v4    # "fos":Ljava/io/FileOutputStream;
    goto :goto_3

    .end local v0    # "dos":Ljava/io/DataOutputStream;
    .end local v4    # "fos":Ljava/io/FileOutputStream;
    .restart local v1    # "dos":Ljava/io/DataOutputStream;
    .restart local v5    # "fos":Ljava/io/FileOutputStream;
    :catchall_2
    move-exception v7

    move-object v0, v1

    .end local v1    # "dos":Ljava/io/DataOutputStream;
    .restart local v0    # "dos":Ljava/io/DataOutputStream;
    move-object v4, v5

    .end local v5    # "fos":Ljava/io/FileOutputStream;
    .restart local v4    # "fos":Ljava/io/FileOutputStream;
    goto :goto_3

    .line 16802
    .end local v4    # "fos":Ljava/io/FileOutputStream;
    .restart local v5    # "fos":Ljava/io/FileOutputStream;
    :catch_4
    move-exception v2

    move-object v4, v5

    .end local v5    # "fos":Ljava/io/FileOutputStream;
    .restart local v4    # "fos":Ljava/io/FileOutputStream;
    goto :goto_2

    .end local v0    # "dos":Ljava/io/DataOutputStream;
    .end local v4    # "fos":Ljava/io/FileOutputStream;
    .restart local v1    # "dos":Ljava/io/DataOutputStream;
    .restart local v5    # "fos":Ljava/io/FileOutputStream;
    :catch_5
    move-exception v2

    move-object v0, v1

    .end local v1    # "dos":Ljava/io/DataOutputStream;
    .restart local v0    # "dos":Ljava/io/DataOutputStream;
    move-object v4, v5

    .end local v5    # "fos":Ljava/io/FileOutputStream;
    .restart local v4    # "fos":Ljava/io/FileOutputStream;
    goto :goto_2

    .end local v0    # "dos":Ljava/io/DataOutputStream;
    .end local v4    # "fos":Ljava/io/FileOutputStream;
    .restart local v1    # "dos":Ljava/io/DataOutputStream;
    .restart local v5    # "fos":Ljava/io/FileOutputStream;
    .restart local v6    # "i":I
    :cond_3
    move-object v0, v1

    .end local v1    # "dos":Ljava/io/DataOutputStream;
    .restart local v0    # "dos":Ljava/io/DataOutputStream;
    move-object v4, v5

    .end local v5    # "fos":Ljava/io/FileOutputStream;
    .restart local v4    # "fos":Ljava/io/FileOutputStream;
    goto :goto_1
.end method

.method private static zipTraceFile(Ljava/io/File;Ljava/lang/String;)Z
    .locals 20
    .param p0, "sourceFile"    # Ljava/io/File;
    .param p1, "destDirPath"    # Ljava/lang/String;

    .prologue
    .line 7581
    const/4 v12, 0x1

    .line 7582
    .local v12, "ret":Z
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v14

    .line 7584
    .local v14, "startTime":J
    if-eqz p0, :cond_0

    invoke-virtual/range {p0 .. p0}, Ljava/io/File;->isDirectory()Z

    move-result v17

    if-eqz v17, :cond_1

    .line 7585
    :cond_0
    const/4 v12, 0x0

    .line 7642
    .end local v12    # "ret":Z
    :goto_0
    return v12

    .line 7588
    .restart local v12    # "ret":Z
    :cond_1
    if-eqz p1, :cond_2

    invoke-virtual/range {p1 .. p1}, Ljava/lang/String;->length()I

    move-result v17

    const/16 v18, 0x5

    move/from16 v0, v17

    move/from16 v1, v18

    if-ge v0, v1, :cond_3

    .line 7589
    :cond_2
    const/4 v12, 0x0

    goto :goto_0

    .line 7592
    :cond_3
    new-instance v3, Ljava/io/File;

    move-object/from16 v0, p1

    invoke-direct {v3, v0}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 7593
    .local v3, "destDir":Ljava/io/File;
    invoke-virtual {v3}, Ljava/io/File;->exists()Z

    move-result v17

    if-nez v17, :cond_4

    .line 7594
    invoke-virtual {v3}, Ljava/io/File;->mkdirs()Z

    .line 7596
    :cond_4
    const/4 v10, 0x0

    .line 7597
    .local v10, "out":Ljava/util/zip/ZipOutputStream;
    const/4 v7, 0x0

    .line 7598
    .local v7, "in":Ljava/io/FileInputStream;
    const/16 v17, 0x1000

    move/from16 v0, v17

    new-array v2, v0, [B

    .line 7601
    .local v2, "buf":[B
    :try_start_0
    invoke-virtual/range {p0 .. p0}, Ljava/io/File;->getName()Ljava/lang/String;

    move-result-object v13

    .line 7602
    .local v13, "sourceName":Ljava/lang/String;
    new-instance v11, Ljava/util/zip/ZipOutputStream;

    new-instance v17, Ljava/io/FileOutputStream;

    new-instance v18, Ljava/lang/StringBuilder;

    invoke-direct/range {v18 .. v18}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v18

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    move-object/from16 v0, v18

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    const-string v19, ".zip"

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    invoke-virtual/range {v18 .. v18}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v18

    invoke-direct/range {v17 .. v18}, Ljava/io/FileOutputStream;-><init>(Ljava/lang/String;)V

    move-object/from16 v0, v17

    invoke-direct {v11, v0}, Ljava/util/zip/ZipOutputStream;-><init>(Ljava/io/OutputStream;)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_7
    .catchall {:try_start_0 .. :try_end_0} :catchall_4

    .line 7603
    .end local v10    # "out":Ljava/util/zip/ZipOutputStream;
    .local v11, "out":Ljava/util/zip/ZipOutputStream;
    :try_start_1
    new-instance v8, Ljava/io/FileInputStream;

    move-object/from16 v0, p0

    invoke-direct {v8, v0}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_8
    .catchall {:try_start_1 .. :try_end_1} :catchall_7

    .line 7605
    .end local v7    # "in":Ljava/io/FileInputStream;
    .local v8, "in":Ljava/io/FileInputStream;
    :try_start_2
    new-instance v16, Ljava/util/zip/ZipEntry;

    move-object/from16 v0, v16

    invoke-direct {v0, v13}, Ljava/util/zip/ZipEntry;-><init>(Ljava/lang/String;)V

    .line 7606
    .local v16, "ze":Ljava/util/zip/ZipEntry;
    move-object/from16 v0, v16

    invoke-virtual {v11, v0}, Ljava/util/zip/ZipOutputStream;->putNextEntry(Ljava/util/zip/ZipEntry;)V

    .line 7608
    const/4 v9, 0x0

    .line 7609
    .local v9, "len":I
    :goto_1
    invoke-virtual {v8, v2}, Ljava/io/FileInputStream;->read([B)I

    move-result v9

    if-lez v9, :cond_7

    .line 7610
    const/16 v17, 0x0

    move/from16 v0, v17

    invoke-virtual {v11, v2, v0, v9}, Ljava/util/zip/ZipOutputStream;->write([BII)V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_8

    goto :goto_1

    .line 7613
    .end local v9    # "len":I
    .end local v16    # "ze":Ljava/util/zip/ZipEntry;
    :catch_0
    move-exception v6

    move-object v7, v8

    .end local v8    # "in":Ljava/io/FileInputStream;
    .restart local v7    # "in":Ljava/io/FileInputStream;
    move-object v10, v11

    .line 7614
    .end local v11    # "out":Ljava/util/zip/ZipOutputStream;
    .end local v13    # "sourceName":Ljava/lang/String;
    .local v6, "e":Ljava/io/IOException;
    .restart local v10    # "out":Ljava/util/zip/ZipOutputStream;
    :goto_2
    :try_start_3
    invoke-virtual {v6}, Ljava/io/IOException;->printStackTrace()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_4

    .line 7616
    if-eqz v10, :cond_5

    .line 7618
    :try_start_4
    invoke-virtual {v10}, Ljava/util/zip/ZipOutputStream;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_3
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 7623
    const/4 v10, 0x0

    .line 7627
    :cond_5
    if-eqz v7, :cond_6

    .line 7629
    :try_start_5
    invoke-virtual {v7}, Ljava/io/FileInputStream;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_4
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    .line 7634
    const/4 v7, 0x0

    .line 7638
    .end local v6    # "e":Ljava/io/IOException;
    :cond_6
    :goto_3
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v18

    sub-long v4, v18, v14

    .line 7642
    .local v4, "dur":J
    goto/16 :goto_0

    .line 7612
    .end local v4    # "dur":J
    .end local v7    # "in":Ljava/io/FileInputStream;
    .end local v10    # "out":Ljava/util/zip/ZipOutputStream;
    .restart local v8    # "in":Ljava/io/FileInputStream;
    .restart local v9    # "len":I
    .restart local v11    # "out":Ljava/util/zip/ZipOutputStream;
    .restart local v13    # "sourceName":Ljava/lang/String;
    .restart local v16    # "ze":Ljava/util/zip/ZipEntry;
    :cond_7
    :try_start_6
    invoke-virtual {v11}, Ljava/util/zip/ZipOutputStream;->closeEntry()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_0
    .catchall {:try_start_6 .. :try_end_6} :catchall_8

    .line 7616
    if-eqz v11, :cond_b

    .line 7618
    :try_start_7
    invoke-virtual {v11}, Ljava/util/zip/ZipOutputStream;->close()V
    :try_end_7
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_1
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    .line 7623
    const/4 v10, 0x0

    .line 7627
    .end local v11    # "out":Ljava/util/zip/ZipOutputStream;
    .restart local v10    # "out":Ljava/util/zip/ZipOutputStream;
    :goto_4
    if-eqz v8, :cond_a

    .line 7629
    :try_start_8
    invoke-virtual {v8}, Ljava/io/FileInputStream;->close()V
    :try_end_8
    .catch Ljava/io/IOException; {:try_start_8 .. :try_end_8} :catch_2
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .line 7634
    const/4 v7, 0x0

    .line 7635
    .end local v8    # "in":Ljava/io/FileInputStream;
    .restart local v7    # "in":Ljava/io/FileInputStream;
    goto :goto_3

    .line 7619
    .end local v7    # "in":Ljava/io/FileInputStream;
    .end local v10    # "out":Ljava/util/zip/ZipOutputStream;
    .restart local v8    # "in":Ljava/io/FileInputStream;
    .restart local v11    # "out":Ljava/util/zip/ZipOutputStream;
    :catch_1
    move-exception v6

    .line 7620
    .restart local v6    # "e":Ljava/io/IOException;
    :try_start_9
    invoke-virtual {v6}, Ljava/io/IOException;->printStackTrace()V
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    .line 7621
    const/4 v12, 0x0

    .line 7623
    .end local v12    # "ret":Z
    const/4 v10, 0x0

    .end local v11    # "out":Ljava/util/zip/ZipOutputStream;
    .restart local v10    # "out":Ljava/util/zip/ZipOutputStream;
    goto/16 :goto_0

    .end local v6    # "e":Ljava/io/IOException;
    .end local v10    # "out":Ljava/util/zip/ZipOutputStream;
    .restart local v11    # "out":Ljava/util/zip/ZipOutputStream;
    .restart local v12    # "ret":Z
    :catchall_0
    move-exception v17

    const/4 v10, 0x0

    .end local v11    # "out":Ljava/util/zip/ZipOutputStream;
    .restart local v10    # "out":Ljava/util/zip/ZipOutputStream;
    throw v17

    .line 7630
    :catch_2
    move-exception v6

    .line 7631
    .restart local v6    # "e":Ljava/io/IOException;
    :try_start_a
    invoke-virtual {v6}, Ljava/io/IOException;->printStackTrace()V
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_1

    .line 7632
    const/4 v12, 0x0

    .line 7634
    .end local v12    # "ret":Z
    const/4 v7, 0x0

    .end local v8    # "in":Ljava/io/FileInputStream;
    .restart local v7    # "in":Ljava/io/FileInputStream;
    goto/16 :goto_0

    .end local v6    # "e":Ljava/io/IOException;
    .end local v7    # "in":Ljava/io/FileInputStream;
    .restart local v8    # "in":Ljava/io/FileInputStream;
    .restart local v12    # "ret":Z
    :catchall_1
    move-exception v17

    const/4 v7, 0x0

    .end local v8    # "in":Ljava/io/FileInputStream;
    .restart local v7    # "in":Ljava/io/FileInputStream;
    throw v17

    .line 7619
    .end local v9    # "len":I
    .end local v13    # "sourceName":Ljava/lang/String;
    .end local v16    # "ze":Ljava/util/zip/ZipEntry;
    .restart local v6    # "e":Ljava/io/IOException;
    :catch_3
    move-exception v6

    .line 7620
    :try_start_b
    invoke-virtual {v6}, Ljava/io/IOException;->printStackTrace()V
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_2

    .line 7621
    const/4 v12, 0x0

    .line 7623
    .end local v12    # "ret":Z
    const/4 v10, 0x0

    goto/16 :goto_0

    .restart local v12    # "ret":Z
    :catchall_2
    move-exception v17

    const/4 v10, 0x0

    throw v17

    .line 7630
    :catch_4
    move-exception v6

    .line 7631
    :try_start_c
    invoke-virtual {v6}, Ljava/io/IOException;->printStackTrace()V
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_3

    .line 7632
    const/4 v12, 0x0

    .line 7634
    .end local v12    # "ret":Z
    const/4 v7, 0x0

    goto/16 :goto_0

    .restart local v12    # "ret":Z
    :catchall_3
    move-exception v17

    const/4 v7, 0x0

    throw v17

    .line 7616
    .end local v6    # "e":Ljava/io/IOException;
    :catchall_4
    move-exception v17

    :goto_5
    if-eqz v10, :cond_8

    .line 7618
    :try_start_d
    invoke-virtual {v10}, Ljava/util/zip/ZipOutputStream;->close()V
    :try_end_d
    .catch Ljava/io/IOException; {:try_start_d .. :try_end_d} :catch_5
    .catchall {:try_start_d .. :try_end_d} :catchall_5

    .line 7623
    const/4 v10, 0x0

    .line 7627
    :cond_8
    if-eqz v7, :cond_9

    .line 7629
    :try_start_e
    invoke-virtual {v7}, Ljava/io/FileInputStream;->close()V
    :try_end_e
    .catch Ljava/io/IOException; {:try_start_e .. :try_end_e} :catch_6
    .catchall {:try_start_e .. :try_end_e} :catchall_6

    .line 7634
    const/4 v7, 0x0

    :cond_9
    throw v17

    .line 7619
    :catch_5
    move-exception v6

    .line 7620
    .restart local v6    # "e":Ljava/io/IOException;
    :try_start_f
    invoke-virtual {v6}, Ljava/io/IOException;->printStackTrace()V
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_5

    .line 7621
    const/4 v12, 0x0

    .line 7623
    .end local v12    # "ret":Z
    const/4 v10, 0x0

    goto/16 :goto_0

    .end local v6    # "e":Ljava/io/IOException;
    .restart local v12    # "ret":Z
    :catchall_5
    move-exception v17

    const/4 v10, 0x0

    throw v17

    .line 7630
    :catch_6
    move-exception v6

    .line 7631
    .restart local v6    # "e":Ljava/io/IOException;
    :try_start_10
    invoke-virtual {v6}, Ljava/io/IOException;->printStackTrace()V
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_6

    .line 7632
    const/4 v12, 0x0

    .line 7634
    .end local v12    # "ret":Z
    const/4 v7, 0x0

    goto/16 :goto_0

    .end local v6    # "e":Ljava/io/IOException;
    .restart local v12    # "ret":Z
    :catchall_6
    move-exception v17

    const/4 v7, 0x0

    throw v17

    .line 7616
    .end local v10    # "out":Ljava/util/zip/ZipOutputStream;
    .restart local v11    # "out":Ljava/util/zip/ZipOutputStream;
    .restart local v13    # "sourceName":Ljava/lang/String;
    :catchall_7
    move-exception v17

    move-object v10, v11

    .end local v11    # "out":Ljava/util/zip/ZipOutputStream;
    .restart local v10    # "out":Ljava/util/zip/ZipOutputStream;
    goto :goto_5

    .end local v7    # "in":Ljava/io/FileInputStream;
    .end local v10    # "out":Ljava/util/zip/ZipOutputStream;
    .restart local v8    # "in":Ljava/io/FileInputStream;
    .restart local v11    # "out":Ljava/util/zip/ZipOutputStream;
    :catchall_8
    move-exception v17

    move-object v7, v8

    .end local v8    # "in":Ljava/io/FileInputStream;
    .restart local v7    # "in":Ljava/io/FileInputStream;
    move-object v10, v11

    .end local v11    # "out":Ljava/util/zip/ZipOutputStream;
    .restart local v10    # "out":Ljava/util/zip/ZipOutputStream;
    goto :goto_5

    .line 7613
    .end local v13    # "sourceName":Ljava/lang/String;
    :catch_7
    move-exception v6

    goto :goto_2

    .end local v10    # "out":Ljava/util/zip/ZipOutputStream;
    .restart local v11    # "out":Ljava/util/zip/ZipOutputStream;
    .restart local v13    # "sourceName":Ljava/lang/String;
    :catch_8
    move-exception v6

    move-object v10, v11

    .end local v11    # "out":Ljava/util/zip/ZipOutputStream;
    .restart local v10    # "out":Ljava/util/zip/ZipOutputStream;
    goto/16 :goto_2

    .end local v7    # "in":Ljava/io/FileInputStream;
    .restart local v8    # "in":Ljava/io/FileInputStream;
    .restart local v9    # "len":I
    .restart local v16    # "ze":Ljava/util/zip/ZipEntry;
    :cond_a
    move-object v7, v8

    .end local v8    # "in":Ljava/io/FileInputStream;
    .restart local v7    # "in":Ljava/io/FileInputStream;
    goto :goto_3

    .end local v7    # "in":Ljava/io/FileInputStream;
    .end local v10    # "out":Ljava/util/zip/ZipOutputStream;
    .restart local v8    # "in":Ljava/io/FileInputStream;
    .restart local v11    # "out":Ljava/util/zip/ZipOutputStream;
    :cond_b
    move-object v10, v11

    .end local v11    # "out":Ljava/util/zip/ZipOutputStream;
    .restart local v10    # "out":Ljava/util/zip/ZipOutputStream;
    goto :goto_4
.end method


# virtual methods
.method public final activityDestroyed(Landroid/os/IBinder;)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 10119
    sget-boolean v2, Lcom/android/server/am/SmartAdjustManager;->SAMP_HOTNESS_ENABLE:Z

    if-eqz v2, :cond_0

    .line 10120
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 10121
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    .line 10122
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mSmartAdjustManager:Lcom/android/server/am/SmartAdjustManager;

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Lcom/android/server/am/SmartAdjustManager;->decreaseHotnessAdj(Lcom/android/server/am/ProcessRecord;I)V

    .line 10126
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    monitor-enter p0

    .line 10127
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v1

    .line 10128
    .local v1, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v1, :cond_1

    .line 10129
    const-string v2, "activityDestroyed"

    invoke-virtual {v1, p1, v2}, Lcom/android/server/am/ActivityStack;->activityDestroyedLocked(Landroid/os/IBinder;Ljava/lang/String;)V

    .line 10131
    :cond_1
    monitor-exit p0

    .line 10132
    return-void

    .line 10131
    .end local v1    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method public final activityIdle(Landroid/os/IBinder;Landroid/content/res/Configuration;Z)V
    .locals 6
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "config"    # Landroid/content/res/Configuration;
    .param p3, "stopProfiling"    # Z

    .prologue
    .line 9551
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9552
    .local v0, "origId":J
    monitor-enter p0

    .line 9553
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v3

    .line 9554
    .local v3, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v3, :cond_0

    .line 9555
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v5, 0x0

    invoke-virtual {v4, p1, v5, p2}, Lcom/android/server/am/ActivityStackSupervisor;->activityIdleInternalLocked(Landroid/os/IBinder;ZLandroid/content/res/Configuration;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 9557
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz p3, :cond_0

    .line 9558
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    iget-object v5, v2, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-ne v4, v5, :cond_0

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v4, :cond_0

    .line 9560
    :try_start_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v4}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 9563
    :goto_0
    :try_start_2
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->clearProfilerLocked()V

    .line 9567
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 9568
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9569
    return-void

    .line 9567
    .end local v3    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v4

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    throw v4

    .line 9561
    .restart local v2    # "r":Lcom/android/server/am/ActivityRecord;
    .restart local v3    # "stack":Lcom/android/server/am/ActivityStack;
    :catch_0
    move-exception v4

    goto :goto_0
.end method

.method public final activityPaused(Landroid/os/IBinder;)V
    .locals 6
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const-wide/16 v4, 0x40

    .line 10078
    const-string v3, "activityPaused"

    invoke-static {v4, v5, v3}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 10079
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 10080
    .local v0, "origId":J
    monitor-enter p0

    .line 10081
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v2

    .line 10082
    .local v2, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v2, :cond_0

    .line 10083
    const/4 v3, 0x0

    invoke-virtual {v2, p1, v3}, Lcom/android/server/am/ActivityStack;->activityPausedLocked(Landroid/os/IBinder;Z)V

    .line 10085
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10086
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10087
    invoke-static {v4, v5}, Landroid/os/Trace;->traceEnd(J)V

    .line 10088
    return-void

    .line 10085
    .end local v2    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v3

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v3
.end method

.method public final activityResumed(Landroid/os/IBinder;)V
    .locals 13
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 10033
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 10034
    .local v4, "origId":J
    const-string/jumbo v10, "ro.build.characteristics"

    invoke-static {v10}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 10035
    .local v0, "deviceType":Ljava/lang/String;
    monitor-enter p0

    .line 10036
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v9

    .line 10037
    .local v9, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v9, :cond_3

    .line 10039
    const-string v10, "2.0"

    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->knoxVersionInfo:Landroid/os/Bundle;

    const-string/jumbo v12, "version"

    invoke-virtual {v11, v12}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v11

    invoke-virtual {v10, v11}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_2

    .line 10040
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v6

    .line 10041
    .local v6, "record":Lcom/android/server/am/ActivityRecord;
    if-eqz v6, :cond_2

    .line 10042
    const-string v10, "ActivityManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v12, "post active user change for "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget v12, v6, Lcom/android/server/am/ActivityRecord;->userId:I

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, " fullscreen "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget-boolean v12, v6, Lcom/android/server/am/ActivityRecord;->fullscreen:Z

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, " isFloatingActivity() "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v6}, Lcom/android/server/am/ActivityRecord;->isFloatingActivity()Z

    move-result v12

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, " isHomeActivity() "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v6}, Lcom/android/server/am/ActivityRecord;->isHomeActivity()Z

    move-result v12

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v10, v11}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10044
    invoke-virtual {v6}, Lcom/android/server/am/ActivityRecord;->isHomeActivity()Z

    move-result v10

    if-eqz v10, :cond_0

    .line 10045
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->getWallpaperManagerLocked()Lcom/android/server/wallpaper/WallpaperManagerService;

    move-result-object v10

    iget v11, v6, Lcom/android/server/am/ActivityRecord;->userId:I

    const/4 v12, 0x0

    invoke-virtual {v10, v11, v12}, Lcom/android/server/wallpaper/WallpaperManagerService;->switchPersonaWallpaper(IZ)V

    .line 10046
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v10

    if-eqz v10, :cond_0

    .line 10047
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v10

    iget v11, v6, Lcom/android/server/am/ActivityRecord;->userId:I

    invoke-virtual {v10, v11}, Lcom/android/server/pm/PersonaManagerService;->onHomeShow(I)V

    .line 10050
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v10

    if-eqz v10, :cond_2

    .line 10051
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-object v11, v6, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    invoke-virtual {v10, v11}, Lcom/android/server/wm/WindowManagerService;->getMainWindowAttributesLocked(Landroid/view/IApplicationToken;)Landroid/view/WindowManager$LayoutParams;

    move-result-object v3

    .line 10052
    .local v3, "lp":Landroid/view/WindowManager$LayoutParams;
    const/4 v8, 0x0

    .line 10053
    .local v8, "showWhenLocked":Z
    iget-object v10, v6, Lcom/android/server/am/ActivityRecord;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    invoke-virtual {v10}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getZone()I

    move-result v7

    .line 10054
    .local v7, "recordZone":I
    iget-boolean v1, v6, Lcom/android/server/am/ActivityRecord;->fullscreen:Z

    .line 10055
    .local v1, "fullscreen":Z
    invoke-virtual {v6}, Lcom/android/server/am/ActivityRecord;->isFloatingActivity()Z

    move-result v10

    if-nez v10, :cond_1

    const/4 v10, 0x3

    if-eq v7, v10, :cond_1

    const/16 v10, 0xc

    if-ne v7, v10, :cond_4

    :cond_1
    const/4 v2, 0x1

    .line 10057
    .local v2, "isMutiwindowRecord":Z
    :goto_0
    const-string/jumbo v10, "tablet"

    invoke-virtual {v0, v10}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v10

    if-eqz v10, :cond_6

    .line 10058
    iget v10, v6, Lcom/android/server/am/ActivityRecord;->windowFlags:I

    const/high16 v11, 0x80000

    and-int/2addr v10, v11

    if-eqz v10, :cond_5

    const/4 v8, 0x1

    .line 10065
    :goto_1
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v10

    iget v11, v6, Lcom/android/server/am/ActivityRecord;->userId:I

    invoke-virtual {v10, v11, v1, v8, v2}, Lcom/android/server/pm/PersonaManagerService;->postActiveUserChange(IZZZ)V

    .line 10070
    .end local v1    # "fullscreen":Z
    .end local v2    # "isMutiwindowRecord":Z
    .end local v3    # "lp":Landroid/view/WindowManager$LayoutParams;
    .end local v6    # "record":Lcom/android/server/am/ActivityRecord;
    .end local v7    # "recordZone":I
    .end local v8    # "showWhenLocked":Z
    :cond_2
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->activityResumedLocked(Landroid/os/IBinder;)V

    .line 10072
    :cond_3
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10073
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10074
    return-void

    .line 10055
    .restart local v1    # "fullscreen":Z
    .restart local v3    # "lp":Landroid/view/WindowManager$LayoutParams;
    .restart local v6    # "record":Lcom/android/server/am/ActivityRecord;
    .restart local v7    # "recordZone":I
    .restart local v8    # "showWhenLocked":Z
    :cond_4
    const/4 v2, 0x0

    goto :goto_0

    .line 10058
    .restart local v2    # "isMutiwindowRecord":Z
    :cond_5
    const/4 v8, 0x0

    goto :goto_1

    .line 10059
    :cond_6
    if-eqz v3, :cond_7

    :try_start_1
    iget v10, v3, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v11, 0x80000

    and-int/2addr v10, v11

    if-eqz v10, :cond_7

    .line 10060
    const/4 v8, 0x1

    goto :goto_1

    .line 10062
    :cond_7
    iget-object v10, v6, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    const-string v11, "com.android.incallui"

    invoke-virtual {v10, v11}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-nez v10, :cond_8

    iget-object v10, v6, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    const-string v11, "com.android.server.telecom"

    invoke-virtual {v10, v11}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-nez v10, :cond_8

    iget-object v10, v6, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    const-string v11, "com.android.calendar/.alerts.PopUpActivity"

    invoke-virtual {v10, v11}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_9

    :cond_8
    const/4 v8, 0x1

    :goto_2
    goto :goto_1

    :cond_9
    const/4 v8, 0x0

    goto :goto_2

    .line 10072
    .end local v1    # "fullscreen":Z
    .end local v2    # "isMutiwindowRecord":Z
    .end local v3    # "lp":Landroid/view/WindowManager$LayoutParams;
    .end local v6    # "record":Lcom/android/server/am/ActivityRecord;
    .end local v7    # "recordZone":I
    .end local v8    # "showWhenLocked":Z
    .end local v9    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v10

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v10
.end method

.method public final activitySlept(Landroid/os/IBinder;)V
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 15469
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 15471
    .local v0, "origId":J
    monitor-enter p0

    .line 15472
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 15473
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v2, :cond_0

    .line 15474
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3, v2}, Lcom/android/server/am/ActivityStackSupervisor;->activitySleptLocked(Lcom/android/server/am/ActivityRecord;)V

    .line 15476
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15478
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 15479
    return-void

    .line 15476
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v3
.end method

.method public final activityStopped(Landroid/os/IBinder;Landroid/os/Bundle;Landroid/os/PersistableBundle;Ljava/lang/CharSequence;)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "icicle"    # Landroid/os/Bundle;
    .param p3, "persistentState"    # Landroid/os/PersistableBundle;
    .param p4, "description"    # Ljava/lang/CharSequence;

    .prologue
    .line 10096
    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v3

    if-eqz v3, :cond_0

    .line 10097
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string v4, "File descriptors passed in Bundle"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 10100
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 10102
    .local v0, "origId":J
    monitor-enter p0

    .line 10103
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 10104
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v2, :cond_1

    .line 10105
    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v3, v3, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v3, v2, p2, p3, p4}, Lcom/android/server/am/ActivityStack;->activityStoppedLocked(Lcom/android/server/am/ActivityRecord;Landroid/os/Bundle;Landroid/os/PersistableBundle;Ljava/lang/CharSequence;)V

    .line 10107
    :cond_1
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10109
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->trimApplications()V

    .line 10111
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10112
    return-void

    .line 10107
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v3
.end method

.method final addAppLocked(Landroid/content/pm/ApplicationInfo;ZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;
    .locals 10
    .param p1, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "isolated"    # Z
    .param p3, "abiOverride"    # Ljava/lang/String;

    .prologue
    const/4 v6, 0x1

    const/4 v3, 0x0

    const/4 v5, 0x0

    .line 15127
    if-nez p2, :cond_3

    .line 15128
    iget-object v0, p1, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    iget v2, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p0, v0, v2, v6}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 15133
    .local v1, "app":Lcom/android/server/am/ProcessRecord;
    :goto_0
    if-nez v1, :cond_0

    .line 15134
    invoke-virtual {p0, p1, v5, p2, v3}, Lcom/android/server/am/ActivityManagerService;->newProcessRecordLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZI)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 15135
    invoke-virtual {p0, v1, v3, v5}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    .line 15136
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 15139
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v8

    .line 15142
    .local v8, "callingId":J
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    iget-object v2, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v3, 0x0

    iget v4, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    invoke-interface {v0, v2, v3, v4}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;ZI)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15149
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 15152
    :goto_1
    iget v0, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v0, v0, 0x9

    const/16 v2, 0x9

    if-ne v0, v2, :cond_1

    .line 15153
    iput-boolean v6, v1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    .line 15154
    const/16 v0, -0xc

    iput v0, v1, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    .line 15156
    :cond_1
    iget-object v0, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v0, :cond_2

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I

    move-result v0

    if-gez v0, :cond_2

    .line 15157
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15158
    const-string v2, "added application"

    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object v0, p0

    move-object v4, p3

    move-object v6, v5

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V

    .line 15162
    :cond_2
    return-object v1

    .line 15130
    .end local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v8    # "callingId":J
    :cond_3
    const/4 v1, 0x0

    .restart local v1    # "app":Lcom/android/server/am/ProcessRecord;
    goto :goto_0

    .line 15144
    .restart local v8    # "callingId":J
    :catch_0
    move-exception v0

    .line 15149
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_1

    .line 15145
    :catch_1
    move-exception v7

    .line 15146
    .local v7, "e":Ljava/lang/IllegalArgumentException;
    :try_start_1
    const-string v0, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failed trying to unstop package "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ": "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 15149
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_1

    .end local v7    # "e":Ljava/lang/IllegalArgumentException;
    :catchall_0
    move-exception v0

    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0
.end method

.method public addAppTask(Landroid/os/IBinder;Landroid/content/Intent;Landroid/app/ActivityManager$TaskDescription;Landroid/graphics/Bitmap;)I
    .locals 17
    .param p1, "activityToken"    # Landroid/os/IBinder;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "description"    # Landroid/app/ActivityManager$TaskDescription;
    .param p4, "thumbnail"    # Landroid/graphics/Bitmap;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 12771
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v9

    .line 12772
    .local v9, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v10

    .line 12775
    .local v10, "callingIdent":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 12776
    :try_start_1
    invoke-static/range {p1 .. p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v13

    .line 12777
    .local v13, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v13, :cond_0

    .line 12778
    new-instance v3, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Activity does not exist; token="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 12859
    .end local v13    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    throw v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 12861
    :catchall_1
    move-exception v3

    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3

    .line 12781
    .restart local v13    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    :try_start_3
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v12

    .line 12782
    .local v12, "comp":Landroid/content/ComponentName;
    if-nez v12, :cond_1

    .line 12783
    new-instance v3, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Intent "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, " must specify explicit component"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 12786
    :cond_1
    invoke-virtual/range {p4 .. p4}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v3

    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mThumbnailWidth:I

    if-ne v3, v4, :cond_2

    invoke-virtual/range {p4 .. p4}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v3

    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mThumbnailHeight:I

    if-eq v3, v4, :cond_3

    .line 12788
    :cond_2
    new-instance v3, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Bad thumbnail size: got "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual/range {p4 .. p4}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v6

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v6, "x"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual/range {p4 .. p4}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v6

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, ", require "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/am/ActivityManagerService;->mThumbnailWidth:I

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v6, "x"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/am/ActivityManagerService;->mThumbnailHeight:I

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 12792
    :cond_3
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getSelector()Landroid/content/Intent;

    move-result-object v3

    if-eqz v3, :cond_4

    .line 12793
    const/4 v3, 0x0

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Landroid/content/Intent;->setSelector(Landroid/content/Intent;)V

    .line 12795
    :cond_4
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getSourceBounds()Landroid/graphics/Rect;

    move-result-object v3

    if-eqz v3, :cond_5

    .line 12796
    const/4 v3, 0x0

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Landroid/content/Intent;->setSourceBounds(Landroid/graphics/Rect;)V

    .line 12798
    :cond_5
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getFlags()I

    move-result v3

    const/high16 v4, 0x80000

    and-int/2addr v3, v4

    if-eqz v3, :cond_9

    .line 12799
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getFlags()I

    move-result v3

    and-int/lit16 v3, v3, 0x2000

    if-nez v3, :cond_6

    .line 12802
    const/16 v3, 0x2000

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 12808
    :cond_6
    :goto_0
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastAddedTaskComponent:Landroid/content/ComponentName;

    invoke-virtual {v12, v3}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_7

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastAddedTaskUid:I

    if-eq v9, v3, :cond_8

    .line 12809
    :cond_7
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastAddedTaskActivity:Landroid/content/pm/ActivityInfo;

    .line 12811
    :cond_8
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLastAddedTaskActivity:Landroid/content/pm/ActivityInfo;

    .line 12812
    .local v5, "ainfo":Landroid/content/pm/ActivityInfo;
    if-nez v5, :cond_a

    .line 12813
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v3

    const/4 v4, 0x0

    invoke-static {v9}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v6

    invoke-interface {v3, v12, v4, v6}, Landroid/content/pm/IPackageManager;->getActivityInfo(Landroid/content/ComponentName;II)Landroid/content/pm/ActivityInfo;

    move-result-object v5

    .end local v5    # "ainfo":Landroid/content/pm/ActivityInfo;
    move-object/from16 v0, p0

    iput-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLastAddedTaskActivity:Landroid/content/pm/ActivityInfo;

    .line 12815
    .restart local v5    # "ainfo":Landroid/content/pm/ActivityInfo;
    iget-object v3, v5, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    if-eq v3, v9, :cond_a

    .line 12816
    new-instance v3, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Can\'t add task for another application: target uid="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-object v6, v5, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, ", calling uid="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 12804
    .end local v5    # "ainfo":Landroid/content/pm/ActivityInfo;
    :cond_9
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getFlags()I

    move-result v3

    const/high16 v4, 0x10000000

    and-int/2addr v3, v4

    if-eqz v3, :cond_6

    .line 12806
    const/high16 v3, 0x10000000

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    goto :goto_0

    .line 12822
    .restart local v5    # "ainfo":Landroid/content/pm/ActivityInfo;
    :cond_a
    new-instance v2, Lcom/android/server/am/TaskRecord;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->getNextTaskId()I

    move-result v4

    move-object/from16 v3, p0

    move-object/from16 v6, p2

    move-object/from16 v7, p3

    invoke-direct/range {v2 .. v7}, Lcom/android/server/am/TaskRecord;-><init>(Lcom/android/server/am/ActivityManagerService;ILandroid/content/pm/ActivityInfo;Landroid/content/Intent;Landroid/app/ActivityManager$TaskDescription;)V

    .line 12825
    .local v2, "task":Lcom/android/server/am/TaskRecord;
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    const/4 v4, 0x0

    invoke-virtual {v3, v2, v4}, Lcom/android/server/am/RecentTasks;->trimForTaskLocked(Lcom/android/server/am/TaskRecord;Z)I

    move-result v16

    .line 12826
    .local v16, "trimIdx":I
    if-ltz v16, :cond_b

    .line 12829
    const/4 v3, -0x1

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 12861
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    :goto_1
    return v3

    .line 12832
    :cond_b
    :try_start_4
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v3}, Lcom/android/server/am/RecentTasks;->size()I

    move-result v8

    .line 12833
    .local v8, "N":I
    invoke-static {}, Landroid/app/ActivityManager;->getMaxRecentTasksStatic()I

    move-result v3

    add-int/lit8 v3, v3, -0x1

    if-lt v8, v3, :cond_c

    .line 12834
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    add-int/lit8 v4, v8, -0x1

    invoke-virtual {v3, v4}, Lcom/android/server/am/RecentTasks;->remove(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/am/TaskRecord;

    .line 12835
    .local v15, "tr":Lcom/android/server/am/TaskRecord;
    invoke-virtual {v15}, Lcom/android/server/am/TaskRecord;->removedFromRecents()V

    .line 12838
    .end local v15    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_c
    const/4 v3, 0x1

    iput-boolean v3, v2, Lcom/android/server/am/TaskRecord;->inRecents:Z

    .line 12839
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v3, v2}, Lcom/android/server/am/RecentTasks;->add(Ljava/lang/Object;)Z

    .line 12840
    iget-object v3, v13, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v3, v3, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    const/4 v4, 0x0

    const/4 v6, 0x0

    invoke-virtual {v3, v2, v4, v6}, Lcom/android/server/am/ActivityStack;->addTask(Lcom/android/server/am/TaskRecord;ZZ)V

    .line 12842
    move-object/from16 v0, p4

    invoke-virtual {v2, v0}, Lcom/android/server/am/TaskRecord;->setLastThumbnail(Landroid/graphics/Bitmap;)Z

    .line 12843
    invoke-virtual {v2}, Lcom/android/server/am/TaskRecord;->freeLastThumbnail()V

    .line 12847
    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/android/server/am/TaskRecord;->topRunningActivityLocked(Lcom/android/server/am/ActivityRecord;)Lcom/android/server/am/ActivityRecord;

    move-result-object v14

    .line 12848
    .local v14, "topRecord":Lcom/android/server/am/ActivityRecord;
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mMultiWindowPolicy:Lcom/android/server/am/MultiWindowPolicy;

    invoke-virtual {v3, v14}, Lcom/android/server/am/MultiWindowPolicy;->notifyTaskStarted(Lcom/android/server/am/ActivityRecord;)V

    .line 12850
    if-eqz v14, :cond_e

    .line 12851
    iget-object v3, v14, Lcom/android/server/am/ActivityRecord;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    iput-object v3, v2, Lcom/android/server/am/TaskRecord;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    .line 12858
    :cond_d
    :goto_2
    iget v3, v2, Lcom/android/server/am/TaskRecord;->taskId:I

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 12861
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_1

    .line 12852
    :cond_e
    :try_start_5
    iget-object v3, v2, Lcom/android/server/am/TaskRecord;->mActivities:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-lez v3, :cond_d

    .line 12853
    iget-object v3, v2, Lcom/android/server/am/TaskRecord;->mActivities:Ljava/util/ArrayList;

    iget-object v4, v2, Lcom/android/server/am/TaskRecord;->mActivities:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    add-int/lit8 v4, v4, -0x1

    invoke-virtual {v3, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActivityRecord;

    iget-object v3, v3, Lcom/android/server/am/ActivityRecord;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    iput-object v3, v2, Lcom/android/server/am/TaskRecord;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    goto :goto_2
.end method

.method public addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V
    .locals 9
    .param p1, "eventType"    # Ljava/lang/String;
    .param p2, "process"    # Lcom/android/server/am/ProcessRecord;
    .param p3, "processName"    # Ljava/lang/String;
    .param p4, "activity"    # Lcom/android/server/am/ActivityRecord;
    .param p5, "parent"    # Lcom/android/server/am/ActivityRecord;
    .param p6, "subject"    # Ljava/lang/String;
    .param p7, "report"    # Ljava/lang/String;
    .param p8, "logFile"    # Ljava/io/File;
    .param p9, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    .line 17987
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-static {p2}, Lcom/android/server/am/ActivityManagerService;->processClass(Lcom/android/server/am/ProcessRecord;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "_"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    .line 17988
    .local v7, "dropboxTag":Ljava/lang/String;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v2, "dropbox"

    invoke-virtual {v1, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Landroid/os/DropBoxManager;

    .line 17992
    .local v8, "dbox":Landroid/os/DropBoxManager;
    if-eqz v8, :cond_0

    invoke-virtual {v8, v7}, Landroid/os/DropBoxManager;->isTagEnabled(Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_1

    .line 18072
    :cond_0
    :goto_0
    return-void

    .line 17994
    :cond_1
    new-instance v4, Ljava/lang/StringBuilder;

    const/16 v1, 0x400

    invoke-direct {v4, v1}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 17995
    .local v4, "sb":Ljava/lang/StringBuilder;
    invoke-direct {p0, p2, p3, v4}, Lcom/android/server/am/ActivityManagerService;->appendDropBoxProcessHeaders(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 17996
    if-eqz p4, :cond_2

    .line 17997
    const-string v1, "Activity: "

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p4, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "\n"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17999
    :cond_2
    if-eqz p5, :cond_3

    iget-object v1, p5, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v1, :cond_3

    iget-object v1, p5, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->pid:I

    iget v2, p2, Lcom/android/server/am/ProcessRecord;->pid:I

    if-eq v1, v2, :cond_3

    .line 18000
    const-string v1, "Parent-Process: "

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p5, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "\n"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 18002
    :cond_3
    if-eqz p5, :cond_4

    if-eq p5, p4, :cond_4

    .line 18003
    const-string v1, "Parent-Activity: "

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p5, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "\n"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 18005
    :cond_4
    if-eqz p6, :cond_5

    .line 18006
    const-string v1, "Subject: "

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "\n"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 18008
    :cond_5
    const-string v1, "Build: "

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    sget-object v2, Landroid/os/Build;->FINGERPRINT:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "\n"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 18009
    invoke-static {}, Landroid/os/Debug;->isDebuggerConnected()Z

    move-result v1

    if-eqz v1, :cond_6

    .line 18010
    const-string v1, "Debugger: Connected\n"

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 18012
    :cond_6
    const-string v1, "\n"

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 18016
    new-instance v0, Lcom/android/server/am/ActivityManagerService$25;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Error dump: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    move-object v1, p0

    move-object/from16 v3, p7

    move-object/from16 v5, p8

    move-object/from16 v6, p9

    invoke-direct/range {v0 .. v8}, Lcom/android/server/am/ActivityManagerService$25;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;Ljava/lang/String;Landroid/os/DropBoxManager;)V

    .line 18065
    .local v0, "worker":Ljava/lang/Thread;
    if-nez p2, :cond_7

    .line 18068
    invoke-virtual {v0}, Ljava/lang/Thread;->run()V

    goto/16 :goto_0

    .line 18070
    :cond_7
    invoke-virtual {v0}, Ljava/lang/Thread;->start()V

    goto/16 :goto_0
.end method

.method public addPackageDependency(Ljava/lang/String;)V
    .locals 5
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    .line 8457
    monitor-enter p0

    .line 8458
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 8459
    .local v0, "callingPid":I
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v2

    if-ne v0, v2, :cond_0

    .line 8461
    monitor-exit p0

    .line 8474
    :goto_0
    return-void

    .line 8464
    :cond_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 8465
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    invoke-virtual {v2, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 8466
    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 8467
    if-eqz v1, :cond_2

    .line 8468
    :try_start_2
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    if-nez v2, :cond_1

    .line 8469
    new-instance v2, Landroid/util/ArraySet;

    const/4 v3, 0x1

    invoke-direct {v2, v3}, Landroid/util/ArraySet;-><init>(I)V

    iput-object v2, v1, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    .line 8471
    :cond_1
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    invoke-virtual {v2, p1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 8473
    :cond_2
    monitor-exit p0

    goto :goto_0

    .end local v0    # "callingPid":I
    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v2

    .line 8466
    .restart local v0    # "callingPid":I
    :catchall_1
    move-exception v2

    :try_start_3
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    throw v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0
.end method

.method final addProcessToGcListLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 6
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 25669
    const/4 v0, 0x0

    .line 25670
    .local v0, "added":Z
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v1, v2, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_0

    .line 25671
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    iget-wide v2, v2, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    iget-wide v4, p1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    cmp-long v2, v2, v4

    if-gez v2, :cond_2

    .line 25673
    const/4 v0, 0x1

    .line 25674
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    add-int/lit8 v3, v1, 0x1

    invoke-virtual {v2, v3, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 25678
    :cond_0
    if-nez v0, :cond_1

    .line 25679
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    const/4 v3, 0x0

    invoke-virtual {v2, v3, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 25681
    :cond_1
    return-void

    .line 25670
    :cond_2
    add-int/lit8 v1, v1, -0x1

    goto :goto_0
.end method

.method final appDiedLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 3
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 7481
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    const/4 v2, 0x0

    invoke-virtual {p0, p1, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->appDiedLocked(Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;Z)V

    .line 7482
    return-void
.end method

.method final appDiedLocked(Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;Z)V
    .locals 12
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "pid"    # I
    .param p3, "thread"    # Landroid/app/IApplicationThread;
    .param p4, "fromBinderDied"    # Z

    .prologue
    .line 7489
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v8

    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v9, v9, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v10, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v10, v10, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-interface {v8, v9, v10}, Landroid/content/pm/IPackageManager;->AASAToken_UnRegisterPackage(Ljava/lang/String;I)Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 7493
    :goto_0
    sget-boolean v8, Lcom/android/server/am/SmartAdjustManager;->SAMP_DEBUG_TRACE:Z

    if-eqz v8, :cond_0

    .line 7494
    const-wide/16 v8, 0x40

    const-string v10, "appDiedLocked"

    const/4 v11, 0x0

    invoke-static {v8, v9, v10, v11}, Landroid/os/Trace;->asyncTraceBegin(JLjava/lang/String;I)V

    .line 7496
    :cond_0
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v9

    .line 7497
    :try_start_1
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v8, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 7498
    .local v1, "curProc":Lcom/android/server/am/ProcessRecord;
    if-eq v1, p1, :cond_2

    .line 7499
    const-string v8, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Spurious death for "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, ", curProc for "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, ": "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v8, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7500
    monitor-exit v9

    .line 7574
    :cond_1
    :goto_1
    return-void

    .line 7502
    :cond_2
    monitor-exit v9
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 7504
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v8}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v7

    .line 7505
    .local v7, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v7

    .line 7506
    :try_start_2
    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v8, v8, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v7, v8, p2}, Lcom/android/internal/os/BatteryStatsImpl;->noteProcessDiedLocked(II)V

    .line 7507
    monitor-exit v7
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 7509
    new-instance v5, Lcom/android/internal/util/MemInfoReader;

    invoke-direct {v5}, Lcom/android/internal/util/MemInfoReader;-><init>()V

    .line 7510
    .local v5, "minfo":Lcom/android/internal/util/MemInfoReader;
    invoke-virtual {v5}, Lcom/android/internal/util/MemInfoReader;->readMemInfo()V

    .line 7511
    invoke-virtual {v5}, Lcom/android/internal/util/MemInfoReader;->getFreeSize()J

    move-result-wide v8

    const-wide/32 v10, 0x100000

    div-long/2addr v8, v10

    long-to-int v4, v8

    .line 7512
    .local v4, "freeMem":I
    invoke-virtual {v5}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeLegacy()J

    move-result-wide v8

    const-wide/32 v10, 0x100000

    div-long/2addr v8, v10

    long-to-int v0, v8

    .line 7513
    .local v0, "cached":I
    iget-boolean v8, p1, Lcom/android/server/am/ProcessRecord;->killed:Z

    if-nez v8, :cond_4

    .line 7514
    if-nez p4, :cond_3

    .line 7515
    invoke-static {p2}, Landroid/os/Process;->killProcessQuiet(I)V

    .line 7517
    :cond_3
    iget v8, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v8, p2}, Lcom/android/server/am/ActivityManagerService;->killProcessGroup(II)V

    .line 7518
    const/4 v8, 0x1

    iput-boolean v8, p1, Lcom/android/server/am/ProcessRecord;->killed:Z

    .line 7522
    :cond_4
    sget-boolean v8, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    if-eqz v8, :cond_5

    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    if-eqz v8, :cond_5

    .line 7523
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    iget-boolean v8, v8, Lcom/android/server/am/MARsPolicyManager;->spcmPolicyTrigger:Z

    if-nez v8, :cond_5

    .line 7524
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    const/4 v9, 0x1

    invoke-virtual {v8, v9}, Lcom/android/server/am/MARsPolicyManager;->isPolicyEnabled(I)Z

    move-result v6

    .line 7526
    .local v6, "spcmPolicyEnabled":Z
    if-eqz v6, :cond_5

    iget v8, p1, Lcom/android/server/am/ProcessRecord;->curAdj:I

    const/16 v9, 0x9

    if-lt v8, v9, :cond_5

    iget v8, p1, Lcom/android/server/am/ProcessRecord;->curAdj:I

    const/16 v9, 0xe

    if-gt v8, v9, :cond_5

    .line 7529
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    const/4 v9, 0x1

    iput-boolean v9, v8, Lcom/android/server/am/MARsPolicyManager;->spcmPolicyTrigger:Z

    .line 7536
    .end local v6    # "spcmPolicyEnabled":Z
    :cond_5
    iget v8, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v8, p2, :cond_b

    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v8, :cond_b

    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v8}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v8

    invoke-interface {p3}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v9

    if-ne v8, v9, :cond_b

    .line 7538
    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-nez v8, :cond_9

    const/4 v2, 0x1

    .line 7539
    .local v2, "doLowMem":Z
    :goto_2
    move v3, v2

    .line 7540
    .local v3, "doOomAdj":Z
    iget-boolean v8, p1, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-eqz v8, :cond_6

    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    const-string v9, "com.android.systemui"

    invoke-virtual {v8, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_a

    .line 7541
    :cond_6
    const-string v8, "ActivityManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Process "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    iget-object v10, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " (pid "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, ")(adj "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    iget v10, p1, Lcom/android/server/am/ProcessRecord;->setAdj:I

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, ") has died("

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, ","

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, ")"

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v8, v9}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 7543
    const/4 v8, 0x1

    iput-boolean v8, p0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    .line 7550
    :goto_3
    const/16 v8, 0x753b

    const/4 v9, 0x6

    new-array v9, v9, [Ljava/lang/Object;

    const/4 v10, 0x0

    iget v11, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v11

    aput-object v11, v9, v10

    const/4 v10, 0x1

    iget v11, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v11

    aput-object v11, v9, v10

    const/4 v10, 0x2

    iget-object v11, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aput-object v11, v9, v10

    const/4 v10, 0x3

    iget v11, p1, Lcom/android/server/am/ProcessRecord;->setAdj:I

    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v11

    aput-object v11, v9, v10

    const/4 v10, 0x4

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v11

    aput-object v11, v9, v10

    const/4 v10, 0x5

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v11

    aput-object v11, v9, v10

    invoke-static {v8, v9}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 7553
    const/4 v8, 0x0

    const/4 v9, 0x1

    invoke-direct {p0, p1, v8, v9}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 7555
    if-eqz v3, :cond_7

    .line 7556
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 7558
    :cond_7
    if-eqz v2, :cond_8

    .line 7559
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->doLowMemReportIfNeededLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 7572
    .end local v2    # "doLowMem":Z
    .end local v3    # "doOomAdj":Z
    :cond_8
    :goto_4
    sget-boolean v8, Lcom/android/server/am/SmartAdjustManager;->SAMP_DEBUG_TRACE:Z

    if-eqz v8, :cond_1

    .line 7573
    const-wide/16 v8, 0x40

    const-string v10, "appDiedLocked"

    const/4 v11, 0x0

    invoke-static {v8, v9, v10, v11}, Landroid/os/Trace;->asyncTraceEnd(JLjava/lang/String;I)V

    goto/16 :goto_1

    .line 7502
    .end local v0    # "cached":I
    .end local v1    # "curProc":Lcom/android/server/am/ProcessRecord;
    .end local v4    # "freeMem":I
    .end local v5    # "minfo":Lcom/android/internal/util/MemInfoReader;
    .end local v7    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :catchall_0
    move-exception v8

    :try_start_3
    monitor-exit v9
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    throw v8

    .line 7507
    .restart local v1    # "curProc":Lcom/android/server/am/ProcessRecord;
    .restart local v7    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :catchall_1
    move-exception v8

    :try_start_4
    monitor-exit v7
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v8

    .line 7538
    .restart local v0    # "cached":I
    .restart local v4    # "freeMem":I
    .restart local v5    # "minfo":Lcom/android/internal/util/MemInfoReader;
    :cond_9
    const/4 v2, 0x0

    goto/16 :goto_2

    .line 7547
    .restart local v2    # "doLowMem":Z
    .restart local v3    # "doOomAdj":Z
    :cond_a
    const/4 v8, 0x0

    iput-boolean v8, p0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    .line 7548
    const/4 v2, 0x0

    goto :goto_3

    .line 7561
    .end local v2    # "doLowMem":Z
    .end local v3    # "doOomAdj":Z
    :cond_b
    iget v8, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    if-eq v8, p2, :cond_8

    .line 7563
    const-string v8, "ActivityManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Process "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    iget-object v10, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " (pid "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, ") has died and restarted (pid "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    iget v10, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, ").("

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, ","

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, ")"

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v8, v9}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 7566
    const/4 v8, 0x0

    iput-boolean v8, p1, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    .line 7567
    const/16 v8, 0x753b

    const/4 v9, 0x5

    new-array v9, v9, [Ljava/lang/Object;

    const/4 v10, 0x0

    iget v11, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v11

    aput-object v11, v9, v10

    const/4 v10, 0x1

    iget v11, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v11

    aput-object v11, v9, v10

    const/4 v10, 0x2

    iget-object v11, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aput-object v11, v9, v10

    const/4 v10, 0x3

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v11

    aput-object v11, v9, v10

    const/4 v10, 0x4

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v11

    aput-object v11, v9, v10

    invoke-static {v8, v9}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    goto/16 :goto_4

    .line 7490
    .end local v0    # "cached":I
    .end local v1    # "curProc":Lcom/android/server/am/ProcessRecord;
    .end local v4    # "freeMem":I
    .end local v5    # "minfo":Lcom/android/internal/util/MemInfoReader;
    .end local v7    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :catch_0
    move-exception v8

    goto/16 :goto_0
.end method

.method final appNotResponding(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;)V
    .locals 27
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "activity"    # Lcom/android/server/am/ActivityRecord;
    .param p3, "parent"    # Lcom/android/server/am/ActivityRecord;
    .param p4, "aboveSystem"    # Z
    .param p5, "annotation"    # Ljava/lang/String;

    .prologue
    .line 7873
    new-instance v15, Ljava/util/ArrayList;

    const/4 v2, 0x5

    invoke-direct {v15, v2}, Ljava/util/ArrayList;-><init>(I)V

    .line 7874
    .local v15, "firstPids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    new-instance v18, Landroid/util/SparseArray;

    const/16 v2, 0x14

    move-object/from16 v0, v18

    invoke-direct {v0, v2}, Landroid/util/SparseArray;-><init>(I)V

    .line 7876
    .local v18, "lastPids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Boolean;>;"
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    if-eqz v2, :cond_0

    .line 7879
    :try_start_0
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, p5

    invoke-interface {v2, v3, v4, v0}, Landroid/app/IActivityController;->appEarlyNotResponding(Ljava/lang/String;ILjava/lang/String;)I

    move-result v25

    .line 7880
    .local v25, "res":I
    if-gez v25, :cond_0

    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v2, v3, :cond_0

    .line 7881
    const-string v2, "anr"

    const/4 v3, 0x1

    move-object/from16 v0, p1

    invoke-virtual {v0, v2, v3}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 7889
    .end local v25    # "res":I
    :cond_0
    :goto_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v12

    .line 7891
    .local v12, "anrTime":J
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 7894
    monitor-enter p0

    .line 7896
    :try_start_1
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    if-eqz v2, :cond_1

    .line 7897
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "During shutdown skipping ANR: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p5

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 7898
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 8076
    :goto_1
    return-void

    .line 7883
    .end local v12    # "anrTime":J
    :catch_0
    move-exception v14

    .line 7884
    .local v14, "e":Landroid/os/RemoteException;
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 7885
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v2

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/android/server/Watchdog;->setActivityController(Landroid/app/IActivityController;)V

    goto :goto_0

    .line 7899
    .end local v14    # "e":Landroid/os/RemoteException;
    .restart local v12    # "anrTime":J
    :cond_1
    :try_start_2
    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-eqz v2, :cond_2

    .line 7900
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Skipping duplicate ANR: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p5

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 7901
    monitor-exit p0

    goto :goto_1

    .line 7947
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v2

    .line 7902
    :cond_2
    :try_start_3
    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-eqz v2, :cond_3

    .line 7903
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Crashing app skipping ANR: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p5

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 7904
    monitor-exit p0

    goto :goto_1

    .line 7908
    :cond_3
    const/4 v2, 0x5

    const/4 v3, 0x5

    const/4 v4, 0x1

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v5

    const-string v6, "ActivityManagerService"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "ANR occurred in application"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p1

    iget-object v8, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, "."

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    move-object/from16 v0, p1

    iget v8, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static/range {v2 .. v8}, Landroid/sec/enterprise/auditlog/AuditLog;->logAsUser(IIZILjava/lang/String;Ljava/lang/String;I)V

    .line 7913
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    const-string v5, "ANR"

    if-eqz p2, :cond_8

    move-object/from16 v0, p2

    iget-object v6, v0, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    :goto_2
    if-eqz p5, :cond_9

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "ANR "

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p5

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    :goto_3
    move-object/from16 v2, p0

    invoke-direct/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->isForceStopDisabled(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

    .line 7919
    const/4 v2, 0x1

    move-object/from16 v0, p1

    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    .line 7922
    const/16 v2, 0x7538

    const/4 v3, 0x5

    new-array v3, v3, [Ljava/lang/Object;

    const/4 v4, 0x0

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v3, v4

    const/4 v4, 0x1

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v3, v4

    const/4 v4, 0x2

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aput-object v5, v3, v4

    const/4 v4, 0x3

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->flags:I

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v3, v4

    const/4 v4, 0x4

    aput-object p5, v3, v4

    invoke-static {v2, v3}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 7926
    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-virtual {v15, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 7928
    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v21, v0

    .line 7929
    .local v21, "parentPid":I
    if-eqz p3, :cond_4

    move-object/from16 v0, p3

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_4

    move-object/from16 v0, p3

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v2, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v2, :cond_4

    move-object/from16 v0, p3

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v0, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v21, v0

    .line 7930
    :cond_4
    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v0, v21

    if-eq v0, v2, :cond_5

    invoke-static/range {v21 .. v21}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-virtual {v15, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 7932
    :cond_5
    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    if-eq v2, v3, :cond_6

    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    move/from16 v0, v21

    if-eq v2, v0, :cond_6

    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-virtual {v15, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 7934
    :cond_6
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v16, v2, -0x1

    .local v16, "i":I
    :goto_4
    if-ltz v16, :cond_b

    .line 7935
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v16

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v24

    check-cast v24, Lcom/android/server/am/ProcessRecord;

    .line 7936
    .local v24, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz v24, :cond_7

    move-object/from16 v0, v24

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_7

    .line 7937
    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v22, v0

    .line 7938
    .local v22, "pid":I
    if-lez v22, :cond_7

    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v0, v22

    if-eq v0, v2, :cond_7

    move/from16 v0, v22

    move/from16 v1, v21

    if-eq v0, v1, :cond_7

    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    move/from16 v0, v22

    if-eq v0, v2, :cond_7

    .line 7939
    move-object/from16 v0, v24

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v2, :cond_a

    .line 7940
    invoke-static/range {v22 .. v22}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-virtual {v15, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 7934
    .end local v22    # "pid":I
    :cond_7
    :goto_5
    add-int/lit8 v16, v16, -0x1

    goto :goto_4

    .line 7913
    .end local v16    # "i":I
    .end local v21    # "parentPid":I
    .end local v24    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_8
    const/4 v6, 0x0

    goto/16 :goto_2

    :cond_9
    const-string v7, "ANR"

    goto/16 :goto_3

    .line 7942
    .restart local v16    # "i":I
    .restart local v21    # "parentPid":I
    .restart local v22    # "pid":I
    .restart local v24    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_a
    sget-object v2, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    move-object/from16 v0, v18

    move/from16 v1, v22

    invoke-virtual {v0, v1, v2}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    goto :goto_5

    .line 7947
    .end local v22    # "pid":I
    .end local v24    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_b
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 7950
    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    .line 7951
    .local v17, "info":Ljava/lang/StringBuilder;
    const/4 v2, 0x0

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->setLength(I)V

    .line 7952
    const-string v2, "ANR in "

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7953
    if-eqz p2, :cond_c

    move-object/from16 v0, p2

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    if-eqz v2, :cond_c

    .line 7954
    const-string v2, " ("

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ")"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7956
    :cond_c
    const-string v2, "\n"

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7957
    const-string v2, "PID: "

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7958
    if-eqz p5, :cond_d

    .line 7959
    const-string v2, "Reason: "

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p5

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7961
    :cond_d
    if-eqz p3, :cond_e

    move-object/from16 v0, p3

    move-object/from16 v1, p2

    if-eq v0, v1, :cond_e

    .line 7962
    const-string v2, "Parent: "

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p3

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7965
    :cond_e
    new-instance v23, Lcom/android/internal/os/ProcessCpuTracker;

    const/4 v2, 0x1

    move-object/from16 v0, v23

    invoke-direct {v0, v2}, Lcom/android/internal/os/ProcessCpuTracker;-><init>(Z)V

    .line 7967
    .local v23, "processCpuTracker":Lcom/android/internal/os/ProcessCpuTracker;
    const/4 v9, 0x0

    .line 7969
    .local v9, "cpuInfo":Ljava/lang/String;
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 7970
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    monitor-enter v3

    .line 7971
    :try_start_4
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v2, v12, v13}, Lcom/android/internal/os/ProcessCpuTracker;->printCurrentState(J)Ljava/lang/String;

    move-result-object v9

    .line 7972
    monitor-exit v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 7974
    invoke-static {}, Landroid/os/Debug;->isProductShip()I

    move-result v2

    if-nez v2, :cond_f

    .line 7975
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual/range {v23 .. v23}, Lcom/android/internal/os/ProcessCpuTracker;->printCpuCoreInfo()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    .line 7978
    :cond_f
    invoke-virtual/range {v23 .. v23}, Lcom/android/internal/os/ProcessCpuTracker;->printCurrentLoad()Ljava/lang/String;

    move-result-object v2

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7979
    move-object/from16 v0, v17

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7982
    move-object/from16 v0, v23

    invoke-virtual {v0, v12, v13}, Lcom/android/internal/os/ProcessCpuTracker;->printCurrentState(J)Ljava/lang/String;

    move-result-object v2

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 7984
    const/4 v2, 0x1

    sget-object v3, Lcom/android/server/Watchdog;->NATIVE_STACKS_OF_INTEREST:[Ljava/lang/String;

    move-object/from16 v0, v23

    move-object/from16 v1, v18

    invoke-static {v2, v15, v0, v1, v3}, Lcom/android/server/am/ActivityManagerService;->dumpStackTraces(ZLjava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker;Landroid/util/SparseArray;[Ljava/lang/String;)Ljava/io/File;

    move-result-object v10

    .line 7987
    .local v10, "tracesFile":Ljava/io/File;
    const-string v2, "ActivityManager"

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 7988
    if-nez v10, :cond_10

    .line 7990
    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    const/4 v3, 0x3

    invoke-static {v2, v3}, Landroid/os/Process;->sendSignal(II)V

    .line 7993
    :cond_10
    const-string v3, "anr"

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    const/4 v11, 0x0

    move-object/from16 v2, p0

    move-object/from16 v4, p1

    move-object/from16 v6, p2

    move-object/from16 v7, p3

    move-object/from16 v8, p5

    invoke-virtual/range {v2 .. v11}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 7996
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    if-eqz v2, :cond_11

    .line 7999
    :try_start_5
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-interface {v2, v3, v4, v5}, Landroid/app/IActivityController;->appNotResponding(Ljava/lang/String;ILjava/lang/String;)I

    move-result v25

    .line 8000
    .restart local v25    # "res":I
    if-eqz v25, :cond_11

    .line 8001
    if-gez v25, :cond_12

    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v2, v3, :cond_12

    .line 8002
    const-string v2, "anr"

    const/4 v3, 0x1

    move-object/from16 v0, p1

    invoke-virtual {v0, v2, v3}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_1

    goto/16 :goto_1

    .line 8010
    .end local v25    # "res":I
    :catch_1
    move-exception v14

    .line 8011
    .restart local v14    # "e":Landroid/os/RemoteException;
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 8012
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v2

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/android/server/Watchdog;->setActivityController(Landroid/app/IActivityController;)V

    .line 8017
    .end local v14    # "e":Landroid/os/RemoteException;
    :cond_11
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v2

    const-string v3, "anr_show_background"

    const/4 v4, 0x0

    invoke-static {v2, v3, v4}, Landroid/provider/Settings$Secure;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v2

    if-eqz v2, :cond_13

    const/16 v26, 0x1

    .line 8020
    .local v26, "showBackground":Z
    :goto_6
    monitor-enter p0

    .line 8021
    :try_start_6
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v2, v3, v4}, Lcom/android/server/am/BatteryStatsService;->noteProcessAnr(Ljava/lang/String;I)V

    .line 8023
    if-nez v26, :cond_14

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->isInterestingToUserLocked()Z

    move-result v2

    if-nez v2, :cond_14

    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v2, v3, :cond_14

    .line 8024
    const-string v2, "bg anr"

    const/4 v3, 0x1

    move-object/from16 v0, p1

    invoke-virtual {v0, v2, v3}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 8025
    monitor-exit p0

    goto/16 :goto_1

    .line 8075
    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    throw v2

    .line 7972
    .end local v10    # "tracesFile":Ljava/io/File;
    .end local v26    # "showBackground":Z
    :catchall_2
    move-exception v2

    :try_start_7
    monitor-exit v3
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    throw v2

    .line 8004
    .restart local v10    # "tracesFile":Ljava/io/File;
    .restart local v25    # "res":I
    :cond_12
    :try_start_8
    monitor-enter p0
    :try_end_8
    .catch Landroid/os/RemoteException; {:try_start_8 .. :try_end_8} :catch_1

    .line 8005
    :try_start_9
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object/from16 v0, p1

    invoke-virtual {v2, v0}, Lcom/android/server/am/ActiveServices;->scheduleServiceTimeoutLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 8006
    monitor-exit p0

    goto/16 :goto_1

    :catchall_3
    move-exception v2

    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    :try_start_a
    throw v2
    :try_end_a
    .catch Landroid/os/RemoteException; {:try_start_a .. :try_end_a} :catch_1

    .line 8017
    .end local v25    # "res":I
    :cond_13
    const/16 v26, 0x0

    goto :goto_6

    .line 8029
    .restart local v26    # "showBackground":Z
    :cond_14
    if-eqz p2, :cond_16

    :try_start_b
    move-object/from16 v0, p2

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    move-object v3, v2

    :goto_7
    if-eqz p5, :cond_17

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "ANR "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p5

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    :goto_8
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v1, v3, v2, v4}, Lcom/android/server/am/ActivityManagerService;->makeAppNotRespondingLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 8052
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mVRApplicationPolicy:Lcom/android/server/am/VRApplicationPolicy;

    invoke-virtual {v2}, Lcom/android/server/am/VRApplicationPolicy;->isHMTconnected()Z

    move-result v2

    if-eqz v2, :cond_18

    .line 8053
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v4

    const/4 v6, 0x0

    const/4 v7, 0x1

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->reportVRApplicationCrashLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;Z)V

    .line 8054
    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v2, :cond_15

    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v2, v3, :cond_15

    .line 8055
    const-string v4, "ANR in vr mode"

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    invoke-direct/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->handleAppCrashLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

    .line 8056
    const-string v2, "ANR in vr mode"

    const/4 v3, 0x1

    move-object/from16 v0, p1

    invoke-virtual {v0, v2, v3}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 8058
    :cond_15
    monitor-exit p0

    goto/16 :goto_1

    .line 8029
    :cond_16
    const/4 v2, 0x0

    move-object v3, v2

    goto :goto_7

    :cond_17
    const-string v2, "ANR"

    goto :goto_8

    .line 8064
    :cond_18
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v20

    .line 8065
    .local v20, "msg":Landroid/os/Message;
    new-instance v19, Ljava/util/HashMap;

    invoke-direct/range {v19 .. v19}, Ljava/util/HashMap;-><init>()V

    .line 8066
    .local v19, "map":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;"
    const/4 v2, 0x2

    move-object/from16 v0, v20

    iput v2, v0, Landroid/os/Message;->what:I

    .line 8067
    move-object/from16 v0, v19

    move-object/from16 v1, v20

    iput-object v0, v1, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 8068
    if-eqz p4, :cond_1a

    const/4 v2, 0x1

    :goto_9
    move-object/from16 v0, v20

    iput v2, v0, Landroid/os/Message;->arg1:I

    .line 8069
    const-string v2, "app"

    move-object/from16 v0, v19

    move-object/from16 v1, p1

    invoke-virtual {v0, v2, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 8070
    if-eqz p2, :cond_19

    .line 8071
    const-string v2, "activity"

    move-object/from16 v0, v19

    move-object/from16 v1, p2

    invoke-virtual {v0, v2, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 8074
    :cond_19
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    move-object/from16 v0, v20

    invoke-virtual {v2, v0}, Lcom/android/server/am/ActivityManagerService$UiHandler;->sendMessage(Landroid/os/Message;)Z

    .line 8075
    monitor-exit p0
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_1

    goto/16 :goto_1

    .line 8068
    :cond_1a
    const/4 v2, 0x0

    goto :goto_9
.end method

.method public appNotRespondingViaProvider(Landroid/os/IBinder;)V
    .locals 10
    .param p1, "connection"    # Landroid/os/IBinder;

    .prologue
    .line 14964
    const-string v0, "android.permission.REMOVE_TASKS"

    const-string v2, "appNotRespondingViaProvider()"

    invoke-virtual {p0, v0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    move-object v6, p1

    .line 14967
    check-cast v6, Lcom/android/server/am/ContentProviderConnection;

    .line 14968
    .local v6, "conn":Lcom/android/server/am/ContentProviderConnection;
    if-nez v6, :cond_0

    .line 14969
    const-string v0, "ActivityManager"

    const-string v2, "ContentProviderConnection is null"

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14985
    :goto_0
    return-void

    .line 14973
    :cond_0
    iget-object v0, v6, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v1, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    .line 14974
    .local v1, "host":Lcom/android/server/am/ProcessRecord;
    if-nez v1, :cond_1

    .line 14975
    const-string v0, "ActivityManager"

    const-string v2, "Failed to find hosting ProcessRecord"

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 14979
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v8

    .line 14981
    .local v8, "token":J
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x0

    :try_start_0
    const-string v5, "ContentProvider not responding"

    move-object v0, p0

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->appNotResponding(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 14983
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    :catchall_0
    move-exception v0

    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0
.end method

.method final applyUpdateLockStateLocked(Lcom/android/server/am/ActivityRecord;)V
    .locals 6
    .param p1, "r"    # Lcom/android/server/am/ActivityRecord;

    .prologue
    const/4 v1, 0x1

    const/4 v2, 0x0

    .line 4560
    if-eqz p1, :cond_0

    iget-boolean v3, p1, Lcom/android/server/am/ActivityRecord;->immersive:Z

    if-eqz v3, :cond_0

    move v0, v1

    .line 4561
    .local v0, "nextState":Z
    :goto_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x25

    if-eqz v0, :cond_1

    :goto_1
    invoke-virtual {v4, v5, v1, v2, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v3, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 4563
    return-void

    .end local v0    # "nextState":Z
    :cond_0
    move v0, v2

    .line 4560
    goto :goto_0

    .restart local v0    # "nextState":Z
    :cond_1
    move v1, v2

    .line 4561
    goto :goto_1
.end method

.method public final attachApplication(Landroid/app/IApplicationThread;)V
    .locals 6
    .param p1, "thread"    # Landroid/app/IApplicationThread;

    .prologue
    .line 9539
    monitor-enter p0

    .line 9540
    const-wide/16 v4, 0x40

    :try_start_0
    const-string v1, "attachApplication"

    invoke-static {v4, v5, v1}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 9541
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 9542
    .local v0, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 9543
    .local v2, "origId":J
    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->attachApplicationLocked(Landroid/app/IApplicationThread;I)Z

    .line 9544
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9545
    const-wide/16 v4, 0x40

    invoke-static {v4, v5}, Landroid/os/Trace;->traceEnd(J)V

    .line 9546
    monitor-exit p0

    .line 9547
    return-void

    .line 9546
    .end local v0    # "callingPid":I
    .end local v2    # "origId":J
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public final backgroundResourcesReleased(Landroid/os/IBinder;)V
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 10136
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 10138
    .local v0, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 10139
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v2

    .line 10140
    .local v2, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v2, :cond_0

    .line 10141
    invoke-virtual {v2}, Lcom/android/server/am/ActivityStack;->backgroundResourcesReleased()V

    .line 10143
    :cond_0
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10145
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10147
    return-void

    .line 10143
    .end local v2    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v3

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 10145
    :catchall_1
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method backgroundServicesFinishedLocked(I)V
    .locals 4
    .param p1, "userId"    # I

    .prologue
    .line 23634
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .local v0, "arr$":[Lcom/android/server/am/BroadcastQueue;
    array-length v2, v0

    .local v2, "len$":I
    const/4 v1, 0x0

    .local v1, "i$":I
    :goto_0
    if-ge v1, v2, :cond_0

    aget-object v3, v0, v1

    .line 23635
    .local v3, "queue":Lcom/android/server/am/BroadcastQueue;
    invoke-virtual {v3, p1}, Lcom/android/server/am/BroadcastQueue;->backgroundServicesFinishedLocked(I)V

    .line 23634
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 23637
    .end local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_0
    return-void
.end method

.method public backupAgentCreated(Ljava/lang/String;Landroid/os/IBinder;)V
    .locals 7
    .param p1, "agentPackageName"    # Ljava/lang/String;
    .param p2, "agent"    # Landroid/os/IBinder;

    .prologue
    .line 22303
    monitor-enter p0

    .line 22304
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    invoke-virtual {p1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_0

    .line 22305
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Backup agent created for "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " but not requested!"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 22306
    monitor-exit p0

    .line 22323
    :goto_0
    return-void

    .line 22308
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 22310
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 22312
    .local v2, "oldIdent":J
    :try_start_1
    const-string v4, "backup"

    invoke-static {v4}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v4

    invoke-static {v4}, Landroid/app/backup/IBackupManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/app/backup/IBackupManager;

    move-result-object v0

    .line 22314
    .local v0, "bm":Landroid/app/backup/IBackupManager;
    invoke-interface {v0, p1, p2}, Landroid/app/backup/IBackupManager;->agentConnected(Ljava/lang/String;Landroid/os/IBinder;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 22321
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 22308
    .end local v0    # "bm":Landroid/app/backup/IBackupManager;
    .end local v2    # "oldIdent":J
    :catchall_0
    move-exception v4

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v4

    .line 22315
    .restart local v2    # "oldIdent":J
    :catch_0
    move-exception v4

    .line 22321
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 22317
    :catch_1
    move-exception v1

    .line 22318
    .local v1, "e":Ljava/lang/Exception;
    :try_start_3
    const-string v4, "ActivityManager"

    const-string v5, "Exception trying to deliver BackupAgent binding: "

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22319
    invoke-virtual {v1}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 22321
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .end local v1    # "e":Ljava/lang/Exception;
    :catchall_1
    move-exception v4

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4
.end method

.method public batteryNeedsCpuUpdate()V
    .locals 0

    .prologue
    .line 4111
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 4112
    return-void
.end method

.method public batteryPowerChanged(Z)V
    .locals 2
    .param p1, "onBattery"    # Z

    .prologue
    .line 4118
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 4119
    monitor-enter p0

    .line 4120
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 4121
    :try_start_1
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    .line 4122
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 4123
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 4124
    return-void

    .line 4122
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v0

    .line 4123
    :catchall_1
    move-exception v0

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v0
.end method

.method public batterySendBroadcast(Landroid/content/Intent;)V
    .locals 17
    .param p1, "intent"    # Landroid/content/Intent;

    .prologue
    .line 4128
    monitor-enter p0

    .line 4129
    const/4 v1, 0x0

    const/4 v2, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, -0x1

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, -0x1

    const/16 v15, 0x3e8

    const/16 v16, -0x1

    move-object/from16 v0, p0

    move-object/from16 v3, p1

    :try_start_0
    invoke-direct/range {v0 .. v16}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 4132
    monitor-exit p0

    .line 4133
    return-void

    .line 4132
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public bindBackupAgent(Landroid/content/pm/ApplicationInfo;I)Z
    .locals 21
    .param p1, "app"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "backupMode"    # I

    .prologue
    .line 22224
    const-string v4, "android.permission.CONFIRM_FULL_BACKUP"

    const-string v5, "bindBackupAgent"

    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 22226
    monitor-enter p0

    .line 22228
    const/16 v19, 0x0

    .line 22229
    .local v19, "ss":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    :try_start_0
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v4}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v20

    .line 22230
    .local v20, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v20
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 22231
    :try_start_1
    move-object/from16 v0, p1

    iget v4, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget-object v5, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v6, v0, Landroid/content/pm/ApplicationInfo;->name:Ljava/lang/String;

    move-object/from16 v0, v20

    invoke-virtual {v0, v4, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl;->getServiceStatsLocked(ILjava/lang/String;Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;

    move-result-object v19

    .line 22232
    monitor-exit v20
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 22233
    :try_start_2
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    move-result-wide v14

    .line 22236
    .local v14, "callingId":J
    :try_start_3
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v5, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v6, 0x0

    move-object/from16 v0, p1

    iget v7, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v7}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v7

    invoke-interface {v4, v5, v6, v7}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;ZI)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_3 .. :try_end_3} :catch_1
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    .line 22243
    :try_start_4
    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 22246
    :goto_0
    new-instance v18, Lcom/android/server/am/BackupRecord;

    move-object/from16 v0, v18

    move-object/from16 v1, v19

    move-object/from16 v2, p1

    move/from16 v3, p2

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/BackupRecord;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;Landroid/content/pm/ApplicationInfo;I)V

    .line 22247
    .local v18, "r":Lcom/android/server/am/BackupRecord;
    if-nez p2, :cond_0

    new-instance v10, Landroid/content/ComponentName;

    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v5, v0, Landroid/content/pm/ApplicationInfo;->backupAgentName:Ljava/lang/String;

    invoke-direct {v10, v4, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 22251
    .local v10, "hostingName":Landroid/content/ComponentName;
    :goto_1
    move-object/from16 v0, p1

    iget-object v5, v0, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    const/4 v7, 0x0

    const/4 v8, 0x0

    const-string v9, "backup"

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    move-object/from16 v4, p0

    move-object/from16 v6, p1

    invoke-virtual/range {v4 .. v13}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v17

    .line 22253
    .local v17, "proc":Lcom/android/server/am/ProcessRecord;
    if-nez v17, :cond_1

    .line 22254
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Unable to start backup agent process "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, v18

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 22255
    const/4 v4, 0x0

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 22284
    :goto_2
    return v4

    .line 22232
    .end local v10    # "hostingName":Landroid/content/ComponentName;
    .end local v14    # "callingId":J
    .end local v17    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v18    # "r":Lcom/android/server/am/BackupRecord;
    :catchall_0
    move-exception v4

    :try_start_5
    monitor-exit v20
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    throw v4

    .line 22282
    .end local v20    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :catchall_1
    move-exception v4

    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    throw v4

    .line 22238
    .restart local v14    # "callingId":J
    .restart local v20    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :catch_0
    move-exception v4

    .line 22243
    :try_start_7
    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    goto :goto_0

    .line 22239
    :catch_1
    move-exception v16

    .line 22240
    .local v16, "e":Ljava/lang/IllegalArgumentException;
    :try_start_8
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Failed trying to unstop package "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget-object v6, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ": "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, v16

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    .line 22243
    :try_start_9
    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto/16 :goto_0

    .end local v16    # "e":Ljava/lang/IllegalArgumentException;
    :catchall_2
    move-exception v4

    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4

    .line 22247
    .restart local v18    # "r":Lcom/android/server/am/BackupRecord;
    :cond_0
    new-instance v10, Landroid/content/ComponentName;

    const-string v4, "android"

    const-string v5, "FullBackupAgent"

    invoke-direct {v10, v4, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_1

    .line 22258
    .restart local v10    # "hostingName":Landroid/content/ComponentName;
    .restart local v17    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_1
    move-object/from16 v0, v17

    move-object/from16 v1, v18

    iput-object v0, v1, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 22259
    move-object/from16 v0, v18

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 22260
    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    .line 22263
    move-object/from16 v0, p0

    move-object/from16 v1, v17

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z

    .line 22267
    move-object/from16 v0, v17

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_1

    if-eqz v4, :cond_2

    .line 22270
    :try_start_a
    move-object/from16 v0, v17

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v5

    move-object/from16 v0, p1

    move/from16 v1, p2

    invoke-interface {v4, v0, v5, v1}, Landroid/app/IApplicationThread;->scheduleCreateBackupAgent(Landroid/content/pm/ApplicationInfo;Landroid/content/res/CompatibilityInfo;I)V
    :try_end_a
    .catch Landroid/os/RemoteException; {:try_start_a .. :try_end_a} :catch_2
    .catchall {:try_start_a .. :try_end_a} :catchall_1

    .line 22282
    :cond_2
    :goto_3
    :try_start_b
    monitor-exit p0
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_1

    .line 22284
    const/4 v4, 0x1

    goto :goto_2

    .line 22272
    :catch_2
    move-exception v4

    goto :goto_3
.end method

.method public bindService(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;ILjava/lang/String;I)I
    .locals 9
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "token"    # Landroid/os/IBinder;
    .param p3, "service"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "connection"    # Landroid/app/IServiceConnection;
    .param p6, "flags"    # I
    .param p7, "callingPackage"    # Ljava/lang/String;
    .param p8, "userId"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/TransactionTooLargeException;
        }
    .end annotation

    .prologue
    .line 22119
    const-string v0, "bindService"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 22122
    if-eqz p3, :cond_0

    invoke-virtual {p3}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    .line 22123
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 22126
    :cond_0
    if-nez p7, :cond_1

    .line 22127
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "callingPackage cannot be null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 22130
    :cond_1
    monitor-enter p0

    .line 22168
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v4, p4

    move-object v5, p5

    move v6, p6

    move-object/from16 v7, p7

    move/from16 v8, p8

    invoke-virtual/range {v0 .. v8}, Lcom/android/server/am/ActiveServices;->bindServiceLocked(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;ILjava/lang/String;I)I

    move-result v0

    monitor-exit p0

    return v0

    .line 22170
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public bootAnimationComplete()V
    .locals 2

    .prologue
    .line 10003
    monitor-enter p0

    .line 10004
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 10005
    .local v0, "callFinishBooting":Z
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    .line 10006
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10007
    if-eqz v0, :cond_0

    .line 10008
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->finishBooting()V

    .line 10010
    :cond_0
    return-void

    .line 10006
    .end local v0    # "callFinishBooting":Z
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v1
.end method

.method public final broadcastIntent(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZI)I
    .locals 22
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "resolvedType"    # Ljava/lang/String;
    .param p4, "resultTo"    # Landroid/content/IIntentReceiver;
    .param p5, "resultCode"    # I
    .param p6, "resultData"    # Ljava/lang/String;
    .param p7, "resultExtras"    # Landroid/os/Bundle;
    .param p8, "requiredPermissions"    # [Ljava/lang/String;
    .param p9, "appOp"    # I
    .param p10, "options"    # Landroid/os/Bundle;
    .param p11, "serialized"    # Z
    .param p12, "sticky"    # Z
    .param p13, "userId"    # I

    .prologue
    .line 23538
    const-string v2, "broadcastIntent"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 23539
    monitor-enter p0

    .line 23540
    :try_start_0
    move-object/from16 v0, p0

    move-object/from16 v1, p2

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;

    move-result-object p2

    .line 23542
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 23543
    .local v3, "callerApp":Lcom/android/server/am/ProcessRecord;
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v16

    .line 23544
    .local v16, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v17

    .line 23545
    .local v17, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v20

    .line 23546
    .local v20, "origId":J
    if-eqz v3, :cond_0

    iget-object v2, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    :goto_0
    const/4 v13, 0x0

    move-object/from16 v2, p0

    move-object/from16 v5, p2

    move-object/from16 v6, p3

    move-object/from16 v7, p4

    move/from16 v8, p5

    move-object/from16 v9, p6

    move-object/from16 v10, p7

    move-object/from16 v11, p8

    move/from16 v12, p9

    move/from16 v14, p11

    move/from16 v15, p12

    move/from16 v18, p13

    invoke-direct/range {v2 .. v18}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    move-result v19

    .line 23551
    .local v19, "res":I
    invoke-static/range {v20 .. v21}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 23552
    monitor-exit p0

    return v19

    .line 23546
    .end local v19    # "res":I
    :cond_0
    const/4 v4, 0x0

    goto :goto_0

    .line 23553
    .end local v3    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v16    # "callingPid":I
    .end local v17    # "callingUid":I
    .end local v20    # "origId":J
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method broadcastIntentInPackage(Landroid/app/IApplicationThread;Ljava/lang/String;ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;Landroid/os/Bundle;ZZI)I
    .locals 22
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "uid"    # I
    .param p4, "intent"    # Landroid/content/Intent;
    .param p5, "resolvedType"    # Ljava/lang/String;
    .param p6, "resultTo"    # Landroid/content/IIntentReceiver;
    .param p7, "resultCode"    # I
    .param p8, "resultData"    # Ljava/lang/String;
    .param p9, "resultExtras"    # Landroid/os/Bundle;
    .param p10, "requiredPermission"    # Ljava/lang/String;
    .param p11, "options"    # Landroid/os/Bundle;
    .param p12, "serialized"    # Z
    .param p13, "sticky"    # Z
    .param p14, "userId"    # I

    .prologue
    .line 23575
    monitor-enter p0

    .line 23576
    :try_start_0
    move-object/from16 v0, p0

    move-object/from16 v1, p4

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;

    move-result-object p4

    .line 23578
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v20

    .line 23579
    .local v20, "origId":J
    if-nez p10, :cond_0

    const/4 v11, 0x0

    .line 23581
    .local v11, "requiredPermissions":[Ljava/lang/String;
    :goto_0
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 23582
    .local v3, "callerApp":Lcom/android/server/am/ProcessRecord;
    const/4 v12, -0x1

    const/16 v16, -0x1

    move-object/from16 v2, p0

    move-object/from16 v4, p2

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move-object/from16 v7, p6

    move/from16 v8, p7

    move-object/from16 v9, p8

    move-object/from16 v10, p9

    move-object/from16 v13, p11

    move/from16 v14, p12

    move/from16 v15, p13

    move/from16 v17, p3

    move/from16 v18, p14

    invoke-direct/range {v2 .. v18}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    move-result v19

    .line 23586
    .local v19, "res":I
    invoke-static/range {v20 .. v21}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 23587
    monitor-exit p0

    return v19

    .line 23579
    .end local v3    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v11    # "requiredPermissions":[Ljava/lang/String;
    .end local v19    # "res":I
    :cond_0
    const/4 v2, 0x1

    new-array v11, v2, [Ljava/lang/String;

    const/4 v2, 0x0

    aput-object p10, v11, v2

    goto :goto_0

    .line 23588
    .end local v20    # "origId":J
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method broadcastIntentInPackage(Ljava/lang/String;ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;Landroid/os/Bundle;ZZI)I
    .locals 15
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/content/IIntentReceiver;
    .param p6, "resultCode"    # I
    .param p7, "resultData"    # Ljava/lang/String;
    .param p8, "resultExtras"    # Landroid/os/Bundle;
    .param p9, "requiredPermission"    # Ljava/lang/String;
    .param p10, "options"    # Landroid/os/Bundle;
    .param p11, "serialized"    # Z
    .param p12, "sticky"    # Z
    .param p13, "userId"    # I

    .prologue
    .line 23562
    const/4 v1, 0x0

    move-object v0, p0

    move-object/from16 v2, p1

    move/from16 v3, p2

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move/from16 v7, p6

    move-object/from16 v8, p7

    move-object/from16 v9, p8

    move-object/from16 v10, p9

    move-object/from16 v11, p10

    move/from16 v12, p11

    move/from16 v13, p12

    move/from16 v14, p13

    invoke-virtual/range {v0 .. v14}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentInPackage(Landroid/app/IApplicationThread;Ljava/lang/String;ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;Landroid/os/Bundle;ZZI)I

    move-result v0

    return v0
.end method

.method broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;
    .locals 3
    .param p1, "intent"    # Landroid/content/Intent;

    .prologue
    .line 886
    invoke-virtual {p1}, Landroid/content/Intent;->getFlags()I

    move-result v1

    const/high16 v2, 0x10000000

    and-int/2addr v1, v2

    if-eqz v1, :cond_1

    const/4 v0, 0x1

    .line 906
    .local v0, "isFg":Z
    :goto_0
    if-eqz v0, :cond_2

    const-string v1, "android.intent.action.SCREEN_OFF"

    invoke-virtual {p1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_0

    const-string v1, "android.intent.action.SCREEN_ON"

    invoke-virtual {p1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 908
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mSecBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .line 911
    :goto_1
    return-object v1

    .line 886
    .end local v0    # "isFg":Z
    :cond_1
    const/4 v0, 0x0

    goto :goto_0

    .line 911
    .restart local v0    # "isFg":Z
    :cond_2
    if-eqz v0, :cond_3

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    goto :goto_1

    :cond_3
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    goto :goto_1
.end method

.method broadcastRecordForReceiverLocked(Landroid/os/IBinder;)Lcom/android/server/am/BroadcastRecord;
    .locals 5
    .param p1, "receiver"    # Landroid/os/IBinder;

    .prologue
    .line 916
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .local v0, "arr$":[Lcom/android/server/am/BroadcastQueue;
    array-length v2, v0

    .local v2, "len$":I
    const/4 v1, 0x0

    .local v1, "i$":I
    :goto_0
    if-ge v1, v2, :cond_1

    aget-object v3, v0, v1

    .line 917
    .local v3, "queue":Lcom/android/server/am/BroadcastQueue;
    invoke-virtual {v3, p1}, Lcom/android/server/am/BroadcastQueue;->getMatchingOrderedReceiver(Landroid/os/IBinder;)Lcom/android/server/am/BroadcastRecord;

    move-result-object v4

    .line 918
    .local v4, "r":Lcom/android/server/am/BroadcastRecord;
    if-eqz v4, :cond_0

    .line 922
    .end local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    .end local v4    # "r":Lcom/android/server/am/BroadcastRecord;
    :goto_1
    return-object v4

    .line 916
    .restart local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    .restart local v4    # "r":Lcom/android/server/am/BroadcastRecord;
    :cond_0
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 922
    .end local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    .end local v4    # "r":Lcom/android/server/am/BroadcastRecord;
    :cond_1
    const/4 v4, 0x0

    goto :goto_1
.end method

.method public cancelIntentSender(Landroid/content/IIntentSender;)V
    .locals 8
    .param p1, "sender"    # Landroid/content/IIntentSender;

    .prologue
    .line 10354
    instance-of v5, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v5, :cond_0

    .line 10376
    :goto_0
    return-void

    .line 10357
    :cond_0
    monitor-enter p0

    .line 10358
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v3, v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10360
    .local v3, "rec":Lcom/android/server/am/PendingIntentRecord;
    :try_start_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    iget-object v6, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v6, v6, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v7

    invoke-interface {v5, v6, v7}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I

    move-result v4

    .line 10362
    .local v4, "uid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    invoke-static {v4, v5}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result v5

    if-nez v5, :cond_1

    .line 10363
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Permission Denial: cancelIntentSender() from pid="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", uid="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " is not allowed to cancel packges "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v6, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v6, v6, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 10368
    .local v2, "msg":Ljava/lang/String;
    const-string v5, "ActivityManager"

    invoke-static {v5, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10369
    new-instance v5, Ljava/lang/SecurityException;

    invoke-direct {v5, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v5
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10371
    .end local v2    # "msg":Ljava/lang/String;
    .end local v4    # "uid":I
    :catch_0
    move-exception v1

    .line 10372
    .local v1, "e":Landroid/os/RemoteException;
    :try_start_2
    new-instance v5, Ljava/lang/SecurityException;

    invoke-direct {v5, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/Throwable;)V

    throw v5

    .line 10375
    .end local v1    # "e":Landroid/os/RemoteException;
    .end local v3    # "rec":Lcom/android/server/am/PendingIntentRecord;
    :catchall_0
    move-exception v5

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v5

    .line 10374
    .restart local v3    # "rec":Lcom/android/server/am/PendingIntentRecord;
    .restart local v4    # "uid":I
    :cond_1
    const/4 v5, 0x1

    :try_start_3
    invoke-virtual {p0, v3, v5}, Lcom/android/server/am/ActivityManagerService;->cancelIntentSenderLocked(Lcom/android/server/am/PendingIntentRecord;Z)V

    .line 10375
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_0
.end method

.method cancelIntentSenderLocked(Lcom/android/server/am/PendingIntentRecord;Z)V
    .locals 2
    .param p1, "rec"    # Lcom/android/server/am/PendingIntentRecord;
    .param p2, "cleanActivity"    # Z

    .prologue
    .line 10379
    const/4 v0, 0x1

    iput-boolean v0, p1, Lcom/android/server/am/PendingIntentRecord;->canceled:Z

    .line 10380
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    invoke-virtual {v0, v1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 10382
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mGrabedIntentSenderRecords:Ljava/util/HashMap;

    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    invoke-virtual {v0, v1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 10384
    if-eqz p2, :cond_0

    iget-object v0, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v0, v0, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;

    if-eqz v0, :cond_0

    .line 10385
    iget-object v0, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v0, v0, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->ref:Ljava/lang/ref/WeakReference;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z

    .line 10387
    :cond_0
    return-void
.end method

.method checkAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;)Z
    .locals 3
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 21649
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v1, v2, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_1

    .line 21650
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ContentProviderRecord;

    .line 21651
    .local v0, "cpr":Lcom/android/server/am/ContentProviderRecord;
    iget-object v2, v0, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    if-ne v2, p1, :cond_0

    .line 21652
    const/4 v2, 0x1

    .line 21655
    .end local v0    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :goto_1
    return v2

    .line 21649
    .restart local v0    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_0
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 21655
    .end local v0    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_1
    const/4 v2, 0x0

    goto :goto_1
.end method

.method checkAppSwitchAllowedLocked(IIIILjava/lang/String;)Z
    .locals 10
    .param p1, "sourcePid"    # I
    .param p2, "sourceUid"    # I
    .param p3, "callingPid"    # I
    .param p4, "callingUid"    # I
    .param p5, "name"    # Ljava/lang/String;

    .prologue
    .line 15572
    iget-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppSwitchesAllowedTime:J

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    cmp-long v0, v0, v2

    if-gez v0, :cond_0

    .line 15573
    const/4 v0, 0x1

    .line 15605
    :goto_0
    return v0

    .line 15577
    :cond_0
    const/4 v9, -0x1

    .line 15579
    .local v9, "perm":I
    const/4 v1, 0x0

    const-string v2, "android.permission.STOP_APP_SWITCHES"

    const/4 v5, -0x1

    const/4 v6, 0x0

    const/4 v7, 0x1

    const/4 v8, 0x0

    move-object v0, p0

    move v3, p1

    move v4, p2

    invoke-virtual/range {v0 .. v8}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Landroid/content/Intent;Ljava/lang/String;IIILjava/lang/String;ZZ)I

    move-result v9

    .line 15589
    if-nez v9, :cond_1

    .line 15590
    const/4 v0, 0x1

    goto :goto_0

    .line 15595
    :cond_1
    const/4 v0, -0x1

    if-eq p4, v0, :cond_2

    if-eq p4, p2, :cond_2

    .line 15596
    const-string v1, "android.permission.STOP_APP_SWITCHES"

    const/4 v4, -0x1

    const/4 v5, 0x1

    move-object v0, p0

    move v2, p3

    move v3, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v9

    .line 15599
    if-nez v9, :cond_2

    .line 15600
    const/4 v0, 0x1

    goto :goto_0

    .line 15604
    :cond_2
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v1, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " request from "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " stopped"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15605
    const/4 v0, 0x0

    goto :goto_0
.end method

.method checkAuthorityGrants(ILandroid/content/pm/ProviderInfo;IZ)Z
    .locals 4
    .param p1, "callingUid"    # I
    .param p2, "cpi"    # Landroid/content/pm/ProviderInfo;
    .param p3, "userId"    # I
    .param p4, "checkUser"    # Z

    .prologue
    .line 14157
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/util/ArrayMap;

    .line 14158
    .local v2, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-eqz v2, :cond_2

    .line 14159
    invoke-virtual {v2}, Landroid/util/ArrayMap;->size()I

    move-result v3

    add-int/lit8 v1, v3, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_2

    .line 14160
    invoke-virtual {v2, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$GrantUri;

    .line 14161
    .local v0, "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    iget v3, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    if-eq v3, p3, :cond_0

    if-nez p4, :cond_1

    .line 14162
    :cond_0
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {p0, v3, p2}, Lcom/android/server/am/ActivityManagerService;->matchesProvider(Landroid/net/Uri;Landroid/content/pm/ProviderInfo;)Z

    move-result v3

    if-eqz v3, :cond_1

    .line 14163
    const/4 v3, 0x1

    .line 14168
    .end local v0    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    .end local v1    # "i":I
    :goto_1
    return v3

    .line 14159
    .restart local v0    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    .restart local v1    # "i":I
    :cond_1
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 14168
    .end local v0    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    .end local v1    # "i":I
    :cond_2
    const/4 v3, 0x0

    goto :goto_1
.end method

.method checkCallingPermission(Ljava/lang/String;)I
    .locals 2
    .param p1, "permission"    # Ljava/lang/String;

    .prologue
    .line 11297
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-static {v1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1

    invoke-virtual {p0, p1, v0, v1}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v0

    return v0
.end method

.method checkComponentPermission(Landroid/content/Intent;Ljava/lang/String;IIILjava/lang/String;ZZ)I
    .locals 16
    .param p1, "intent"    # Landroid/content/Intent;
    .param p2, "permission"    # Ljava/lang/String;
    .param p3, "pid"    # I
    .param p4, "uid"    # I
    .param p5, "owningUid"    # I
    .param p6, "destPackageName"    # Ljava/lang/String;
    .param p7, "exported"    # Z
    .param p8, "allowLaunchIntent"    # Z

    .prologue
    .line 11058
    if-eqz p4, :cond_0

    sget v4, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    move/from16 v0, p3

    if-ne v0, v4, :cond_1

    .line 11059
    :cond_0
    const/4 v4, 0x0

    .line 11151
    :goto_0
    return v4

    :cond_1
    move-object/from16 v4, p0

    move-object/from16 v5, p1

    move/from16 v6, p3

    move/from16 v7, p4

    move/from16 v8, p5

    move-object/from16 v9, p6

    move/from16 v10, p8

    .line 11062
    invoke-virtual/range {v4 .. v10}, Lcom/android/server/am/ActivityManagerService;->checkContainerAppPermission(Landroid/content/Intent;IIILjava/lang/String;Z)I

    move-result v13

    .line 11063
    .local v13, "containerAppPermission":I
    const/4 v4, -0x1

    if-ne v13, v4, :cond_2

    .line 11064
    const-string v4, "ActivityManager"

    const-string/jumbo v5, "return DENIED"

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 11065
    const/4 v4, -0x1

    goto :goto_0

    .line 11071
    :cond_2
    const/16 v4, 0x2710

    move/from16 v0, p4

    if-lt v0, v4, :cond_9

    .line 11074
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    move/from16 v0, p4

    move-object/from16 v1, p2

    invoke-interface {v4, v0, v1}, Landroid/content/pm/IPackageManager;->AASA_managedPermissionByUID(ILjava/lang/String;)I

    move-result v12

    .line 11075
    .local v12, "aasaRet":I
    const/4 v4, 0x1

    if-ne v12, v4, :cond_3

    .line 11077
    const/4 v4, 0x0

    goto :goto_0

    .line 11078
    :cond_3
    const/4 v4, 0x2

    if-ne v12, v4, :cond_4

    .line 11079
    sput v12, Lcom/android/server/am/ActivityManagerService;->mCMManagedPermissionError:I

    .line 11080
    sput-object p2, Lcom/android/server/am/ActivityManagerService;->mCMErrorPermissionName:Ljava/lang/String;

    .line 11081
    sput p4, Lcom/android/server/am/ActivityManagerService;->mCMErrorPackageUID:I

    .line 11082
    const-string v4, "AASAActivity"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "reason = "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    sget v6, Lcom/android/server/am/ActivityManagerService;->mCMManagedPermissionError:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", PM denid ="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, p4

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " pm="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p2

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11083
    const/4 v4, -0x1

    goto :goto_0

    .line 11084
    :cond_4
    const/4 v4, 0x5

    if-ne v12, v4, :cond_5

    .line 11085
    sput p4, Lcom/android/server/am/ActivityManagerService;->mIsSPDErrorUID:I

    .line 11086
    const/4 v4, 0x1

    sput-boolean v4, Lcom/android/server/am/ActivityManagerService;->mIsSPDError:Z

    .line 11087
    const-string v4, "MGSAASA"

    const-string v5, "Crashed by SPD rules"

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11088
    const-string v4, "AASAActivity"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "reason = "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", PM denid ="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, p4

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " pm="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p2

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11089
    const/4 v4, -0x1

    goto/16 :goto_0

    .line 11090
    :cond_5
    const/4 v4, 0x4

    if-ne v12, v4, :cond_6

    .line 11092
    const/4 v4, -0x1

    goto/16 :goto_0

    .line 11093
    :cond_6
    const/4 v4, 0x3

    if-ne v12, v4, :cond_9

    .line 11094
    const/4 v11, 0x0

    .line 11095
    .local v11, "aasaPackageName":Ljava/lang/String;
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    monitor-enter v5
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 11097
    :try_start_1
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    add-int/lit8 v14, v4, -0x1

    .local v14, "i":I
    :goto_1
    if-ltz v14, :cond_7

    .line 11098
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/am/ProcessRecord;

    .line 11099
    .local v15, "pr":Lcom/android/server/am/ProcessRecord;
    if-eqz v15, :cond_8

    .line 11101
    iget v4, v15, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v0, p3

    if-ne v4, v0, :cond_8

    .line 11102
    iget-object v4, v15, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    if-eqz v4, :cond_8

    .line 11103
    iget-object v4, v15, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v11, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 11109
    .end local v15    # "pr":Lcom/android/server/am/ProcessRecord;
    :cond_7
    monitor-exit v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11111
    if-eqz v11, :cond_9

    .line 11113
    :try_start_2
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-interface {v4, v11, v0}, Landroid/content/pm/IPackageManager;->AASA_managedPermission(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    move-result v12

    .line 11114
    const/4 v4, 0x1

    if-ne v12, v4, :cond_a

    .line 11116
    const/4 v4, 0x0

    goto/16 :goto_0

    .line 11097
    .restart local v15    # "pr":Lcom/android/server/am/ProcessRecord;
    :cond_8
    add-int/lit8 v14, v14, -0x1

    goto :goto_1

    .line 11109
    .end local v14    # "i":I
    .end local v15    # "pr":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v4

    :try_start_3
    monitor-exit v5
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v4
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0

    .line 11148
    .end local v11    # "aasaPackageName":Ljava/lang/String;
    .end local v12    # "aasaRet":I
    :catch_0
    move-exception v4

    .line 11151
    :cond_9
    move-object/from16 v0, p2

    move/from16 v1, p4

    move/from16 v2, p5

    move/from16 v3, p7

    invoke-static {v0, v1, v2, v3}, Landroid/app/ActivityManager;->checkComponentPermission(Ljava/lang/String;IIZ)I

    move-result v4

    goto/16 :goto_0

    .line 11117
    .restart local v11    # "aasaPackageName":Ljava/lang/String;
    .restart local v12    # "aasaRet":I
    .restart local v14    # "i":I
    :cond_a
    const/4 v4, 0x2

    if-ne v12, v4, :cond_b

    .line 11118
    add-int/lit8 v4, v12, 0x1e

    :try_start_5
    sput v4, Lcom/android/server/am/ActivityManagerService;->mCMManagedPermissionError:I

    .line 11119
    sput-object p2, Lcom/android/server/am/ActivityManagerService;->mCMErrorPermissionName:Ljava/lang/String;

    .line 11120
    const/4 v4, -0x1

    sput v4, Lcom/android/server/am/ActivityManagerService;->mCMErrorPackageUID:I

    .line 11121
    sput-object v11, Lcom/android/server/am/ActivityManagerService;->mCMErrorPackageName:Ljava/lang/String;

    .line 11122
    const-string v4, "AASAActivity"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "reason = "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    sget v6, Lcom/android/server/am/ActivityManagerService;->mCMManagedPermissionError:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", PM denid ="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, p4

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " pm="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p2

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11124
    const/4 v4, -0x1

    goto/16 :goto_0

    .line 11125
    :cond_b
    const/4 v4, 0x5

    if-ne v12, v4, :cond_c

    .line 11126
    sput-object v11, Lcom/android/server/am/ActivityManagerService;->mIsSPDErrorPackage:Ljava/lang/String;

    .line 11127
    const/4 v4, 0x1

    sput-boolean v4, Lcom/android/server/am/ActivityManagerService;->mIsSPDError:Z

    .line 11128
    const-string v4, "MGSAASA"

    const-string v5, "Crashed by SPD rules"

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11129
    const-string v4, "AASAActivity"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "reason = 30"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", PM denid ="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, p4

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " pm="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p2

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11130
    const/4 v4, -0x1

    goto/16 :goto_0

    .line 11131
    :cond_c
    const/4 v4, 0x4

    if-ne v12, v4, :cond_9

    .line 11134
    add-int/lit8 v4, v12, 0x1e

    sput v4, Lcom/android/server/am/ActivityManagerService;->mCMManagedPermissionError:I

    .line 11135
    sput-object p2, Lcom/android/server/am/ActivityManagerService;->mCMErrorPermissionName:Ljava/lang/String;

    .line 11136
    sput p4, Lcom/android/server/am/ActivityManagerService;->mCMErrorPackageUID:I

    .line 11137
    sput-object v11, Lcom/android/server/am/ActivityManagerService;->mCMErrorPackageName:Ljava/lang/String;

    .line 11138
    const-string v4, "AASAActivity"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "mCMErrorPackageUID = "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, p4

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11139
    const-string v4, "AASAActivity"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "reason = "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    sget v6, Lcom/android/server/am/ActivityManagerService;->mCMManagedPermissionError:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", PM denid ="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, p4

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " pm="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p2

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_0

    .line 11140
    const/4 v4, -0x1

    goto/16 :goto_0
.end method

.method checkComponentPermission(Ljava/lang/String;IIIZ)I
    .locals 7
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "pid"    # I
    .param p3, "uid"    # I
    .param p4, "owningUid"    # I
    .param p5, "exported"    # Z

    .prologue
    .line 11158
    sget v4, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-ne p2, v4, :cond_0

    .line 11159
    const/4 v4, 0x0

    .line 11245
    :goto_0
    return v4

    .line 11165
    :cond_0
    const/16 v4, 0x2710

    if-lt p3, v4, :cond_7

    .line 11168
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    invoke-interface {v4, p3, p1}, Landroid/content/pm/IPackageManager;->AASA_managedPermissionByUID(ILjava/lang/String;)I

    move-result v1

    .line 11169
    .local v1, "aasaRet":I
    const/4 v4, 0x1

    if-ne v1, v4, :cond_1

    .line 11171
    const/4 v4, 0x0

    goto :goto_0

    .line 11172
    :cond_1
    const/4 v4, 0x2

    if-ne v1, v4, :cond_2

    .line 11173
    sput v1, Lcom/android/server/am/ActivityManagerService;->mCMManagedPermissionError:I

    .line 11174
    sput-object p1, Lcom/android/server/am/ActivityManagerService;->mCMErrorPermissionName:Ljava/lang/String;

    .line 11175
    sput p3, Lcom/android/server/am/ActivityManagerService;->mCMErrorPackageUID:I

    .line 11176
    const-string v4, "AASAActivity"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "reason = "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    sget v6, Lcom/android/server/am/ActivityManagerService;->mCMManagedPermissionError:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", PM denid ="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " pm="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11177
    const/4 v4, -0x1

    goto :goto_0

    .line 11178
    :cond_2
    const/4 v4, 0x5

    if-ne v1, v4, :cond_3

    .line 11179
    sput p3, Lcom/android/server/am/ActivityManagerService;->mIsSPDErrorUID:I

    .line 11180
    const/4 v4, 0x1

    sput-boolean v4, Lcom/android/server/am/ActivityManagerService;->mIsSPDError:Z

    .line 11181
    const-string v4, "MGSAASA"

    const-string v5, "Crashed by SPD rules"

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11182
    const-string v4, "AASAActivity"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "reason = "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", PM denid ="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " pm="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11183
    const/4 v4, -0x1

    goto/16 :goto_0

    .line 11184
    :cond_3
    const/4 v4, 0x4

    if-ne v1, v4, :cond_4

    .line 11186
    const/4 v4, -0x1

    goto/16 :goto_0

    .line 11187
    :cond_4
    const/4 v4, 0x3

    if-ne v1, v4, :cond_7

    .line 11188
    const/4 v0, 0x0

    .line 11189
    .local v0, "aasaPackageName":Ljava/lang/String;
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    monitor-enter v5
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 11191
    :try_start_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    add-int/lit8 v2, v4, -0x1

    .local v2, "i":I
    :goto_1
    if-ltz v2, :cond_5

    .line 11192
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 11193
    .local v3, "pr":Lcom/android/server/am/ProcessRecord;
    if-eqz v3, :cond_6

    .line 11195
    iget v4, v3, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v4, p2, :cond_6

    .line 11196
    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    if-eqz v4, :cond_6

    .line 11197
    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v0, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 11203
    .end local v3    # "pr":Lcom/android/server/am/ProcessRecord;
    :cond_5
    monitor-exit v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11205
    if-eqz v0, :cond_7

    .line 11207
    :try_start_2
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    invoke-interface {v4, v0, p1}, Landroid/content/pm/IPackageManager;->AASA_managedPermission(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    move-result v1

    .line 11208
    const/4 v4, 0x1

    if-ne v1, v4, :cond_8

    .line 11210
    const/4 v4, 0x0

    goto/16 :goto_0

    .line 11191
    .restart local v3    # "pr":Lcom/android/server/am/ProcessRecord;
    :cond_6
    add-int/lit8 v2, v2, -0x1

    goto :goto_1

    .line 11203
    .end local v2    # "i":I
    .end local v3    # "pr":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v4

    :try_start_3
    monitor-exit v5
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v4
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0

    .line 11242
    .end local v0    # "aasaPackageName":Ljava/lang/String;
    .end local v1    # "aasaRet":I
    :catch_0
    move-exception v4

    .line 11245
    :cond_7
    invoke-static {p1, p3, p4, p5}, Landroid/app/ActivityManager;->checkComponentPermission(Ljava/lang/String;IIZ)I

    move-result v4

    goto/16 :goto_0

    .line 11211
    .restart local v0    # "aasaPackageName":Ljava/lang/String;
    .restart local v1    # "aasaRet":I
    .restart local v2    # "i":I
    :cond_8
    const/4 v4, 0x2

    if-ne v1, v4, :cond_9

    .line 11212
    add-int/lit8 v4, v1, 0x1e

    :try_start_5
    sput v4, Lcom/android/server/am/ActivityManagerService;->mCMManagedPermissionError:I

    .line 11213
    sput-object p1, Lcom/android/server/am/ActivityManagerService;->mCMErrorPermissionName:Ljava/lang/String;

    .line 11214
    const/4 v4, -0x1

    sput v4, Lcom/android/server/am/ActivityManagerService;->mCMErrorPackageUID:I

    .line 11215
    sput-object v0, Lcom/android/server/am/ActivityManagerService;->mCMErrorPackageName:Ljava/lang/String;

    .line 11216
    const-string v4, "AASAActivity"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "reason = "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    sget v6, Lcom/android/server/am/ActivityManagerService;->mCMManagedPermissionError:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", PM denid ="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " pm="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11218
    const/4 v4, -0x1

    goto/16 :goto_0

    .line 11219
    :cond_9
    const/4 v4, 0x5

    if-ne v1, v4, :cond_a

    .line 11220
    sput-object v0, Lcom/android/server/am/ActivityManagerService;->mIsSPDErrorPackage:Ljava/lang/String;

    .line 11221
    const/4 v4, 0x1

    sput-boolean v4, Lcom/android/server/am/ActivityManagerService;->mIsSPDError:Z

    .line 11222
    const-string v4, "MGSAASA"

    const-string v5, "Crashed by SPD rules"

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11223
    const-string v4, "AASAActivity"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "reason = 30"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", PM denid ="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " pm="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11224
    const/4 v4, -0x1

    goto/16 :goto_0

    .line 11225
    :cond_a
    const/4 v4, 0x4

    if-ne v1, v4, :cond_7

    .line 11228
    add-int/lit8 v4, v1, 0x1e

    sput v4, Lcom/android/server/am/ActivityManagerService;->mCMManagedPermissionError:I

    .line 11229
    sput-object p1, Lcom/android/server/am/ActivityManagerService;->mCMErrorPermissionName:Ljava/lang/String;

    .line 11230
    sput p3, Lcom/android/server/am/ActivityManagerService;->mCMErrorPackageUID:I

    .line 11231
    sput-object v0, Lcom/android/server/am/ActivityManagerService;->mCMErrorPackageName:Ljava/lang/String;

    .line 11232
    const-string v4, "AASAActivity"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "mCMErrorPackageUID = "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 11233
    const-string v4, "AASAActivity"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "reason = "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    sget v6, Lcom/android/server/am/ActivityManagerService;->mCMManagedPermissionError:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", PM denid ="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " pm="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_0

    .line 11234
    const/4 v4, -0x1

    goto/16 :goto_0
.end method

.method checkContainerAppPermission(Landroid/content/Intent;IIILjava/lang/String;Z)I
    .locals 34
    .param p1, "intent"    # Landroid/content/Intent;
    .param p2, "pid"    # I
    .param p3, "uid"    # I
    .param p4, "owningUid"    # I
    .param p5, "destPackageName"    # Ljava/lang/String;
    .param p6, "allowLaunchIntent"    # Z

    .prologue
    .line 10807
    const/16 v28, 0x0

    .line 10808
    .local v28, "srcPackageName":Ljava/lang/String;
    const/16 v27, 0x0

    .line 10809
    .local v27, "pr":Lcom/android/server/am/ProcessRecord;
    const/16 v33, 0x0

    .line 10811
    .local v33, "userId":I
    const/16 v29, 0x0

    .line 10812
    .local v29, "src_allowCategory":Ljava/lang/String;
    const/16 v17, 0x0

    .line 10813
    .local v17, "dst_allowCategory":Ljava/lang/String;
    const/16 v19, 0x0

    .line 10814
    .local v19, "dst_category":I
    const/16 v30, 0x0

    .line 10815
    .local v30, "src_allowContainerCategory":Ljava/lang/String;
    const/16 v32, 0x0

    .line 10816
    .local v32, "src_destPackageName":[Ljava/lang/String;
    const/16 v18, 0x0

    .line 10817
    .local v18, "dst_allowContainerCategory":Ljava/lang/String;
    const/16 v31, 0x0

    .line 10818
    .local v31, "src_category":I
    const-string v25, "checkContainerAppPermission"

    .line 10822
    .local v25, "method":Ljava/lang/String;
    const/4 v4, -0x1

    move/from16 v0, p4

    if-eq v0, v4, :cond_0

    const/4 v4, -0x1

    move/from16 v0, p3

    if-ne v0, v4, :cond_1

    .line 10823
    :cond_0
    const/4 v4, 0x0

    .line 10990
    :goto_0
    return v4

    .line 10826
    :cond_1
    monitor-enter p0

    .line 10827
    :try_start_0
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    add-int/lit8 v21, v4, -0x1

    .local v21, "i":I
    :goto_1
    if-ltz v21, :cond_2

    .line 10828
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v21

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    move-object v0, v4

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    move-object/from16 v27, v0

    .line 10829
    if-eqz v27, :cond_5

    .line 10830
    move-object/from16 v0, v27

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v0, p2

    if-ne v4, v0, :cond_5

    .line 10831
    move-object/from16 v0, v27

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    if-eqz v4, :cond_5

    .line 10832
    move-object/from16 v0, v27

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v0, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v28, v0

    .line 10833
    invoke-static/range {p3 .. p3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v33

    .line 10839
    :cond_2
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10842
    if-eqz v28, :cond_3

    if-nez p5, :cond_6

    .line 10843
    :cond_3
    if-nez p5, :cond_4

    .line 10844
    const-string v4, "ActivityManager"

    const-string/jumbo v5, "destPackageName = null"

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10846
    :cond_4
    const/4 v4, 0x0

    goto :goto_0

    .line 10827
    :cond_5
    add-int/lit8 v21, v21, -0x1

    goto :goto_1

    .line 10839
    .end local v21    # "i":I
    :catchall_0
    move-exception v4

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v4

    .line 10850
    .restart local v21    # "i":I
    :cond_6
    const/16 v24, 0x0

    .line 10851
    .local v24, "isPermissionGranted":Z
    const-string/jumbo v4, "persist.security.ams.enforcing"

    const-string v5, "0"

    invoke-static {v4, v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    invoke-static {v4}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v15

    .line 10852
    .local v15, "amsEnforceValue":I
    const/4 v7, 0x0

    .line 10853
    .local v7, "isSourceTrusted":Z
    const/4 v9, 0x0

    .line 10857
    .local v9, "isDestTrusted":Z
    :try_start_2
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    const/16 v5, 0x80

    invoke-static/range {p3 .. p3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v10

    move-object/from16 v0, v28

    invoke-interface {v4, v0, v5, v10}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v6

    .line 10860
    .local v6, "srcAppInfo":Landroid/content/pm/ApplicationInfo;
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    const/16 v5, 0x80

    invoke-static/range {p4 .. p4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v10

    move-object/from16 v0, p5

    invoke-interface {v4, v0, v5, v10}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v8

    .line 10863
    .local v8, "destAppInfo":Landroid/content/pm/ApplicationInfo;
    if-eqz v6, :cond_7

    if-nez v8, :cond_8

    .line 10864
    :cond_7
    const/4 v4, 0x0

    goto/16 :goto_0

    .line 10868
    :cond_8
    if-eqz p1, :cond_9

    .line 10869
    invoke-virtual/range {p1 .. p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v4

    if-eqz v4, :cond_9

    .line 10870
    invoke-virtual/range {p1 .. p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v4

    invoke-virtual {v4}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v4

    const-string v5, "SwitchB2BActivity"

    invoke-virtual {v4, v5}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v4

    if-eqz v4, :cond_9

    const-string v4, "com.sec.knox.switcher"

    move-object/from16 v0, p5

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_9

    invoke-virtual/range {p1 .. p1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    const-string v5, "android.intent.action.MAIN"

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_9

    .line 10873
    const-string v4, "ActivityManager"

    const-string v5, "Proxy App Authenticated based on intent type."

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10874
    const/4 v4, 0x0

    goto/16 :goto_0

    .line 10879
    :cond_9
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v5, "persona"

    invoke-virtual {v4, v5}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v26

    check-cast v26, Landroid/os/PersonaManager;

    .line 10880
    .local v26, "persona":Landroid/os/PersonaManager;
    invoke-static {}, Landroid/os/PersonaManager;->getBbcEnabled()I
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_1

    move-result v16

    .line 10881
    .local v16, "bbcId":I
    const/16 v22, 0x0

    .line 10883
    .local v22, "isAllowCategoryPass":Z
    if-lez v33, :cond_12

    if-lez v16, :cond_12

    move/from16 v0, v33

    move/from16 v1, v16

    if-ne v0, v1, :cond_12

    .line 10884
    :try_start_3
    iget-object v0, v6, Landroid/content/pm/ApplicationInfo;->bbcallowCategory:Ljava/lang/String;

    move-object/from16 v29, v0

    .line 10885
    iget-object v0, v8, Landroid/content/pm/ApplicationInfo;->bbcallowCategory:Ljava/lang/String;

    move-object/from16 v17, v0

    .line 10886
    iget v0, v8, Landroid/content/pm/ApplicationInfo;->bbccategory:I

    move/from16 v19, v0

    .line 10887
    iget v0, v6, Landroid/content/pm/ApplicationInfo;->bbccategory:I

    move/from16 v31, v0

    .line 10888
    move-object/from16 v0, v29

    move/from16 v1, v31

    move-object/from16 v2, v17

    move/from16 v3, v19

    invoke-static {v0, v1, v2, v3}, Landroid/app/ActivityManager;->allowRuleCheck(Ljava/lang/String;ILjava/lang/String;I)Z
    :try_end_3
    .catch Ljava/lang/NullPointerException; {:try_start_3 .. :try_end_3} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_1

    move-result v22

    .line 10901
    :goto_2
    const/16 v23, 0x1

    .line 10902
    .local v23, "isDestPkgAllowed":Z
    :try_start_4
    invoke-static/range {p3 .. p4}, Landroid/os/UserHandle;->isSameUser(II)Z

    move-result v4

    if-nez v4, :cond_b

    invoke-static/range {p4 .. p4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    const/16 v5, 0x63

    if-le v4, v5, :cond_b

    invoke-static/range {p4 .. p4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    const/16 v5, 0xc3

    if-ge v4, v5, :cond_b

    .line 10904
    iget v4, v6, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit16 v4, v4, 0x81

    if-nez v4, :cond_14

    .line 10905
    const-string/jumbo v4, "platform"

    iget-object v5, v6, Landroid/content/pm/ApplicationInfo;->seinfo:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v4

    if-nez v4, :cond_13

    .line 10906
    const/16 v23, 0x0

    .line 10920
    :cond_a
    :goto_3
    if-nez v23, :cond_b

    .line 10921
    const-string v4, "ACROSSKNOX PERMISSION CHECK"

    const-string v5, " isDestPkgAllowed: real value FALSE, change to TRUE!!!"

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10922
    sget-object v4, Lcom/android/server/am/ActivityManagerService;->mAMSLog:Landroid/content/pm/AMSLogger;

    if-eqz v24, :cond_15

    if-eqz v23, :cond_15

    const/4 v5, 0x1

    :goto_4
    const-string v12, "checkContainerAppPermission"

    const/4 v13, 0x1

    move-object/from16 v10, p1

    move/from16 v11, p2

    invoke-virtual/range {v4 .. v13}, Landroid/content/pm/AMSLogger;->log(ZLandroid/content/pm/ApplicationInfo;ZLandroid/content/pm/ApplicationInfo;ZLandroid/content/Intent;ILjava/lang/String;Z)V

    .line 10923
    const/16 v23, 0x1

    .line 10927
    :cond_b
    iget-object v0, v6, Landroid/content/pm/ApplicationInfo;->allowContainerCategory:Ljava/lang/String;

    move-object/from16 v30, v0

    .line 10928
    iget-object v0, v8, Landroid/content/pm/ApplicationInfo;->allowContainerCategory:Ljava/lang/String;

    move-object/from16 v18, v0

    .line 10931
    if-eqz v30, :cond_c

    const-string v4, ""

    move-object/from16 v0, v30

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_c

    .line 10932
    move-object/from16 v0, v30

    move/from16 v1, v19

    invoke-static {v0, v1}, Landroid/app/ActivityManager;->isContainerAllowedPackage(Ljava/lang/String;I)Z

    move-result v7

    .line 10935
    :cond_c
    if-eqz v18, :cond_d

    const-string v4, ""

    move-object/from16 v0, v18

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_d

    .line 10936
    move-object/from16 v0, v18

    move/from16 v1, v31

    invoke-static {v0, v1}, Landroid/app/ActivityManager;->isContainerAllowedPackage(Ljava/lang/String;I)Z

    move-result v9

    .line 10940
    :cond_d
    iget v4, v8, Landroid/content/pm/ApplicationInfo;->allowedAgentType:I

    const/4 v5, 0x1

    if-ne v4, v5, :cond_17

    .line 10942
    if-nez v22, :cond_e

    if-nez v7, :cond_e

    if-nez v9, :cond_e

    if-eqz p6, :cond_16

    :cond_e
    const/16 v24, 0x1

    .line 10961
    :goto_5
    if-eqz v24, :cond_f

    if-nez v23, :cond_11

    :cond_f
    if-nez v7, :cond_10

    if-eqz v9, :cond_11

    .line 10962
    :cond_10
    const-string v4, "ActivityManager"

    const-string v5, "Denial occuring with trusted src or dest"

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_1

    .line 10966
    :cond_11
    :try_start_5
    sget-object v4, Lcom/android/server/am/ActivityManagerService;->mAMSLog:Landroid/content/pm/AMSLogger;

    if-eqz v24, :cond_1c

    if-eqz v23, :cond_1c

    const/4 v5, 0x1

    :goto_6
    const-string v12, "checkContainerAppPermission"

    const/4 v13, 0x1

    move-object/from16 v10, p1

    move/from16 v11, p2

    invoke-virtual/range {v4 .. v13}, Landroid/content/pm/AMSLogger;->log(ZLandroid/content/pm/ApplicationInfo;ZLandroid/content/pm/ApplicationInfo;ZLandroid/content/Intent;ILjava/lang/String;Z)V
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_2
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_1

    .line 10971
    :goto_7
    packed-switch v15, :pswitch_data_0

    .line 10985
    .end local v6    # "srcAppInfo":Landroid/content/pm/ApplicationInfo;
    .end local v8    # "destAppInfo":Landroid/content/pm/ApplicationInfo;
    .end local v16    # "bbcId":I
    .end local v22    # "isAllowCategoryPass":Z
    .end local v23    # "isDestPkgAllowed":Z
    .end local v26    # "persona":Landroid/os/PersonaManager;
    :goto_8
    :pswitch_0
    if-nez v24, :cond_20

    .line 10986
    const-string v4, "ActivityManager"

    const-string/jumbo v5, "isPermissionGranted is false"

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10987
    const/4 v4, -0x1

    goto/16 :goto_0

    .line 10890
    .restart local v6    # "srcAppInfo":Landroid/content/pm/ApplicationInfo;
    .restart local v8    # "destAppInfo":Landroid/content/pm/ApplicationInfo;
    .restart local v16    # "bbcId":I
    .restart local v22    # "isAllowCategoryPass":Z
    .restart local v26    # "persona":Landroid/os/PersonaManager;
    :cond_12
    :try_start_6
    iget-object v0, v6, Landroid/content/pm/ApplicationInfo;->allowCategory:Ljava/lang/String;

    move-object/from16 v29, v0

    .line 10891
    iget-object v0, v6, Landroid/content/pm/ApplicationInfo;->destPackageName:[Ljava/lang/String;

    move-object/from16 v32, v0

    .line 10892
    iget v0, v8, Landroid/content/pm/ApplicationInfo;->category:I

    move/from16 v19, v0

    .line 10893
    iget v0, v6, Landroid/content/pm/ApplicationInfo;->category:I

    move/from16 v31, v0

    .line 10894
    move-object/from16 v0, v29

    move/from16 v1, v19

    invoke-static {v0, v1}, Landroid/app/ActivityManager;->allowRuleCheck(Ljava/lang/String;I)Z
    :try_end_6
    .catch Ljava/lang/NullPointerException; {:try_start_6 .. :try_end_6} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_1

    move-result v22

    goto/16 :goto_2

    .line 10896
    :catch_0
    move-exception v20

    .line 10897
    .local v20, "e":Ljava/lang/NullPointerException;
    :try_start_7
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "allowRuleCheck, NullPointerException found"

    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, v20

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 10898
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "checkContainerAppPermission: srcPkgName="

    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, v28

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v10, ", src_category="

    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-static/range {v31 .. v31}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v10, ", destPkgName="

    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p5

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v10, ", dst_category = "

    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-static/range {v19 .. v19}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v10, ", dst_allowCategory ="

    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, v17

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_7
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_7} :catch_1

    goto/16 :goto_2

    .line 10980
    .end local v6    # "srcAppInfo":Landroid/content/pm/ApplicationInfo;
    .end local v8    # "destAppInfo":Landroid/content/pm/ApplicationInfo;
    .end local v16    # "bbcId":I
    .end local v20    # "e":Ljava/lang/NullPointerException;
    .end local v22    # "isAllowCategoryPass":Z
    .end local v26    # "persona":Landroid/os/PersonaManager;
    :catch_1
    move-exception v20

    .line 10981
    .local v20, "e":Landroid/os/RemoteException;
    const-string v4, "ActivityManager"

    const-string v5, "Could not check permissionManager enabled."

    move-object/from16 v0, v20

    invoke-static {v4, v5, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 10982
    const/16 v24, 0x0

    goto/16 :goto_8

    .line 10908
    .end local v20    # "e":Landroid/os/RemoteException;
    .restart local v6    # "srcAppInfo":Landroid/content/pm/ApplicationInfo;
    .restart local v8    # "destAppInfo":Landroid/content/pm/ApplicationInfo;
    .restart local v16    # "bbcId":I
    .restart local v22    # "isAllowCategoryPass":Z
    .restart local v23    # "isDestPkgAllowed":Z
    .restart local v26    # "persona":Landroid/os/PersonaManager;
    :cond_13
    :try_start_8
    move-object/from16 v0, p5

    move-object/from16 v1, v32

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->checkDestPkgNameInList(Ljava/lang/String;[Ljava/lang/String;)Z

    move-result v4

    if-nez v4, :cond_a

    .line 10909
    const/16 v23, 0x0

    goto/16 :goto_3

    .line 10913
    :cond_14
    move-object/from16 v0, p5

    move-object/from16 v1, v32

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService;->checkDestPkgNameInList(Ljava/lang/String;[Ljava/lang/String;)Z

    move-result v4

    if-nez v4, :cond_a

    .line 10914
    const/16 v23, 0x0

    goto/16 :goto_3

    .line 10922
    :cond_15
    const/4 v5, 0x0

    goto/16 :goto_4

    .line 10942
    :cond_16
    const/16 v24, 0x0

    goto/16 :goto_5

    .line 10949
    :cond_17
    iget v4, v6, Landroid/content/pm/ApplicationInfo;->agentType:I

    iget v5, v8, Landroid/content/pm/ApplicationInfo;->allowedAgentType:I

    and-int/2addr v4, v5

    if-eqz v4, :cond_18

    if-nez v22, :cond_19

    :cond_18
    move-object/from16 v0, v28

    move-object/from16 v1, p5

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_1a

    :cond_19
    const/16 v24, 0x1

    .line 10953
    :goto_9
    if-eqz v24, :cond_1b

    const-string v14, "AGENT GRANTED"

    .line 10954
    .local v14, "agentLog":Ljava/lang/String;
    :goto_a
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v4, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " - src:"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-object v5, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " dst:"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-object v5, v8, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " src agentType:"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget v5, v6, Landroid/content/pm/ApplicationInfo;->agentType:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " dest allowedAgentType:"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget v5, v8, Landroid/content/pm/ApplicationInfo;->allowedAgentType:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    goto/16 :goto_5

    .line 10949
    .end local v14    # "agentLog":Ljava/lang/String;
    :cond_1a
    const/16 v24, 0x0

    goto :goto_9

    .line 10953
    :cond_1b
    const-string v14, "AGENT DENIED "

    goto :goto_a

    .line 10966
    :cond_1c
    const/4 v5, 0x0

    goto/16 :goto_6

    .line 10967
    :catch_2
    move-exception v20

    .line 10968
    .local v20, "e":Ljava/lang/Exception;
    const-string v4, "ActivityManager"

    const-string v5, "Could not log AMSPolicy activity due to Exception: "

    move-object/from16 v0, v20

    invoke-static {v4, v5, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_8
    .catch Landroid/os/RemoteException; {:try_start_8 .. :try_end_8} :catch_1

    goto/16 :goto_7

    .line 10974
    .end local v20    # "e":Ljava/lang/Exception;
    :pswitch_1
    const/16 v24, 0x1

    .line 10975
    goto/16 :goto_8

    .line 10977
    :pswitch_2
    if-eqz v24, :cond_1d

    if-nez v23, :cond_1e

    :cond_1d
    if-eqz p6, :cond_1f

    :cond_1e
    const/16 v24, 0x1

    :goto_b
    goto/16 :goto_8

    :cond_1f
    const/16 v24, 0x0

    goto :goto_b

    .line 10990
    .end local v6    # "srcAppInfo":Landroid/content/pm/ApplicationInfo;
    .end local v8    # "destAppInfo":Landroid/content/pm/ApplicationInfo;
    .end local v16    # "bbcId":I
    .end local v22    # "isAllowCategoryPass":Z
    .end local v23    # "isDestPkgAllowed":Z
    .end local v26    # "persona":Landroid/os/PersonaManager;
    :cond_20
    const/4 v4, 0x0

    goto/16 :goto_0

    .line 10971
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_1
        :pswitch_0
        :pswitch_1
        :pswitch_2
    .end packed-switch
.end method

.method final checkExcessivePowerUsageLocked(Z)V
    .locals 28
    .param p1, "doKills"    # Z

    .prologue
    .line 25700
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 25702
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v6}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v5

    .line 25703
    .local v5, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    move/from16 v24, p1

    .line 25704
    .local v24, "doWakeKills":Z
    move/from16 v12, p1

    .line 25705
    .local v12, "doCpuKills":Z
    move-object/from16 v0, p0

    iget-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckRealtime:J

    const-wide/16 v14, 0x0

    cmp-long v6, v6, v14

    if-nez v6, :cond_0

    .line 25706
    const/16 v24, 0x0

    .line 25708
    :cond_0
    move-object/from16 v0, p0

    iget-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    const-wide/16 v14, 0x0

    cmp-long v6, v6, v14

    if-nez v6, :cond_1

    .line 25709
    const/4 v12, 0x0

    .line 25711
    :cond_1
    invoke-virtual {v5}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn()Z

    move-result v6

    if-eqz v6, :cond_2

    .line 25712
    const/16 v24, 0x0

    .line 25714
    :cond_2
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v20

    .line 25715
    .local v20, "curRealtime":J
    move-object/from16 v0, p0

    iget-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckRealtime:J

    sub-long v8, v20, v6

    .line 25716
    .local v8, "realtimeSince":J
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v22

    .line 25717
    .local v22, "curUptime":J
    move-object/from16 v0, p0

    iget-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    sub-long v16, v22, v6

    .line 25718
    .local v16, "uptimeSince":J
    move-wide/from16 v0, v20

    move-object/from16 v2, p0

    iput-wide v0, v2, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckRealtime:J

    .line 25719
    move-wide/from16 v0, v22

    move-object/from16 v2, p0

    iput-wide v0, v2, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    .line 25720
    const-wide/32 v6, 0x493e0

    cmp-long v6, v8, v6

    if-gez v6, :cond_3

    .line 25721
    const/16 v24, 0x0

    .line 25723
    :cond_3
    const-wide/32 v6, 0x493e0

    cmp-long v6, v16, v6

    if-gez v6, :cond_4

    .line 25724
    const/4 v12, 0x0

    .line 25726
    :cond_4
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v25

    .line 25727
    .local v25, "i":I
    :cond_5
    :goto_0
    if-lez v25, :cond_a

    .line 25728
    add-int/lit8 v25, v25, -0x1

    .line 25729
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v25

    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 25730
    .local v4, "app":Lcom/android/server/am/ProcessRecord;
    iget v6, v4, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v7, 0xc

    if-lt v6, v7, :cond_5

    .line 25732
    monitor-enter v5

    .line 25733
    :try_start_0
    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    iget v7, v4, Lcom/android/server/am/ProcessRecord;->pid:I

    move-wide/from16 v0, v20

    invoke-virtual {v5, v6, v7, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessWakeTime(IIJ)J

    move-result-wide v26

    .line 25735
    .local v26, "wtime":J
    monitor-exit v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 25736
    iget-wide v6, v4, Lcom/android/server/am/ProcessRecord;->lastWakeTime:J

    sub-long v10, v26, v6

    .line 25737
    .local v10, "wtimeUsed":J
    iget-wide v6, v4, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    iget-wide v14, v4, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    sub-long v18, v6, v14

    .line 25765
    .local v18, "cputimeUsed":J
    if-eqz v24, :cond_7

    const-wide/16 v6, 0x0

    cmp-long v6, v8, v6

    if-lez v6, :cond_7

    const-wide/16 v6, 0x64

    mul-long/2addr v6, v10

    div-long/2addr v6, v8

    const-wide/16 v14, 0x32

    cmp-long v6, v6, v14

    if-ltz v6, :cond_7

    .line 25767
    monitor-enter v5

    .line 25768
    :try_start_1
    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v7, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual/range {v5 .. v11}, Lcom/android/internal/os/BatteryStatsImpl;->reportExcessiveWakeLocked(ILjava/lang/String;JJ)V

    .line 25770
    monitor-exit v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 25773
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v6

    const-string v7, "CscFeature_Common_SupportDeviceReporting"

    invoke-virtual {v6, v7}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_6

    .line 25776
    const/16 v6, 0x190

    iget-object v7, v4, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v7, v7, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v13, v4, Lcom/android/server/am/ProcessRecord;->pid:I

    const/4 v14, 0x0

    move-object/from16 v0, p0

    invoke-direct {v0, v6, v7, v13, v14}, Lcom/android/server/am/ActivityManagerService;->sendAppStateMsg(ILjava/lang/String;II)V

    .line 25780
    :cond_6
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "excessive wake held "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v10, v11}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " during "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    const/4 v7, 0x1

    invoke-virtual {v4, v6, v7}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 25781
    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    iget-object v7, v4, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v6, v7}, Lcom/android/internal/app/ProcessStats$ProcessState;->reportExcessiveWake(Landroid/util/ArrayMap;)V

    goto/16 :goto_0

    .line 25735
    .end local v10    # "wtimeUsed":J
    .end local v18    # "cputimeUsed":J
    .end local v26    # "wtime":J
    :catchall_0
    move-exception v6

    :try_start_2
    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v6

    .line 25770
    .restart local v10    # "wtimeUsed":J
    .restart local v18    # "cputimeUsed":J
    .restart local v26    # "wtime":J
    :catchall_1
    move-exception v6

    :try_start_3
    monitor-exit v5
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v6

    .line 25782
    :cond_7
    if-eqz v12, :cond_9

    const-wide/16 v6, 0x0

    cmp-long v6, v16, v6

    if-lez v6, :cond_9

    const-wide/16 v6, 0x64

    mul-long v6, v6, v18

    div-long v6, v6, v16

    const-wide/16 v14, 0x19

    cmp-long v6, v6, v14

    if-ltz v6, :cond_9

    .line 25784
    monitor-enter v5

    .line 25785
    :try_start_4
    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v14, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v15, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object v13, v5

    invoke-virtual/range {v13 .. v19}, Lcom/android/internal/os/BatteryStatsImpl;->reportExcessiveCpuLocked(ILjava/lang/String;JJ)V

    .line 25787
    monitor-exit v5
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 25790
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v6

    const-string v7, "CscFeature_Common_SupportDeviceReporting"

    invoke-virtual {v6, v7}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_8

    .line 25793
    const/16 v6, 0x190

    iget-object v7, v4, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v7, v7, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v13, v4, Lcom/android/server/am/ProcessRecord;->pid:I

    const/4 v14, 0x0

    move-object/from16 v0, p0

    invoke-direct {v0, v6, v7, v13, v14}, Lcom/android/server/am/ActivityManagerService;->sendAppStateMsg(ILjava/lang/String;II)V

    .line 25797
    :cond_8
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "excessive cpu "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-wide/from16 v0, v18

    invoke-virtual {v6, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " during "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-wide/from16 v0, v16

    invoke-virtual {v6, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    const/4 v7, 0x1

    invoke-virtual {v4, v6, v7}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 25798
    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    iget-object v7, v4, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v6, v7}, Lcom/android/internal/app/ProcessStats$ProcessState;->reportExcessiveCpu(Landroid/util/ArrayMap;)V

    goto/16 :goto_0

    .line 25787
    :catchall_2
    move-exception v6

    :try_start_5
    monitor-exit v5
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    throw v6

    .line 25800
    :cond_9
    move-wide/from16 v0, v26

    iput-wide v0, v4, Lcom/android/server/am/ProcessRecord;->lastWakeTime:J

    .line 25801
    iget-wide v6, v4, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    iput-wide v6, v4, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    goto/16 :goto_0

    .line 25805
    .end local v4    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v10    # "wtimeUsed":J
    .end local v18    # "cputimeUsed":J
    .end local v26    # "wtime":J
    :cond_a
    return-void
.end method

.method public checkGrantUriPermission(ILjava/lang/String;Landroid/net/Uri;II)I
    .locals 6
    .param p1, "callingUid"    # I
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "uri"    # Landroid/net/Uri;
    .param p4, "modeFlags"    # I
    .param p5, "userId"    # I

    .prologue
    .line 11660
    const-string v0, "checkGrantUriPermission"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 11661
    monitor-enter p0

    .line 11662
    :try_start_0
    new-instance v3, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v0, 0x0

    invoke-direct {v3, p5, p3, v0}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    const/4 v5, -0x1

    move-object v0, p0

    move v1, p1

    move-object v2, p2

    move v4, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;II)I

    move-result v0

    monitor-exit p0

    return v0

    .line 11664
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method checkGrantUriPermissionFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;ILcom/android/server/am/ActivityManagerService$NeededUriGrants;I)Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    .locals 24
    .param p1, "callingUid"    # I
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "mode"    # I
    .param p5, "needed"    # Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    .param p6, "targetUserId"    # I

    .prologue
    .line 11741
    if-nez p2, :cond_0

    .line 11742
    new-instance v3, Ljava/lang/NullPointerException;

    const-string/jumbo v4, "targetPkg"

    invoke-direct {v3, v4}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 11745
    :cond_0
    if-nez p3, :cond_1

    .line 11746
    const/4 v3, 0x0

    .line 11812
    :goto_0
    return-object v3

    .line 11748
    :cond_1
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v18

    .line 11749
    .local v18, "data":Landroid/net/Uri;
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getClipData()Landroid/content/ClipData;

    move-result-object v16

    .line 11750
    .local v16, "clip":Landroid/content/ClipData;
    if-nez v18, :cond_2

    if-nez v16, :cond_2

    .line 11751
    const/4 v3, 0x0

    goto :goto_0

    .line 11754
    :cond_2
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getContentUserHint()I

    move-result v17

    .line 11755
    .local v17, "contentUserHint":I
    const/4 v3, -0x2

    move/from16 v0, v17

    if-ne v0, v3, :cond_3

    .line 11756
    invoke-static/range {p1 .. p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v17

    .line 11758
    :cond_3
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v22

    .line 11760
    .local v22, "pm":Landroid/content/pm/IPackageManager;
    if-eqz p5, :cond_9

    .line 11761
    move-object/from16 v0, p5

    iget v8, v0, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->targetUid:I

    .line 11775
    .local v8, "targetUid":I
    :cond_4
    if-eqz v18, :cond_6

    .line 11776
    invoke-static/range {v17 .. v18}, Lcom/android/server/am/ActivityManagerService$GrantUri;->resolve(ILandroid/net/Uri;)Lcom/android/server/am/ActivityManagerService$GrantUri;

    move-result-object v6

    .local v6, "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    move-object/from16 v3, p0

    move/from16 v4, p1

    move-object/from16 v5, p2

    move/from16 v7, p4

    .line 11777
    invoke-virtual/range {v3 .. v8}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;II)I

    move-result v8

    .line 11779
    if-lez v8, :cond_6

    .line 11780
    if-nez p5, :cond_5

    .line 11781
    new-instance p5, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;

    .end local p5    # "needed":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    move-object/from16 v0, p5

    move-object/from16 v1, p2

    move/from16 v2, p4

    invoke-direct {v0, v1, v8, v2}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;-><init>(Ljava/lang/String;II)V

    .line 11783
    .restart local p5    # "needed":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    :cond_5
    move-object/from16 v0, p5

    invoke-virtual {v0, v6}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->add(Ljava/lang/Object;)Z

    .line 11786
    .end local v6    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    :cond_6
    if-eqz v16, :cond_b

    .line 11787
    const/16 v20, 0x0

    .local v20, "i":I
    :goto_1
    invoke-virtual/range {v16 .. v16}, Landroid/content/ClipData;->getItemCount()I

    move-result v3

    move/from16 v0, v20

    if-ge v0, v3, :cond_b

    .line 11788
    move-object/from16 v0, v16

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/content/ClipData;->getItemAt(I)Landroid/content/ClipData$Item;

    move-result-object v3

    invoke-virtual {v3}, Landroid/content/ClipData$Item;->getUri()Landroid/net/Uri;

    move-result-object v23

    .line 11789
    .local v23, "uri":Landroid/net/Uri;
    if-eqz v23, :cond_a

    .line 11790
    move/from16 v0, v17

    move-object/from16 v1, v23

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService$GrantUri;->resolve(ILandroid/net/Uri;)Lcom/android/server/am/ActivityManagerService$GrantUri;

    move-result-object v6

    .restart local v6    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    move-object/from16 v3, p0

    move/from16 v4, p1

    move-object/from16 v5, p2

    move/from16 v7, p4

    .line 11791
    invoke-virtual/range {v3 .. v8}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;II)I

    move-result v8

    .line 11793
    if-lez v8, :cond_8

    .line 11794
    if-nez p5, :cond_7

    .line 11795
    new-instance p5, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;

    .end local p5    # "needed":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    move-object/from16 v0, p5

    move-object/from16 v1, p2

    move/from16 v2, p4

    invoke-direct {v0, v1, v8, v2}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;-><init>(Ljava/lang/String;II)V

    .line 11797
    .restart local p5    # "needed":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    :cond_7
    move-object/from16 v0, p5

    invoke-virtual {v0, v6}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->add(Ljava/lang/Object;)Z

    .line 11787
    .end local v6    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    :cond_8
    :goto_2
    add-int/lit8 v20, v20, 0x1

    goto :goto_1

    .line 11764
    .end local v8    # "targetUid":I
    .end local v20    # "i":I
    .end local v23    # "uri":Landroid/net/Uri;
    :cond_9
    :try_start_0
    move-object/from16 v0, v22

    move-object/from16 v1, p2

    move/from16 v2, p6

    invoke-interface {v0, v1, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v8

    .line 11768
    .restart local v8    # "targetUid":I
    if-gez v8, :cond_4

    .line 11772
    const/4 v3, 0x0

    goto/16 :goto_0

    .line 11765
    .end local v8    # "targetUid":I
    :catch_0
    move-exception v19

    .line 11766
    .local v19, "ex":Landroid/os/RemoteException;
    const/4 v3, 0x0

    goto/16 :goto_0

    .line 11800
    .end local v19    # "ex":Landroid/os/RemoteException;
    .restart local v8    # "targetUid":I
    .restart local v20    # "i":I
    .restart local v23    # "uri":Landroid/net/Uri;
    :cond_a
    move-object/from16 v0, v16

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/content/ClipData;->getItemAt(I)Landroid/content/ClipData$Item;

    move-result-object v3

    invoke-virtual {v3}, Landroid/content/ClipData$Item;->getIntent()Landroid/content/Intent;

    move-result-object v12

    .line 11801
    .local v12, "clipIntent":Landroid/content/Intent;
    if-eqz v12, :cond_8

    move-object/from16 v9, p0

    move/from16 v10, p1

    move-object/from16 v11, p2

    move/from16 v13, p4

    move-object/from16 v14, p5

    move/from16 v15, p6

    .line 11802
    invoke-virtual/range {v9 .. v15}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;ILcom/android/server/am/ActivityManagerService$NeededUriGrants;I)Lcom/android/server/am/ActivityManagerService$NeededUriGrants;

    move-result-object v21

    .line 11804
    .local v21, "newNeeded":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    if-eqz v21, :cond_8

    .line 11805
    move-object/from16 p5, v21

    goto :goto_2

    .end local v12    # "clipIntent":Landroid/content/Intent;
    .end local v20    # "i":I
    .end local v21    # "newNeeded":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    .end local v23    # "uri":Landroid/net/Uri;
    :cond_b
    move-object/from16 v3, p5

    .line 11812
    goto/16 :goto_0
.end method

.method checkGrantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;II)I
    .locals 22
    .param p1, "callingUid"    # I
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;
    .param p4, "modeFlags"    # I
    .param p5, "lastTargetUid"    # I

    .prologue
    .line 11536
    invoke-static/range {p4 .. p4}, Landroid/content/Intent;->isAccessUriMode(I)Z

    move-result v4

    if-nez v4, :cond_1

    .line 11537
    const/4 v8, -0x1

    .line 11650
    :cond_0
    :goto_0
    return v8

    .line 11540
    :cond_1
    if-eqz p2, :cond_2

    .line 11545
    :cond_2
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    .line 11548
    .local v5, "pm":Landroid/content/pm/IPackageManager;
    const-string v4, "content"

    move-object/from16 v0, p3

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v7}, Landroid/net/Uri;->getScheme()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v4, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_3

    .line 11551
    const/4 v8, -0x1

    goto :goto_0

    .line 11554
    :cond_3
    move-object/from16 v0, p3

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v4}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v18

    .line 11555
    .local v18, "authority":Ljava/lang/String;
    move-object/from16 v0, p3

    iget v4, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    move-object/from16 v0, p0

    move-object/from16 v1, v18

    invoke-direct {v0, v1, v4}, Lcom/android/server/am/ActivityManagerService;->getProviderInfoLocked(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;

    move-result-object v6

    .line 11556
    .local v6, "pi":Landroid/content/pm/ProviderInfo;
    if-nez v6, :cond_4

    .line 11557
    const-string v4, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "No content provider found for permission check: "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p3

    iget-object v9, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v9}, Landroid/net/Uri;->toSafeString()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11559
    const/4 v8, -0x1

    goto :goto_0

    .line 11562
    :cond_4
    move/from16 v8, p5

    .line 11563
    .local v8, "targetUid":I
    if-gez v8, :cond_5

    if-eqz p2, :cond_5

    .line 11565
    :try_start_0
    invoke-static/range {p1 .. p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    move-object/from16 v0, p2

    invoke-interface {v5, v0, v4}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v8

    .line 11566
    if-gez v8, :cond_5

    .line 11569
    const/4 v8, -0x1

    goto :goto_0

    .line 11571
    :catch_0
    move-exception v19

    .line 11572
    .local v19, "ex":Landroid/os/RemoteException;
    const/4 v8, -0x1

    goto :goto_0

    .line 11576
    .end local v19    # "ex":Landroid/os/RemoteException;
    :cond_5
    if-ltz v8, :cond_6

    move-object/from16 v4, p0

    move-object/from16 v7, p3

    move/from16 v9, p4

    .line 11578
    invoke-direct/range {v4 .. v9}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z

    move-result v4

    if-eqz v4, :cond_9

    .line 11582
    const/4 v8, -0x1

    goto :goto_0

    .line 11586
    :cond_6
    iget-boolean v0, v6, Landroid/content/pm/ProviderInfo;->exported:Z

    move/from16 v17, v0

    .line 11587
    .local v17, "allowed":Z
    and-int/lit8 v4, p4, 0x1

    if-eqz v4, :cond_7

    .line 11588
    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    if-eqz v4, :cond_7

    .line 11589
    const/16 v17, 0x0

    .line 11592
    :cond_7
    and-int/lit8 v4, p4, 0x2

    if-eqz v4, :cond_8

    .line 11593
    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    if-eqz v4, :cond_8

    .line 11594
    const/16 v17, 0x0

    .line 11597
    :cond_8
    if-eqz v17, :cond_9

    .line 11598
    const/4 v8, -0x1

    goto/16 :goto_0

    .line 11608
    .end local v17    # "allowed":Z
    :cond_9
    invoke-static {v8}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    move-object/from16 v0, p3

    iget v7, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    if-eq v4, v7, :cond_a

    const/4 v15, 0x0

    move-object/from16 v9, p0

    move-object v10, v5

    move-object v11, v6

    move-object/from16 v12, p3

    move/from16 v13, p1

    move/from16 v14, p4

    invoke-direct/range {v9 .. v15}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsInternalLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;IIZ)Z

    move-result v4

    if-eqz v4, :cond_a

    const/16 v21, 0x1

    .line 11613
    .local v21, "specialCrossUserGrant":Z
    :goto_1
    if-nez v21, :cond_e

    .line 11614
    iget-boolean v4, v6, Landroid/content/pm/ProviderInfo;->grantUriPermissions:Z

    if-nez v4, :cond_b

    .line 11615
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Provider "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget-object v9, v6, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, "/"

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget-object v9, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, " does not allow granting of Uri permissions (uri "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p3

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, ")"

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v4, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 11608
    .end local v21    # "specialCrossUserGrant":Z
    :cond_a
    const/16 v21, 0x0

    goto :goto_1

    .line 11620
    .restart local v21    # "specialCrossUserGrant":Z
    :cond_b
    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->uriPermissionPatterns:[Landroid/os/PatternMatcher;

    if-eqz v4, :cond_e

    .line 11621
    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->uriPermissionPatterns:[Landroid/os/PatternMatcher;

    array-length v0, v4

    move/from16 v16, v0

    .line 11622
    .local v16, "N":I
    const/16 v17, 0x0

    .line 11623
    .restart local v17    # "allowed":Z
    const/16 v20, 0x0

    .local v20, "i":I
    :goto_2
    move/from16 v0, v20

    move/from16 v1, v16

    if-ge v0, v1, :cond_c

    .line 11624
    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->uriPermissionPatterns:[Landroid/os/PatternMatcher;

    aget-object v4, v4, v20

    if-eqz v4, :cond_d

    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->uriPermissionPatterns:[Landroid/os/PatternMatcher;

    aget-object v4, v4, v20

    move-object/from16 v0, p3

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v7}, Landroid/net/Uri;->getPath()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v4, v7}, Landroid/os/PatternMatcher;->match(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_d

    .line 11626
    const/16 v17, 0x1

    .line 11630
    :cond_c
    if-nez v17, :cond_e

    .line 11631
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Provider "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget-object v9, v6, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, "/"

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget-object v9, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, " does not allow granting of permission to path of Uri "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p3

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v4, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 11623
    :cond_d
    add-int/lit8 v20, v20, 0x1

    goto :goto_2

    .line 11641
    .end local v16    # "N":I
    .end local v17    # "allowed":Z
    .end local v20    # "i":I
    :cond_e
    invoke-static/range {p1 .. p1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v4

    const/16 v7, 0x3e8

    if-eq v4, v7, :cond_0

    move-object/from16 v9, p0

    move-object v10, v5

    move-object v11, v6

    move-object/from16 v12, p3

    move/from16 v13, p1

    move/from16 v14, p4

    .line 11642
    invoke-direct/range {v9 .. v14}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z

    move-result v4

    if-nez v4, :cond_0

    .line 11644
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    move/from16 v2, p1

    move/from16 v3, p4

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->checkUriPermissionLocked(Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z

    move-result v4

    if-nez v4, :cond_0

    .line 11645
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Uid "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move/from16 v0, p1

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, " does not have permission to uri "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p3

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v4, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4
.end method

.method public checkIfProcessIsRunning(Ljava/lang/String;I)Z
    .locals 5
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .prologue
    .line 29693
    const/4 v1, 0x0

    .line 29694
    .local v1, "isRunning":Z
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/16 v3, 0x3e8

    if-ne v2, v3, :cond_1

    .line 29695
    const/4 v2, 0x1

    invoke-virtual {p0, p1, p2, v2}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 29696
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    if-eqz v0, :cond_0

    .line 29697
    const/4 v1, 0x1

    .line 29702
    :cond_0
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "check to see if the app added to knox vpn profile is running "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 29703
    return v1

    .line 29700
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_1
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "The caller is not authorized to access the API"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2
.end method

.method public checkKnoxPermission(IILjava/lang/String;ILjava/lang/String;)Z
    .locals 6
    .param p1, "srcPid"    # I
    .param p2, "srcUid"    # I
    .param p3, "destPkgName"    # Ljava/lang/String;
    .param p4, "destUid"    # I
    .param p5, "methodMessage"    # Ljava/lang/String;

    .prologue
    .line 13969
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getPackageFromAppProcesses(I)Ljava/lang/String;

    move-result-object v1

    .local v1, "callingPkg":Ljava/lang/String;
    move-object v0, p0

    move v2, p2

    move-object v3, p3

    move v4, p4

    move-object v5, p5

    .line 13970
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkKnoxPermission(Ljava/lang/String;ILjava/lang/String;ILjava/lang/String;)Z

    move-result v0

    return v0
.end method

.method public checkKnoxPermission(Ljava/lang/String;ILjava/lang/String;ILjava/lang/String;)Z
    .locals 20
    .param p1, "srcPkgName"    # Ljava/lang/String;
    .param p2, "srcUid"    # I
    .param p3, "destPkgName"    # Ljava/lang/String;
    .param p4, "destUid"    # I
    .param p5, "methodMessage"    # Ljava/lang/String;

    .prologue
    .line 13870
    const/4 v3, 0x1

    .line 13871
    .local v3, "isPermissionGranted":Z
    const/4 v5, 0x0

    .line 13872
    .local v5, "isSourceTrusted":Z
    const/4 v7, 0x0

    .line 13873
    .local v7, "isDestTrusted":Z
    const/16 v16, 0x0

    .line 13874
    .local v16, "isAllowCategoryPass":Z
    const-string/jumbo v2, "persist.security.ams.enforcing"

    const-string v8, "0"

    invoke-static {v2, v8}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v12

    .line 13877
    .local v12, "amsEnforceValue":I
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    const/16 v8, 0x80

    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v9

    move-object/from16 v0, p1

    invoke-interface {v2, v0, v8, v9}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v4

    .line 13880
    .local v4, "srcAppInfo":Landroid/content/pm/ApplicationInfo;
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    const/16 v8, 0x80

    invoke-static/range {p4 .. p4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v9

    move-object/from16 v0, p3

    invoke-interface {v2, v0, v8, v9}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v6

    .line 13883
    .local v6, "destAppInfo":Landroid/content/pm/ApplicationInfo;
    move/from16 v0, p2

    move/from16 v1, p4

    invoke-static {v0, v1}, Landroid/os/UserHandle;->isSameUser(II)Z

    move-result v2

    if-nez v2, :cond_6

    .line 13884
    invoke-static/range {p4 .. p4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    const/16 v8, 0x63

    if-le v2, v8, :cond_1

    invoke-static/range {p4 .. p4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    const/16 v8, 0xc3

    if-ge v2, v8, :cond_1

    .line 13885
    iget v2, v4, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit16 v2, v2, 0x81

    if-nez v2, :cond_5

    .line 13886
    const-string/jumbo v2, "platform"

    iget-object v8, v4, Landroid/content/pm/ApplicationInfo;->seinfo:Ljava/lang/String;

    invoke-virtual {v2, v8}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_4

    .line 13887
    const/4 v3, 0x0

    .line 13898
    :cond_0
    :goto_0
    if-nez v3, :cond_1

    .line 13899
    const-string v2, "ACROSSKNOX PERMISSION CHECK"

    const-string v8, " isPermissionGranted (isDestPkgAllowed): real value FALSE, change to TRUE!!!"

    invoke-static {v2, v8}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 13900
    const-string v2, "ACROSSKNOX PERMISSION CHECK"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "checkKnoxPermission: srcPkgName="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, p1

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, ", srcUid="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move/from16 v0, p2

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, ", destPkgName="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, p3

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, ", destUid="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move/from16 v0, p4

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v2, v8}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 13901
    const/4 v3, 0x1

    .line 13925
    :cond_1
    :goto_1
    if-nez v3, :cond_2

    .line 13926
    const-string v2, "ActivityManager"

    const-string v8, "Denial occuring without whitelisting packages in mac_permissions.xml"

    invoke-static {v2, v8}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    .line 13930
    :cond_2
    :try_start_1
    sget-object v2, Lcom/android/server/am/ActivityManagerService;->mAMSLog:Landroid/content/pm/AMSLogger;

    const/4 v8, 0x0

    const/4 v9, -0x1

    const/4 v11, 0x0

    move-object/from16 v10, p5

    invoke-virtual/range {v2 .. v11}, Landroid/content/pm/AMSLogger;->log(ZLandroid/content/pm/ApplicationInfo;ZLandroid/content/pm/ApplicationInfo;ZLandroid/content/Intent;ILjava/lang/String;Z)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    .line 13935
    :goto_2
    packed-switch v12, :pswitch_data_0

    .line 13947
    .end local v4    # "srcAppInfo":Landroid/content/pm/ApplicationInfo;
    .end local v6    # "destAppInfo":Landroid/content/pm/ApplicationInfo;
    :goto_3
    :pswitch_0
    if-nez v3, :cond_3

    .line 13948
    const-string v2, "ActivityManager"

    const-string/jumbo v8, "isPermissionGranted is false"

    invoke-static {v2, v8}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 13951
    :cond_3
    return v3

    .line 13889
    .restart local v4    # "srcAppInfo":Landroid/content/pm/ApplicationInfo;
    .restart local v6    # "destAppInfo":Landroid/content/pm/ApplicationInfo;
    :cond_4
    :try_start_2
    iget-object v2, v4, Landroid/content/pm/ApplicationInfo;->destPackageName:[Ljava/lang/String;

    move-object/from16 v0, p3

    invoke-static {v0, v2}, Lcom/android/server/am/ActivityManagerService;->checkDestPkgNameInList(Ljava/lang/String;[Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_0

    .line 13890
    const/4 v3, 0x0

    goto :goto_0

    .line 13894
    :cond_5
    iget-object v2, v4, Landroid/content/pm/ApplicationInfo;->destPackageName:[Ljava/lang/String;

    move-object/from16 v0, p3

    invoke-static {v0, v2}, Lcom/android/server/am/ActivityManagerService;->checkDestPkgNameInList(Ljava/lang/String;[Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_0

    .line 13895
    const/4 v3, 0x0

    goto :goto_0

    .line 13905
    :cond_6
    iget-object v0, v4, Landroid/content/pm/ApplicationInfo;->allowContainerCategory:Ljava/lang/String;

    move-object/from16 v18, v0

    .line 13906
    .local v18, "srcAllowContainerCategory":Ljava/lang/String;
    iget v0, v4, Landroid/content/pm/ApplicationInfo;->category:I

    move/from16 v19, v0

    .line 13907
    .local v19, "srcCategory":I
    iget-object v13, v6, Landroid/content/pm/ApplicationInfo;->allowContainerCategory:Ljava/lang/String;

    .line 13908
    .local v13, "dstAllowContainerCategory":Ljava/lang/String;
    iget v14, v6, Landroid/content/pm/ApplicationInfo;->category:I

    .line 13909
    .local v14, "dstCategory":I
    iget-object v0, v4, Landroid/content/pm/ApplicationInfo;->allowCategory:Ljava/lang/String;

    move-object/from16 v17, v0

    .line 13910
    .local v17, "srcAllowCategory":Ljava/lang/String;
    move-object/from16 v0, v17

    invoke-static {v0, v14}, Landroid/app/ActivityManager;->allowRuleCheck(Ljava/lang/String;I)Z

    move-result v16

    .line 13912
    if-eqz v18, :cond_7

    const-string v2, ""

    move-object/from16 v0, v18

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_7

    .line 13913
    move-object/from16 v0, v18

    invoke-static {v0, v14}, Landroid/app/ActivityManager;->isContainerAllowedPackage(Ljava/lang/String;I)Z

    move-result v5

    .line 13915
    :cond_7
    if-eqz v13, :cond_8

    const-string v2, ""

    invoke-virtual {v13, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_8

    .line 13916
    move/from16 v0, v19

    invoke-static {v13, v0}, Landroid/app/ActivityManager;->isContainerAllowedPackage(Ljava/lang/String;I)Z

    move-result v7

    .line 13918
    :cond_8
    if-nez v16, :cond_9

    if-nez v5, :cond_9

    if-eqz v7, :cond_a

    :cond_9
    const/4 v3, 0x1

    :goto_4
    goto :goto_1

    :cond_a
    const/4 v3, 0x0

    goto :goto_4

    .line 13931
    .end local v13    # "dstAllowContainerCategory":Ljava/lang/String;
    .end local v14    # "dstCategory":I
    .end local v17    # "srcAllowCategory":Ljava/lang/String;
    .end local v18    # "srcAllowContainerCategory":Ljava/lang/String;
    .end local v19    # "srcCategory":I
    :catch_0
    move-exception v15

    .line 13932
    .local v15, "e":Ljava/lang/Exception;
    const-string v2, "ActivityManager"

    const-string v8, "Could not log AMSPolicy activity due to Exception: "

    invoke-static {v2, v8, v15}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_1

    goto :goto_2

    .line 13943
    .end local v4    # "srcAppInfo":Landroid/content/pm/ApplicationInfo;
    .end local v6    # "destAppInfo":Landroid/content/pm/ApplicationInfo;
    .end local v15    # "e":Ljava/lang/Exception;
    :catch_1
    move-exception v15

    .line 13944
    .local v15, "e":Landroid/os/RemoteException;
    const-string v2, "ActivityManager"

    const-string v8, "Could not check whitelist containerallowpackage in checkKnoxPermission: "

    invoke-static {v2, v8, v15}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 13945
    const/4 v3, 0x0

    goto :goto_3

    .line 13938
    .end local v15    # "e":Landroid/os/RemoteException;
    .restart local v4    # "srcAppInfo":Landroid/content/pm/ApplicationInfo;
    .restart local v6    # "destAppInfo":Landroid/content/pm/ApplicationInfo;
    :pswitch_1
    const/4 v3, 0x1

    goto :goto_3

    .line 13935
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_1
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method public checkPermission(Ljava/lang/String;II)I
    .locals 9
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "pid"    # I
    .param p3, "uid"    # I

    .prologue
    const/4 v1, 0x0

    const/4 v5, -0x1

    .line 11260
    if-nez p1, :cond_0

    .line 11265
    :goto_0
    return v5

    :cond_0
    const/4 v7, 0x1

    const/4 v8, 0x0

    move-object v0, p0

    move-object v2, p1

    move v3, p2

    move v4, p3

    move-object v6, v1

    invoke-virtual/range {v0 .. v8}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Landroid/content/Intent;Ljava/lang/String;IIILjava/lang/String;ZZ)I

    move-result v5

    goto :goto_0
.end method

.method public checkPermissionWithToken(Ljava/lang/String;IILandroid/os/IBinder;)I
    .locals 7
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "pid"    # I
    .param p3, "uid"    # I
    .param p4, "callerToken"    # Landroid/os/IBinder;

    .prologue
    const/4 v4, -0x1

    .line 11274
    if-nez p1, :cond_0

    .line 11289
    :goto_0
    return v4

    .line 11281
    :cond_0
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    invoke-virtual {v0}, Ljava/lang/ThreadLocal;->get()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ActivityManagerService$Identity;

    .line 11282
    .local v6, "tlsIdentity":Lcom/android/server/am/ActivityManagerService$Identity;
    if-eqz v6, :cond_1

    iget-object v0, v6, Lcom/android/server/am/ActivityManagerService$Identity;->token:Landroid/os/IBinder;

    if-ne v0, p4, :cond_1

    .line 11283
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "checkComponentPermission() adjusting {pid,uid} to {"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget v2, v6, Lcom/android/server/am/ActivityManagerService$Identity;->pid:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ","

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget v2, v6, Lcom/android/server/am/ActivityManagerService$Identity;->uid:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, "}"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 11285
    iget p3, v6, Lcom/android/server/am/ActivityManagerService$Identity;->uid:I

    .line 11286
    iget p2, v6, Lcom/android/server/am/ActivityManagerService$Identity;->pid:I

    .line 11289
    :cond_1
    const/4 v5, 0x1

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v4

    goto :goto_0
.end method

.method public checkUriPermission(Landroid/net/Uri;IIIILandroid/os/IBinder;)I
    .locals 4
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "pid"    # I
    .param p3, "uid"    # I
    .param p4, "modeFlags"    # I
    .param p5, "userId"    # I
    .param p6, "callerToken"    # Landroid/os/IBinder;

    .prologue
    const/4 v1, 0x0

    .line 11504
    const-string v2, "checkUriPermission"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 11508
    sget-object v2, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    invoke-virtual {v2}, Ljava/lang/ThreadLocal;->get()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$Identity;

    .line 11509
    .local v0, "tlsIdentity":Lcom/android/server/am/ActivityManagerService$Identity;
    if-eqz v0, :cond_0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService$Identity;->token:Landroid/os/IBinder;

    if-ne v2, p6, :cond_0

    .line 11510
    iget p3, v0, Lcom/android/server/am/ActivityManagerService$Identity;->uid:I

    .line 11511
    iget p2, v0, Lcom/android/server/am/ActivityManagerService$Identity;->pid:I

    .line 11515
    :cond_0
    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-ne p2, v2, :cond_1

    .line 11519
    :goto_0
    return v1

    .line 11518
    :cond_1
    monitor-enter p0

    .line 11519
    :try_start_0
    new-instance v2, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v3, 0x0

    invoke-direct {v2, p5, p1, v3}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-direct {p0, v2, p3, p4}, Lcom/android/server/am/ActivityManagerService;->checkUriPermissionLocked(Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z

    move-result v2

    if-eqz v2, :cond_2

    :goto_1
    monitor-exit p0

    goto :goto_0

    .line 11522
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 11519
    :cond_2
    const/4 v1, -0x1

    goto :goto_1
.end method

.method cleanupAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z
    .locals 4
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "alwaysBad"    # Z

    .prologue
    .line 21663
    const/4 v2, 0x0

    .line 21664
    .local v2, "restart":Z
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v1, v3, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_2

    .line 21665
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ContentProviderRecord;

    .line 21666
    .local v0, "cpr":Lcom/android/server/am/ContentProviderRecord;
    iget-object v3, v0, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    if-ne v3, p1, :cond_0

    .line 21667
    if-nez p2, :cond_1

    iget-boolean v3, p1, Lcom/android/server/am/ProcessRecord;->bad:Z

    if-nez v3, :cond_1

    invoke-virtual {v0}, Lcom/android/server/am/ContentProviderRecord;->hasConnectionOrHandle()Z

    move-result v3

    if-eqz v3, :cond_1

    .line 21668
    const/4 v2, 0x1

    .line 21664
    :cond_0
    :goto_1
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 21670
    :cond_1
    const/4 v3, 0x1

    invoke-direct {p0, p1, v0, v3}, Lcom/android/server/am/ActivityManagerService;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z

    goto :goto_1

    .line 21674
    .end local v0    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_2
    return v2
.end method

.method public clearAppLockedUnLockedApp()V
    .locals 4

    .prologue
    .line 29833
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 29834
    .local v0, "callerUid":I
    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->isSystemUid(I)Z

    move-result v1

    if-nez v1, :cond_0

    .line 29835
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " cannot call clearAppLockedUnLockedApp()"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 29837
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

    if-eqz v1, :cond_1

    .line 29838
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

    invoke-virtual {v1}, Lcom/android/internal/app/AppLockPolicy;->clearAppLockedUnLockedApp()V

    .line 29840
    :cond_1
    return-void
.end method

.method public clearApplicationUserData(Ljava/lang/String;Landroid/content/pm/IPackageDataObserver;I)Z
    .locals 34
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "observer"    # Landroid/content/pm/IPackageDataObserver;
    .param p3, "userId"    # I

    .prologue
    .line 8105
    const-string v4, "clearApplicationUserData"

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 8106
    if-eqz p1, :cond_0

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mDeviceOwnerName:Ljava/lang/String;

    move-object/from16 v0, p1

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 8107
    new-instance v4, Ljava/lang/SecurityException;

    const-string v7, "Clearing DeviceOwner data is forbidden."

    invoke-direct {v4, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 8109
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    .line 8110
    .local v6, "uid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    .line 8111
    .local v5, "pid":I
    const/4 v8, 0x0

    const/4 v9, 0x2

    const-string v10, "clearApplicationUserData"

    const/4 v11, 0x0

    move-object/from16 v4, p0

    move/from16 v7, p3

    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p3

    .line 8114
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, p3

    invoke-direct {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->isApplicationClearDataDisabled(Ljava/lang/String;I)Z

    move-result v4

    if-eqz v4, :cond_1

    .line 8115
    const/4 v4, 0x0

    .line 8204
    :goto_0
    return v4

    .line 8118
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v28

    .line 8120
    .local v28, "callingId":J
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v31

    .line 8121
    .local v31, "pm":Landroid/content/pm/IPackageManager;
    const/4 v12, -0x1

    .line 8122
    .local v12, "pkgUid":I
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8124
    :try_start_1
    move-object/from16 v0, v31

    move-object/from16 v1, p1

    move/from16 v2, p3

    invoke-interface {v0, v1, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_2
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v12

    .line 8127
    :goto_1
    const/4 v4, -0x1

    if-ne v12, v4, :cond_3

    .line 8128
    :try_start_2
    const-string v4, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Invalid packageName: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p1

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 8129
    if-eqz p2, :cond_2

    .line 8131
    const/4 v4, 0x0

    :try_start_3
    move-object/from16 v0, p2

    move-object/from16 v1, p1

    invoke-interface {v0, v1, v4}, Landroid/content/pm/IPackageDataObserver;->onRemoveCompleted(Ljava/lang/String;Z)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 8136
    :cond_2
    :goto_2
    const/4 v4, 0x0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 8202
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 8132
    :catch_0
    move-exception v27

    .line 8133
    .local v27, "e":Landroid/os/RemoteException;
    :try_start_5
    const-string v4, "ActivityManager"

    const-string v7, "Observer no longer exists."

    invoke-static {v4, v7}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    .line 8183
    .end local v27    # "e":Landroid/os/RemoteException;
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    throw v4
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 8202
    .end local v12    # "pkgUid":I
    .end local v31    # "pm":Landroid/content/pm/IPackageManager;
    :catchall_1
    move-exception v4

    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4

    .line 8140
    .restart local v12    # "pkgUid":I
    .restart local v31    # "pm":Landroid/content/pm/IPackageManager;
    :cond_3
    if-eq v6, v12, :cond_4

    const/4 v8, 0x0

    :try_start_7
    const-string v9, "android.permission.CLEAR_APP_USER_DATA"

    const/4 v14, 0x1

    const/4 v15, 0x0

    move-object/from16 v7, p0

    move v10, v5

    move v11, v6

    move-object/from16 v13, p1

    invoke-virtual/range {v7 .. v15}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Landroid/content/Intent;Ljava/lang/String;IIILjava/lang/String;ZZ)I

    move-result v4

    if-nez v4, :cond_7

    .line 8144
    :cond_4
    const-string v4, "clear data"

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v1, v12, v4}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;ILjava/lang/String;)V

    .line 8163
    if-eq v6, v12, :cond_5

    const-string v14, "android.permission.CLEAR_APP_USER_DATA"

    const/16 v17, -0x1

    const/16 v18, 0x1

    move-object/from16 v13, p0

    move v15, v5

    move/from16 v16, v6

    invoke-virtual/range {v13 .. v18}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v4

    if-nez v4, :cond_8

    .line 8167
    :cond_5
    const-string v4, "clear data"

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v1, v12, v4}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;ILjava/lang/String;)V

    .line 8175
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v4}, Lcom/android/server/am/RecentTasks;->size()I

    move-result v4

    add-int/lit8 v30, v4, -0x1

    .local v30, "i":I
    :goto_3
    if-ltz v30, :cond_a

    .line 8176
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    move/from16 v0, v30

    invoke-virtual {v4, v0}, Lcom/android/server/am/RecentTasks;->get(I)Ljava/lang/Object;

    move-result-object v33

    check-cast v33, Lcom/android/server/am/TaskRecord;

    .line 8177
    .local v33, "tr":Lcom/android/server/am/TaskRecord;
    invoke-virtual/range {v33 .. v33}, Lcom/android/server/am/TaskRecord;->getBaseIntent()Landroid/content/Intent;

    move-result-object v4

    invoke-virtual {v4}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v4

    invoke-virtual {v4}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v32

    .line 8179
    .local v32, "taskPackageName":Ljava/lang/String;
    move-object/from16 v0, v33

    iget v4, v0, Lcom/android/server/am/TaskRecord;->userId:I

    move/from16 v0, p3

    if-eq v4, v0, :cond_9

    .line 8175
    :cond_6
    :goto_4
    add-int/lit8 v30, v30, -0x1

    goto :goto_3

    .line 8146
    .end local v30    # "i":I
    .end local v32    # "taskPackageName":Ljava/lang/String;
    .end local v33    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_7
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " does not have permission:"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, "android.permission.CLEAR_APP_USER_DATA"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " to clear data"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string/jumbo v8, "for process:"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p1

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v4, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 8169
    :cond_8
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "PID "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " does not have permission "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, "android.permission.CLEAR_APP_USER_DATA"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " to clear data"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " of package "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p1

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v4, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 8180
    .restart local v30    # "i":I
    .restart local v32    # "taskPackageName":Ljava/lang/String;
    .restart local v33    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_9
    move-object/from16 v0, v32

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_6

    .line 8181
    move-object/from16 v0, v33

    iget v4, v0, Lcom/android/server/am/TaskRecord;->taskId:I

    const/4 v7, 0x0

    move-object/from16 v0, p0

    invoke-direct {v0, v4, v7}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZ)Z

    goto :goto_4

    .line 8183
    .end local v32    # "taskPackageName":Ljava/lang/String;
    .end local v33    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_a
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    .line 8187
    :try_start_8
    move-object/from16 v0, v31

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move/from16 v3, p3

    invoke-interface {v0, v1, v2, v3}, Landroid/content/pm/IPackageManager;->clearApplicationUserData(Ljava/lang/String;Landroid/content/pm/IPackageDataObserver;I)V

    .line 8189
    monitor-enter p0
    :try_end_8
    .catch Landroid/os/RemoteException; {:try_start_8 .. :try_end_8} :catch_1
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .line 8191
    const/4 v4, 0x1

    :try_start_9
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, p3

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionsForPackageLocked(Ljava/lang/String;IZ)V

    .line 8192
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    .line 8194
    :try_start_a
    new-instance v16, Landroid/content/Intent;

    const-string v4, "android.intent.action.PACKAGE_DATA_CLEARED"

    const-string/jumbo v7, "package"

    const/4 v8, 0x0

    move-object/from16 v0, p1

    invoke-static {v7, v0, v8}, Landroid/net/Uri;->fromParts(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v7

    move-object/from16 v0, v16

    invoke-direct {v0, v4, v7}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 8196
    .local v16, "intent":Landroid/content/Intent;
    const-string v4, "android.intent.extra.UID"

    move-object/from16 v0, v16

    invoke-virtual {v0, v4, v12}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 8197
    const-string v14, "android"

    const/16 v15, 0x3e8

    const/16 v17, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    const/16 v21, 0x0

    const/16 v22, 0x0

    const/16 v23, 0x0

    const/16 v24, 0x0

    const/16 v25, 0x0

    move-object/from16 v13, p0

    move/from16 v26, p3

    invoke-virtual/range {v13 .. v26}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentInPackage(Ljava/lang/String;ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;Landroid/os/Bundle;ZZI)I
    :try_end_a
    .catch Landroid/os/RemoteException; {:try_start_a .. :try_end_a} :catch_1
    .catchall {:try_start_a .. :try_end_a} :catchall_1

    .line 8202
    .end local v16    # "intent":Landroid/content/Intent;
    :goto_5
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8204
    const/4 v4, 0x1

    goto/16 :goto_0

    .line 8192
    :catchall_2
    move-exception v4

    :try_start_b
    monitor-exit p0
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_2

    :try_start_c
    throw v4
    :try_end_c
    .catch Landroid/os/RemoteException; {:try_start_c .. :try_end_c} :catch_1
    .catchall {:try_start_c .. :try_end_c} :catchall_1

    .line 8199
    :catch_1
    move-exception v4

    goto :goto_5

    .line 8125
    .end local v30    # "i":I
    :catch_2
    move-exception v4

    goto/16 :goto_1
.end method

.method final clearFocusedActivity(Lcom/android/server/am/ActivityRecord;)V
    .locals 7
    .param p1, "r"    # Lcom/android/server/am/ActivityRecord;

    .prologue
    const/16 v6, 0x35

    const/4 v5, 0x0

    .line 4379
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    if-ne v2, p1, :cond_1

    .line 4380
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStackSupervisor;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .line 4381
    .local v0, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v0, :cond_0

    .line 4382
    invoke-virtual {v0}, Lcom/android/server/am/ActivityStack;->topActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v1

    .line 4383
    .local v1, "top":Lcom/android/server/am/ActivityRecord;
    if-eqz v1, :cond_0

    iget v2, v1, Lcom/android/server/am/ActivityRecord;->userId:I

    iget v3, p0, Lcom/android/server/am/ActivityManagerService;->mLastFocusedUserId:I

    if-eq v2, v3, :cond_0

    .line 4384
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v2, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 4385
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget v4, v1, Lcom/android/server/am/ActivityRecord;->userId:I

    invoke-virtual {v3, v6, v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v3

    invoke-virtual {v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 4387
    iget v2, v1, Lcom/android/server/am/ActivityRecord;->userId:I

    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mLastFocusedUserId:I

    .line 4390
    .end local v1    # "top":Lcom/android/server/am/ActivityRecord;
    :cond_0
    const/4 v2, 0x0

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    .line 4391
    const/16 v2, 0x755b

    const/4 v3, 0x2

    new-array v3, v3, [Ljava/lang/Object;

    const/4 v4, -0x1

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    aput-object v4, v3, v5

    const/4 v4, 0x1

    const-string v5, "NULL"

    aput-object v5, v3, v4

    invoke-static {v2, v3}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 4401
    .end local v0    # "stack":Lcom/android/server/am/ActivityStack;
    :cond_1
    return-void
.end method

.method public clearPendingBackup()V
    .locals 2

    .prologue
    .line 22290
    const-string v0, "android.permission.BACKUP"

    const-string v1, "clearPendingBackup"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 22292
    monitor-enter p0

    .line 22293
    const/4 v0, 0x0

    :try_start_0
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 22294
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    .line 22295
    monitor-exit p0

    .line 22296
    return-void

    .line 22295
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public clearRecentTasks(I)Z
    .locals 4
    .param p1, "userId"    # I

    .prologue
    .line 28484
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 28485
    .local v0, "callerPid":I
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v1

    if-eq v0, v1, :cond_0

    .line 28486
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Pid "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " cannot clear recent tasks!"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 28488
    :cond_0
    monitor-enter p0

    .line 28489
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->clearRecentTasksLocked(I)Z

    .line 28490
    monitor-exit p0

    .line 28491
    const/4 v1, 0x1

    return v1

    .line 28490
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public clearRecentTasksLocked(I)Z
    .locals 7
    .param p1, "userId"    # I

    .prologue
    .line 28510
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 28511
    .local v1, "callerPid":I
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v4

    if-eq v1, v4, :cond_0

    .line 28512
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Pid "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " cannot clear recent tasks!"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 28515
    :cond_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v4}, Lcom/android/server/am/RecentTasks;->size()I

    move-result v0

    .line 28516
    .local v0, "N":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_2

    .line 28517
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v4, v2}, Lcom/android/server/am/RecentTasks;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/TaskRecord;

    .line 28518
    .local v3, "tr":Lcom/android/server/am/TaskRecord;
    iget v4, v3, Lcom/android/server/am/TaskRecord;->userId:I

    if-ne v4, p1, :cond_1

    .line 28521
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mMultiWindowPolicy:Lcom/android/server/am/MultiWindowPolicy;

    iget v5, v3, Lcom/android/server/am/TaskRecord;->taskId:I

    invoke-virtual {v4, v5}, Lcom/android/server/am/MultiWindowPolicy;->notifyTaskRemoved(I)V

    .line 28524
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v4, v2}, Lcom/android/server/am/RecentTasks;->remove(I)Ljava/lang/Object;

    .line 28525
    add-int/lit8 v2, v2, -0x1

    .line 28526
    add-int/lit8 v0, v0, -0x1

    .line 28516
    :cond_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 28529
    .end local v3    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_2
    const/4 v4, 0x1

    return v4
.end method

.method public closeSystemDialogs(Ljava/lang/String;)V
    .locals 8
    .param p1, "reason"    # Ljava/lang/String;

    .prologue
    .line 8509
    const-string v5, "closeSystemDialogs"

    invoke-virtual {p0, v5}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 8511
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 8512
    .local v2, "pid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 8513
    .local v4, "uid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8515
    .local v0, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 8518
    const/16 v5, 0x2710

    if-lt v4, v5, :cond_1

    .line 8520
    :try_start_1
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v6
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 8521
    :try_start_2
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v5, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 8522
    .local v3, "proc":Lcom/android/server/am/ProcessRecord;
    monitor-exit v6
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 8523
    if-eqz v3, :cond_0

    :try_start_3
    iget v5, v3, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    const/4 v6, 0x2

    if-le v5, v6, :cond_1

    .line 8524
    :cond_0
    const-string v5, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Ignoring closeSystemDialogs "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " from background process "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8526
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 8532
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8534
    .end local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    :goto_0
    return-void

    .line 8522
    :catchall_0
    move-exception v5

    :try_start_4
    monitor-exit v6
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    throw v5

    .line 8530
    :catchall_1
    move-exception v5

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :try_start_6
    throw v5
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    .line 8532
    :catchall_2
    move-exception v5

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v5

    .line 8529
    :cond_1
    :try_start_7
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->closeSystemDialogsLocked(Ljava/lang/String;)V

    .line 8530
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    .line 8532
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0
.end method

.method closeSystemDialogsLocked(Ljava/lang/String;)V
    .locals 18
    .param p1, "reason"    # Ljava/lang/String;

    .prologue
    .line 8537
    new-instance v4, Landroid/content/Intent;

    const-string v1, "android.intent.action.CLOSE_SYSTEM_DIALOGS"

    invoke-direct {v4, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 8538
    .local v4, "intent":Landroid/content/Intent;
    const/high16 v1, 0x50000000

    invoke-virtual {v4, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 8540
    if-eqz p1, :cond_0

    .line 8541
    const-string/jumbo v1, "reason"

    move-object/from16 v0, p1

    invoke-virtual {v4, v1, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 8543
    :cond_0
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    move-object/from16 v0, p1

    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowManagerService;->closeSystemDialogs(Ljava/lang/String;)V

    .line 8545
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->closeSystemDialogsLocked()V

    .line 8547
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, -0x1

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, -0x1

    const/16 v16, 0x3e8

    const/16 v17, -0x1

    move-object/from16 v1, p0

    invoke-direct/range {v1 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 8550
    return-void
.end method

.method collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;
    .locals 6
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "start"    # I
    .param p3, "allPkgs"    # Z
    .param p4, "args"    # [Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "IZ[",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation

    .prologue
    .line 20251
    monitor-enter p0

    .line 20252
    if-eqz p4, :cond_4

    :try_start_0
    array-length v4, p4

    if-le v4, p2, :cond_4

    aget-object v4, p4, p2

    const/4 v5, 0x0

    invoke-virtual {v4, v5}, Ljava/lang/String;->charAt(I)C

    move-result v4

    const/16 v5, 0x2d

    if-eq v4, v5, :cond_4

    .line 20254
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 20255
    .local v3, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    const/4 v1, -0x1

    .line 20257
    .local v1, "pid":I
    :try_start_1
    aget-object v4, p4, p2

    invoke-static {v4}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
    :try_end_1
    .catch Ljava/lang/NumberFormatException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v1

    .line 20260
    :goto_0
    :try_start_2
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    add-int/lit8 v0, v4, -0x1

    .local v0, "i":I
    :goto_1
    if-ltz v0, :cond_3

    .line 20261
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 20262
    .local v2, "proc":Lcom/android/server/am/ProcessRecord;
    iget v4, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v4, v1, :cond_1

    .line 20263
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 20260
    :cond_0
    :goto_2
    add-int/lit8 v0, v0, -0x1

    goto :goto_1

    .line 20264
    :cond_1
    if-eqz p3, :cond_2

    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    if-eqz v4, :cond_2

    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    aget-object v5, p4, p2

    invoke-virtual {v4, v5}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_2

    .line 20266
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 20277
    .end local v0    # "i":I
    .end local v1    # "pid":I
    .end local v2    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v3    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v4

    .line 20267
    .restart local v0    # "i":I
    .restart local v1    # "pid":I
    .restart local v2    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v3    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_2
    :try_start_3
    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aget-object v5, p4, p2

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 20268
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 20271
    .end local v2    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_3
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-gtz v4, :cond_5

    .line 20272
    const/4 v4, 0x0

    monitor-exit p0

    .line 20278
    .end local v0    # "i":I
    .end local v1    # "pid":I
    :goto_3
    return-object v4

    .line 20275
    .end local v3    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_4
    new-instance v3, Ljava/util/ArrayList;

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-direct {v3, v4}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 20277
    .restart local v3    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_5
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-object v4, v3

    .line 20278
    goto :goto_3

    .line 20258
    .restart local v1    # "pid":I
    :catch_0
    move-exception v4

    goto :goto_0
.end method

.method compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;
    .locals 1
    .param p1, "ai"    # Landroid/content/pm/ApplicationInfo;

    .prologue
    .line 5827
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1}, Lcom/android/server/am/CompatModePackages;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v0

    return-object v0
.end method

.method completeSwitchAndInitialize(Lcom/android/server/am/UserState;IZZ)V
    .locals 5
    .param p1, "uss"    # Lcom/android/server/am/UserState;
    .param p2, "newUserId"    # I
    .param p3, "clearInitializing"    # Z
    .param p4, "clearSwitching"    # Z

    .prologue
    const/16 v4, 0x38

    const/4 v3, 0x0

    .line 27825
    const/4 v0, 0x0

    .line 27826
    .local v0, "unfrozen":Z
    monitor-enter p0

    .line 27827
    if-eqz p3, :cond_0

    .line 27828
    const/4 v1, 0x0

    :try_start_0
    iput-boolean v1, p1, Lcom/android/server/am/UserState;->initializing:Z

    .line 27829
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v1

    iget-object v2, p1, Lcom/android/server/am/UserState;->mHandle:Landroid/os/UserHandle;

    invoke-virtual {v2}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v2

    invoke-virtual {v1, v2}, Lcom/android/server/pm/UserManagerService;->makeInitialized(I)V

    .line 27831
    :cond_0
    if-eqz p4, :cond_1

    .line 27832
    const/4 v1, 0x0

    iput-boolean v1, p1, Lcom/android/server/am/UserState;->switching:Z

    .line 27834
    :cond_1
    iget-boolean v1, p1, Lcom/android/server/am/UserState;->switching:Z

    if-nez v1, :cond_2

    iget-boolean v1, p1, Lcom/android/server/am/UserState;->initializing:Z

    if-nez v1, :cond_2

    .line 27835
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowManagerService;->stopFreezingScreen()V

    .line 27836
    const/4 v0, 0x1

    .line 27838
    :cond_2
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 27839
    if-eqz v0, :cond_3

    .line 27840
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v4}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 27841
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v2, v4, p2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v2

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 27844
    :cond_3
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->stopGuestUserIfBackground()V

    .line 27845
    return-void

    .line 27838
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v1
.end method

.method continueUserSwitch(Lcom/android/server/am/UserState;II)V
    .locals 2
    .param p1, "uss"    # Lcom/android/server/am/UserState;
    .param p2, "oldUserId"    # I
    .param p3, "newUserId"    # I

    .prologue
    .line 27820
    const/4 v0, 0x0

    const/4 v1, 0x1

    invoke-virtual {p0, p1, p3, v0, v1}, Lcom/android/server/am/ActivityManagerService;->completeSwitchAndInitialize(Lcom/android/server/am/UserState;IZZ)V

    .line 27821
    return-void
.end method

.method public convertFromTranslucent(Landroid/os/IBinder;)Z
    .locals 1
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 16085
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->convertFromTranslucent(Landroid/os/IBinder;Z)Z

    move-result v0

    return v0
.end method

.method public convertFromTranslucent(Landroid/os/IBinder;Z)Z
    .locals 7
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "skipSetWindowOpaque"    # Z

    .prologue
    const/4 v3, 0x0

    .line 16091
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 16093
    .local v0, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 16094
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 16095
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v2, :cond_0

    .line 16096
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 16109
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    :goto_0
    return v3

    .line 16098
    :cond_0
    const/4 v4, 0x1

    :try_start_2
    invoke-virtual {v2, v4}, Lcom/android/server/am/ActivityRecord;->changeWindowTranslucency(Z)Z

    move-result v3

    .line 16099
    .local v3, "translucentChanged":Z
    if-eqz v3, :cond_1

    .line 16100
    iget-object v4, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v4, v4, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v4, v2}, Lcom/android/server/am/ActivityStack;->releaseBackgroundResources(Lcom/android/server/am/ActivityRecord;)V

    .line 16101
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v5, 0x0

    const/4 v6, 0x0

    invoke-virtual {v4, v5, v6}, Lcom/android/server/am/ActivityStackSupervisor;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;I)V

    .line 16104
    :cond_1
    if-nez p2, :cond_2

    .line 16105
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const/4 v5, 0x1

    invoke-virtual {v4, p1, v5}, Lcom/android/server/wm/WindowManagerService;->setAppFullscreen(Landroid/os/IBinder;Z)V

    .line 16106
    :cond_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 16109
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 16107
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v3    # "translucentChanged":Z
    :catchall_0
    move-exception v4

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 16109
    :catchall_1
    move-exception v4

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4
.end method

.method public convertToTranslucent(Landroid/os/IBinder;Landroid/app/ActivityOptions;)Z
    .locals 9
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "options"    # Landroid/app/ActivityOptions;

    .prologue
    const/4 v4, 0x0

    .line 16115
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 16117
    .local v2, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 16118
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v1

    .line 16119
    .local v1, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v1, :cond_0

    .line 16120
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 16136
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    :goto_0
    return v4

    .line 16122
    :cond_0
    :try_start_2
    iget-object v6, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v6, v6, Lcom/android/server/am/TaskRecord;->mActivities:Ljava/util/ArrayList;

    invoke-virtual {v6, v1}, Ljava/util/ArrayList;->lastIndexOf(Ljava/lang/Object;)I

    move-result v0

    .line 16123
    .local v0, "index":I
    if-lez v0, :cond_1

    .line 16124
    iget-object v6, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v6, v6, Lcom/android/server/am/TaskRecord;->mActivities:Ljava/util/ArrayList;

    add-int/lit8 v7, v0, -0x1

    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ActivityRecord;

    .line 16125
    .local v5, "under":Lcom/android/server/am/ActivityRecord;
    iput-object p2, v5, Lcom/android/server/am/ActivityRecord;->returningOptions:Landroid/app/ActivityOptions;

    .line 16127
    .end local v5    # "under":Lcom/android/server/am/ActivityRecord;
    :cond_1
    const/4 v6, 0x0

    invoke-virtual {v1, v6}, Lcom/android/server/am/ActivityRecord;->changeWindowTranslucency(Z)Z

    move-result v4

    .line 16128
    .local v4, "translucentChanged":Z
    if-eqz v4, :cond_2

    .line 16129
    iget-object v6, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v6, v6, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v6, v1}, Lcom/android/server/am/ActivityStack;->convertActivityToTranslucent(Lcom/android/server/am/ActivityRecord;)V

    .line 16131
    :cond_2
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v7, 0x0

    const/4 v8, 0x0

    invoke-virtual {v6, v7, v8}, Lcom/android/server/am/ActivityStackSupervisor;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;I)V

    .line 16132
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const/4 v7, 0x0

    invoke-virtual {v6, p1, v7}, Lcom/android/server/wm/WindowManagerService;->setAppFullscreen(Landroid/os/IBinder;Z)V

    .line 16133
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 16136
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 16134
    .end local v0    # "index":I
    .end local v1    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v4    # "translucentChanged":Z
    :catchall_0
    move-exception v6

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v6
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 16136
    :catchall_1
    move-exception v6

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v6
.end method

.method public crashApplication(IILjava/lang/String;Ljava/lang/String;)V
    .locals 9
    .param p1, "uid"    # I
    .param p2, "initialPid"    # I
    .param p3, "packageName"    # Ljava/lang/String;
    .param p4, "message"    # Ljava/lang/String;

    .prologue
    .line 7113
    const-string v6, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {p0, v6}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v6

    if-eqz v6, :cond_0

    .line 7115
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Permission Denial: crashApplication() from pid="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, ", uid="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " requires "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 7119
    .local v1, "msg":Ljava/lang/String;
    const-string v6, "ActivityManager"

    invoke-static {v6, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7120
    new-instance v6, Ljava/lang/SecurityException;

    invoke-direct {v6, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 7123
    .end local v1    # "msg":Ljava/lang/String;
    :cond_0
    monitor-enter p0

    .line 7124
    const/4 v5, 0x0

    .line 7129
    .local v5, "proc":Lcom/android/server/am/ProcessRecord;
    :try_start_0
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v7
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 7130
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    :try_start_1
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    move-result v6

    if-ge v0, v6, :cond_3

    .line 7131
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v6, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 7132
    .local v4, "p":Lcom/android/server/am/ProcessRecord;
    iget v6, v4, Lcom/android/server/am/ProcessRecord;->uid:I

    if-eq v6, p1, :cond_2

    .line 7130
    :cond_1
    :goto_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 7135
    :cond_2
    iget v6, v4, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v6, p2, :cond_4

    .line 7136
    move-object v5, v4

    .line 7143
    .end local v4    # "p":Lcom/android/server/am/ProcessRecord;
    :cond_3
    monitor-exit v7
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 7145
    if-nez v5, :cond_5

    .line 7146
    :try_start_2
    const-string v6, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "crashApplication: nothing for uid="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " initialPid="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " packageName="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7149
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 7165
    :goto_2
    return-void

    .line 7139
    .restart local v4    # "p":Lcom/android/server/am/ProcessRecord;
    :cond_4
    :try_start_3
    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v6, p3}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_1

    .line 7140
    move-object v5, v4

    goto :goto_1

    .line 7143
    .end local v4    # "p":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v6

    monitor-exit v7
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v6

    .line 7164
    .end local v0    # "i":I
    :catchall_1
    move-exception v6

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v6

    .line 7152
    .restart local v0    # "i":I
    :cond_5
    :try_start_5
    iget-object v6, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v6, :cond_7

    .line 7153
    iget v6, v5, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v7

    if-ne v6, v7, :cond_6

    .line 7154
    const-string v6, "ActivityManager"

    const-string/jumbo v7, "crashApplication: trying to crash self!"

    invoke-static {v6, v7}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7155
    monitor-exit p0

    goto :goto_2

    .line 7157
    :cond_6
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    move-result-wide v2

    .line 7159
    .local v2, "ident":J
    :try_start_6
    iget-object v6, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v6, p4}, Landroid/app/IApplicationThread;->scheduleCrash(Ljava/lang/String;)V
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_0
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 7162
    :goto_3
    :try_start_7
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7164
    .end local v2    # "ident":J
    :cond_7
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    goto :goto_2

    .line 7160
    .restart local v2    # "ident":J
    :catch_0
    move-exception v6

    goto :goto_3
.end method

.method createAppErrorIntentLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;)Landroid/content/Intent;
    .locals 4
    .param p1, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "timeMillis"    # J
    .param p4, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    .line 18255
    invoke-direct {p0, p1, p2, p3, p4}, Lcom/android/server/am/ActivityManagerService;->createAppErrorReportLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;)Landroid/app/ApplicationErrorReport;

    move-result-object v0

    .line 18256
    .local v0, "report":Landroid/app/ApplicationErrorReport;
    if-nez v0, :cond_0

    .line 18257
    const/4 v1, 0x0

    .line 18263
    :goto_0
    return-object v1

    .line 18259
    :cond_0
    new-instance v1, Landroid/content/Intent;

    const-string v2, "android.intent.action.APP_ERROR"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 18260
    .local v1, "result":Landroid/content/Intent;
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->errorReportReceiver:Landroid/content/ComponentName;

    invoke-virtual {v1, v2}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 18261
    const-string v2, "android.intent.extra.BUG_REPORT"

    invoke-virtual {v1, v2, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent;

    .line 18262
    const/high16 v2, 0x10000000

    invoke-virtual {v1, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    goto :goto_0
.end method

.method public createStackOnDisplay(I)Landroid/app/IActivityContainer;
    .locals 4
    .param p1, "displayId"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 13421
    const-string v2, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v3, "createStackOnDisplay()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13423
    monitor-enter p0

    .line 13424
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStackSupervisor;->getNextStackId()I

    move-result v1

    .line 13425
    .local v1, "stackId":I
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, v1, p1}, Lcom/android/server/am/ActivityStackSupervisor;->createStackOnDisplay(II)Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .line 13426
    .local v0, "stack":Lcom/android/server/am/ActivityStack;
    if-nez v0, :cond_0

    .line 13427
    const/4 v2, 0x0

    monitor-exit p0

    .line 13429
    :goto_0
    return-object v2

    :cond_0
    iget-object v2, v0, Lcom/android/server/am/ActivityStack;->mActivityContainer:Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;

    monitor-exit p0

    goto :goto_0

    .line 13430
    .end local v0    # "stack":Lcom/android/server/am/ActivityStack;
    .end local v1    # "stackId":I
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method public createVirtualActivityContainer(Landroid/os/IBinder;Landroid/app/IActivityContainerCallback;)Landroid/app/IActivityContainer;
    .locals 3
    .param p1, "parentActivityToken"    # Landroid/os/IBinder;
    .param p2, "callback"    # Landroid/app/IActivityContainerCallback;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 13393
    const-string v1, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v2, "createActivityContainer()"

    invoke-virtual {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13395
    monitor-enter p0

    .line 13396
    if-nez p1, :cond_0

    .line 13397
    :try_start_0
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v2, "parent token must not be null"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 13407
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 13399
    :cond_0
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 13400
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_1

    .line 13401
    const/4 v1, 0x0

    monitor-exit p0

    .line 13406
    :goto_0
    return-object v1

    .line 13403
    :cond_1
    if-nez p2, :cond_2

    .line 13404
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "callback must not be null"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 13406
    :cond_2
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1, v0, p2}, Lcom/android/server/am/ActivityStackSupervisor;->createVirtualActivityContainer(Lcom/android/server/am/ActivityRecord;Landroid/app/IActivityContainerCallback;)Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;

    move-result-object v1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0
.end method

.method public createVirtualScreen(II)I
    .locals 1
    .param p1, "width"    # I
    .param p2, "height"    # I

    .prologue
    .line 12488
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/ActivityStackSupervisor;->createVirtualScreen(II)I

    move-result v0

    return v0
.end method

.method decProviderCountLocked(Lcom/android/server/am/ContentProviderConnection;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Z
    .locals 4
    .param p1, "conn"    # Lcom/android/server/am/ContentProviderConnection;
    .param p2, "cpr"    # Lcom/android/server/am/ContentProviderRecord;
    .param p3, "externalProcessToken"    # Landroid/os/IBinder;
    .param p4, "stable"    # Z

    .prologue
    const/4 v0, 0x0

    .line 14228
    if-eqz p1, :cond_2

    .line 14229
    iget-object p2, p1, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    .line 14235
    if-eqz p4, :cond_1

    .line 14236
    iget v1, p1, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    add-int/lit8 v1, v1, -0x1

    iput v1, p1, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    .line 14240
    :goto_0
    iget v1, p1, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    if-nez v1, :cond_0

    iget v1, p1, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    if-nez v1, :cond_0

    .line 14241
    iget-object v0, p2, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 14242
    iget-object v0, p1, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 14243
    iget-object v0, p1, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v1, p1, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v2, p2, Lcom/android/server/am/ContentProviderRecord;->uid:I

    iget-object v3, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->stopAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;)V

    .line 14244
    const/4 v0, 0x1

    .line 14249
    :cond_0
    :goto_1
    return v0

    .line 14238
    :cond_1
    iget v1, p1, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    add-int/lit8 v1, v1, -0x1

    iput v1, p1, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    goto :goto_0

    .line 14248
    :cond_2
    invoke-virtual {p2, p3}, Lcom/android/server/am/ContentProviderRecord;->removeExternalProcessHandleLocked(Landroid/os/IBinder;)Z

    goto :goto_1
.end method

.method deferBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V
    .locals 4
    .param p1, "r"    # Lcom/android/server/am/BroadcastRecord;

    .prologue
    const/4 v2, 0x0

    .line 22372
    iget-object v1, p1, Lcom/android/server/am/BroadcastRecord;->deferredreceivers:Ljava/util/List;

    if-eqz v1, :cond_0

    iget-object v1, p1, Lcom/android/server/am/BroadcastRecord;->deferredreceivers:Ljava/util/List;

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v1

    if-nez v1, :cond_1

    .line 22393
    :cond_0
    :goto_0
    return-void

    .line 22377
    :cond_1
    iget-object v0, p1, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    .line 22378
    .local v0, "tmpreceivers":Ljava/util/List;
    iget-object v1, p1, Lcom/android/server/am/BroadcastRecord;->deferredreceivers:Ljava/util/List;

    iput-object v1, p1, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    .line 22379
    iput-object v0, p1, Lcom/android/server/am/BroadcastRecord;->deferredreceivers:Ljava/util/List;

    .line 22380
    iget-object v1, p1, Lcom/android/server/am/BroadcastRecord;->deferredreceivers:Ljava/util/List;

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v1

    new-array v1, v1, [J

    iput-object v1, p1, Lcom/android/server/am/BroadcastRecord;->receiversDispatchTimeDeferred:[J

    .line 22381
    iget-object v1, p1, Lcom/android/server/am/BroadcastRecord;->deferredreceivers:Ljava/util/List;

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v1

    new-array v1, v1, [J

    iput-object v1, p1, Lcom/android/server/am/BroadcastRecord;->receiversFinishTimeDeferred:[J

    .line 22383
    iput v2, p1, Lcom/android/server/am/BroadcastRecord;->state:I

    .line 22384
    iput v2, p1, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I

    .line 22385
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mDeferredBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    iput-object v1, p1, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    .line 22386
    iget-wide v2, p1, Lcom/android/server/am/BroadcastRecord;->dispatchClockTime:J

    iput-wide v2, p1, Lcom/android/server/am/BroadcastRecord;->dispatchClockTimeDeferred:J

    .line 22388
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mDeferredBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    invoke-virtual {v1, p1}, Lcom/android/server/am/BroadcastQueue;->replaceOrderedBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)Z

    move-result v1

    if-nez v1, :cond_2

    .line 22389
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mDeferredBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    invoke-virtual {v1, p1}, Lcom/android/server/am/BroadcastQueue;->enqueueOrderedBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 22392
    :cond_2
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mDeferredBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    invoke-virtual {v1}, Lcom/android/server/am/BroadcastQueue;->scheduleBroadcastsLocked()V

    goto :goto_0
.end method

.method public deleteActivityContainer(Landroid/app/IActivityContainer;)V
    .locals 2
    .param p1, "container"    # Landroid/app/IActivityContainer;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 13412
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v1, "deleteActivityContainer()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13414
    monitor-enter p0

    .line 13415
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStackSupervisor;->deleteActivityContainer(Landroid/app/IActivityContainer;)V

    .line 13416
    monitor-exit p0

    .line 13417
    return-void

    .line 13416
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method dispatchForegroundProfileChanged(I)V
    .locals 3
    .param p1, "userId"    # I

    .prologue
    .line 27681
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v2}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result v0

    .line 27682
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 27684
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v2, v1}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v2

    check-cast v2, Landroid/app/IUserSwitchObserver;

    invoke-interface {v2, p1}, Landroid/app/IUserSwitchObserver;->onForegroundProfileSwitch(I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 27682
    :goto_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 27689
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v2}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 27690
    return-void

    .line 27685
    :catch_0
    move-exception v2

    goto :goto_1
.end method

.method dispatchUserSwitch(Lcom/android/server/am/UserState;II)V
    .locals 7
    .param p1, "uss"    # Lcom/android/server/am/UserState;
    .param p2, "oldUserId"    # I
    .param p3, "newUserId"    # I

    .prologue
    .line 27748
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v1}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result v2

    .line 27749
    .local v2, "N":I
    if-lez v2, :cond_0

    .line 27750
    new-instance v0, Lcom/android/server/am/ActivityManagerService$33;

    move-object v1, p0

    move-object v3, p1

    move v4, p2

    move v5, p3

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService$33;-><init>(Lcom/android/server/am/ActivityManagerService;ILcom/android/server/am/UserState;II)V

    .line 27764
    .local v0, "callback":Landroid/os/IRemoteCallback;
    monitor-enter p0

    .line 27765
    const/4 v1, 0x1

    :try_start_0
    iput-boolean v1, p1, Lcom/android/server/am/UserState;->switching:Z

    .line 27766
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurUserSwitchCallback:Ljava/lang/Object;

    .line 27767
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 27768
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_0
    if-ge v6, v2, :cond_1

    .line 27770
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v1, v6}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v1

    check-cast v1, Landroid/app/IUserSwitchObserver;

    invoke-interface {v1, p3, v0}, Landroid/app/IUserSwitchObserver;->onUserSwitching(ILandroid/os/IRemoteCallback;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 27768
    :goto_1
    add-int/lit8 v6, v6, 0x1

    goto :goto_0

    .line 27767
    .end local v6    # "i":I
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v1

    .line 27776
    .end local v0    # "callback":Landroid/os/IRemoteCallback;
    :cond_0
    monitor-enter p0

    .line 27777
    :try_start_3
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->sendContinueUserSwitchLocked(Lcom/android/server/am/UserState;II)V

    .line 27778
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 27780
    :cond_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v1}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 27781
    return-void

    .line 27778
    :catchall_1
    move-exception v1

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v1

    .line 27772
    .restart local v0    # "callback":Landroid/os/IRemoteCallback;
    .restart local v6    # "i":I
    :catch_0
    move-exception v1

    goto :goto_1
.end method

.method dispatchUserSwitchComplete(I)V
    .locals 3
    .param p1, "userId"    # I

    .prologue
    .line 27849
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v2}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result v1

    .line 27850
    .local v1, "observerCount":I
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    if-ge v0, v1, :cond_0

    .line 27852
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v2, v0}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v2

    check-cast v2, Landroid/app/IUserSwitchObserver;

    invoke-interface {v2, p1}, Landroid/app/IUserSwitchObserver;->onUserSwitchComplete(I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 27850
    :goto_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 27856
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v2}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 27857
    return-void

    .line 27853
    :catch_0
    move-exception v2

    goto :goto_1
.end method

.method final doLowMemReportIfNeededLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 17
    .param p1, "dyingProc"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 7424
    const/4 v10, 0x0

    .line 7425
    .local v10, "haveBg":Z
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v11, v2, -0x1

    .local v11, "i":I
    :goto_0
    if-ltz v11, :cond_0

    .line 7426
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/am/ProcessRecord;

    .line 7427
    .local v16, "rec":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_3

    move-object/from16 v0, v16

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v3, 0xe

    if-lt v2, v3, :cond_3

    .line 7429
    const/4 v10, 0x1

    .line 7434
    .end local v16    # "rec":Lcom/android/server/am/ProcessRecord;
    :cond_0
    if-nez v10, :cond_b

    .line 7435
    const-string v2, "1"

    const-string/jumbo v3, "ro.debuggable"

    const-string v4, "0"

    invoke-static {v3, v4}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    .line 7436
    .local v9, "doReport":Z
    if-eqz v9, :cond_1

    .line 7437
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v14

    .line 7438
    .local v14, "now":J
    move-object/from16 v0, p0

    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J

    const-wide/32 v4, 0x493e0

    add-long/2addr v2, v4

    cmp-long v2, v14, v2

    if-gez v2, :cond_4

    .line 7439
    const/4 v9, 0x0

    .line 7444
    .end local v14    # "now":J
    :cond_1
    :goto_1
    if-eqz v9, :cond_5

    new-instance v12, Ljava/util/ArrayList;

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    invoke-direct {v12, v2}, Ljava/util/ArrayList;-><init>(I)V

    .line 7446
    .local v12, "memInfos":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessMemInfo;>;"
    :goto_2
    const/16 v2, 0x7541

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    invoke-static {v2, v3}, Landroid/util/EventLog;->writeEvent(II)I

    .line 7447
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v14

    .line 7448
    .restart local v14    # "now":J
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v11, v2, -0x1

    :goto_3
    if-ltz v11, :cond_9

    .line 7449
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/am/ProcessRecord;

    .line 7450
    .restart local v16    # "rec":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, v16

    move-object/from16 v1, p1

    if-eq v0, v1, :cond_2

    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v2, :cond_6

    .line 7448
    :cond_2
    :goto_4
    add-int/lit8 v11, v11, -0x1

    goto :goto_3

    .line 7425
    .end local v9    # "doReport":Z
    .end local v12    # "memInfos":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessMemInfo;>;"
    .end local v14    # "now":J
    :cond_3
    add-int/lit8 v11, v11, -0x1

    goto/16 :goto_0

    .line 7441
    .end local v16    # "rec":Lcom/android/server/am/ProcessRecord;
    .restart local v9    # "doReport":Z
    .restart local v14    # "now":J
    :cond_4
    move-object/from16 v0, p0

    iput-wide v14, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J

    goto :goto_1

    .line 7444
    .end local v14    # "now":J
    :cond_5
    const/4 v12, 0x0

    goto :goto_2

    .line 7453
    .restart local v12    # "memInfos":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessMemInfo;>;"
    .restart local v14    # "now":J
    .restart local v16    # "rec":Lcom/android/server/am/ProcessRecord;
    :cond_6
    if-eqz v9, :cond_7

    .line 7454
    new-instance v2, Lcom/android/server/am/ProcessMemInfo;

    move-object/from16 v0, v16

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, v16

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, v16

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    move-object/from16 v0, v16

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    move-object/from16 v0, v16

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    invoke-virtual/range {v16 .. v16}, Lcom/android/server/am/ProcessRecord;->makeAdjReason()Ljava/lang/String;

    move-result-object v8

    invoke-direct/range {v2 .. v8}, Lcom/android/server/am/ProcessMemInfo;-><init>(Ljava/lang/String;IIILjava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v12, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 7457
    :cond_7
    move-object/from16 v0, v16

    iget-wide v2, v0, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J

    const-wide/32 v4, 0xea60

    add-long/2addr v2, v4

    cmp-long v2, v2, v14

    if-gtz v2, :cond_2

    .line 7461
    move-object/from16 v0, v16

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    const/4 v3, 0x4

    if-gt v2, v3, :cond_8

    .line 7462
    const-wide/16 v2, 0x0

    move-object/from16 v0, v16

    iput-wide v2, v0, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    .line 7466
    :goto_5
    const/4 v2, 0x1

    move-object/from16 v0, v16

    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z

    .line 7467
    move-object/from16 v0, v16

    iput-wide v14, v0, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J

    .line 7468
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    move-object/from16 v0, v16

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 7469
    move-object/from16 v0, p0

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addProcessToGcListLocked(Lcom/android/server/am/ProcessRecord;)V

    goto :goto_4

    .line 7464
    :cond_8
    move-object/from16 v0, v16

    iget-wide v2, v0, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J

    move-object/from16 v0, v16

    iput-wide v2, v0, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    goto :goto_5

    .line 7472
    .end local v16    # "rec":Lcom/android/server/am/ProcessRecord;
    :cond_9
    if-eqz v9, :cond_a

    .line 7473
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0x21

    invoke-virtual {v2, v3, v12}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v13

    .line 7474
    .local v13, "msg":Landroid/os/Message;
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v2, v13}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 7476
    .end local v13    # "msg":Landroid/os/Message;
    :cond_a
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V

    .line 7478
    .end local v9    # "doReport":Z
    .end local v12    # "memInfos":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessMemInfo;>;"
    .end local v14    # "now":J
    :cond_b
    return-void
.end method

.method public doTrimMemory(I)V
    .locals 6
    .param p1, "level"    # I

    .prologue
    .line 27042
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 27044
    .local v0, "N":I
    add-int/lit8 v2, v0, -0x1

    .local v2, "i":I
    :goto_0
    if-ltz v2, :cond_1

    .line 27045
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 27047
    .local v1, "app":Lcom/android/server/am/ProcessRecord;
    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_0

    .line 27049
    :try_start_0
    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v3, p1}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V

    .line 27050
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "doTrimMemory( "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " ) "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-object v5, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 27044
    :cond_0
    :goto_1
    add-int/lit8 v2, v2, -0x1

    goto :goto_0

    .line 27055
    .end local v1    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_1
    return-void

    .line 27051
    .restart local v1    # "app":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v3

    goto :goto_1
.end method

.method protected dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 40
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    .prologue
    .line 18510
    const-string v4, "android.permission.DUMP"

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v4

    if-eqz v4, :cond_0

    .line 18512
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Permission Denial: can\'t dump ActivityManager from from pid="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", uid="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " without permission "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, "android.permission.DUMP"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18908
    :goto_0
    return-void

    .line 18520
    :cond_0
    const/16 v26, 0x0

    .line 18521
    .local v26, "dumpAll":Z
    const/4 v10, 0x0

    .line 18522
    .local v10, "dumpClient":Z
    const/4 v11, 0x0

    .line 18524
    .local v11, "dumpPackage":Ljava/lang/String;
    const/4 v8, 0x0

    .line 18525
    .local v8, "opti":I
    :goto_1
    move-object/from16 v0, p3

    array-length v4, v0

    if-ge v8, v4, :cond_1

    .line 18526
    aget-object v33, p3, v8

    .line 18527
    .local v33, "opt":Ljava/lang/String;
    if-eqz v33, :cond_1

    invoke-virtual/range {v33 .. v33}, Ljava/lang/String;->length()I

    move-result v4

    if-lez v4, :cond_1

    const/4 v4, 0x0

    move-object/from16 v0, v33

    invoke-virtual {v0, v4}, Ljava/lang/String;->charAt(I)C

    move-result v4

    const/16 v5, 0x2d

    if-eq v4, v5, :cond_5

    .line 18579
    .end local v33    # "opt":Ljava/lang/String;
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v34

    .line 18580
    .local v34, "origId":J
    const/16 v30, 0x0

    .line 18584
    .local v30, "more":Z
    if-eqz v26, :cond_2

    .line 18587
    :try_start_0
    new-instance v29, Landroid/content/Intent;

    invoke-direct/range {v29 .. v29}, Landroid/content/Intent;-><init>()V

    .line 18588
    .local v29, "in":Landroid/content/Intent;
    const-string v4, "com.samsung.android.bbc.bbcagent"

    const-string v5, "com.samsung.android.bbc.test.BBCDebugService"

    move-object/from16 v0, v29

    invoke-virtual {v0, v4, v5}, Landroid/content/Intent;->setClassName(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 18589
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    sget-object v5, Landroid/os/UserHandle;->OWNER:Landroid/os/UserHandle;

    move-object/from16 v0, v29

    invoke-virtual {v4, v0, v5}, Landroid/content/Context;->startServiceAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)Landroid/content/ComponentName;
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 18596
    .end local v29    # "in":Landroid/content/Intent;
    :cond_2
    :goto_2
    move-object/from16 v0, p3

    array-length v4, v0

    if-ge v8, v4, :cond_3d

    .line 18597
    aget-object v20, p3, v8

    .line 18598
    .local v20, "cmd":Ljava/lang/String;
    add-int/lit8 v8, v8, 0x1

    .line 18599
    const-string v4, "activities"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_3

    const-string v4, "a"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_b

    .line 18600
    :cond_3
    monitor-enter p0

    .line 18601
    const/4 v9, 0x1

    move-object/from16 v4, p0

    move-object/from16 v5, p1

    move-object/from16 v6, p2

    move-object/from16 v7, p3

    :try_start_1
    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 18602
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 18822
    .end local v20    # "cmd":Ljava/lang/String;
    :cond_4
    :goto_3
    if-nez v30, :cond_3d

    .line 18823
    invoke-static/range {v34 .. v35}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 18530
    .end local v30    # "more":Z
    .end local v34    # "origId":J
    .restart local v33    # "opt":Ljava/lang/String;
    :cond_5
    add-int/lit8 v8, v8, 0x1

    .line 18531
    const-string v4, "-a"

    move-object/from16 v0, v33

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_6

    .line 18532
    const/16 v26, 0x1

    goto :goto_1

    .line 18533
    :cond_6
    const-string v4, "-c"

    move-object/from16 v0, v33

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_7

    .line 18534
    const/4 v10, 0x1

    goto/16 :goto_1

    .line 18535
    :cond_7
    const-string v4, "-p"

    move-object/from16 v0, v33

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_9

    .line 18536
    move-object/from16 v0, p3

    array-length v4, v0

    if-ge v8, v4, :cond_8

    .line 18537
    aget-object v11, p3, v8

    .line 18538
    add-int/lit8 v8, v8, 0x1

    .line 18543
    const/4 v10, 0x1

    goto/16 :goto_1

    .line 18540
    :cond_8
    const-string v4, "Error: -p option requires package argument"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_0

    .line 18544
    :cond_9
    const-string v4, "-h"

    move-object/from16 v0, v33

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_a

    .line 18545
    const-string v4, "Activity manager dump options:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18546
    const-string v4, "  [-a] [-c] [-p package] [-h] [cmd] ..."

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18547
    const-string v4, "  cmd may be one of:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18548
    const-string v4, "    a[ctivities]: activity stack state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18549
    const-string v4, "    r[recents]: recent activities state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18550
    const-string v4, "    b[roadcasts] [PACKAGE_NAME] [history [-s]]: broadcast state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18551
    const-string v4, "    i[ntents] [PACKAGE_NAME]: pending intent state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18552
    const-string v4, "    p[rocesses] [PACKAGE_NAME]: process state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18553
    const-string v4, "    o[om]: out of memory management"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18554
    const-string v4, "    perm[issions]: URI permission grant state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18555
    const-string v4, "    prov[iders] [COMP_SPEC ...]: content provider state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18556
    const-string v4, "    provider [COMP_SPEC]: provider client-side state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18557
    const-string v4, "    s[ervices] [COMP_SPEC ...]: service state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18558
    const-string v4, "    as[sociations]: tracked app associations"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18559
    const-string v4, "    service [COMP_SPEC]: service client-side state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18560
    const-string v4, "    package [PACKAGE_NAME]: all state related to given package"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18561
    const-string v4, "    all: dump all activities"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18562
    const-string v4, "    top: dump the top activity"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18563
    const-string v4, "    write: write all pending state to storage"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18564
    const-string v4, "    track-associations: enable association tracking"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18565
    const-string v4, "    untrack-associations: disable and clear association tracking"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18566
    const-string v4, "  cmd may also be a COMP_SPEC to dump activities."

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18567
    const-string v4, "  COMP_SPEC may be a component name (com.foo/.myApp),"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18568
    const-string v4, "    a partial substring in a component name, a"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18569
    const-string v4, "    hex object identifier."

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18570
    const-string v4, "  -a: include all available server state."

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18571
    const-string v4, "  -c: include client state."

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18572
    const-string v4, "  -p: limit output to given package."

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_0

    .line 18575
    :cond_a
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Unknown argument: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, v33

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, "; use -h for help"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_1

    .line 18590
    .end local v33    # "opt":Ljava/lang/String;
    .restart local v30    # "more":Z
    .restart local v34    # "origId":J
    :catch_0
    move-exception v28

    .line 18591
    .local v28, "e":Ljava/lang/Exception;
    invoke-virtual/range {v28 .. v28}, Ljava/lang/Exception;->printStackTrace()V

    goto/16 :goto_2

    .line 18602
    .end local v28    # "e":Ljava/lang/Exception;
    .restart local v20    # "cmd":Ljava/lang/String;
    :catchall_0
    move-exception v4

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v4

    .line 18603
    :cond_b
    sget-boolean v4, Lcom/android/server/am/ActivityManagerService;->IS_USER_BUILD:Z

    if-nez v4, :cond_f

    const/4 v4, 0x1

    if-ne v8, v4, :cond_f

    const-string/jumbo v4, "k"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_f

    .line 18604
    monitor-enter p0

    .line 18605
    const/4 v4, 0x1

    :try_start_3
    aget-object v4, p3, v4
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    if-eqz v4, :cond_e

    .line 18606
    const/16 v32, 0x0

    .line 18607
    .local v32, "numInt":I
    const/16 v38, 0x0

    .line 18608
    .local v38, "x":I
    const/16 v39, 0x0

    .line 18609
    .local v39, "y":I
    const/16 v37, 0x0

    .line 18611
    .local v37, "stayResumed":Z
    const/4 v4, 0x1

    :try_start_4
    aget-object v4, p3, v4

    invoke-static {v4}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v32

    .line 18612
    move-object/from16 v0, p3

    array-length v4, v0

    const/4 v5, 0x4

    if-le v4, v5, :cond_c

    const/4 v4, 0x2

    aget-object v4, p3, v4

    if-eqz v4, :cond_c

    const/4 v4, 0x3

    aget-object v4, p3, v4

    if-eqz v4, :cond_c

    const/4 v4, 0x4

    aget-object v4, p3, v4

    if-eqz v4, :cond_c

    .line 18613
    const/4 v4, 0x2

    aget-object v4, p3, v4

    invoke-static {v4}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v38

    .line 18614
    const/4 v4, 0x3

    aget-object v4, p3, v4

    invoke-static {v4}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v39

    .line 18615
    const-string/jumbo v4, "t"

    const/4 v5, 0x4

    aget-object v5, p3, v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
    :try_end_4
    .catch Ljava/lang/NumberFormatException; {:try_start_4 .. :try_end_4} :catch_1
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    move-result v4

    if-eqz v4, :cond_c

    .line 18616
    const/16 v37, 0x1

    .line 18622
    :cond_c
    :goto_4
    if-eqz v38, :cond_d

    if-eqz v39, :cond_d

    .line 18623
    :try_start_5
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    new-instance v5, Landroid/graphics/Point;

    move/from16 v0, v38

    move/from16 v1, v39

    invoke-direct {v5, v0, v1}, Landroid/graphics/Point;-><init>(II)V

    move/from16 v0, v32

    move/from16 v1, v37

    invoke-virtual {v4, v0, v5, v1}, Lcom/android/server/am/ActivityStackSupervisor;->changeTaskToMinimized(ILandroid/graphics/Point;Z)Z

    .line 18630
    .end local v32    # "numInt":I
    .end local v37    # "stayResumed":Z
    .end local v38    # "x":I
    .end local v39    # "y":I
    :goto_5
    monitor-exit p0

    goto/16 :goto_3

    :catchall_1
    move-exception v4

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    throw v4

    .line 18619
    .restart local v32    # "numInt":I
    .restart local v37    # "stayResumed":Z
    .restart local v38    # "x":I
    .restart local v39    # "y":I
    :catch_1
    move-exception v31

    .line 18620
    .local v31, "ne":Ljava/lang/NumberFormatException;
    :try_start_6
    const-string v4, "ActivityManager"

    const-string v5, "Gamemode - NumberFormatException !!!!"

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    .line 18625
    .end local v31    # "ne":Ljava/lang/NumberFormatException;
    :cond_d
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v5, 0x0

    move/from16 v0, v32

    move/from16 v1, v37

    invoke-virtual {v4, v0, v5, v1}, Lcom/android/server/am/ActivityStackSupervisor;->changeTaskToMinimized(ILandroid/graphics/Point;Z)Z

    goto :goto_5

    .line 18628
    .end local v32    # "numInt":I
    .end local v37    # "stayResumed":Z
    .end local v38    # "x":I
    .end local v39    # "y":I
    :cond_e
    const-string v4, "ActivityManager"

    const-string v5, "Gamemode - args[1] == null"

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    goto :goto_5

    .line 18631
    :cond_f
    const-string/jumbo v4, "recents"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_10

    const-string/jumbo v4, "r"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_11

    .line 18632
    :cond_10
    monitor-enter p0

    .line 18633
    const/16 v17, 0x1

    move-object/from16 v12, p0

    move-object/from16 v13, p1

    move-object/from16 v14, p2

    move-object/from16 v15, p3

    move/from16 v16, v8

    move-object/from16 v18, v11

    :try_start_7
    invoke-virtual/range {v12 .. v18}, Lcom/android/server/am/ActivityManagerService;->dumpRecentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 18634
    monitor-exit p0

    goto/16 :goto_3

    :catchall_2
    move-exception v4

    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    throw v4

    .line 18635
    :cond_11
    const-string v4, "broadcasts"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_12

    const-string v4, "b"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_15

    .line 18638
    :cond_12
    move-object/from16 v0, p3

    array-length v4, v0

    if-lt v8, v4, :cond_14

    .line 18639
    const/4 v15, 0x0

    .line 18640
    .local v15, "name":Ljava/lang/String;
    sget-object v16, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 18648
    .end local v15    # "name":Ljava/lang/String;
    .local v16, "newArgs":[Ljava/lang/String;
    :cond_13
    :goto_6
    monitor-enter p0

    .line 18649
    const/16 v17, 0x1

    move-object/from16 v12, p0

    move-object/from16 v13, p1

    move-object/from16 v14, p2

    move-object/from16 v15, p3

    move/from16 v16, v8

    move-object/from16 v18, v11

    :try_start_8
    invoke-virtual/range {v12 .. v18}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 18650
    .end local v16    # "newArgs":[Ljava/lang/String;
    monitor-exit p0

    goto/16 :goto_3

    :catchall_3
    move-exception v4

    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_3

    throw v4

    .line 18642
    :cond_14
    aget-object v11, p3, v8

    .line 18643
    add-int/lit8 v8, v8, 0x1

    .line 18644
    move-object/from16 v0, p3

    array-length v4, v0

    sub-int/2addr v4, v8

    new-array v0, v4, [Ljava/lang/String;

    move-object/from16 v16, v0

    .line 18645
    .restart local v16    # "newArgs":[Ljava/lang/String;
    move-object/from16 v0, p3

    array-length v4, v0

    const/4 v5, 0x2

    if-le v4, v5, :cond_13

    const/4 v4, 0x0

    move-object/from16 v0, p3

    array-length v5, v0

    sub-int/2addr v5, v8

    move-object/from16 v0, p3

    move-object/from16 v1, v16

    invoke-static {v0, v8, v1, v4, v5}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    goto :goto_6

    .line 18651
    .end local v16    # "newArgs":[Ljava/lang/String;
    :cond_15
    const-string/jumbo v4, "intents"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_16

    const-string/jumbo v4, "i"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_19

    .line 18654
    :cond_16
    move-object/from16 v0, p3

    array-length v4, v0

    if-lt v8, v4, :cond_18

    .line 18655
    const/4 v15, 0x0

    .line 18656
    .restart local v15    # "name":Ljava/lang/String;
    sget-object v16, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 18664
    .end local v15    # "name":Ljava/lang/String;
    .restart local v16    # "newArgs":[Ljava/lang/String;
    :cond_17
    :goto_7
    monitor-enter p0

    .line 18665
    const/16 v17, 0x1

    move-object/from16 v12, p0

    move-object/from16 v13, p1

    move-object/from16 v14, p2

    move-object/from16 v15, p3

    move/from16 v16, v8

    move-object/from16 v18, v11

    :try_start_9
    invoke-virtual/range {v12 .. v18}, Lcom/android/server/am/ActivityManagerService;->dumpPendingIntentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 18666
    .end local v16    # "newArgs":[Ljava/lang/String;
    monitor-exit p0

    goto/16 :goto_3

    :catchall_4
    move-exception v4

    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_4

    throw v4

    .line 18658
    :cond_18
    aget-object v11, p3, v8

    .line 18659
    add-int/lit8 v8, v8, 0x1

    .line 18660
    move-object/from16 v0, p3

    array-length v4, v0

    sub-int/2addr v4, v8

    new-array v0, v4, [Ljava/lang/String;

    move-object/from16 v16, v0

    .line 18661
    .restart local v16    # "newArgs":[Ljava/lang/String;
    move-object/from16 v0, p3

    array-length v4, v0

    const/4 v5, 0x2

    if-le v4, v5, :cond_17

    const/4 v4, 0x0

    move-object/from16 v0, p3

    array-length v5, v0

    sub-int/2addr v5, v8

    move-object/from16 v0, p3

    move-object/from16 v1, v16

    invoke-static {v0, v8, v1, v4, v5}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    goto :goto_7

    .line 18667
    .end local v16    # "newArgs":[Ljava/lang/String;
    :cond_19
    const-string/jumbo v4, "processes"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_1a

    const-string/jumbo v4, "p"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_1d

    .line 18670
    :cond_1a
    move-object/from16 v0, p3

    array-length v4, v0

    if-lt v8, v4, :cond_1c

    .line 18671
    const/4 v15, 0x0

    .line 18672
    .restart local v15    # "name":Ljava/lang/String;
    sget-object v16, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 18680
    .end local v15    # "name":Ljava/lang/String;
    .restart local v16    # "newArgs":[Ljava/lang/String;
    :cond_1b
    :goto_8
    monitor-enter p0

    .line 18681
    const/16 v17, 0x1

    move-object/from16 v12, p0

    move-object/from16 v13, p1

    move-object/from16 v14, p2

    move-object/from16 v15, p3

    move/from16 v16, v8

    move-object/from16 v18, v11

    :try_start_a
    invoke-virtual/range {v12 .. v18}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 18682
    .end local v16    # "newArgs":[Ljava/lang/String;
    monitor-exit p0

    goto/16 :goto_3

    :catchall_5
    move-exception v4

    monitor-exit p0
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_5

    throw v4

    .line 18674
    :cond_1c
    aget-object v11, p3, v8

    .line 18675
    add-int/lit8 v8, v8, 0x1

    .line 18676
    move-object/from16 v0, p3

    array-length v4, v0

    sub-int/2addr v4, v8

    new-array v0, v4, [Ljava/lang/String;

    move-object/from16 v16, v0

    .line 18677
    .restart local v16    # "newArgs":[Ljava/lang/String;
    move-object/from16 v0, p3

    array-length v4, v0

    const/4 v5, 0x2

    if-le v4, v5, :cond_1b

    const/4 v4, 0x0

    move-object/from16 v0, p3

    array-length v5, v0

    sub-int/2addr v5, v8

    move-object/from16 v0, p3

    move-object/from16 v1, v16

    invoke-static {v0, v8, v1, v4, v5}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    goto :goto_8

    .line 18683
    .end local v16    # "newArgs":[Ljava/lang/String;
    :cond_1d
    const-string/jumbo v4, "oom"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_1e

    const-string/jumbo v4, "o"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_1f

    .line 18684
    :cond_1e
    monitor-enter p0

    .line 18685
    const/4 v9, 0x1

    move-object/from16 v4, p0

    move-object/from16 v5, p1

    move-object/from16 v6, p2

    move-object/from16 v7, p3

    :try_start_b
    invoke-virtual/range {v4 .. v9}, Lcom/android/server/am/ActivityManagerService;->dumpOomLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZ)Z

    .line 18686
    monitor-exit p0

    goto/16 :goto_3

    :catchall_6
    move-exception v4

    monitor-exit p0
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_6

    throw v4

    .line 18687
    :cond_1f
    const-string/jumbo v4, "permissions"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_20

    const-string/jumbo v4, "perm"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_21

    .line 18688
    :cond_20
    monitor-enter p0

    .line 18689
    const/16 v17, 0x1

    const/16 v18, 0x0

    move-object/from16 v12, p0

    move-object/from16 v13, p1

    move-object/from16 v14, p2

    move-object/from16 v15, p3

    move/from16 v16, v8

    :try_start_c
    invoke-virtual/range {v12 .. v18}, Lcom/android/server/am/ActivityManagerService;->dumpPermissionsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 18690
    monitor-exit p0

    goto/16 :goto_3

    :catchall_7
    move-exception v4

    monitor-exit p0
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_7

    throw v4

    .line 18691
    :cond_21
    const-string/jumbo v4, "provider"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_24

    .line 18694
    move-object/from16 v0, p3

    array-length v4, v0

    if-lt v8, v4, :cond_23

    .line 18695
    const/4 v15, 0x0

    .line 18696
    .restart local v15    # "name":Ljava/lang/String;
    sget-object v16, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 18703
    .restart local v16    # "newArgs":[Ljava/lang/String;
    :cond_22
    :goto_9
    const/16 v17, 0x0

    move-object/from16 v12, p0

    move-object/from16 v13, p1

    move-object/from16 v14, p2

    move/from16 v18, v26

    invoke-virtual/range {v12 .. v18}, Lcom/android/server/am/ActivityManagerService;->dumpProvider(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result v4

    if-nez v4, :cond_4

    .line 18704
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "No providers match: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18705
    const-string v4, "Use -h for help."

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_3

    .line 18698
    .end local v15    # "name":Ljava/lang/String;
    .end local v16    # "newArgs":[Ljava/lang/String;
    :cond_23
    aget-object v15, p3, v8

    .line 18699
    .restart local v15    # "name":Ljava/lang/String;
    add-int/lit8 v8, v8, 0x1

    .line 18700
    move-object/from16 v0, p3

    array-length v4, v0

    sub-int/2addr v4, v8

    new-array v0, v4, [Ljava/lang/String;

    move-object/from16 v16, v0

    .line 18701
    .restart local v16    # "newArgs":[Ljava/lang/String;
    move-object/from16 v0, p3

    array-length v4, v0

    const/4 v5, 0x2

    if-le v4, v5, :cond_22

    const/4 v4, 0x0

    move-object/from16 v0, p3

    array-length v5, v0

    sub-int/2addr v5, v8

    move-object/from16 v0, p3

    move-object/from16 v1, v16

    invoke-static {v0, v8, v1, v4, v5}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    goto :goto_9

    .line 18707
    .end local v15    # "name":Ljava/lang/String;
    .end local v16    # "newArgs":[Ljava/lang/String;
    :cond_24
    const-string/jumbo v4, "providers"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_25

    const-string/jumbo v4, "prov"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_26

    .line 18708
    :cond_25
    monitor-enter p0

    .line 18709
    const/16 v22, 0x1

    const/16 v23, 0x0

    move-object/from16 v17, p0

    move-object/from16 v18, p1

    move-object/from16 v19, p2

    move-object/from16 v20, p3

    move/from16 v21, v8

    :try_start_d
    invoke-virtual/range {v17 .. v23}, Lcom/android/server/am/ActivityManagerService;->dumpProvidersLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 18710
    .end local v20    # "cmd":Ljava/lang/String;
    monitor-exit p0

    goto/16 :goto_3

    :catchall_8
    move-exception v4

    monitor-exit p0
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_8

    throw v4

    .line 18711
    .restart local v20    # "cmd":Ljava/lang/String;
    :cond_26
    const-string/jumbo v4, "service"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_29

    .line 18714
    move-object/from16 v0, p3

    array-length v4, v0

    if-lt v8, v4, :cond_28

    .line 18715
    const/4 v15, 0x0

    .line 18716
    .restart local v15    # "name":Ljava/lang/String;
    sget-object v16, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 18724
    .restart local v16    # "newArgs":[Ljava/lang/String;
    :cond_27
    :goto_a
    move-object/from16 v0, p0

    iget-object v12, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/16 v17, 0x0

    move-object/from16 v13, p1

    move-object/from16 v14, p2

    move/from16 v18, v26

    invoke-virtual/range {v12 .. v18}, Lcom/android/server/am/ActiveServices;->dumpService(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result v4

    if-nez v4, :cond_4

    .line 18725
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "No services match: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18726
    const-string v4, "Use -h for help."

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_3

    .line 18718
    .end local v15    # "name":Ljava/lang/String;
    .end local v16    # "newArgs":[Ljava/lang/String;
    :cond_28
    aget-object v15, p3, v8

    .line 18719
    .restart local v15    # "name":Ljava/lang/String;
    add-int/lit8 v8, v8, 0x1

    .line 18720
    move-object/from16 v0, p3

    array-length v4, v0

    sub-int/2addr v4, v8

    new-array v0, v4, [Ljava/lang/String;

    move-object/from16 v16, v0

    .line 18721
    .restart local v16    # "newArgs":[Ljava/lang/String;
    move-object/from16 v0, p3

    array-length v4, v0

    const/4 v5, 0x2

    if-le v4, v5, :cond_27

    const/4 v4, 0x0

    move-object/from16 v0, p3

    array-length v5, v0

    sub-int/2addr v5, v8

    move-object/from16 v0, p3

    move-object/from16 v1, v16

    invoke-static {v0, v8, v1, v4, v5}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    goto :goto_a

    .line 18728
    .end local v15    # "name":Ljava/lang/String;
    .end local v16    # "newArgs":[Ljava/lang/String;
    :cond_29
    const-string/jumbo v4, "package"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_2c

    .line 18730
    move-object/from16 v0, p3

    array-length v4, v0

    if-lt v8, v4, :cond_2a

    .line 18731
    const-string/jumbo v4, "package: no package name specified"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18732
    const-string v4, "Use -h for help."

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_3

    .line 18734
    :cond_2a
    aget-object v11, p3, v8

    .line 18735
    add-int/lit8 v8, v8, 0x1

    .line 18736
    move-object/from16 v0, p3

    array-length v4, v0

    sub-int/2addr v4, v8

    new-array v0, v4, [Ljava/lang/String;

    move-object/from16 v16, v0

    .line 18737
    .restart local v16    # "newArgs":[Ljava/lang/String;
    move-object/from16 v0, p3

    array-length v4, v0

    const/4 v5, 0x2

    if-le v4, v5, :cond_2b

    const/4 v4, 0x0

    move-object/from16 v0, p3

    array-length v5, v0

    sub-int/2addr v5, v8

    move-object/from16 v0, p3

    move-object/from16 v1, v16

    invoke-static {v0, v8, v1, v4, v5}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 18739
    :cond_2b
    move-object/from16 p3, v16

    .line 18740
    const/4 v8, 0x0

    .line 18741
    const/16 v30, 0x1

    goto/16 :goto_3

    .line 18743
    .end local v16    # "newArgs":[Ljava/lang/String;
    :cond_2c
    const-string v4, "associations"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_2d

    const-string v4, "as"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_2e

    .line 18744
    :cond_2d
    monitor-enter p0

    .line 18745
    const/4 v9, 0x1

    move-object/from16 v4, p0

    move-object/from16 v5, p1

    move-object/from16 v6, p2

    move-object/from16 v7, p3

    :try_start_e
    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->dumpAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 18746
    monitor-exit p0

    goto/16 :goto_3

    :catchall_9
    move-exception v4

    monitor-exit p0
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_9

    throw v4

    .line 18747
    :cond_2e
    const-string/jumbo v4, "services"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_2f

    const-string/jumbo v4, "s"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_30

    .line 18748
    :cond_2f
    monitor-enter p0

    .line 18749
    :try_start_f
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v9, 0x1

    move-object/from16 v5, p1

    move-object/from16 v6, p2

    move-object/from16 v7, p3

    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActiveServices;->dumpServicesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 18750
    monitor-exit p0

    goto/16 :goto_3

    :catchall_a
    move-exception v4

    monitor-exit p0
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_a

    throw v4

    .line 18751
    :cond_30
    const-string/jumbo v4, "write"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_31

    .line 18752
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    invoke-virtual {v4}, Lcom/android/server/am/TaskPersister;->flush()V

    .line 18753
    const-string v4, "All tasks persisted."

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_0

    .line 18755
    :cond_31
    const-string/jumbo v4, "track-associations"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_33

    .line 18756
    monitor-enter p0

    .line 18757
    :try_start_10
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    if-nez v4, :cond_32

    .line 18758
    const/4 v4, 0x1

    move-object/from16 v0, p0

    iput-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    .line 18759
    const-string v4, "Association tracking started."

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18763
    :goto_b
    monitor-exit p0

    goto/16 :goto_0

    :catchall_b
    move-exception v4

    monitor-exit p0
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_b

    throw v4

    .line 18761
    :cond_32
    :try_start_11
    const-string v4, "Association tracking already enabled."

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_b

    goto :goto_b

    .line 18765
    :cond_33
    const-string/jumbo v4, "untrack-associations"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_35

    .line 18766
    monitor-enter p0

    .line 18767
    :try_start_12
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    if-eqz v4, :cond_34

    .line 18768
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    .line 18769
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->clear()V

    .line 18770
    const-string v4, "Association tracking stopped."

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18774
    :goto_c
    monitor-exit p0

    goto/16 :goto_0

    :catchall_c
    move-exception v4

    monitor-exit p0
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_c

    throw v4

    .line 18772
    :cond_34
    :try_start_13
    const-string v4, "Association tracking not running."

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_c

    goto :goto_c

    .line 18777
    :cond_35
    const-string/jumbo v4, "mars"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_3a

    .line 18778
    move-object/from16 v0, p3

    array-length v4, v0

    const/4 v5, 0x1

    if-ne v4, v5, :cond_36

    .line 18779
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    move-object/from16 v0, p1

    move-object/from16 v1, p2

    invoke-virtual {v4, v0, v1}, Lcom/android/server/am/MARsPolicyManager;->dumpMARs(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;)V

    goto/16 :goto_3

    .line 18782
    :cond_36
    const-string/jumbo v4, "runpolicy"

    const/4 v5, 0x1

    aget-object v5, p3, v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_4

    .line 18783
    move-object/from16 v0, p3

    array-length v4, v0

    const/4 v5, 0x3

    if-ge v4, v5, :cond_37

    .line 18784
    const-string v4, "MARstest -- need policyNum and packageName"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_3

    .line 18787
    :cond_37
    const-string v4, "autorun"

    const/4 v5, 0x2

    aget-object v5, p3, v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_38

    .line 18788
    const/16 v36, 0x4

    .line 18794
    .local v36, "policyNum":I
    :goto_d
    :try_start_14
    move-object/from16 v0, p3

    array-length v4, v0

    const/4 v5, 0x3

    if-ne v4, v5, :cond_39

    .line 18795
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    const-string v5, "all"

    move-object/from16 v0, p1

    move-object/from16 v1, p2

    move/from16 v2, v36

    invoke-virtual {v4, v0, v1, v2, v5}, Lcom/android/server/am/MARsPolicyManager;->forceRunPolicy(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;ILjava/lang/String;)V
    :try_end_14
    .catch Ljava/lang/NumberFormatException; {:try_start_14 .. :try_end_14} :catch_2

    goto/16 :goto_3

    .line 18799
    :catch_2
    move-exception v28

    .line 18800
    .local v28, "e":Ljava/lang/NumberFormatException;
    const-string v4, "MARstest -- NumberFormatException!"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_3

    .line 18790
    .end local v28    # "e":Ljava/lang/NumberFormatException;
    .end local v36    # "policyNum":I
    :cond_38
    const/4 v4, 0x2

    aget-object v4, p3, v4

    invoke-static {v4}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v36

    .restart local v36    # "policyNum":I
    goto :goto_d

    .line 18797
    :cond_39
    :try_start_15
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    const/4 v5, 0x3

    aget-object v5, p3, v5

    move-object/from16 v0, p1

    move-object/from16 v1, p2

    move/from16 v2, v36

    invoke-virtual {v4, v0, v1, v2, v5}, Lcom/android/server/am/MARsPolicyManager;->forceRunPolicy(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;ILjava/lang/String;)V
    :try_end_15
    .catch Ljava/lang/NumberFormatException; {:try_start_15 .. :try_end_15} :catch_2

    goto/16 :goto_3

    .line 18808
    .end local v36    # "policyNum":I
    :cond_3a
    const-string/jumbo v4, "samp"

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_3c

    .line 18809
    sget-boolean v4, Lcom/android/server/am/SmartAdjustManager;->SAMP_ENABLE:Z

    if-eqz v4, :cond_4

    .line 18810
    monitor-enter p0

    .line 18811
    :try_start_16
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mSmartAdjustManager:Lcom/android/server/am/SmartAdjustManager;

    if-eqz v4, :cond_3b

    .line 18812
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mSmartAdjustManager:Lcom/android/server/am/SmartAdjustManager;

    move-object/from16 v0, p1

    move-object/from16 v1, p2

    invoke-virtual {v4, v0, v1}, Lcom/android/server/am/SmartAdjustManager;->dumpsampLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;)V

    .line 18813
    :cond_3b
    monitor-exit p0

    goto/16 :goto_3

    :catchall_d
    move-exception v4

    monitor-exit p0
    :try_end_16
    .catchall {:try_start_16 .. :try_end_16} :catchall_d

    throw v4

    :cond_3c
    move-object/from16 v17, p0

    move-object/from16 v18, p1

    move-object/from16 v19, p2

    move-object/from16 v21, p3

    move/from16 v22, v8

    move/from16 v23, v26

    .line 18817
    invoke-virtual/range {v17 .. v23}, Lcom/android/server/am/ActivityManagerService;->dumpActivity(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result v4

    if-nez v4, :cond_4

    .line 18818
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Bad activity command, or no activities match: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, v20

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18819
    const-string v4, "Use -h for help."

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_3

    .line 18829
    .end local v20    # "cmd":Ljava/lang/String;
    :cond_3d
    monitor-enter p0

    move-object/from16 v21, p0

    move-object/from16 v22, p1

    move-object/from16 v23, p2

    move-object/from16 v24, p3

    move/from16 v25, v8

    move-object/from16 v27, v11

    .line 18830
    :try_start_17
    invoke-virtual/range {v21 .. v27}, Lcom/android/server/am/ActivityManagerService;->dumpPendingIntentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 18831
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 18832
    if-eqz v26, :cond_3e

    .line 18833
    const-string v4, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_3e
    move-object/from16 v21, p0

    move-object/from16 v22, p1

    move-object/from16 v23, p2

    move-object/from16 v24, p3

    move/from16 v25, v8

    move-object/from16 v27, v11

    .line 18835
    invoke-virtual/range {v21 .. v27}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 18836
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 18837
    if-eqz v26, :cond_3f

    .line 18838
    const-string v4, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_3f
    move-object/from16 v21, p0

    move-object/from16 v22, p1

    move-object/from16 v23, p2

    move-object/from16 v24, p3

    move/from16 v25, v8

    move-object/from16 v27, v11

    .line 18840
    invoke-virtual/range {v21 .. v27}, Lcom/android/server/am/ActivityManagerService;->dumpProvidersLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 18841
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 18842
    if-eqz v26, :cond_40

    .line 18843
    const-string v4, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_40
    move-object/from16 v21, p0

    move-object/from16 v22, p1

    move-object/from16 v23, p2

    move-object/from16 v24, p3

    move/from16 v25, v8

    move-object/from16 v27, v11

    .line 18845
    invoke-virtual/range {v21 .. v27}, Lcom/android/server/am/ActivityManagerService;->dumpPermissionsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 18846
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 18847
    if-eqz v26, :cond_41

    .line 18848
    const-string v4, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18850
    :cond_41
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object/from16 v5, p1

    move-object/from16 v6, p2

    move-object/from16 v7, p3

    move/from16 v9, v26

    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActiveServices;->dumpServicesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 18851
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 18852
    if-eqz v26, :cond_42

    .line 18853
    const-string v4, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_42
    move-object/from16 v21, p0

    move-object/from16 v22, p1

    move-object/from16 v23, p2

    move-object/from16 v24, p3

    move/from16 v25, v8

    move-object/from16 v27, v11

    .line 18855
    invoke-virtual/range {v21 .. v27}, Lcom/android/server/am/ActivityManagerService;->dumpRecentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 18856
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 18857
    if-eqz v26, :cond_43

    .line 18858
    const-string v4, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_43
    move-object/from16 v4, p0

    move-object/from16 v5, p1

    move-object/from16 v6, p2

    move-object/from16 v7, p3

    move/from16 v9, v26

    .line 18860
    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 18861
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    if-lez v4, :cond_45

    .line 18862
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 18863
    if-eqz v26, :cond_44

    .line 18864
    const-string v4, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_44
    move-object/from16 v4, p0

    move-object/from16 v5, p1

    move-object/from16 v6, p2

    move-object/from16 v7, p3

    move/from16 v9, v26

    .line 18866
    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->dumpAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 18868
    :cond_45
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 18869
    if-eqz v26, :cond_46

    .line 18870
    const-string v4, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_46
    move-object/from16 v21, p0

    move-object/from16 v22, p1

    move-object/from16 v23, p2

    move-object/from16 v24, p3

    move/from16 v25, v8

    move-object/from16 v27, v11

    .line 18872
    invoke-virtual/range {v21 .. v27}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 18874
    sget-boolean v4, Lcom/android/server/am/SmartAdjustManager;->SAMP_ENABLE:Z

    if-eqz v4, :cond_48

    .line 18875
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 18876
    if-eqz v26, :cond_47

    .line 18877
    const-string v4, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18879
    :cond_47
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mSmartAdjustManager:Lcom/android/server/am/SmartAdjustManager;

    if-eqz v4, :cond_48

    .line 18880
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mSmartAdjustManager:Lcom/android/server/am/SmartAdjustManager;

    move-object/from16 v0, p1

    move-object/from16 v1, p2

    invoke-virtual {v4, v0, v1}, Lcom/android/server/am/SmartAdjustManager;->dumpsampLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;)V

    .line 18885
    :cond_48
    sget-boolean v4, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    if-eqz v4, :cond_4a

    .line 18886
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 18887
    if-eqz v26, :cond_49

    .line 18888
    const-string v4, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18890
    :cond_49
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    if-eqz v4, :cond_4a

    .line 18891
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    move-object/from16 v0, p1

    move-object/from16 v1, p2

    invoke-virtual {v4, v0, v1}, Lcom/android/server/am/MARsPolicyManager;->dumpMARs(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;)V

    .line 18896
    :cond_4a
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->SUPPORT_APPLOCK:Z

    if-eqz v4, :cond_4c

    .line 18897
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 18898
    if-eqz v26, :cond_4b

    .line 18899
    const-string v4, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18901
    :cond_4b
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

    if-eqz v4, :cond_4c

    .line 18902
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

    move-object/from16 v0, p1

    move-object/from16 v1, p2

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/app/AppLockPolicy;->dumpAppLockPolicyLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;)Z

    .line 18906
    :cond_4c
    monitor-exit p0
    :try_end_17
    .catchall {:try_start_17 .. :try_end_17} :catchall_e

    .line 18907
    invoke-static/range {v34 .. v35}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto/16 :goto_0

    .line 18906
    :catchall_e
    move-exception v4

    :try_start_18
    monitor-exit p0
    :try_end_18
    .catchall {:try_start_18 .. :try_end_18} :catchall_e

    throw v4
.end method

.method dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V
    .locals 12
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpClient"    # Z
    .param p7, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 18912
    const-string v1, "ACTIVITY MANAGER ACTIVITIES (dumpsys activity activities)"

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18914
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object v2, p1

    move-object v3, p2

    move/from16 v4, p5

    move/from16 v5, p6

    move-object/from16 v6, p7

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityStackSupervisor;->dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;ZZLjava/lang/String;)Z

    move-result v11

    .line 18916
    .local v11, "printedAnything":Z
    move v8, v11

    .line 18918
    .local v8, "needSep":Z
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    const-string v2, "  mFocusedActivity: "

    move-object/from16 v0, p7

    invoke-static {p2, v1, v0, v8, v2}, Lcom/android/server/am/ActivityStackSupervisor;->printThisActivity(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;ZLjava/lang/String;)Z

    move-result v10

    .line 18920
    .local v10, "printed":Z
    if-eqz v10, :cond_0

    .line 18921
    const/4 v11, 0x1

    .line 18922
    const/4 v8, 0x0

    .line 18940
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPersistDownloadablePkgs:Ljava/util/HashSet;

    invoke-virtual {v1}, Ljava/util/HashSet;->size()I

    move-result v1

    if-lez v1, :cond_1

    .line 18941
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPersistDownloadablePkgs:Ljava/util/HashSet;

    invoke-virtual {v1}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;

    move-result-object v7

    .line 18942
    .local v7, "it":Ljava/util/Iterator;
    const-string v1, "  mPersistDownloadablePkgs:"

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18943
    :goto_0
    invoke-interface {v7}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_1

    .line 18944
    invoke-interface {v7}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Ljava/lang/String;

    .line 18945
    .local v9, "pkg":Ljava/lang/String;
    const-string v1, "    "

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v9}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_0

    .line 18949
    .end local v7    # "it":Ljava/util/Iterator;
    .end local v9    # "pkg":Ljava/lang/String;
    :cond_1
    if-nez p7, :cond_3

    .line 18950
    if-eqz v8, :cond_2

    .line 18951
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 18953
    :cond_2
    const/4 v8, 0x1

    .line 18954
    const/4 v11, 0x1

    .line 18955
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-string v2, "  "

    invoke-virtual {v1, p2, v2}, Lcom/android/server/am/ActivityStackSupervisor;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 18958
    :cond_3
    if-nez v11, :cond_4

    .line 18959
    const-string v1, "  (nothing)"

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18961
    :cond_4
    return-void
.end method

.method protected dumpActivity(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
    .locals 14
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "args"    # [Ljava/lang/String;
    .param p5, "opti"    # I
    .param p6, "dumpAll"    # Z

    .prologue
    .line 19750
    monitor-enter p0

    .line 19751
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, p3

    invoke-virtual {v2, v0}, Lcom/android/server/am/ActivityStackSupervisor;->getDumpActivitiesLocked(Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v9

    .line 19752
    .local v9, "activities":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityRecord;>;"
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 19754
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-gtz v2, :cond_0

    .line 19755
    const/4 v2, 0x0

    .line 19781
    :goto_0
    return v2

    .line 19752
    .end local v9    # "activities":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityRecord;>;"
    :catchall_0
    move-exception v2

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v2

    .line 19758
    .restart local v9    # "activities":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityRecord;>;"
    :cond_0
    move-object/from16 v0, p4

    array-length v2, v0

    sub-int v2, v2, p5

    new-array v7, v2, [Ljava/lang/String;

    .line 19759
    .local v7, "newArgs":[Ljava/lang/String;
    const/4 v2, 0x0

    move-object/from16 v0, p4

    array-length v3, v0

    sub-int v3, v3, p5

    move-object/from16 v0, p4

    move/from16 v1, p5

    invoke-static {v0, v1, v7, v2, v3}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 19761
    const/4 v11, 0x0

    .line 19762
    .local v11, "lastTask":Lcom/android/server/am/TaskRecord;
    const/4 v12, 0x0

    .line 19763
    .local v12, "needSep":Z
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v10, v2, -0x1

    .local v10, "i":I
    :goto_1
    if-ltz v10, :cond_3

    .line 19764
    invoke-virtual {v9, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/am/ActivityRecord;

    .line 19765
    .local v13, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v12, :cond_1

    .line 19766
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19768
    :cond_1
    const/4 v12, 0x1

    .line 19769
    monitor-enter p0

    .line 19770
    :try_start_2
    iget-object v2, v13, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    if-eq v11, v2, :cond_2

    .line 19771
    iget-object v11, v13, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    .line 19772
    const-string v2, "TASK "

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v2, v11, Lcom/android/server/am/TaskRecord;->affinity:Ljava/lang/String;

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19773
    const-string v2, " id="

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v2, v11, Lcom/android/server/am/TaskRecord;->taskId:I

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(I)V

    .line 19774
    if-eqz p6, :cond_2

    .line 19775
    const-string v2, "  "

    move-object/from16 v0, p2

    invoke-virtual {v11, v0, v2}, Lcom/android/server/am/TaskRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 19778
    :cond_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 19779
    const-string v3, "  "

    invoke-virtual {v9, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ActivityRecord;

    move-object v2, p0

    move-object v4, p1

    move-object/from16 v5, p2

    move/from16 v8, p6

    invoke-direct/range {v2 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpActivity(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Lcom/android/server/am/ActivityRecord;[Ljava/lang/String;Z)V

    .line 19763
    add-int/lit8 v10, v10, -0x1

    goto :goto_1

    .line 19778
    :catchall_1
    move-exception v2

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v2

    .line 19781
    .end local v13    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_3
    const/4 v2, 0x1

    goto :goto_0
.end method

.method final dumpApplicationMemoryUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;ZLjava/io/PrintWriter;)V
    .locals 126
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "prefix"    # Ljava/lang/String;
    .param p4, "args"    # [Ljava/lang/String;
    .param p5, "brief"    # Z
    .param p6, "categoryPw"    # Ljava/io/PrintWriter;

    .prologue
    .line 20554
    const/16 v81, 0x0

    .line 20555
    .local v81, "dumpDetails":Z
    const/16 v17, 0x0

    .line 20556
    .local v17, "dumpFullDetails":Z
    const/16 v18, 0x0

    .line 20557
    .local v18, "dumpDalvik":Z
    const/16 v19, 0x0

    .line 20558
    .local v19, "dumpSummaryOnly":Z
    const/16 v108, 0x0

    .line 20559
    .local v108, "oomOnly":Z
    const/4 v13, 0x0

    .line 20560
    .local v13, "isCompact":Z
    const/16 v93, 0x0

    .line 20561
    .local v93, "localOnly":Z
    const/16 v114, 0x0

    .line 20563
    .local v114, "packages":Z
    const/16 v113, 0x0

    .line 20564
    .local v113, "opti":I
    :goto_0
    move-object/from16 v0, p4

    array-length v6, v0

    move/from16 v0, v113

    if-ge v0, v6, :cond_0

    .line 20565
    aget-object v112, p4, v113

    .line 20566
    .local v112, "opt":Ljava/lang/String;
    if-eqz v112, :cond_0

    invoke-virtual/range {v112 .. v112}, Ljava/lang/String;->length()I

    move-result v6

    if-lez v6, :cond_0

    const/4 v6, 0x0

    move-object/from16 v0, v112

    invoke-virtual {v0, v6}, Ljava/lang/String;->charAt(I)C

    move-result v6

    const/16 v7, 0x2d

    if-eq v6, v7, :cond_3

    .line 20605
    .end local v112    # "opt":Ljava/lang/String;
    :cond_0
    const-string v6, "--checkin"

    move-object/from16 v0, p4

    invoke-static {v0, v6}, Lcom/android/server/am/ActivityManagerService;->scanArgs([Ljava/lang/String;Ljava/lang/String;)Z

    move-result v12

    .line 20606
    .local v12, "isCheckinRequest":Z
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v8

    .line 20607
    .local v8, "uptime":J
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v10

    .line 20608
    .local v10, "realtime":J
    const/4 v6, 0x1

    new-array v0, v6, [J

    move-object/from16 v120, v0

    .line 20610
    .local v120, "tmpLong":[J
    move-object/from16 v0, p0

    move-object/from16 v1, p2

    move/from16 v2, v113

    move/from16 v3, v114

    move-object/from16 v4, p4

    invoke-virtual {v0, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v117

    .line 20611
    .local v117, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    if-nez v117, :cond_14

    .line 20613
    if-eqz p4, :cond_13

    move-object/from16 v0, p4

    array-length v6, v0

    move/from16 v0, v113

    if-le v6, v0, :cond_13

    aget-object v6, p4, v113

    const/4 v7, 0x0

    invoke-virtual {v6, v7}, Ljava/lang/String;->charAt(I)C

    move-result v6

    const/16 v7, 0x2d

    if-eq v6, v7, :cond_13

    .line 20615
    new-instance v100, Ljava/util/ArrayList;

    invoke-direct/range {v100 .. v100}, Ljava/util/ArrayList;-><init>()V

    .line 20617
    .local v100, "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 20618
    const/16 v85, -0x1

    .line 20620
    .local v85, "findPid":I
    :try_start_0
    aget-object v6, p4, v113

    invoke-static {v6}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_1

    move-result v85

    .line 20623
    :goto_1
    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    monitor-enter v7

    .line 20624
    :try_start_1
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v6}, Lcom/android/internal/os/ProcessCpuTracker;->countStats()I

    move-result v38

    .line 20625
    .local v38, "N":I
    const/16 v88, 0x0

    .local v88, "i":I
    :goto_2
    move/from16 v0, v88

    move/from16 v1, v38

    if-ge v0, v1, :cond_d

    .line 20626
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move/from16 v0, v88

    invoke-virtual {v6, v0}, Lcom/android/internal/os/ProcessCpuTracker;->getStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v119

    .line 20627
    .local v119, "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    move-object/from16 v0, v119

    iget v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move/from16 v0, v85

    if-eq v6, v0, :cond_1

    move-object/from16 v0, v119

    iget-object v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    if-eqz v6, :cond_2

    move-object/from16 v0, v119

    iget-object v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    aget-object v14, p4, v113

    invoke-virtual {v6, v14}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_2

    .line 20629
    :cond_1
    move-object/from16 v0, v100

    move-object/from16 v1, v119

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 20625
    :cond_2
    add-int/lit8 v88, v88, 0x1

    goto :goto_2

    .line 20569
    .end local v8    # "uptime":J
    .end local v10    # "realtime":J
    .end local v12    # "isCheckinRequest":Z
    .end local v38    # "N":I
    .end local v85    # "findPid":I
    .end local v88    # "i":I
    .end local v100    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .end local v117    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .end local v119    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    .end local v120    # "tmpLong":[J
    .restart local v112    # "opt":Ljava/lang/String;
    :cond_3
    add-int/lit8 v113, v113, 0x1

    .line 20570
    const-string v6, "-a"

    move-object/from16 v0, v112

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_4

    .line 20571
    const/16 v81, 0x1

    .line 20572
    const/16 v17, 0x1

    .line 20573
    const/16 v18, 0x1

    goto/16 :goto_0

    .line 20574
    :cond_4
    const-string v6, "-d"

    move-object/from16 v0, v112

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_5

    .line 20575
    const/16 v18, 0x1

    goto/16 :goto_0

    .line 20576
    :cond_5
    const-string v6, "-c"

    move-object/from16 v0, v112

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_6

    .line 20577
    const/4 v13, 0x1

    goto/16 :goto_0

    .line 20578
    :cond_6
    const-string v6, "-s"

    move-object/from16 v0, v112

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_7

    .line 20579
    const/16 v81, 0x1

    .line 20580
    const/16 v19, 0x1

    goto/16 :goto_0

    .line 20581
    :cond_7
    const-string v6, "--oom"

    move-object/from16 v0, v112

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_8

    .line 20582
    const/16 v108, 0x1

    goto/16 :goto_0

    .line 20583
    :cond_8
    const-string v6, "--local"

    move-object/from16 v0, v112

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_9

    .line 20584
    const/16 v93, 0x1

    goto/16 :goto_0

    .line 20585
    :cond_9
    const-string v6, "--package"

    move-object/from16 v0, v112

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_a

    .line 20586
    const/16 v114, 0x1

    goto/16 :goto_0

    .line 20587
    :cond_a
    const-string v6, "-h"

    move-object/from16 v0, v112

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_c

    .line 20588
    const-string/jumbo v6, "meminfo dump options: [-a] [-d] [-c] [-s] [--oom] [process]"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20589
    const-string v6, "  -a: include all available information for each process."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20590
    const-string v6, "  -d: include dalvik details."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20591
    const-string v6, "  -c: dump in a compact machine-parseable representation."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20592
    const-string v6, "  -s: dump only summary of application memory usage."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20593
    const-string v6, "  --oom: only show processes organized by oom adj."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20594
    const-string v6, "  --local: only collect details locally, don\'t call process."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20595
    const-string v6, "  --package: interpret process arg as package, dumping all"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20596
    const-string v6, "             processes that have loaded that package."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20597
    const-string v6, "If [process] is specified it can be the name or "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20598
    const-string/jumbo v6, "pid of a specific process to dump."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 21036
    .end local v112    # "opt":Ljava/lang/String;
    :cond_b
    :goto_3
    return-void

    .line 20601
    .restart local v112    # "opt":Ljava/lang/String;
    :cond_c
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Unknown argument: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v112

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, "; use -h for help"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_0

    .line 20632
    .end local v112    # "opt":Ljava/lang/String;
    .restart local v8    # "uptime":J
    .restart local v10    # "realtime":J
    .restart local v12    # "isCheckinRequest":Z
    .restart local v38    # "N":I
    .restart local v85    # "findPid":I
    .restart local v88    # "i":I
    .restart local v100    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .restart local v117    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v120    # "tmpLong":[J
    :cond_d
    :try_start_2
    monitor-exit v7
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 20633
    invoke-virtual/range {v100 .. v100}, Ljava/util/ArrayList;->size()I

    move-result v6

    if-lez v6, :cond_13

    move-object/from16 v6, p0

    move-object/from16 v7, p2

    .line 20634
    invoke-direct/range {v6 .. v13}, Lcom/android/server/am/ActivityManagerService;->dumpApplicationMemoryUsageHeader(Ljava/io/PrintWriter;JJZZ)V

    .line 20636
    const/4 v15, 0x0

    .line 20637
    .local v15, "mi":Landroid/os/Debug$MemoryInfo;
    invoke-virtual/range {v100 .. v100}, Ljava/util/ArrayList;->size()I

    move-result v6

    add-int/lit8 v88, v6, -0x1

    :goto_4
    if-ltz v88, :cond_b

    .line 20638
    move-object/from16 v0, v100

    move/from16 v1, v88

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v118

    check-cast v118, Lcom/android/internal/os/ProcessCpuTracker$Stats;

    .line 20639
    .local v118, "r":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    move-object/from16 v0, v118

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move/from16 v20, v0

    .line 20640
    .local v20, "pid":I
    if-nez v12, :cond_e

    if-eqz v81, :cond_e

    .line 20641
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "\n** MEMINFO in pid "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v20

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " ["

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v118

    iget-object v7, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, "] **"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20643
    :cond_e
    if-nez v15, :cond_f

    .line 20644
    new-instance v15, Landroid/os/Debug$MemoryInfo;

    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    invoke-direct {v15}, Landroid/os/Debug$MemoryInfo;-><init>()V

    .line 20646
    .restart local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    :cond_f
    if-nez v81, :cond_10

    if-nez p5, :cond_12

    if-nez v108, :cond_12

    .line 20647
    :cond_10
    move/from16 v0, v20

    invoke-static {v0, v15}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)V

    .line 20652
    :goto_5
    move-object/from16 v0, v118

    iget-object v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    move-object/from16 v21, v0

    const-wide/16 v22, 0x0

    const-wide/16 v24, 0x0

    const-wide/16 v26, 0x0

    const-wide/16 v28, 0x0

    const-wide/16 v30, 0x0

    const-wide/16 v32, 0x0

    move-object/from16 v14, p2

    move/from16 v16, v12

    invoke-static/range {v14 .. v33}, Landroid/app/ActivityThread;->dumpMemInfoTable(Ljava/io/PrintWriter;Landroid/os/Debug$MemoryInfo;ZZZZILjava/lang/String;JJJJJJ)V

    .line 20654
    if-eqz v12, :cond_11

    .line 20655
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 20637
    :cond_11
    add-int/lit8 v88, v88, -0x1

    goto :goto_4

    .line 20632
    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v20    # "pid":I
    .end local v38    # "N":I
    .end local v88    # "i":I
    .end local v118    # "r":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :catchall_0
    move-exception v6

    :try_start_3
    monitor-exit v7
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    throw v6

    .line 20649
    .restart local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v20    # "pid":I
    .restart local v38    # "N":I
    .restart local v88    # "i":I
    .restart local v118    # "r":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :cond_12
    const/4 v6, 0x0

    move/from16 v0, v20

    move-object/from16 v1, v120

    invoke-static {v0, v1, v6}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v6

    long-to-int v6, v6

    iput v6, v15, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    .line 20650
    const/4 v6, 0x0

    aget-wide v6, v120, v6

    long-to-int v6, v6

    iput v6, v15, Landroid/os/Debug$MemoryInfo;->dalvikPrivateDirty:I

    goto :goto_5

    .line 20661
    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v20    # "pid":I
    .end local v38    # "N":I
    .end local v85    # "findPid":I
    .end local v88    # "i":I
    .end local v100    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .end local v118    # "r":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :cond_13
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "No process found for: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    aget-object v7, p4, v113

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_3

    .line 20665
    :cond_14
    if-nez p5, :cond_16

    if-nez v108, :cond_16

    invoke-virtual/range {v117 .. v117}, Ljava/util/ArrayList;->size()I

    move-result v6

    const/4 v7, 0x1

    if-eq v6, v7, :cond_15

    if-nez v12, :cond_15

    if-eqz v114, :cond_16

    .line 20666
    :cond_15
    const/16 v81, 0x1

    :cond_16
    move-object/from16 v6, p0

    move-object/from16 v7, p2

    .line 20669
    invoke-direct/range {v6 .. v13}, Lcom/android/server/am/ActivityManagerService;->dumpApplicationMemoryUsageHeader(Ljava/io/PrintWriter;JJZZ)V

    .line 20671
    move-object/from16 v0, p4

    array-length v6, v0

    sub-int v6, v6, v113

    new-array v0, v6, [Ljava/lang/String;

    move-object/from16 v89, v0

    .line 20672
    .local v89, "innerArgs":[Ljava/lang/String;
    const/4 v6, 0x0

    move-object/from16 v0, p4

    array-length v7, v0

    sub-int v7, v7, v113

    move-object/from16 v0, p4

    move/from16 v1, v113

    move-object/from16 v2, v89

    invoke-static {v0, v1, v2, v6, v7}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 20674
    new-instance v115, Ljava/util/ArrayList;

    invoke-direct/range {v115 .. v115}, Ljava/util/ArrayList;-><init>()V

    .line 20675
    .local v115, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    new-instance v116, Landroid/util/SparseArray;

    invoke-direct/range {v116 .. v116}, Landroid/util/SparseArray;-><init>()V

    .line 20676
    .local v116, "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    const-wide/16 v102, 0x0

    .line 20677
    .local v102, "nativePss":J
    const-wide/16 v78, 0x0

    .line 20678
    .local v78, "dalvikPss":J
    if-eqz v18, :cond_1c

    const/16 v6, 0x8

    new-array v0, v6, [J

    move-object/from16 v77, v0

    .line 20680
    .local v77, "dalvikSubitemPss":[J
    :goto_6
    if-eqz v18, :cond_1d

    const/16 v6, 0x8

    new-array v0, v6, [J

    move-object/from16 v80, v0

    .line 20682
    .local v80, "dalvikSubitemSwapPss":[J
    :goto_7
    const-wide/16 v52, 0x0

    .line 20683
    .local v52, "otherPss":J
    const-wide/16 v104, 0x0

    .line 20684
    .local v104, "nativeSwapPss":J
    const-wide/16 v82, 0x0

    .line 20685
    .local v82, "dalvikSwapPss":J
    const-wide/16 v54, 0x0

    .line 20686
    .local v54, "otherSwapPss":J
    const/16 v6, 0x11

    new-array v0, v6, [J

    move-object/from16 v98, v0

    .line 20687
    .local v98, "miscPss":[J
    const/16 v6, 0x11

    new-array v0, v6, [J

    move-object/from16 v99, v0

    .line 20689
    .local v99, "miscSwapPss":[J
    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    array-length v6, v6

    new-array v0, v6, [J

    move-object/from16 v110, v0

    .line 20690
    .local v110, "oomPss":[J
    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    array-length v6, v6

    new-array v0, v6, [J

    move-object/from16 v111, v0

    .line 20691
    .local v111, "oomSwap":[J
    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    array-length v6, v6

    new-array v0, v6, [Ljava/util/ArrayList;

    move-object/from16 v109, v0

    check-cast v109, [Ljava/util/ArrayList;

    .line 20694
    .local v109, "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    const-wide/16 v122, 0x0

    .line 20695
    .local v122, "totalPss":J
    const-wide/16 v74, 0x0

    .line 20697
    .local v74, "cachedPss":J
    const/4 v15, 0x0

    .line 20698
    .restart local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    invoke-virtual/range {v117 .. v117}, Ljava/util/ArrayList;->size()I

    move-result v6

    add-int/lit8 v88, v6, -0x1

    .restart local v88    # "i":I
    :goto_8
    if-ltz v88, :cond_29

    .line 20699
    move-object/from16 v0, v117

    move/from16 v1, v88

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v118

    check-cast v118, Lcom/android/server/am/ProcessRecord;

    .line 20704
    .local v118, "r":Lcom/android/server/am/ProcessRecord;
    monitor-enter p0

    .line 20705
    :try_start_4
    move-object/from16 v0, v118

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move-object/from16 v21, v0

    .line 20706
    .local v21, "thread":Landroid/app/IApplicationThread;
    move-object/from16 v0, v118

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v20, v0

    .line 20707
    .restart local v20    # "pid":I
    invoke-virtual/range {v118 .. v118}, Lcom/android/server/am/ProcessRecord;->getSetAdjWithServices()I

    move-result v101

    .line 20708
    .local v101, "oomAdj":I
    move-object/from16 v0, v118

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v6

    if-lez v6, :cond_1e

    const/16 v37, 0x1

    .line 20709
    .local v37, "hasActivities":Z
    :goto_9
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 20710
    if-eqz v21, :cond_27

    .line 20711
    if-nez v12, :cond_17

    if-eqz v81, :cond_17

    .line 20712
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "\n** MEMINFO in pid "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v20

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " ["

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v118

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, "] **"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20714
    :cond_17
    if-nez v15, :cond_18

    .line 20715
    new-instance v15, Landroid/os/Debug$MemoryInfo;

    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    invoke-direct {v15}, Landroid/os/Debug$MemoryInfo;-><init>()V

    .line 20717
    .restart local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    :cond_18
    if-nez v81, :cond_19

    if-nez p5, :cond_1f

    if-nez v108, :cond_1f

    .line 20718
    :cond_19
    move/from16 v0, v20

    invoke-static {v0, v15}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)V

    .line 20723
    :goto_a
    if-eqz v81, :cond_1a

    .line 20724
    if-eqz v93, :cond_20

    .line 20725
    move-object/from16 v0, v118

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v21, v0

    .end local v21    # "thread":Landroid/app/IApplicationThread;
    const-wide/16 v22, 0x0

    const-wide/16 v24, 0x0

    const-wide/16 v26, 0x0

    const-wide/16 v28, 0x0

    const-wide/16 v30, 0x0

    const-wide/16 v32, 0x0

    move-object/from16 v14, p2

    move/from16 v16, v12

    invoke-static/range {v14 .. v33}, Landroid/app/ActivityThread;->dumpMemInfoTable(Ljava/io/PrintWriter;Landroid/os/Debug$MemoryInfo;ZZZZILjava/lang/String;JJJJJJ)V

    .line 20727
    if-eqz v12, :cond_1a

    .line 20728
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 20744
    :cond_1a
    :goto_b
    invoke-virtual {v15}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v24, v0

    .line 20745
    .local v24, "myTotalPss":J
    invoke-virtual {v15}, Landroid/os/Debug$MemoryInfo;->getTotalSwappedOutPss()I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v34, v0

    .line 20746
    .local v34, "myTotalSwappedOutPss":J
    invoke-virtual {v15}, Landroid/os/Debug$MemoryInfo;->getTotalUss()I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v26, v0

    .line 20748
    .local v26, "myTotalUss":J
    monitor-enter p0

    .line 20749
    :try_start_5
    move-object/from16 v0, v118

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v6, :cond_1b

    invoke-virtual/range {v118 .. v118}, Lcom/android/server/am/ProcessRecord;->getSetAdjWithServices()I

    move-result v6

    move/from16 v0, v101

    if-ne v0, v6, :cond_1b

    .line 20751
    move-object/from16 v0, v118

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    move-object/from16 v23, v0

    const/16 v28, 0x1

    move-object/from16 v0, v118

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v29, v0

    invoke-virtual/range {v23 .. v29}, Lcom/android/internal/app/ProcessStats$ProcessState;->addPss(JJZLandroid/util/ArrayMap;)V

    .line 20753
    :cond_1b
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    .line 20755
    if-nez v12, :cond_27

    if-eqz v15, :cond_27

    .line 20756
    add-long v122, v122, v24

    .line 20757
    new-instance v29, Lcom/android/server/am/ActivityManagerService$MemItem;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v118

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " (pid "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v20

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    if-eqz v37, :cond_21

    const-string v6, " / activities)"

    :goto_c
    invoke-virtual {v7, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v30

    move-object/from16 v0, v118

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v31, v0

    move-wide/from16 v32, v24

    move/from16 v36, v20

    invoke-direct/range {v29 .. v37}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJIZ)V

    .line 20760
    .local v29, "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    move-object/from16 v0, v115

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 20761
    move-object/from16 v0, v116

    move/from16 v1, v20

    move-object/from16 v2, v29

    invoke-virtual {v0, v1, v2}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 20763
    iget v6, v15, Landroid/os/Debug$MemoryInfo;->nativePss:I

    int-to-long v6, v6

    add-long v102, v102, v6

    .line 20764
    iget v6, v15, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    int-to-long v6, v6

    add-long v78, v78, v6

    .line 20765
    const/16 v48, 0x0

    .local v48, "j":I
    :goto_d
    move-object/from16 v0, v77

    array-length v6, v0

    move/from16 v0, v48

    if-ge v0, v6, :cond_22

    .line 20766
    aget-wide v6, v77, v48

    add-int/lit8 v14, v48, 0x11

    invoke-virtual {v15, v14}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v14

    int-to-long v0, v14

    move-wide/from16 v22, v0

    add-long v6, v6, v22

    aput-wide v6, v77, v48

    .line 20767
    aget-wide v6, v80, v48

    add-int/lit8 v14, v48, 0x11

    invoke-virtual {v15, v14}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v14

    int-to-long v0, v14

    move-wide/from16 v22, v0

    add-long v6, v6, v22

    aput-wide v6, v80, v48

    .line 20765
    add-int/lit8 v48, v48, 0x1

    goto :goto_d

    .line 20678
    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v20    # "pid":I
    .end local v24    # "myTotalPss":J
    .end local v26    # "myTotalUss":J
    .end local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v34    # "myTotalSwappedOutPss":J
    .end local v37    # "hasActivities":Z
    .end local v48    # "j":I
    .end local v52    # "otherPss":J
    .end local v54    # "otherSwapPss":J
    .end local v74    # "cachedPss":J
    .end local v77    # "dalvikSubitemPss":[J
    .end local v80    # "dalvikSubitemSwapPss":[J
    .end local v82    # "dalvikSwapPss":J
    .end local v88    # "i":I
    .end local v98    # "miscPss":[J
    .end local v99    # "miscSwapPss":[J
    .end local v101    # "oomAdj":I
    .end local v104    # "nativeSwapPss":J
    .end local v109    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v110    # "oomPss":[J
    .end local v111    # "oomSwap":[J
    .end local v118    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v122    # "totalPss":J
    :cond_1c
    sget-object v77, Llibcore/util/EmptyArray;->LONG:[J

    goto/16 :goto_6

    .line 20680
    .restart local v77    # "dalvikSubitemPss":[J
    :cond_1d
    sget-object v80, Llibcore/util/EmptyArray;->LONG:[J

    goto/16 :goto_7

    .line 20708
    .restart local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v20    # "pid":I
    .restart local v21    # "thread":Landroid/app/IApplicationThread;
    .restart local v52    # "otherPss":J
    .restart local v54    # "otherSwapPss":J
    .restart local v74    # "cachedPss":J
    .restart local v80    # "dalvikSubitemSwapPss":[J
    .restart local v82    # "dalvikSwapPss":J
    .restart local v88    # "i":I
    .restart local v98    # "miscPss":[J
    .restart local v99    # "miscSwapPss":[J
    .restart local v101    # "oomAdj":I
    .restart local v104    # "nativeSwapPss":J
    .restart local v109    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v110    # "oomPss":[J
    .restart local v111    # "oomSwap":[J
    .restart local v118    # "r":Lcom/android/server/am/ProcessRecord;
    .restart local v122    # "totalPss":J
    :cond_1e
    const/16 v37, 0x0

    goto/16 :goto_9

    .line 20709
    .end local v20    # "pid":I
    .end local v21    # "thread":Landroid/app/IApplicationThread;
    .end local v101    # "oomAdj":I
    :catchall_1
    move-exception v6

    :try_start_6
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    throw v6

    .line 20720
    .restart local v20    # "pid":I
    .restart local v21    # "thread":Landroid/app/IApplicationThread;
    .restart local v37    # "hasActivities":Z
    .restart local v101    # "oomAdj":I
    :cond_1f
    const/4 v6, 0x0

    move/from16 v0, v20

    move-object/from16 v1, v120

    invoke-static {v0, v1, v6}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v6

    long-to-int v6, v6

    iput v6, v15, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    .line 20721
    const/4 v6, 0x0

    aget-wide v6, v120, v6

    long-to-int v6, v6

    iput v6, v15, Landroid/os/Debug$MemoryInfo;->dalvikPrivateDirty:I

    goto/16 :goto_a

    .line 20732
    :cond_20
    :try_start_7
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->flush()V

    move-object/from16 v22, p1

    move-object/from16 v23, v15

    move/from16 v24, v12

    move/from16 v25, v17

    move/from16 v26, v18

    move/from16 v27, v19

    move-object/from16 v28, v89

    .line 20733
    invoke-interface/range {v21 .. v28}, Landroid/app/IApplicationThread;->dumpMemInfo(Ljava/io/FileDescriptor;Landroid/os/Debug$MemoryInfo;ZZZZ[Ljava/lang/String;)V
    :try_end_7
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_7} :catch_0

    goto/16 :goto_b

    .line 20735
    :catch_0
    move-exception v84

    .line 20736
    .local v84, "e":Landroid/os/RemoteException;
    if-nez v12, :cond_1a

    .line 20737
    const-string v6, "Got RemoteException!"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20738
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->flush()V

    goto/16 :goto_b

    .line 20753
    .end local v21    # "thread":Landroid/app/IApplicationThread;
    .end local v84    # "e":Landroid/os/RemoteException;
    .restart local v24    # "myTotalPss":J
    .restart local v26    # "myTotalUss":J
    .restart local v34    # "myTotalSwappedOutPss":J
    :catchall_2
    move-exception v6

    :try_start_8
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    throw v6

    .line 20757
    :cond_21
    const-string v6, ")"

    goto/16 :goto_c

    .line 20769
    .restart local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .restart local v48    # "j":I
    :cond_22
    iget v6, v15, Landroid/os/Debug$MemoryInfo;->otherPss:I

    int-to-long v6, v6

    add-long v52, v52, v6

    .line 20770
    iget v6, v15, Landroid/os/Debug$MemoryInfo;->nativeSwappedOutPss:I

    int-to-long v6, v6

    add-long v104, v104, v6

    .line 20771
    iget v6, v15, Landroid/os/Debug$MemoryInfo;->dalvikSwappedOutPss:I

    int-to-long v6, v6

    add-long v82, v82, v6

    .line 20772
    iget v6, v15, Landroid/os/Debug$MemoryInfo;->otherSwappedOutPss:I

    int-to-long v6, v6

    add-long v54, v54, v6

    .line 20773
    const/16 v48, 0x0

    :goto_e
    const/16 v6, 0x11

    move/from16 v0, v48

    if-ge v0, v6, :cond_23

    .line 20774
    move/from16 v0, v48

    invoke-virtual {v15, v0}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v94, v0

    .line 20775
    .local v94, "mem":J
    aget-wide v6, v98, v48

    add-long v6, v6, v94

    aput-wide v6, v98, v48

    .line 20776
    sub-long v52, v52, v94

    .line 20777
    move/from16 v0, v48

    invoke-virtual {v15, v0}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v94, v0

    .line 20778
    aget-wide v6, v99, v48

    add-long v6, v6, v94

    aput-wide v6, v99, v48

    .line 20779
    sub-long v54, v54, v94

    .line 20773
    add-int/lit8 v48, v48, 0x1

    goto :goto_e

    .line 20782
    .end local v94    # "mem":J
    :cond_23
    const/16 v6, 0x9

    move/from16 v0, v101

    if-lt v0, v6, :cond_24

    .line 20783
    add-long v74, v74, v24

    .line 20786
    :cond_24
    const/16 v106, 0x0

    .local v106, "oomIndex":I
    :goto_f
    move-object/from16 v0, v110

    array-length v6, v0

    move/from16 v0, v106

    if-ge v0, v6, :cond_27

    .line 20787
    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v6, v6, v106

    move/from16 v0, v101

    if-le v0, v6, :cond_25

    move-object/from16 v0, v110

    array-length v6, v0

    add-int/lit8 v6, v6, -0x1

    move/from16 v0, v106

    if-ne v0, v6, :cond_28

    .line 20789
    :cond_25
    aget-wide v6, v110, v106

    add-long v6, v6, v24

    aput-wide v6, v110, v106

    .line 20790
    aget-wide v6, v111, v106

    add-long v6, v6, v34

    aput-wide v6, v111, v106

    .line 20791
    aget-object v6, v109, v106

    if-nez v6, :cond_26

    .line 20792
    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V

    aput-object v6, v109, v106

    .line 20794
    :cond_26
    aget-object v6, v109, v106

    move-object/from16 v0, v29

    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 20698
    .end local v24    # "myTotalPss":J
    .end local v26    # "myTotalUss":J
    .end local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v34    # "myTotalSwappedOutPss":J
    .end local v48    # "j":I
    .end local v106    # "oomIndex":I
    :cond_27
    add-int/lit8 v88, v88, -0x1

    goto/16 :goto_8

    .line 20786
    .restart local v24    # "myTotalPss":J
    .restart local v26    # "myTotalUss":J
    .restart local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .restart local v34    # "myTotalSwappedOutPss":J
    .restart local v48    # "j":I
    .restart local v106    # "oomIndex":I
    :cond_28
    add-int/lit8 v106, v106, 0x1

    goto :goto_f

    .line 20802
    .end local v20    # "pid":I
    .end local v24    # "myTotalPss":J
    .end local v26    # "myTotalUss":J
    .end local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v34    # "myTotalSwappedOutPss":J
    .end local v37    # "hasActivities":Z
    .end local v48    # "j":I
    .end local v101    # "oomAdj":I
    .end local v106    # "oomIndex":I
    .end local v118    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_29
    const-wide/16 v70, 0x0

    .line 20804
    .local v70, "nativeProcTotalPss":J
    if-nez v12, :cond_b

    invoke-virtual/range {v117 .. v117}, Ljava/util/ArrayList;->size()I

    move-result v6

    const/4 v7, 0x1

    if-le v6, v7, :cond_b

    if-nez v114, :cond_b

    .line 20807
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 20808
    const/4 v15, 0x0

    .line 20809
    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    monitor-enter v7

    .line 20810
    :try_start_9
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v6}, Lcom/android/internal/os/ProcessCpuTracker;->countStats()I
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    move-result v38

    .line 20811
    .restart local v38    # "N":I
    const/16 v88, 0x0

    move-object/from16 v97, v15

    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .local v97, "mi":Landroid/os/Debug$MemoryInfo;
    :goto_10
    move/from16 v0, v88

    move/from16 v1, v38

    if-ge v0, v1, :cond_2e

    .line 20812
    :try_start_a
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move/from16 v0, v88

    invoke-virtual {v6, v0}, Lcom/android/internal/os/ProcessCpuTracker;->getStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v119

    .line 20813
    .restart local v119    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    move-object/from16 v0, v119

    iget-wide v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->vsize:J

    move-wide/from16 v22, v0

    const-wide/16 v30, 0x0

    cmp-long v6, v22, v30

    if-lez v6, :cond_49

    move-object/from16 v0, v119

    iget v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move-object/from16 v0, v116

    invoke-virtual {v0, v6}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v6

    if-gez v6, :cond_49

    .line 20814
    if-nez v97, :cond_48

    .line 20815
    new-instance v15, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v15}, Landroid/os/Debug$MemoryInfo;-><init>()V
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_5

    .line 20817
    .end local v97    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    :goto_11
    if-nez p5, :cond_2a

    if-nez v108, :cond_2a

    .line 20818
    :try_start_b
    move-object/from16 v0, v119

    iget v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-static {v6, v15}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)V

    .line 20824
    :goto_12
    invoke-virtual {v15}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v24, v0

    .line 20825
    .restart local v24    # "myTotalPss":J
    invoke-virtual {v15}, Landroid/os/Debug$MemoryInfo;->getTotalSwappedOutPss()I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v34, v0

    .line 20826
    .restart local v34    # "myTotalSwappedOutPss":J
    add-long v122, v122, v24

    .line 20827
    add-long v70, v70, v24

    .line 20829
    new-instance v29, Lcom/android/server/am/ActivityManagerService$MemItem;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v119

    iget-object v14, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    invoke-virtual {v6, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v14, " (pid "

    invoke-virtual {v6, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v119

    iget v14, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {v6, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v14, ")"

    invoke-virtual {v6, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v40

    move-object/from16 v0, v119

    iget-object v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    move-object/from16 v41, v0

    move-object/from16 v0, v119

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move/from16 v46, v0

    const/16 v47, 0x0

    move-object/from16 v39, v29

    move-wide/from16 v42, v24

    move-wide/from16 v44, v34

    invoke-direct/range {v39 .. v47}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJIZ)V

    .line 20831
    .restart local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    move-object/from16 v0, v115

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 20833
    iget v6, v15, Landroid/os/Debug$MemoryInfo;->nativePss:I

    int-to-long v0, v6

    move-wide/from16 v22, v0

    add-long v102, v102, v22

    .line 20834
    iget v6, v15, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    int-to-long v0, v6

    move-wide/from16 v22, v0

    add-long v78, v78, v22

    .line 20835
    const/16 v48, 0x0

    .restart local v48    # "j":I
    :goto_13
    move-object/from16 v0, v77

    array-length v6, v0

    move/from16 v0, v48

    if-ge v0, v6, :cond_2b

    .line 20836
    aget-wide v22, v77, v48

    add-int/lit8 v6, v48, 0x11

    invoke-virtual {v15, v6}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v30, v0

    add-long v22, v22, v30

    aput-wide v22, v77, v48

    .line 20838
    aget-wide v22, v80, v48

    add-int/lit8 v6, v48, 0x11

    invoke-virtual {v15, v6}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v30, v0

    add-long v22, v22, v30

    aput-wide v22, v80, v48

    .line 20835
    add-int/lit8 v48, v48, 0x1

    goto :goto_13

    .line 20820
    .end local v24    # "myTotalPss":J
    .end local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v34    # "myTotalSwappedOutPss":J
    .end local v48    # "j":I
    :cond_2a
    move-object/from16 v0, v119

    iget v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    const/4 v14, 0x0

    move-object/from16 v0, v120

    invoke-static {v6, v0, v14}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v22

    move-wide/from16 v0, v22

    long-to-int v6, v0

    iput v6, v15, Landroid/os/Debug$MemoryInfo;->nativePss:I

    .line 20821
    const/4 v6, 0x0

    aget-wide v22, v120, v6

    move-wide/from16 v0, v22

    long-to-int v6, v0

    iput v6, v15, Landroid/os/Debug$MemoryInfo;->nativePrivateDirty:I

    goto/16 :goto_12

    .line 20861
    .end local v38    # "N":I
    .end local v119    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :catchall_3
    move-exception v6

    :goto_14
    monitor-exit v7
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_3

    throw v6

    .line 20841
    .restart local v24    # "myTotalPss":J
    .restart local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .restart local v34    # "myTotalSwappedOutPss":J
    .restart local v38    # "N":I
    .restart local v48    # "j":I
    .restart local v119    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :cond_2b
    :try_start_c
    iget v6, v15, Landroid/os/Debug$MemoryInfo;->otherPss:I

    int-to-long v0, v6

    move-wide/from16 v22, v0

    add-long v52, v52, v22

    .line 20842
    iget v6, v15, Landroid/os/Debug$MemoryInfo;->nativeSwappedOutPss:I

    int-to-long v0, v6

    move-wide/from16 v22, v0

    add-long v104, v104, v22

    .line 20843
    iget v6, v15, Landroid/os/Debug$MemoryInfo;->dalvikSwappedOutPss:I

    int-to-long v0, v6

    move-wide/from16 v22, v0

    add-long v82, v82, v22

    .line 20844
    iget v6, v15, Landroid/os/Debug$MemoryInfo;->otherSwappedOutPss:I

    int-to-long v0, v6

    move-wide/from16 v22, v0

    add-long v54, v54, v22

    .line 20845
    const/16 v48, 0x0

    :goto_15
    const/16 v6, 0x11

    move/from16 v0, v48

    if-ge v0, v6, :cond_2c

    .line 20846
    move/from16 v0, v48

    invoke-virtual {v15, v0}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v94, v0

    .line 20847
    .restart local v94    # "mem":J
    aget-wide v22, v98, v48

    add-long v22, v22, v94

    aput-wide v22, v98, v48

    .line 20848
    sub-long v52, v52, v94

    .line 20849
    move/from16 v0, v48

    invoke-virtual {v15, v0}, Landroid/os/Debug$MemoryInfo;->getOtherSwappedOutPss(I)I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v94, v0

    .line 20850
    aget-wide v22, v99, v48

    add-long v22, v22, v94

    aput-wide v22, v99, v48

    .line 20851
    sub-long v54, v54, v94

    .line 20845
    add-int/lit8 v48, v48, 0x1

    goto :goto_15

    .line 20853
    .end local v94    # "mem":J
    :cond_2c
    const/4 v6, 0x0

    aget-wide v22, v110, v6

    add-long v22, v22, v24

    aput-wide v22, v110, v6

    .line 20854
    const/4 v6, 0x0

    aget-wide v22, v111, v6

    add-long v22, v22, v34

    aput-wide v22, v111, v6

    .line 20855
    const/4 v6, 0x0

    aget-object v6, v109, v6

    if-nez v6, :cond_2d

    .line 20856
    const/4 v6, 0x0

    new-instance v14, Ljava/util/ArrayList;

    invoke-direct {v14}, Ljava/util/ArrayList;-><init>()V

    aput-object v14, v109, v6

    .line 20858
    :cond_2d
    const/4 v6, 0x0

    aget-object v6, v109, v6

    move-object/from16 v0, v29

    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_3

    .line 20811
    .end local v24    # "myTotalPss":J
    .end local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v34    # "myTotalSwappedOutPss":J
    .end local v48    # "j":I
    :goto_16
    add-int/lit8 v88, v88, 0x1

    move-object/from16 v97, v15

    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v97    # "mi":Landroid/os/Debug$MemoryInfo;
    goto/16 :goto_10

    .line 20861
    .end local v119    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :cond_2e
    :try_start_d
    monitor-exit v7
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_5

    .line 20863
    new-instance v76, Ljava/util/ArrayList;

    invoke-direct/range {v76 .. v76}, Ljava/util/ArrayList;-><init>()V

    .line 20865
    .local v76, "catMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    new-instance v39, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v40, "Native"

    const-string v41, "Native"

    const/16 v46, -0x1

    move-wide/from16 v42, v102

    move-wide/from16 v44, v104

    invoke-direct/range {v39 .. v46}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJI)V

    move-object/from16 v0, v76

    move-object/from16 v1, v39

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 20866
    new-instance v39, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v40, "Dalvik"

    const-string v41, "Dalvik"

    const/16 v46, -0x2

    move-wide/from16 v42, v78

    move-wide/from16 v44, v82

    invoke-direct/range {v39 .. v46}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJI)V

    .line 20867
    .local v39, "dalvikItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    move-object/from16 v0, v77

    array-length v6, v0

    if-lez v6, :cond_2f

    .line 20868
    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V

    move-object/from16 v0, v39

    iput-object v6, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    .line 20869
    const/16 v48, 0x0

    .restart local v48    # "j":I
    :goto_17
    move-object/from16 v0, v77

    array-length v6, v0

    move/from16 v0, v48

    if-ge v0, v6, :cond_2f

    .line 20870
    add-int/lit8 v6, v48, 0x11

    invoke-static {v6}, Landroid/os/Debug$MemoryInfo;->getOtherLabel(I)Ljava/lang/String;

    move-result-object v42

    .line 20872
    .local v42, "name":Ljava/lang/String;
    move-object/from16 v0, v39

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    new-instance v41, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v44, v77, v48

    aget-wide v46, v80, v48

    move-object/from16 v43, v42

    invoke-direct/range {v41 .. v48}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJI)V

    move-object/from16 v0, v41

    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 20869
    add-int/lit8 v48, v48, 0x1

    goto :goto_17

    .line 20875
    .end local v42    # "name":Ljava/lang/String;
    .end local v48    # "j":I
    :cond_2f
    move-object/from16 v0, v76

    move-object/from16 v1, v39

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 20876
    new-instance v49, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v50, "Unknown"

    const-string v51, "Unknown"

    const/16 v56, -0x3

    invoke-direct/range {v49 .. v56}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJI)V

    move-object/from16 v0, v76

    move-object/from16 v1, v49

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 20877
    const/16 v48, 0x0

    .restart local v48    # "j":I
    :goto_18
    const/16 v6, 0x11

    move/from16 v0, v48

    if-ge v0, v6, :cond_30

    .line 20878
    invoke-static/range {v48 .. v48}, Landroid/os/Debug$MemoryInfo;->getOtherLabel(I)Ljava/lang/String;

    move-result-object v58

    .line 20879
    .local v58, "label":Ljava/lang/String;
    new-instance v57, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v60, v98, v48

    aget-wide v62, v99, v48

    move-object/from16 v59, v58

    move/from16 v64, v48

    invoke-direct/range {v57 .. v64}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJI)V

    move-object/from16 v0, v76

    move-object/from16 v1, v57

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 20877
    add-int/lit8 v48, v48, 0x1

    goto :goto_18

    .line 20882
    .end local v58    # "label":Ljava/lang/String;
    :cond_30
    new-instance v107, Ljava/util/ArrayList;

    invoke-direct/range {v107 .. v107}, Ljava/util/ArrayList;-><init>()V

    .line 20883
    .local v107, "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    const/16 v48, 0x0

    :goto_19
    move-object/from16 v0, v110

    array-length v6, v0

    move/from16 v0, v48

    if-ge v0, v6, :cond_33

    .line 20884
    aget-wide v6, v110, v48

    const-wide/16 v22, 0x0

    cmp-long v6, v6, v22

    if-eqz v6, :cond_31

    .line 20885
    if-eqz v13, :cond_32

    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

    aget-object v58, v6, v48

    .line 20887
    .restart local v58    # "label":Ljava/lang/String;
    :goto_1a
    new-instance v57, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v60, v110, v48

    aget-wide v62, v111, v48

    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v64, v6, v48

    move-object/from16 v59, v58

    invoke-direct/range {v57 .. v64}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJI)V

    .line 20889
    .local v57, "item":Lcom/android/server/am/ActivityManagerService$MemItem;
    aget-object v6, v109, v48

    move-object/from16 v0, v57

    iput-object v6, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    .line 20890
    move-object/from16 v0, v107

    move-object/from16 v1, v57

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 20883
    .end local v57    # "item":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v58    # "label":Ljava/lang/String;
    :cond_31
    add-int/lit8 v48, v48, 0x1

    goto :goto_19

    .line 20885
    :cond_32
    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    aget-object v58, v6, v48

    goto :goto_1a

    .line 20894
    :cond_33
    if-nez p5, :cond_34

    if-nez v108, :cond_34

    if-nez v13, :cond_34

    .line 20895
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 20896
    const-string v6, "Total PSS by process:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20897
    const-string v60, "  "

    const-string/jumbo v61, "proc"

    const/16 v63, 0x1

    move-object/from16 v59, p2

    move-object/from16 v62, v115

    move/from16 v64, v13

    invoke-static/range {v59 .. v64}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZ)V

    .line 20898
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 20900
    :cond_34
    if-nez v13, :cond_35

    .line 20901
    const-string v6, "Total PSS by OOM adjustment:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20903
    :cond_35
    const-string v60, "  "

    const-string/jumbo v61, "oom"

    const/16 v63, 0x0

    move-object/from16 v59, p2

    move-object/from16 v62, v107

    move/from16 v64, v13

    invoke-static/range {v59 .. v64}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZ)V

    .line 20904
    if-nez p5, :cond_37

    if-nez v108, :cond_37

    .line 20905
    if-eqz p6, :cond_41

    move-object/from16 v59, p6

    .line 20906
    .local v59, "out":Ljava/io/PrintWriter;
    :goto_1b
    if-nez v13, :cond_36

    .line 20907
    invoke-virtual/range {v59 .. v59}, Ljava/io/PrintWriter;->println()V

    .line 20908
    const-string v6, "Total PSS by category:"

    move-object/from16 v0, v59

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20910
    :cond_36
    const-string v60, "  "

    const-string v61, "cat"

    const/16 v63, 0x1

    move-object/from16 v62, v76

    move/from16 v64, v13

    invoke-static/range {v59 .. v64}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZ)V

    .line 20912
    .end local v59    # "out":Ljava/io/PrintWriter;
    :cond_37
    if-nez v13, :cond_38

    .line 20913
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 20915
    :cond_38
    new-instance v96, Lcom/android/internal/util/MemInfoReader;

    invoke-direct/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;-><init>()V

    .line 20916
    .local v96, "memInfo":Lcom/android/internal/util/MemInfoReader;
    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->readMemInfo()V

    .line 20917
    const-wide/16 v6, 0x0

    cmp-long v6, v70, v6

    if-lez v6, :cond_39

    .line 20918
    monitor-enter p0

    .line 20919
    :try_start_e
    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v72

    .line 20920
    .local v72, "cachedKb":J
    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v86

    .line 20921
    .local v86, "freeKb":J
    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v124

    .line 20922
    .local v124, "zramKb":J
    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v90

    .line 20923
    .local v90, "kernelKb":J
    const-wide/16 v6, 0x400

    mul-long v60, v72, v6

    const-wide/16 v6, 0x400

    mul-long v62, v86, v6

    const-wide/16 v6, 0x400

    mul-long v64, v124, v6

    const-wide/16 v6, 0x400

    mul-long v66, v90, v6

    const-wide/16 v6, 0x400

    mul-long v68, v70, v6

    invoke-static/range {v60 .. v69}, Lcom/android/server/am/EventLogTags;->writeAmMeminfo(JJJJJ)V

    .line 20925
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    move-object/from16 v61, v0

    move-wide/from16 v62, v72

    move-wide/from16 v64, v86

    move-wide/from16 v66, v124

    move-wide/from16 v68, v90

    invoke-virtual/range {v61 .. v71}, Lcom/android/server/am/ProcessStatsService;->addSysMemUsageLocked(JJJJJ)V

    .line 20927
    monitor-exit p0
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_4

    .line 20929
    .end local v72    # "cachedKb":J
    .end local v86    # "freeKb":J
    .end local v90    # "kernelKb":J
    .end local v124    # "zramKb":J
    :cond_39
    if-nez p5, :cond_3a

    .line 20930
    if-nez v13, :cond_42

    .line 20931
    const-string v6, "Total RAM: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 20932
    const-string v6, " kB (status "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20933
    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    packed-switch v6, :pswitch_data_0

    .line 20947
    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(I)V

    .line 20948
    const-string v6, ")"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20951
    :goto_1c
    const-string v6, " Free RAM: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v6

    add-long v6, v6, v74

    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v22

    add-long v6, v6, v22

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 20952
    const-string v6, " kB ("

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20953
    move-object/from16 v0, p2

    move-wide/from16 v1, v74

    invoke-virtual {v0, v1, v2}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, " cached pss + "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20954
    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, " cached kernel + "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20955
    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, " free)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20963
    :cond_3a
    :goto_1d
    if-nez v13, :cond_3b

    .line 20964
    const-string v6, " Used RAM: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    sub-long v6, v122, v74

    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v22

    add-long v6, v6, v22

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 20965
    const-string v6, " kB ("

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20966
    sub-long v6, v122, v74

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, " used pss + "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20967
    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, " kernel)\n"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20968
    const-string v6, " Lost RAM: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v6

    sub-long v6, v6, v122

    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v22

    sub-long v6, v6, v22

    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v22

    sub-long v6, v6, v22

    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v22

    sub-long v6, v6, v22

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 20970
    const-string v6, " kB"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20972
    :cond_3b
    if-nez p5, :cond_47

    .line 20973
    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v6

    const-wide/16 v22, 0x0

    cmp-long v6, v6, v22

    if-eqz v6, :cond_3c

    .line 20974
    if-nez v13, :cond_43

    .line 20975
    const-string v6, "     ZRAM: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 20976
    const-string v6, " kB physical used for "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20977
    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v6

    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getSwapFreeSizeKb()J

    move-result-wide v22

    sub-long v6, v6, v22

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 20979
    const-string v6, " kB in swap ("

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20980
    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 20981
    const-string v6, " kB total swap)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20988
    :cond_3c
    :goto_1e
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getKsmInfo()[J

    move-result-object v92

    .line 20989
    .local v92, "ksm":[J
    if-nez v13, :cond_44

    .line 20990
    const/4 v6, 0x1

    aget-wide v6, v92, v6

    const-wide/16 v22, 0x0

    cmp-long v6, v6, v22

    if-nez v6, :cond_3d

    const/4 v6, 0x0

    aget-wide v6, v92, v6

    const-wide/16 v22, 0x0

    cmp-long v6, v6, v22

    if-nez v6, :cond_3d

    const/4 v6, 0x2

    aget-wide v6, v92, v6

    const-wide/16 v22, 0x0

    cmp-long v6, v6, v22

    if-nez v6, :cond_3d

    const/4 v6, 0x3

    aget-wide v6, v92, v6

    const-wide/16 v22, 0x0

    cmp-long v6, v6, v22

    if-eqz v6, :cond_3e

    .line 20992
    :cond_3d
    const-string v6, "      KSM: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 v6, 0x1

    aget-wide v6, v92, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 20993
    const-string v6, " kB saved from shared "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20994
    const/4 v6, 0x0

    aget-wide v6, v92, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, " kB"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20995
    const-string v6, "           "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 v6, 0x2

    aget-wide v6, v92, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 20996
    const-string v6, " kB unshared; "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20997
    const/4 v6, 0x3

    aget-wide v6, v92, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, " kB volatile"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20999
    :cond_3e
    const-string v6, "   Tuning: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 21000
    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I

    move-result v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(I)V

    .line 21001
    const-string v6, " (large "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 21002
    invoke-static {}, Landroid/app/ActivityManager;->staticGetLargeMemoryClass()I

    move-result v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(I)V

    .line 21003
    const-string v6, "), oom "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 21004
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v7, 0xf

    invoke-virtual {v6, v7}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v6

    const-wide/16 v22, 0x400

    div-long v6, v6, v22

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 21005
    const-string v6, " kB"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 21006
    const-string v6, ", restore limit "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 21007
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v6}, Lcom/android/server/am/ProcessList;->getCachedRestoreThresholdKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 21008
    const-string v6, " kB"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 21009
    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    move-result v6

    if-eqz v6, :cond_3f

    .line 21010
    const-string v6, " (low-ram)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 21012
    :cond_3f
    invoke-static {}, Landroid/app/ActivityManager;->isHighEndGfx()Z

    move-result v6

    if-eqz v6, :cond_40

    .line 21013
    const-string v6, " (high-end-gfx)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 21015
    :cond_40
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    move-object/from16 v15, v97

    .end local v97    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    goto/16 :goto_3

    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v92    # "ksm":[J
    .end local v96    # "memInfo":Lcom/android/internal/util/MemInfoReader;
    .restart local v97    # "mi":Landroid/os/Debug$MemoryInfo;
    :cond_41
    move-object/from16 v59, p2

    .line 20905
    goto/16 :goto_1b

    .line 20927
    .restart local v96    # "memInfo":Lcom/android/internal/util/MemInfoReader;
    :catchall_4
    move-exception v6

    :try_start_f
    monitor-exit p0
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_4

    throw v6

    .line 20935
    :pswitch_0
    const-string/jumbo v6, "normal)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_1c

    .line 20938
    :pswitch_1
    const-string/jumbo v6, "moderate)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_1c

    .line 20941
    :pswitch_2
    const-string/jumbo v6, "low)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_1c

    .line 20944
    :pswitch_3
    const-string/jumbo v6, "critical)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_1c

    .line 20957
    :cond_42
    const-string/jumbo v6, "ram,"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, ","

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20958
    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v6

    add-long v6, v6, v74

    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v22

    add-long v6, v6, v22

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 20959
    const-string v6, ","

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20960
    sub-long v6, v122, v74

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->println(J)V

    goto/16 :goto_1d

    .line 20983
    :cond_43
    const-string/jumbo v6, "zram,"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, ","

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20984
    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, ","

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 20985
    invoke-virtual/range {v96 .. v96}, Lcom/android/internal/util/MemInfoReader;->getSwapFreeSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->println(J)V

    goto/16 :goto_1e

    .line 21017
    .restart local v92    # "ksm":[J
    :cond_44
    const-string/jumbo v6, "ksm,"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 v6, 0x1

    aget-wide v6, v92, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, ","

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 21018
    const/4 v6, 0x0

    aget-wide v6, v92, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, ","

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 v6, 0x2

    aget-wide v6, v92, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 21019
    const-string v6, ","

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 v6, 0x3

    aget-wide v6, v92, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->println(J)V

    .line 21020
    const-string/jumbo v6, "tuning,"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 21021
    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I

    move-result v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(I)V

    .line 21022
    const/16 v6, 0x2c

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(C)V

    .line 21023
    invoke-static {}, Landroid/app/ActivityManager;->staticGetLargeMemoryClass()I

    move-result v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(I)V

    .line 21024
    const/16 v6, 0x2c

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(C)V

    .line 21025
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v7, 0xf

    invoke-virtual {v6, v7}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v6

    const-wide/16 v22, 0x400

    div-long v6, v6, v22

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 21026
    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    move-result v6

    if-eqz v6, :cond_45

    .line 21027
    const-string v6, ",low-ram"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 21029
    :cond_45
    invoke-static {}, Landroid/app/ActivityManager;->isHighEndGfx()Z

    move-result v6

    if-eqz v6, :cond_46

    .line 21030
    const-string v6, ",high-end-gfx"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 21032
    :cond_46
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .end local v92    # "ksm":[J
    :cond_47
    move-object/from16 v15, v97

    .end local v97    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    goto/16 :goto_3

    .line 20861
    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v39    # "dalvikItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v48    # "j":I
    .end local v76    # "catMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v96    # "memInfo":Lcom/android/internal/util/MemInfoReader;
    .end local v107    # "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v97    # "mi":Landroid/os/Debug$MemoryInfo;
    :catchall_5
    move-exception v6

    move-object/from16 v15, v97

    .end local v97    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    goto/16 :goto_14

    .line 20621
    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v38    # "N":I
    .end local v52    # "otherPss":J
    .end local v54    # "otherSwapPss":J
    .end local v70    # "nativeProcTotalPss":J
    .end local v74    # "cachedPss":J
    .end local v77    # "dalvikSubitemPss":[J
    .end local v78    # "dalvikPss":J
    .end local v80    # "dalvikSubitemSwapPss":[J
    .end local v82    # "dalvikSwapPss":J
    .end local v88    # "i":I
    .end local v89    # "innerArgs":[Ljava/lang/String;
    .end local v98    # "miscPss":[J
    .end local v99    # "miscSwapPss":[J
    .end local v102    # "nativePss":J
    .end local v104    # "nativeSwapPss":J
    .end local v109    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v110    # "oomPss":[J
    .end local v111    # "oomSwap":[J
    .end local v115    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v116    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v122    # "totalPss":J
    .restart local v85    # "findPid":I
    .restart local v100    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    :catch_1
    move-exception v6

    goto/16 :goto_1

    .end local v85    # "findPid":I
    .end local v100    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .restart local v38    # "N":I
    .restart local v52    # "otherPss":J
    .restart local v54    # "otherSwapPss":J
    .restart local v70    # "nativeProcTotalPss":J
    .restart local v74    # "cachedPss":J
    .restart local v77    # "dalvikSubitemPss":[J
    .restart local v78    # "dalvikPss":J
    .restart local v80    # "dalvikSubitemSwapPss":[J
    .restart local v82    # "dalvikSwapPss":J
    .restart local v88    # "i":I
    .restart local v89    # "innerArgs":[Ljava/lang/String;
    .restart local v97    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v98    # "miscPss":[J
    .restart local v99    # "miscSwapPss":[J
    .restart local v102    # "nativePss":J
    .restart local v104    # "nativeSwapPss":J
    .restart local v109    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v110    # "oomPss":[J
    .restart local v111    # "oomSwap":[J
    .restart local v115    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v116    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v119    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    .restart local v122    # "totalPss":J
    :cond_48
    move-object/from16 v15, v97

    .end local v97    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    goto/16 :goto_11

    .end local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v97    # "mi":Landroid/os/Debug$MemoryInfo;
    :cond_49
    move-object/from16 v15, v97

    .end local v97    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v15    # "mi":Landroid/os/Debug$MemoryInfo;
    goto/16 :goto_16

    .line 20933
    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
        :pswitch_3
    .end packed-switch
.end method

.method dumpAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V
    .locals 26
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpClient"    # Z
    .param p7, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 19001
    const-string v23, "ACTIVITY MANAGER ASSOCIATIONS (dumpsys activity associations)"

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19003
    const/4 v9, 0x0

    .line 19004
    .local v9, "dumpUid":I
    if-eqz p7, :cond_0

    .line 19005
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v18

    .line 19007
    .local v18, "pm":Landroid/content/pm/IPackageManager;
    const/16 v23, 0x0

    :try_start_0
    move-object/from16 v0, v18

    move-object/from16 v1, p7

    move/from16 v2, v23

    invoke-interface {v0, v1, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v9

    .line 19012
    .end local v18    # "pm":Landroid/content/pm/IPackageManager;
    :cond_0
    :goto_0
    const/16 v19, 0x0

    .line 19014
    .local v19, "printedAnything":Z
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v16

    .line 19016
    .local v16, "now":J
    const/4 v12, 0x0

    .local v12, "i1":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Landroid/util/SparseArray;->size()I

    move-result v4

    .local v4, "N1":I
    :goto_1
    if-ge v12, v4, :cond_7

    .line 19017
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    invoke-virtual {v0, v12}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v22

    check-cast v22, Landroid/util/ArrayMap;

    .line 19019
    .local v22, "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    const/4 v13, 0x0

    .local v13, "i2":I
    invoke-virtual/range {v22 .. v22}, Landroid/util/ArrayMap;->size()I

    move-result v5

    .local v5, "N2":I
    :goto_2
    if-ge v13, v5, :cond_6

    .line 19020
    move-object/from16 v0, v22

    invoke-virtual {v0, v13}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v21

    check-cast v21, Landroid/util/SparseArray;

    .line 19022
    .local v21, "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    const/4 v14, 0x0

    .local v14, "i3":I
    invoke-virtual/range {v21 .. v21}, Landroid/util/SparseArray;->size()I

    move-result v6

    .local v6, "N3":I
    :goto_3
    if-ge v14, v6, :cond_5

    .line 19023
    move-object/from16 v0, v21

    invoke-virtual {v0, v14}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v20

    check-cast v20, Landroid/util/ArrayMap;

    .line 19024
    .local v20, "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    const/4 v15, 0x0

    .local v15, "i4":I
    invoke-virtual/range {v20 .. v20}, Landroid/util/ArrayMap;->size()I

    move-result v7

    .local v7, "N4":I
    :goto_4
    if-ge v15, v7, :cond_4

    .line 19025
    move-object/from16 v0, v20

    invoke-virtual {v0, v15}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/am/ActivityManagerService$Association;

    .line 19026
    .local v8, "ass":Lcom/android/server/am/ActivityManagerService$Association;
    if-eqz p7, :cond_2

    .line 19027
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mTargetComponent:Landroid/content/ComponentName;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v23

    move-object/from16 v0, v23

    move-object/from16 v1, p7

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v23

    if-nez v23, :cond_2

    iget v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mSourceUid:I

    move/from16 v23, v0

    invoke-static/range {v23 .. v23}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v23

    move/from16 v0, v23

    if-eq v0, v9, :cond_2

    .line 19024
    :cond_1
    :goto_5
    add-int/lit8 v15, v15, 0x1

    goto :goto_4

    .line 19032
    :cond_2
    const/16 v19, 0x1

    .line 19033
    const-string v23, "  "

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19034
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mTargetProcess:Ljava/lang/String;

    move-object/from16 v23, v0

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19035
    const-string v23, "/"

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19036
    iget v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mTargetUid:I

    move/from16 v23, v0

    move-object/from16 v0, p2

    move/from16 v1, v23

    invoke-static {v0, v1}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    .line 19037
    const-string v23, " <- "

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19038
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mSourceProcess:Ljava/lang/String;

    move-object/from16 v23, v0

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19039
    const-string v23, "/"

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19040
    iget v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mSourceUid:I

    move/from16 v23, v0

    move-object/from16 v0, p2

    move/from16 v1, v23

    invoke-static {v0, v1}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    .line 19041
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19042
    const-string v23, "    via "

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19043
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mTargetComponent:Landroid/content/ComponentName;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v23

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19044
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19045
    const-string v23, "    "

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19046
    iget-wide v10, v8, Lcom/android/server/am/ActivityManagerService$Association;->mTime:J

    .line 19047
    .local v10, "dur":J
    iget v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    move/from16 v23, v0

    if-lez v23, :cond_3

    .line 19048
    iget-wide v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    move-wide/from16 v24, v0

    sub-long v24, v16, v24

    add-long v10, v10, v24

    .line 19050
    :cond_3
    move-object/from16 v0, p2

    invoke-static {v10, v11, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 19051
    const-string v23, " ("

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19052
    iget v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mCount:I

    move/from16 v23, v0

    move-object/from16 v0, p2

    move/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 19053
    const-string v23, " times)"

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19054
    iget v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    move/from16 v23, v0

    if-lez v23, :cond_1

    .line 19055
    const-string v23, "    "

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19056
    const-string v23, " Currently active: "

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19057
    iget-wide v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    move-wide/from16 v24, v0

    sub-long v24, v16, v24

    move-wide/from16 v0, v24

    move-object/from16 v2, p2

    invoke-static {v0, v1, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 19058
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto/16 :goto_5

    .line 19022
    .end local v8    # "ass":Lcom/android/server/am/ActivityManagerService$Association;
    .end local v10    # "dur":J
    :cond_4
    add-int/lit8 v14, v14, 0x1

    goto/16 :goto_3

    .line 19019
    .end local v7    # "N4":I
    .end local v15    # "i4":I
    .end local v20    # "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    :cond_5
    add-int/lit8 v13, v13, 0x1

    goto/16 :goto_2

    .line 19016
    .end local v6    # "N3":I
    .end local v14    # "i3":I
    .end local v21    # "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    :cond_6
    add-int/lit8 v12, v12, 0x1

    goto/16 :goto_1

    .line 19066
    .end local v5    # "N2":I
    .end local v13    # "i2":I
    .end local v22    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    :cond_7
    if-nez v19, :cond_8

    .line 19067
    const-string v23, "  (nothing)"

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19069
    :cond_8
    return-void

    .line 19008
    .end local v4    # "N1":I
    .end local v12    # "i1":I
    .end local v16    # "now":J
    .end local v19    # "printedAnything":Z
    .restart local v18    # "pm":Landroid/content/pm/IPackageManager;
    :catch_0
    move-exception v23

    goto/16 :goto_0
.end method

.method dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 25
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 19824
    const/4 v9, 0x0

    .line 19825
    .local v9, "needSep":Z
    const/16 v19, 0x0

    .line 19826
    .local v19, "onlyHistory":Z
    const/16 v21, 0x0

    .line 19828
    .local v21, "printedAnything":Z
    const-string/jumbo v3, "history"

    move-object/from16 v0, p6

    invoke-virtual {v3, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_1

    .line 19829
    move-object/from16 v0, p3

    array-length v3, v0

    move/from16 v0, p4

    if-ge v0, v3, :cond_0

    const-string v3, "-s"

    aget-object v5, p3, p4

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 19830
    const/16 p5, 0x0

    .line 19832
    :cond_0
    const/16 v19, 0x1

    .line 19833
    const/16 p6, 0x0

    .line 19836
    :cond_1
    const-string v3, "ACTIVITY MANAGER BROADCAST STATE (dumpsys activity broadcasts)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19837
    if-nez v19, :cond_6

    if-eqz p5, :cond_6

    .line 19838
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->size()I

    move-result v3

    if-lez v3, :cond_5

    .line 19839
    const/16 v20, 0x0

    .line 19840
    .local v20, "printed":Z
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v17

    .line 19841
    .local v17, "it":Ljava/util/Iterator;
    :cond_2
    :goto_0
    invoke-interface/range {v17 .. v17}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_5

    .line 19842
    invoke-interface/range {v17 .. v17}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v23

    check-cast v23, Lcom/android/server/am/ReceiverList;

    .line 19843
    .local v23, "r":Lcom/android/server/am/ReceiverList;
    if-eqz p6, :cond_3

    move-object/from16 v0, v23

    iget-object v3, v0, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v3, :cond_2

    move-object/from16 v0, v23

    iget-object v3, v0, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p6

    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_2

    .line 19847
    :cond_3
    if-nez v20, :cond_4

    .line 19848
    const-string v3, "  Registered Receivers:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19849
    const/4 v9, 0x1

    .line 19850
    const/16 v20, 0x1

    .line 19851
    const/16 v21, 0x1

    .line 19853
    :cond_4
    const-string v3, "  * "

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19854
    const-string v3, "    "

    move-object/from16 v0, v23

    move-object/from16 v1, p2

    invoke-virtual {v0, v1, v3}, Lcom/android/server/am/ReceiverList;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    goto :goto_0

    .line 19858
    .end local v17    # "it":Ljava/util/Iterator;
    .end local v20    # "printed":Z
    .end local v23    # "r":Lcom/android/server/am/ReceiverList;
    :cond_5
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    if-eqz v9, :cond_7

    const-string v4, "\n  Receiver Resolver Table:"

    :goto_1
    const-string v5, "    "

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object/from16 v3, p2

    move-object/from16 v6, p6

    invoke-virtual/range {v2 .. v8}, Lcom/android/server/IntentResolver;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Z

    move-result v3

    if-eqz v3, :cond_6

    .line 19861
    const/4 v9, 0x1

    .line 19862
    const/16 v21, 0x1

    .line 19866
    :cond_6
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .local v11, "arr$":[Lcom/android/server/am/BroadcastQueue;
    array-length v0, v11

    move/from16 v18, v0

    .local v18, "len$":I
    const/4 v15, 0x0

    .local v15, "i$":I
    :goto_2
    move/from16 v0, v18

    if-ge v15, v0, :cond_8

    aget-object v2, v11, v15

    .local v2, "q":Lcom/android/server/am/BroadcastQueue;
    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move/from16 v6, p4

    move/from16 v7, p5

    move-object/from16 v8, p6

    .line 19867
    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/BroadcastQueue;->dumpLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;Z)Z

    move-result v9

    .line 19868
    or-int v21, v21, v9

    .line 19866
    add-int/lit8 v15, v15, 0x1

    goto :goto_2

    .line 19858
    .end local v2    # "q":Lcom/android/server/am/BroadcastQueue;
    .end local v11    # "arr$":[Lcom/android/server/am/BroadcastQueue;
    .end local v15    # "i$":I
    .end local v18    # "len$":I
    :cond_7
    const-string v4, "  Receiver Resolver Table:"

    goto :goto_1

    .line 19871
    .restart local v11    # "arr$":[Lcom/android/server/am/BroadcastQueue;
    .restart local v15    # "i$":I
    .restart local v18    # "len$":I
    :cond_8
    const/4 v9, 0x1

    .line 19873
    if-nez v19, :cond_e

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    if-eqz v3, :cond_e

    if-nez p6, :cond_e

    .line 19874
    const/16 v24, 0x0

    .end local v15    # "i$":I
    .local v24, "user":I
    :goto_3
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    move/from16 v0, v24

    if-ge v0, v3, :cond_e

    .line 19875
    if-eqz v9, :cond_9

    .line 19876
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19878
    :cond_9
    const/4 v9, 0x1

    .line 19879
    const/16 v21, 0x1

    .line 19880
    const-string v3, "  Sticky broadcasts for user "

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19881
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, v24

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v3

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->print(I)V

    const-string v3, ":"

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19882
    new-instance v4, Ljava/lang/StringBuilder;

    const/16 v3, 0x80

    invoke-direct {v4, v3}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 19884
    .local v4, "sb":Ljava/lang/StringBuilder;
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, v24

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/util/ArrayMap;

    invoke-virtual {v3}, Landroid/util/ArrayMap;->entrySet()Ljava/util/Set;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v15

    .local v15, "i$":Ljava/util/Iterator;
    :cond_a
    :goto_4
    invoke-interface {v15}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_d

    invoke-interface {v15}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Ljava/util/Map$Entry;

    .line 19885
    .local v13, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    const-string v3, "  * Sticky action "

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-interface {v13}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19886
    if-eqz p5, :cond_c

    .line 19887
    const-string v3, ":"

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19888
    invoke-interface {v13}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Ljava/util/ArrayList;

    .line 19889
    .local v16, "intents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    invoke-virtual/range {v16 .. v16}, Ljava/util/ArrayList;->size()I

    move-result v10

    .line 19890
    .local v10, "N":I
    const/4 v14, 0x0

    .local v14, "i":I
    :goto_5
    if-ge v14, v10, :cond_a

    .line 19891
    const/4 v3, 0x0

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->setLength(I)V

    .line 19892
    const-string v3, "    Intent: "

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 19893
    move-object/from16 v0, v16

    invoke-virtual {v0, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/Intent;

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x0

    const/4 v8, 0x0

    invoke-virtual/range {v3 .. v8}, Landroid/content/Intent;->toShortString(Ljava/lang/StringBuilder;ZZZZ)V

    .line 19894
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19895
    move-object/from16 v0, v16

    invoke-virtual {v0, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/Intent;

    invoke-virtual {v3}, Landroid/content/Intent;->getExtras()Landroid/os/Bundle;

    move-result-object v12

    .line 19896
    .local v12, "bundle":Landroid/os/Bundle;
    if-eqz v12, :cond_b

    .line 19897
    const-string v3, "      "

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19898
    invoke-virtual {v12}, Landroid/os/Bundle;->toString()Ljava/lang/String;

    move-result-object v3

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19890
    :cond_b
    add-int/lit8 v14, v14, 0x1

    goto :goto_5

    .line 19902
    .end local v10    # "N":I
    .end local v12    # "bundle":Landroid/os/Bundle;
    .end local v14    # "i":I
    .end local v16    # "intents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :cond_c
    const-string v3, ""

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_4

    .line 19874
    .end local v13    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    :cond_d
    add-int/lit8 v24, v24, 0x1

    goto/16 :goto_3

    .line 19908
    .end local v4    # "sb":Ljava/lang/StringBuilder;
    .end local v15    # "i$":Ljava/util/Iterator;
    .end local v24    # "user":I
    :cond_e
    if-nez v19, :cond_10

    if-eqz p5, :cond_10

    .line 19909
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19910
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v0, v11

    move/from16 v18, v0

    const/4 v15, 0x0

    .local v15, "i$":I
    :goto_6
    move/from16 v0, v18

    if-ge v15, v0, :cond_f

    aget-object v22, v11, v15

    .line 19911
    .local v22, "queue":Lcom/android/server/am/BroadcastQueue;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mBroadcastsScheduled ["

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, v22

    iget-object v5, v0, Lcom/android/server/am/BroadcastQueue;->mQueueName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v5, "]="

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, v22

    iget-boolean v5, v0, Lcom/android/server/am/BroadcastQueue;->mBroadcastsScheduled:Z

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19910
    add-int/lit8 v15, v15, 0x1

    goto :goto_6

    .line 19914
    .end local v22    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_f
    const-string v3, "  mHandler:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19915
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v5, Landroid/util/PrintWriterPrinter;

    move-object/from16 v0, p2

    invoke-direct {v5, v0}, Landroid/util/PrintWriterPrinter;-><init>(Ljava/io/PrintWriter;)V

    const-string v6, "    "

    invoke-virtual {v3, v5, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->dump(Landroid/util/Printer;Ljava/lang/String;)V

    .line 19916
    const/4 v9, 0x1

    .line 19917
    const/16 v21, 0x1

    .line 19920
    .end local v15    # "i$":I
    :cond_10
    if-nez v21, :cond_11

    .line 19921
    const-string v3, "  (nothing)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19923
    :cond_11
    return-void
.end method

.method final dumpDbInfo(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 9
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    .prologue
    const/4 v8, 0x0

    .line 20319
    invoke-virtual {p0, p2, v8, v8, p3}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v2

    .line 20320
    .local v2, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    if-nez v2, :cond_1

    .line 20321
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "No process found for: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    aget-object v7, p3, v8

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20386
    :cond_0
    return-void

    .line 20325
    :cond_1
    const-string v6, "Applications Database Info:"

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20327
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v6

    add-int/lit8 v1, v6, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_0

    .line 20328
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 20329
    .local v3, "r":Lcom/android/server/am/ProcessRecord;
    iget-object v6, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v6, :cond_2

    .line 20330
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "\n** Database info for pid "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget v7, v3, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " ["

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v7, v3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, "] **"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20331
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    .line 20333
    :try_start_0
    new-instance v5, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v5}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    .line 20336
    .local v5, "tp":Lcom/android/internal/os/TransferPipe;
    :try_start_1
    iget v6, v3, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v7, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-ne v6, v7, :cond_3

    .line 20364
    new-instance v4, Lcom/android/server/am/ActivityManagerService$1TransferPipeThread;

    iget-object v6, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual {v5}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v7

    invoke-virtual {v7}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;

    move-result-object v7

    invoke-direct {v4, p0, v6, v7, p3}, Lcom/android/server/am/ActivityManagerService$1TransferPipeThread;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/app/IApplicationThread;Ljava/io/FileDescriptor;[Ljava/lang/String;)V

    .line 20365
    .local v4, "t":Lcom/android/server/am/ActivityManagerService$1TransferPipeThread;
    invoke-virtual {v4}, Lcom/android/server/am/ActivityManagerService$1TransferPipeThread;->start()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 20367
    const-wide/16 v6, 0xc8

    :try_start_2
    invoke-static {v6, v7}, Ljava/lang/Thread;->sleep(J)V
    :try_end_2
    .catch Ljava/lang/InterruptedException; {:try_start_2 .. :try_end_2} :catch_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 20373
    .end local v4    # "t":Lcom/android/server/am/ActivityManagerService$1TransferPipeThread;
    :goto_1
    :try_start_3
    invoke-virtual {v5, p1}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 20375
    :try_start_4
    invoke-virtual {v5}, Lcom/android/internal/os/TransferPipe;->kill()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_1

    .line 20327
    .end local v5    # "tp":Lcom/android/internal/os/TransferPipe;
    :cond_2
    :goto_2
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 20371
    .restart local v5    # "tp":Lcom/android/internal/os/TransferPipe;
    :cond_3
    :try_start_5
    iget-object v6, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual {v5}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v7

    invoke-virtual {v7}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;

    move-result-object v7

    invoke-interface {v6, v7, p3}, Landroid/app/IApplicationThread;->dumpDbInfo(Ljava/io/FileDescriptor;[Ljava/lang/String;)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    goto :goto_1

    .line 20375
    :catchall_0
    move-exception v6

    :try_start_6
    invoke-virtual {v5}, Lcom/android/internal/os/TransferPipe;->kill()V

    throw v6
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_1

    .line 20377
    .end local v5    # "tp":Lcom/android/internal/os/TransferPipe;
    :catch_0
    move-exception v0

    .line 20378
    .local v0, "e":Ljava/io/IOException;
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Failure while dumping the app: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20379
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_2

    .line 20380
    .end local v0    # "e":Ljava/io/IOException;
    :catch_1
    move-exception v0

    .line 20381
    .local v0, "e":Landroid/os/RemoteException;
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Got a RemoteException while dumping the app "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20382
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_2

    .line 20368
    .end local v0    # "e":Landroid/os/RemoteException;
    .restart local v4    # "t":Lcom/android/server/am/ActivityManagerService$1TransferPipeThread;
    .restart local v5    # "tp":Lcom/android/internal/os/TransferPipe;
    :catch_2
    move-exception v6

    goto :goto_1
.end method

.method final dumpGraphicsHardwareUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 12
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    .prologue
    const/4 v11, 0x0

    .line 20283
    invoke-virtual {p0, p2, v11, v11, p3}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v2

    .line 20284
    .local v2, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    if-nez v2, :cond_1

    .line 20285
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "No process found for: "

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    aget-object v10, p3, v11

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {p2, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20316
    :cond_0
    return-void

    .line 20289
    :cond_1
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v8

    .line 20290
    .local v8, "uptime":J
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v4

    .line 20291
    .local v4, "realtime":J
    const-string v7, "Applications Graphics Acceleration Info:"

    invoke-virtual {p2, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20292
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Uptime: "

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v10, " Realtime: "

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {p2, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20294
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v7

    add-int/lit8 v1, v7, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_0

    .line 20295
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 20296
    .local v3, "r":Lcom/android/server/am/ProcessRecord;
    iget-object v7, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v7, :cond_2

    .line 20297
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "\n** Graphics info for pid "

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget v10, v3, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v10, " ["

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget-object v10, v3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v10, "] **"

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {p2, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20298
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    .line 20300
    :try_start_0
    new-instance v6, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v6}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    .line 20302
    .local v6, "tp":Lcom/android/internal/os/TransferPipe;
    :try_start_1
    iget-object v7, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual {v6}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v10

    invoke-virtual {v10}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;

    move-result-object v10

    invoke-interface {v7, v10, p3}, Landroid/app/IApplicationThread;->dumpGfxInfo(Ljava/io/FileDescriptor;[Ljava/lang/String;)V

    .line 20303
    invoke-virtual {v6, p1}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 20305
    :try_start_2
    invoke-virtual {v6}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 20294
    .end local v6    # "tp":Lcom/android/internal/os/TransferPipe;
    :cond_2
    :goto_1
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 20305
    .restart local v6    # "tp":Lcom/android/internal/os/TransferPipe;
    :catchall_0
    move-exception v7

    invoke-virtual {v6}, Lcom/android/internal/os/TransferPipe;->kill()V

    throw v7
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_1

    .line 20307
    .end local v6    # "tp":Lcom/android/internal/os/TransferPipe;
    :catch_0
    move-exception v0

    .line 20308
    .local v0, "e":Ljava/io/IOException;
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Failure while dumping the app: "

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {p2, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20309
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_1

    .line 20310
    .end local v0    # "e":Ljava/io/IOException;
    :catch_1
    move-exception v0

    .line 20311
    .local v0, "e":Landroid/os/RemoteException;
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Got a RemoteException while dumping the app "

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {p2, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20312
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_1
.end method

.method public dumpHeap(Ljava/lang/String;IZLjava/lang/String;Landroid/os/ParcelFileDescriptor;)Z
    .locals 6
    .param p1, "process"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "managed"    # Z
    .param p4, "path"    # Ljava/lang/String;
    .param p5, "fd"    # Landroid/os/ParcelFileDescriptor;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 27212
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 27215
    :try_start_1
    const-string v3, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v3

    if-eqz v3, :cond_1

    .line 27217
    new-instance v3, Ljava/lang/SecurityException;

    const-string v4, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 27240
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    throw v3
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 27241
    :catch_0
    move-exception v0

    .line 27242
    .local v0, "e":Landroid/os/RemoteException;
    :try_start_3
    new-instance v3, Ljava/lang/IllegalStateException;

    const-string v4, "Process disappeared"

    invoke-direct {v3, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 27244
    .end local v0    # "e":Landroid/os/RemoteException;
    :catchall_1
    move-exception v3

    if-eqz p5, :cond_0

    .line 27246
    :try_start_4
    invoke-virtual {p5}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_2

    .line 27248
    :cond_0
    :goto_0
    throw v3

    .line 27221
    :cond_1
    if-nez p5, :cond_2

    .line 27222
    :try_start_5
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v4, "null fd"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 27225
    :cond_2
    const-string/jumbo v3, "dumpHeap"

    invoke-direct {p0, p1, p2, v3}, Lcom/android/server/am/ActivityManagerService;->findProcessLocked(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    .line 27226
    .local v2, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v2, :cond_3

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v3, :cond_4

    .line 27227
    :cond_3
    new-instance v3, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Unknown process: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 27230
    :cond_4
    const-string v3, "1"

    const-string/jumbo v4, "ro.debuggable"

    const-string v5, "0"

    invoke-static {v4, v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    .line 27231
    .local v1, "isDebuggable":Z
    if-nez v1, :cond_5

    .line 27232
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_5

    .line 27233
    new-instance v3, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Process not debuggable: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 27237
    :cond_5
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v3, p3, p4, p5}, Landroid/app/IApplicationThread;->dumpHeap(ZLjava/lang/String;Landroid/os/ParcelFileDescriptor;)V

    .line 27238
    const/4 p5, 0x0

    .line 27239
    const/4 v3, 0x1

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 27244
    if-eqz p5, :cond_6

    .line 27246
    :try_start_6
    invoke-virtual {p5}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_1

    .line 27248
    :cond_6
    :goto_1
    return v3

    .line 27247
    :catch_1
    move-exception v4

    goto :goto_1

    .end local v1    # "isDebuggable":Z
    .end local v2    # "proc":Lcom/android/server/am/ProcessRecord;
    :catch_2
    move-exception v4

    goto :goto_0
.end method

.method public dumpHeapFinished(Ljava/lang/String;)V
    .locals 3
    .param p1, "path"    # Ljava/lang/String;

    .prologue
    .line 27293
    monitor-enter p0

    .line 27294
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpPid:I

    if-eq v0, v1, :cond_0

    .line 27295
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "dumpHeapFinished: Calling pid "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " does not match last pid "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpPid:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 27297
    monitor-exit p0

    .line 27307
    :goto_0
    return-void

    .line 27299
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpFile:Ljava/lang/String;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpFile:Ljava/lang/String;

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_2

    .line 27300
    :cond_1
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "dumpHeapFinished: Calling path "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " does not match last path "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpFile:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 27302
    monitor-exit p0

    goto :goto_0

    .line 27306
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    .line 27305
    :cond_2
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x33

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendEmptyMessage(I)Z

    .line 27306
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0
.end method

.method dumpOomLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZ)Z
    .locals 8
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z

    .prologue
    .line 19599
    const/4 v5, 0x0

    .line 19601
    .local v5, "needSep":Z
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_2

    .line 19602
    if-eqz v5, :cond_0

    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 19603
    :cond_0
    const/4 v5, 0x1

    .line 19604
    const-string v0, "  OOM levels:"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19605
    const-string v0, "SYSTEM_ADJ"

    const/16 v1, -0x10

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 19606
    const-string v0, "PERSISTENT_PROC_ADJ"

    const/16 v1, -0xc

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 19607
    const-string v0, "PERSISTENT_SERVICE_ADJ"

    const/16 v1, -0xb

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 19608
    const-string v0, "FOREGROUND_APP_ADJ"

    const/4 v1, 0x0

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 19609
    const-string v0, "VISIBLE_APP_ADJ"

    const/4 v1, 0x1

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 19610
    const-string v0, "PERCEPTIBLE_APP_ADJ"

    const/4 v1, 0x2

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 19611
    const-string v0, "BACKUP_APP_ADJ"

    const/4 v1, 0x3

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 19612
    const-string v0, "HEAVY_WEIGHT_APP_ADJ"

    const/4 v1, 0x4

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 19613
    const-string v0, "SERVICE_ADJ"

    const/4 v1, 0x5

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 19614
    const-string v0, "HOME_APP_ADJ"

    const/4 v1, 0x6

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 19615
    const-string v0, "PREVIOUS_APP_ADJ"

    const/4 v1, 0x7

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 19616
    const-string v0, "SERVICE_B_ADJ"

    const/16 v1, 0x8

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 19617
    const-string v0, "CACHED_APP_MIN_ADJ"

    const/16 v1, 0x9

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 19618
    const-string v0, "CACHED_APP_MAX_ADJ"

    const/16 v1, 0xf

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 19620
    if-eqz v5, :cond_1

    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 19621
    :cond_1
    const-string v0, "  Process OOM control ("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 19622
    const-string v0, " total, non-act at "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19623
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    sub-int/2addr v0, v1

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 19624
    const-string v0, ", non-svc at "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19625
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    sub-int/2addr v0, v1

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 19626
    const-string v0, "):"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19627
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    const-string v3, "    "

    const-string v4, "Proc"

    const-string v5, "PERS"

    .end local v5    # "needSep":Z
    const/4 v6, 0x1

    const/4 v7, 0x0

    move-object v0, p2

    move-object v1, p0

    invoke-static/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProcessOomList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Z

    .line 19628
    const/4 v5, 0x1

    .line 19631
    .restart local v5    # "needSep":Z
    :cond_2
    const/4 v7, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move v4, p4

    move v6, p5

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesToGc(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)Z

    .line 19633
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 19634
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "  mHomeProcess: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19636
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "  mRecentsProcess: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRecentsProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19638
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "  mPreviousProcess: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19639
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v0, :cond_3

    .line 19640
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "  mHeavyWeightProcess: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19643
    :cond_3
    const/4 v0, 0x1

    return v0
.end method

.method dumpPendingIntentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 6
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 20009
    const/4 v2, 0x0

    .line 20011
    .local v2, "printed":Z
    const-string v5, "ACTIVITY MANAGER PENDING INTENTS (dumpsys activity intents)"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20013
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->size()I

    move-result v5

    if-lez v5, :cond_4

    .line 20014
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v5

    invoke-interface {v5}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .line 20016
    .local v1, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;>;"
    :cond_0
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_4

    .line 20017
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/ref/WeakReference;

    .line 20018
    .local v4, "ref":Ljava/lang/ref/WeakReference;, "Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;"
    if-eqz v4, :cond_2

    invoke-virtual {v4}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/PendingIntentRecord;

    move-object v3, v5

    .line 20019
    .local v3, "rec":Lcom/android/server/am/PendingIntentRecord;
    :goto_1
    if-eqz p6, :cond_1

    if-eqz v3, :cond_0

    iget-object v5, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v5, v5, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    invoke-virtual {p6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_0

    .line 20023
    :cond_1
    const/4 v2, 0x1

    .line 20024
    if-eqz v3, :cond_3

    .line 20025
    const-string v5, "  * "

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 20026
    if-eqz p5, :cond_0

    .line 20027
    const-string v5, "    "

    invoke-virtual {v3, p2, v5}, Lcom/android/server/am/PendingIntentRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    goto :goto_0

    .line 20018
    .end local v3    # "rec":Lcom/android/server/am/PendingIntentRecord;
    :cond_2
    const/4 v3, 0x0

    goto :goto_1

    .line 20030
    .restart local v3    # "rec":Lcom/android/server/am/PendingIntentRecord;
    :cond_3
    const-string v5, "  * "

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    goto :goto_0

    .line 20035
    .end local v1    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;>;"
    .end local v3    # "rec":Lcom/android/server/am/PendingIntentRecord;
    .end local v4    # "ref":Ljava/lang/ref/WeakReference;, "Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;"
    :cond_4
    const-string v5, "ACTIVITY MANAGER GRABED PENDING INTENTS"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20037
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mGrabedIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->size()I

    move-result v5

    if-lez v5, :cond_7

    .line 20038
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mGrabedIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v5

    invoke-interface {v5}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v0

    .line 20040
    .local v0, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/PendingIntentRecord;>;"
    :cond_5
    :goto_2
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_7

    .line 20041
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/PendingIntentRecord;

    .line 20042
    .restart local v3    # "rec":Lcom/android/server/am/PendingIntentRecord;
    if-eqz p6, :cond_6

    if-eqz v3, :cond_5

    iget-object v5, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v5, v5, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    invoke-virtual {p6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_5

    .line 20046
    :cond_6
    const/4 v2, 0x1

    .line 20047
    if-eqz v3, :cond_5

    .line 20048
    const-string v5, "  * "

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 20049
    if-eqz p5, :cond_5

    .line 20050
    const-string v5, "    "

    invoke-virtual {v3, p2, v5}, Lcom/android/server/am/PendingIntentRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    goto :goto_2

    .line 20056
    .end local v0    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/PendingIntentRecord;>;"
    .end local v3    # "rec":Lcom/android/server/am/PendingIntentRecord;
    :cond_7
    if-nez v2, :cond_8

    .line 20057
    const-string v5, "  (nothing)"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20059
    :cond_8
    return-void
.end method

.method dumpPermissionsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 13
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 19964
    const/4 v5, 0x0

    .line 19965
    .local v5, "needSep":Z
    const/4 v9, 0x0

    .line 19967
    .local v9, "printedAnything":Z
    const-string v11, "ACTIVITY MANAGER URI PERMISSIONS (dumpsys activity permissions)"

    invoke-virtual {p2, v11}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19969
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v11}, Landroid/util/SparseArray;->size()I

    move-result v11

    if-lez v11, :cond_6

    .line 19970
    const/4 v8, 0x0

    .line 19971
    .local v8, "printed":Z
    const/4 v1, -0x2

    .line 19972
    .local v1, "dumpUid":I
    if-eqz p6, :cond_0

    .line 19974
    :try_start_0
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v11}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v11

    const/4 v12, 0x0

    move-object/from16 v0, p6

    invoke-virtual {v11, v0, v12}, Landroid/content/pm/PackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v1

    .line 19979
    :cond_0
    :goto_0
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_1
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v11}, Landroid/util/SparseArray;->size()I

    move-result v11

    if-ge v3, v11, :cond_6

    .line 19980
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v11, v3}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v10

    .line 19981
    .local v10, "uid":I
    const/4 v11, -0x1

    if-lt v1, v11, :cond_2

    invoke-static {v10}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v11

    if-eq v11, v1, :cond_2

    .line 19979
    :cond_1
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 19975
    .end local v3    # "i":I
    .end local v10    # "uid":I
    :catch_0
    move-exception v2

    .line 19976
    .local v2, "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    const/4 v1, -0x1

    goto :goto_0

    .line 19984
    .end local v2    # "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    .restart local v3    # "i":I
    .restart local v10    # "uid":I
    :cond_2
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v11, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/util/ArrayMap;

    .line 19985
    .local v7, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-nez v8, :cond_4

    .line 19986
    if-eqz v5, :cond_3

    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 19987
    :cond_3
    const/4 v5, 0x1

    .line 19988
    const-string v11, "  Granted Uri Permissions:"

    invoke-virtual {p2, v11}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19989
    const/4 v8, 0x1

    .line 19990
    const/4 v9, 0x1

    .line 19992
    :cond_4
    const-string v11, "  * UID "

    invoke-virtual {p2, v11}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v10}, Ljava/io/PrintWriter;->print(I)V

    const-string v11, " holds:"

    invoke-virtual {p2, v11}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19993
    invoke-virtual {v7}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v11

    invoke-interface {v11}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v4

    .local v4, "i$":Ljava/util/Iterator;
    :cond_5
    :goto_2
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v11

    if-eqz v11, :cond_1

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/UriPermission;

    .line 19994
    .local v6, "perm":Lcom/android/server/am/UriPermission;
    const-string v11, "    "

    invoke-virtual {p2, v11}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19995
    if-eqz p5, :cond_5

    .line 19996
    const-string v11, "      "

    invoke-virtual {v6, p2, v11}, Lcom/android/server/am/UriPermission;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    goto :goto_2

    .line 20002
    .end local v1    # "dumpUid":I
    .end local v3    # "i":I
    .end local v4    # "i$":Ljava/util/Iterator;
    .end local v6    # "perm":Lcom/android/server/am/UriPermission;
    .end local v7    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    .end local v8    # "printed":Z
    .end local v10    # "uid":I
    :cond_6
    if-nez v9, :cond_7

    .line 20003
    const-string v11, "  (nothing)"

    invoke-virtual {p2, v11}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 20005
    :cond_7
    return-void
.end method

.method dumpProcessesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 47
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 19073
    const/4 v9, 0x0

    .line 19074
    .local v9, "needSep":Z
    const/16 v34, 0x0

    .line 19075
    .local v34, "printedAnything":Z
    const/16 v25, 0x0

    .line 19077
    .local v25, "numPers":I
    const-string v4, "ACTIVITY MANAGER RUNNING PROCESSES (dumpsys activity processes)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19079
    if-eqz p5, :cond_5

    .line 19080
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v4

    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    move-result v14

    .line 19081
    .local v14, "NP":I
    const/16 v20, 0x0

    .local v20, "ip":I
    :goto_0
    move/from16 v0, v20

    if-ge v0, v14, :cond_5

    .line 19082
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v4

    move/from16 v0, v20

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v37

    check-cast v37, Landroid/util/SparseArray;

    .line 19083
    .local v37, "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    invoke-virtual/range {v37 .. v37}, Landroid/util/SparseArray;->size()I

    move-result v13

    .line 19084
    .local v13, "NA":I
    const/16 v18, 0x0

    .local v18, "ia":I
    :goto_1
    move/from16 v0, v18

    if-ge v0, v13, :cond_4

    .line 19085
    move-object/from16 v0, v37

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v39

    check-cast v39, Lcom/android/server/am/ProcessRecord;

    .line 19086
    .local v39, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_1

    move-object/from16 v0, v39

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_1

    .line 19084
    :cond_0
    :goto_2
    add-int/lit8 v18, v18, 0x1

    goto :goto_1

    .line 19089
    :cond_1
    if-nez v9, :cond_2

    .line 19090
    const-string v4, "  All known processes:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19091
    const/4 v9, 0x1

    .line 19092
    const/16 v34, 0x1

    .line 19094
    :cond_2
    move-object/from16 v0, v39

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v4, :cond_3

    const-string v4, "  *PERS*"

    :goto_3
    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19095
    const-string v4, " UID "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, v37

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 19096
    const-string v4, " "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move-object/from16 v1, v39

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19097
    const-string v4, "    "

    move-object/from16 v0, v39

    move-object/from16 v1, p2

    invoke-virtual {v0, v1, v4}, Lcom/android/server/am/ProcessRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 19098
    move-object/from16 v0, v39

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v4, :cond_0

    .line 19099
    add-int/lit8 v25, v25, 0x1

    goto :goto_2

    .line 19094
    :cond_3
    const-string v4, "  *APP*"

    goto :goto_3

    .line 19081
    .end local v39    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_4
    add-int/lit8 v20, v20, 0x1

    goto/16 :goto_0

    .line 19105
    .end local v13    # "NA":I
    .end local v14    # "NP":I
    .end local v18    # "ia":I
    .end local v20    # "ip":I
    .end local v37    # "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    :cond_5
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    if-lez v4, :cond_9

    .line 19106
    const/16 v33, 0x0

    .line 19107
    .local v33, "printed":Z
    const/16 v16, 0x0

    .local v16, "i":I
    :goto_4
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    move/from16 v0, v16

    if-ge v0, v4, :cond_9

    .line 19108
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v39

    check-cast v39, Lcom/android/server/am/ProcessRecord;

    .line 19109
    .restart local v39    # "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_6

    move-object/from16 v0, v39

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_6

    .line 19107
    :goto_5
    add-int/lit8 v16, v16, 0x1

    goto :goto_4

    .line 19112
    :cond_6
    if-nez v33, :cond_8

    .line 19113
    if-eqz v9, :cond_7

    .line 19114
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19116
    :cond_7
    const-string v4, "  Isolated process list (sorted by uid):"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19117
    const/16 v34, 0x1

    .line 19118
    const/16 v33, 0x1

    .line 19119
    const/4 v9, 0x1

    .line 19121
    :cond_8
    const-string v4, "%sIsolated #%2d: %s"

    const/4 v5, 0x3

    new-array v5, v5, [Ljava/lang/Object;

    const/4 v6, 0x0

    const-string v7, "    "

    aput-object v7, v5, v6

    const/4 v6, 0x1

    invoke-static/range {v16 .. v16}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v5, v6

    const/4 v6, 0x2

    invoke-virtual/range {v39 .. v39}, Lcom/android/server/am/ProcessRecord;->toString()Ljava/lang/String;

    move-result-object v7

    aput-object v7, v5, v6

    invoke-static {v4, v5}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_5

    .line 19126
    .end local v16    # "i":I
    .end local v33    # "printed":Z
    .end local v39    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_9
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    if-lez v4, :cond_c

    .line 19127
    if-eqz v9, :cond_a

    .line 19128
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19130
    :cond_a
    const-string v4, "  UID states:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19131
    const/16 v16, 0x0

    .restart local v16    # "i":I
    :goto_6
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    move/from16 v0, v16

    if-ge v0, v4, :cond_b

    .line 19132
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v41

    check-cast v41, Lcom/android/server/am/UidRecord;

    .line 19133
    .local v41, "uidRec":Lcom/android/server/am/UidRecord;
    const-string v4, "    UID "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, v41

    iget v4, v0, Lcom/android/server/am/UidRecord;->uid:I

    move-object/from16 v0, p2

    invoke-static {v0, v4}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    .line 19134
    const-string v4, ": "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move-object/from16 v1, v41

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19131
    add-int/lit8 v16, v16, 0x1

    goto :goto_6

    .line 19136
    .end local v41    # "uidRec":Lcom/android/server/am/UidRecord;
    :cond_b
    const/4 v9, 0x1

    .line 19137
    const/16 v34, 0x1

    .line 19140
    .end local v16    # "i":I
    :cond_c
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-lez v4, :cond_e

    .line 19141
    if-eqz v9, :cond_d

    .line 19142
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19144
    :cond_d
    const-string v4, "  Process LRU list (sorted by oom_adj, "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 19145
    const-string v4, " total, non-act at "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19146
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    sub-int/2addr v4, v5

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 19147
    const-string v4, ", non-svc at "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19148
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    sub-int/2addr v4, v5

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 19149
    const-string v4, "):"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19150
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    const-string v7, "    "

    const-string v8, "Proc"

    const-string v9, "PERS"

    .end local v9    # "needSep":Z
    const/4 v10, 0x0

    move-object/from16 v4, p2

    move-object/from16 v5, p0

    move-object/from16 v11, p6

    invoke-static/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->dumpProcessOomList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Z

    .line 19151
    const/4 v9, 0x1

    .line 19152
    .restart local v9    # "needSep":Z
    const/16 v34, 0x1

    .line 19155
    :cond_e
    if-nez p5, :cond_f

    if-eqz p6, :cond_14

    .line 19156
    :cond_f
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v5

    .line 19157
    const/16 v33, 0x0

    .line 19158
    .restart local v33    # "printed":Z
    const/16 v16, 0x0

    .restart local v16    # "i":I
    :goto_7
    :try_start_0
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    move/from16 v0, v16

    if-ge v0, v4, :cond_13

    .line 19159
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v39

    check-cast v39, Lcom/android/server/am/ProcessRecord;

    .line 19160
    .restart local v39    # "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_10

    move-object/from16 v0, v39

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_10

    .line 19158
    :goto_8
    add-int/lit8 v16, v16, 0x1

    goto :goto_7

    .line 19163
    :cond_10
    if-nez v33, :cond_12

    .line 19164
    if-eqz v9, :cond_11

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19165
    :cond_11
    const/4 v9, 0x1

    .line 19166
    const-string v4, "  PID mappings:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19167
    const/16 v33, 0x1

    .line 19168
    const/16 v34, 0x1

    .line 19170
    :cond_12
    const-string v4, "    PID #"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 19171
    const-string v4, ": "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    goto :goto_8

    .line 19173
    .end local v39    # "r":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v4

    monitor-exit v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v4

    :cond_13
    :try_start_1
    monitor-exit v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 19176
    .end local v16    # "i":I
    .end local v33    # "printed":Z
    :cond_14
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    if-lez v4, :cond_1a

    .line 19177
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v5

    .line 19178
    const/16 v33, 0x0

    .line 19179
    .restart local v33    # "printed":Z
    const/16 v16, 0x0

    .restart local v16    # "i":I
    :goto_9
    :try_start_2
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    move/from16 v0, v16

    if-ge v0, v4, :cond_19

    .line 19180
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ActivityManagerService$ForegroundToken;

    iget v4, v4, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->pid:I

    invoke-virtual {v6, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v39

    check-cast v39, Lcom/android/server/am/ProcessRecord;

    .line 19182
    .restart local v39    # "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_16

    if-eqz v39, :cond_15

    move-object/from16 v0, v39

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_16

    .line 19179
    :cond_15
    :goto_a
    add-int/lit8 v16, v16, 0x1

    goto :goto_9

    .line 19186
    :cond_16
    if-nez v33, :cond_18

    .line 19187
    if-eqz v9, :cond_17

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19188
    :cond_17
    const/4 v9, 0x1

    .line 19189
    const-string v4, "  Foreground Processes:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19190
    const/16 v33, 0x1

    .line 19191
    const/16 v34, 0x1

    .line 19193
    :cond_18
    const-string v4, "    PID #"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 19194
    const-string v4, ": "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    goto :goto_a

    .line 19196
    .end local v39    # "r":Lcom/android/server/am/ProcessRecord;
    :catchall_1
    move-exception v4

    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v4

    :cond_19
    :try_start_3
    monitor-exit v5
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 19199
    .end local v16    # "i":I
    .end local v33    # "printed":Z
    :cond_1a
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-lez v4, :cond_1c

    .line 19200
    if-eqz v9, :cond_1b

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19201
    :cond_1b
    const/16 v24, 0x1

    .line 19202
    .end local v9    # "needSep":Z
    .local v24, "needSep":Z
    const/16 v34, 0x1

    .line 19203
    const-string v4, "  Persisent processes that are starting:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19204
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    const-string v7, "    "

    const-string v8, "Starting Norm"

    const-string v9, "Restarting PERS"

    move-object/from16 v4, p2

    move-object/from16 v5, p0

    move-object/from16 v10, p6

    invoke-static/range {v4 .. v10}, Lcom/android/server/am/ActivityManagerService;->dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    move/from16 v9, v24

    .line 19208
    .end local v24    # "needSep":Z
    .restart local v9    # "needSep":Z
    :cond_1c
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-lez v4, :cond_1e

    .line 19209
    if-eqz v9, :cond_1d

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19210
    :cond_1d
    const/16 v24, 0x1

    .line 19211
    .end local v9    # "needSep":Z
    .restart local v24    # "needSep":Z
    const/16 v34, 0x1

    .line 19212
    const-string v4, "  Processes that are being removed:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19213
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    const-string v7, "    "

    const-string v8, "Removed Norm"

    const-string v9, "Removed PERS"

    move-object/from16 v4, p2

    move-object/from16 v5, p0

    move-object/from16 v10, p6

    invoke-static/range {v4 .. v10}, Lcom/android/server/am/ActivityManagerService;->dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    move/from16 v9, v24

    .line 19217
    .end local v24    # "needSep":Z
    .restart local v9    # "needSep":Z
    :cond_1e
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-lez v4, :cond_20

    .line 19218
    if-eqz v9, :cond_1f

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19219
    :cond_1f
    const/16 v24, 0x1

    .line 19220
    .end local v9    # "needSep":Z
    .restart local v24    # "needSep":Z
    const/16 v34, 0x1

    .line 19221
    const-string v4, "  Processes that are on old until the system is ready:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19222
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    const-string v7, "    "

    const-string v8, "OnHold Norm"

    const-string v9, "OnHold PERS"

    move-object/from16 v4, p2

    move-object/from16 v5, p0

    move-object/from16 v10, p6

    invoke-static/range {v4 .. v10}, Lcom/android/server/am/ActivityManagerService;->dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    move/from16 v9, v24

    .end local v24    # "needSep":Z
    .restart local v9    # "needSep":Z
    :cond_20
    move-object/from16 v4, p0

    move-object/from16 v5, p1

    move-object/from16 v6, p2

    move-object/from16 v7, p3

    move/from16 v8, p4

    move/from16 v10, p5

    move-object/from16 v11, p6

    .line 19226
    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesToGc(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)Z

    move-result v9

    .line 19228
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v4

    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    move-result v4

    if-lez v4, :cond_26

    .line 19229
    const/16 v33, 0x0

    .line 19230
    .restart local v33    # "printed":Z
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v26

    .line 19231
    .local v26, "now":J
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v30

    .line 19232
    .local v30, "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Ljava/lang/Long;>;>;"
    invoke-virtual/range {v30 .. v30}, Landroid/util/ArrayMap;->size()I

    move-result v14

    .line 19233
    .restart local v14    # "NP":I
    const/16 v20, 0x0

    .restart local v20    # "ip":I
    :goto_b
    move/from16 v0, v20

    if-ge v0, v14, :cond_26

    .line 19234
    move-object/from16 v0, v30

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v31

    check-cast v31, Ljava/lang/String;

    .line 19235
    .local v31, "pname":Ljava/lang/String;
    move-object/from16 v0, v30

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v44

    check-cast v44, Landroid/util/SparseArray;

    .line 19236
    .local v44, "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Long;>;"
    invoke-virtual/range {v44 .. v44}, Landroid/util/SparseArray;->size()I

    move-result v12

    .line 19237
    .local v12, "N":I
    const/16 v16, 0x0

    .restart local v16    # "i":I
    :goto_c
    move/from16 v0, v16

    if-ge v0, v12, :cond_25

    .line 19238
    move-object/from16 v0, v44

    move/from16 v1, v16

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v38

    .line 19239
    .local v38, "puid":I
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, v31

    move/from16 v1, v38

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v39

    check-cast v39, Lcom/android/server/am/ProcessRecord;

    .line 19240
    .restart local v39    # "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_22

    if-eqz v39, :cond_21

    move-object/from16 v0, v39

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_22

    .line 19237
    :cond_21
    :goto_d
    add-int/lit8 v16, v16, 0x1

    goto :goto_c

    .line 19244
    :cond_22
    if-nez v33, :cond_24

    .line 19245
    if-eqz v9, :cond_23

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19246
    :cond_23
    const/4 v9, 0x1

    .line 19247
    const-string v4, "  Time since processes crashed:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19248
    const/16 v33, 0x1

    .line 19249
    const/16 v34, 0x1

    .line 19251
    :cond_24
    const-string v4, "    Process "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move-object/from16 v1, v31

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19252
    const-string v4, " uid "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move/from16 v1, v38

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 19253
    const-string v4, ": last crashed "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19254
    move-object/from16 v0, v44

    move/from16 v1, v16

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Long;

    invoke-virtual {v4}, Ljava/lang/Long;->longValue()J

    move-result-wide v4

    sub-long v4, v26, v4

    move-object/from16 v0, p2

    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 19255
    const-string v4, " ago"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_d

    .line 19233
    .end local v38    # "puid":I
    .end local v39    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_25
    add-int/lit8 v20, v20, 0x1

    goto/16 :goto_b

    .line 19260
    .end local v12    # "N":I
    .end local v14    # "NP":I
    .end local v16    # "i":I
    .end local v20    # "ip":I
    .end local v26    # "now":J
    .end local v30    # "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Ljava/lang/Long;>;>;"
    .end local v31    # "pname":Ljava/lang/String;
    .end local v33    # "printed":Z
    .end local v44    # "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Long;>;"
    :cond_26
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v4

    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    move-result v4

    if-lez v4, :cond_30

    .line 19261
    const/16 v33, 0x0

    .line 19262
    .restart local v33    # "printed":Z
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v29

    .line 19263
    .local v29, "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$BadProcessInfo;>;>;"
    invoke-virtual/range {v29 .. v29}, Landroid/util/ArrayMap;->size()I

    move-result v14

    .line 19264
    .restart local v14    # "NP":I
    const/16 v20, 0x0

    .restart local v20    # "ip":I
    :goto_e
    move/from16 v0, v20

    if-ge v0, v14, :cond_30

    .line 19265
    move-object/from16 v0, v29

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v31

    check-cast v31, Ljava/lang/String;

    .line 19266
    .restart local v31    # "pname":Ljava/lang/String;
    move-object/from16 v0, v29

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v43

    check-cast v43, Landroid/util/SparseArray;

    .line 19267
    .local v43, "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$BadProcessInfo;>;"
    invoke-virtual/range {v43 .. v43}, Landroid/util/SparseArray;->size()I

    move-result v12

    .line 19268
    .restart local v12    # "N":I
    const/16 v16, 0x0

    .restart local v16    # "i":I
    :goto_f
    move/from16 v0, v16

    if-ge v0, v12, :cond_2f

    .line 19269
    move-object/from16 v0, v43

    move/from16 v1, v16

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v38

    .line 19270
    .restart local v38    # "puid":I
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, v31

    move/from16 v1, v38

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v39

    check-cast v39, Lcom/android/server/am/ProcessRecord;

    .line 19271
    .restart local v39    # "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_28

    if-eqz v39, :cond_27

    move-object/from16 v0, v39

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_28

    .line 19268
    :cond_27
    :goto_10
    add-int/lit8 v16, v16, 0x1

    goto :goto_f

    .line 19275
    :cond_28
    if-nez v33, :cond_2a

    .line 19276
    if-eqz v9, :cond_29

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19277
    :cond_29
    const/4 v9, 0x1

    .line 19278
    const-string v4, "  Bad processes:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19279
    const/16 v34, 0x1

    .line 19281
    :cond_2a
    move-object/from16 v0, v43

    move/from16 v1, v16

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;

    .line 19282
    .local v19, "info":Lcom/android/server/am/ActivityManagerService$BadProcessInfo;
    const-string v4, "    Bad process "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move-object/from16 v1, v31

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19283
    const-string v4, " uid "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move/from16 v1, v38

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 19284
    const-string v4, ": crashed at time "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, v19

    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->time:J

    move-object/from16 v0, p2

    invoke-virtual {v0, v4, v5}, Ljava/io/PrintWriter;->println(J)V

    .line 19285
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->shortMsg:Ljava/lang/String;

    if-eqz v4, :cond_2b

    .line 19286
    const-string v4, "      Short msg: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->shortMsg:Ljava/lang/String;

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19288
    :cond_2b
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->longMsg:Ljava/lang/String;

    if-eqz v4, :cond_2c

    .line 19289
    const-string v4, "      Long msg: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->longMsg:Ljava/lang/String;

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19291
    :cond_2c
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->stack:Ljava/lang/String;

    if-eqz v4, :cond_27

    .line 19292
    const-string v4, "      Stack:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19293
    const/16 v22, 0x0

    .line 19294
    .local v22, "lastPos":I
    const/16 v32, 0x0

    .local v32, "pos":I
    :goto_11
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->stack:Ljava/lang/String;

    invoke-virtual {v4}, Ljava/lang/String;->length()I

    move-result v4

    move/from16 v0, v32

    if-ge v0, v4, :cond_2e

    .line 19295
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->stack:Ljava/lang/String;

    move/from16 v0, v32

    invoke-virtual {v4, v0}, Ljava/lang/String;->charAt(I)C

    move-result v4

    const/16 v5, 0xa

    if-ne v4, v5, :cond_2d

    .line 19296
    const-string v4, "        "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19297
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->stack:Ljava/lang/String;

    sub-int v5, v32, v22

    move-object/from16 v0, p2

    move/from16 v1, v22

    invoke-virtual {v0, v4, v1, v5}, Ljava/io/PrintWriter;->write(Ljava/lang/String;II)V

    .line 19298
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19299
    add-int/lit8 v22, v32, 0x1

    .line 19294
    :cond_2d
    add-int/lit8 v32, v32, 0x1

    goto :goto_11

    .line 19302
    :cond_2e
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->stack:Ljava/lang/String;

    invoke-virtual {v4}, Ljava/lang/String;->length()I

    move-result v4

    move/from16 v0, v22

    if-ge v0, v4, :cond_27

    .line 19303
    const-string v4, "        "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19304
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->stack:Ljava/lang/String;

    move-object/from16 v0, v19

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->stack:Ljava/lang/String;

    invoke-virtual {v5}, Ljava/lang/String;->length()I

    move-result v5

    sub-int v5, v5, v22

    move-object/from16 v0, p2

    move/from16 v1, v22

    invoke-virtual {v0, v4, v1, v5}, Ljava/io/PrintWriter;->write(Ljava/lang/String;II)V

    .line 19305
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto/16 :goto_10

    .line 19264
    .end local v19    # "info":Lcom/android/server/am/ActivityManagerService$BadProcessInfo;
    .end local v22    # "lastPos":I
    .end local v32    # "pos":I
    .end local v38    # "puid":I
    .end local v39    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_2f
    add-int/lit8 v20, v20, 0x1

    goto/16 :goto_e

    .line 19312
    .end local v12    # "N":I
    .end local v14    # "NP":I
    .end local v16    # "i":I
    .end local v20    # "ip":I
    .end local v29    # "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$BadProcessInfo;>;>;"
    .end local v31    # "pname":Ljava/lang/String;
    .end local v33    # "printed":Z
    .end local v43    # "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$BadProcessInfo;>;"
    :cond_30
    if-nez p6, :cond_38

    .line 19313
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19314
    const/4 v9, 0x0

    .line 19315
    const-string v4, "  mStartedUsers:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19316
    const/16 v16, 0x0

    .restart local v16    # "i":I
    :goto_12
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    move/from16 v0, v16

    if-ge v0, v4, :cond_31

    .line 19317
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v45

    check-cast v45, Lcom/android/server/am/UserState;

    .line 19318
    .local v45, "uss":Lcom/android/server/am/UserState;
    const-string v4, "    User #"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, v45

    iget-object v4, v0, Lcom/android/server/am/UserState;->mHandle:Landroid/os/UserHandle;

    invoke-virtual {v4}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 19319
    const-string v4, ": "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v4, ""

    move-object/from16 v0, v45

    move-object/from16 v1, p2

    invoke-virtual {v0, v4, v1}, Lcom/android/server/am/UserState;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    .line 19316
    add-int/lit8 v16, v16, 0x1

    goto :goto_12

    .line 19321
    .end local v45    # "uss":Lcom/android/server/am/UserState;
    :cond_31
    const-string v4, "  mStartedUserArray: ["

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19322
    const/16 v16, 0x0

    :goto_13
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    array-length v4, v4

    move/from16 v0, v16

    if-ge v0, v4, :cond_33

    .line 19323
    if-lez v16, :cond_32

    const-string v4, ", "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19324
    :cond_32
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    aget v4, v4, v16

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 19322
    add-int/lit8 v16, v16, 0x1

    goto :goto_13

    .line 19326
    :cond_33
    const-string v4, "]"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19327
    const-string v4, "  mUserLru: ["

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19328
    const/16 v16, 0x0

    :goto_14
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    move/from16 v0, v16

    if-ge v0, v4, :cond_35

    .line 19329
    if-lez v16, :cond_34

    const-string v4, ", "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19330
    :cond_34
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 19328
    add-int/lit8 v16, v16, 0x1

    goto :goto_14

    .line 19332
    :cond_35
    const-string v4, "]"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19333
    if-eqz p5, :cond_36

    .line 19334
    const-string v4, "  mStartedUserArray: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    invoke-static {v4}, Ljava/util/Arrays;->toString([I)Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19336
    :cond_36
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    monitor-enter v5

    .line 19337
    :try_start_4
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    invoke-virtual {v4}, Landroid/util/SparseIntArray;->size()I

    move-result v4

    if-lez v4, :cond_37

    .line 19338
    const-string v4, "  mUserProfileGroupIds:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19339
    const/16 v16, 0x0

    :goto_15
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    invoke-virtual {v4}, Landroid/util/SparseIntArray;->size()I

    move-result v4

    move/from16 v0, v16

    if-ge v0, v4, :cond_37

    .line 19340
    const-string v4, "    User #"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19341
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 19342
    const-string v4, " -> profile #"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19343
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Landroid/util/SparseIntArray;->valueAt(I)I

    move-result v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(I)V

    .line 19339
    add-int/lit8 v16, v16, 0x1

    goto :goto_15

    .line 19346
    :cond_37
    monitor-exit v5
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 19348
    .end local v16    # "i":I
    :cond_38
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v4, :cond_3b

    if-eqz p6, :cond_39

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_3b

    .line 19350
    :cond_39
    if-eqz v9, :cond_3a

    .line 19351
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19352
    const/4 v9, 0x0

    .line 19354
    :cond_3a
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mHomeProcess: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19356
    :cond_3b
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v4, :cond_3e

    if-eqz p6, :cond_3c

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_3e

    .line 19358
    :cond_3c
    if-eqz v9, :cond_3d

    .line 19359
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19360
    const/4 v9, 0x0

    .line 19362
    :cond_3d
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mPreviousProcess: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19364
    :cond_3e
    if-eqz p5, :cond_3f

    .line 19365
    new-instance v40, Ljava/lang/StringBuilder;

    const/16 v4, 0x80

    move-object/from16 v0, v40

    invoke-direct {v0, v4}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 19366
    .local v40, "sb":Ljava/lang/StringBuilder;
    const-string v4, "  mPreviousProcessVisibleTime: "

    move-object/from16 v0, v40

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 19367
    move-object/from16 v0, p0

    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcessVisibleTime:J

    move-object/from16 v0, v40

    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 19368
    move-object/from16 v0, p2

    move-object/from16 v1, v40

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19370
    .end local v40    # "sb":Ljava/lang/StringBuilder;
    :cond_3f
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v4, :cond_42

    if-eqz p6, :cond_40

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_42

    .line 19372
    :cond_40
    if-eqz v9, :cond_41

    .line 19373
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19374
    const/4 v9, 0x0

    .line 19376
    :cond_41
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mHeavyWeightProcess: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19378
    :cond_42
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mProcessLimit: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19379
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mProcessLimitOverride: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimitOverride:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19380
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  ProcessList.mMaxCached: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    sget v5, Lcom/android/server/am/ProcessList;->mMaxCached:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19383
    sget-boolean v4, Lcom/android/server/am/ProcessList;->DEBUG:Z

    if-eqz v4, :cond_43

    .line 19384
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  DHA_CACHE_MIN: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    sget v5, Lcom/android/server/am/ProcessList;->MIN_CACHED_APPS:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19385
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  DHA_CACHE_MAX: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    sget v5, Lcom/android/server/am/ProcessList;->MAX_CACHED_APPS:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19386
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  DHA_EMPTY_INIT: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    sget v5, Lcom/android/server/am/ProcessList;->INIT_EMPTY_APPS:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19387
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  DHA_EMPTY_MIN: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    sget v5, Lcom/android/server/am/ProcessList;->MIN_EMPTY_APPS_FOR_DHA:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19388
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  DHA_EMPTY_MAX: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    sget v5, Lcom/android/server/am/ProcessList;->MAX_EMPTY_APPS:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19392
    :cond_43
    if-nez p6, :cond_44

    .line 19399
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mConfiguration: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19403
    :cond_44
    if-eqz p5, :cond_48

    .line 19404
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mConfigWillChange: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v5

    iget-boolean v5, v5, Lcom/android/server/am/ActivityStack;->mConfigWillChange:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19405
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v4}, Lcom/android/server/am/CompatModePackages;->getPackages()Ljava/util/HashMap;

    move-result-object v4

    invoke-virtual {v4}, Ljava/util/HashMap;->size()I

    move-result v4

    if-lez v4, :cond_48

    .line 19406
    const/16 v33, 0x0

    .line 19408
    .restart local v33    # "printed":Z
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v4}, Lcom/android/server/am/CompatModePackages;->getPackages()Ljava/util/HashMap;

    move-result-object v4

    invoke-virtual {v4}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v4

    invoke-interface {v4}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v17

    .local v17, "i$":Ljava/util/Iterator;
    :cond_45
    :goto_16
    invoke-interface/range {v17 .. v17}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_48

    invoke-interface/range {v17 .. v17}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Ljava/util/Map$Entry;

    .line 19409
    .local v15, "entry":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Ljava/lang/Integer;>;"
    invoke-interface {v15}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v28

    check-cast v28, Ljava/lang/String;

    .line 19410
    .local v28, "pkg":Ljava/lang/String;
    invoke-interface {v15}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Integer;

    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    move-result v23

    .line 19411
    .local v23, "mode":I
    if-eqz p6, :cond_46

    move-object/from16 v0, p6

    move-object/from16 v1, v28

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_45

    .line 19414
    :cond_46
    if-nez v33, :cond_47

    .line 19415
    const-string v4, "  mScreenCompatPackages:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19416
    const/16 v33, 0x1

    .line 19418
    :cond_47
    const-string v4, "    "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move-object/from16 v1, v28

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v4, ": "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19419
    move-object/from16 v0, p2

    move/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto :goto_16

    .line 19346
    .end local v15    # "entry":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Ljava/lang/Integer;>;"
    .end local v17    # "i$":Ljava/util/Iterator;
    .end local v23    # "mode":I
    .end local v28    # "pkg":Ljava/lang/String;
    .end local v33    # "printed":Z
    .restart local v16    # "i":I
    :catchall_2
    move-exception v4

    :try_start_5
    monitor-exit v5
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    throw v4

    .line 19423
    .end local v16    # "i":I
    :cond_48
    if-nez p6, :cond_49

    .line 19424
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mWakefulness="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    invoke-static {v5}, Landroid/os/PowerManagerInternal;->wakefulnessToString(I)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19426
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mSleepTokens="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mSleepTokens:Ljava/util/ArrayList;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19427
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mSleeping="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mLockScreenShown="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->lockScreenShownToString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19429
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mShuttingDown="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mTestPssMode="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19430
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz v4, :cond_49

    .line 19431
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mRunningVoice="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19432
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mVoiceWakeLock"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19435
    :cond_49
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    if-nez v4, :cond_4a

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    if-nez v4, :cond_4a

    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    if-nez v4, :cond_4a

    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    if-eqz v4, :cond_4d

    .line 19437
    :cond_4a
    if-eqz p6, :cond_4b

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    move-object/from16 v0, p6

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_4b

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    move-object/from16 v0, p6

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_4d

    .line 19439
    :cond_4b
    if-eqz v9, :cond_4c

    .line 19440
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19441
    const/4 v9, 0x0

    .line 19443
    :cond_4c
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mDebugApp="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, "/orig="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mDebugTransient="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mOrigWaitForDebugger="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19448
    :cond_4d
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    if-eqz v4, :cond_4e

    .line 19449
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    const-string v5, "  "

    const/4 v6, 0x1

    move-object/from16 v0, p2

    invoke-virtual {v4, v0, v5, v6}, Lcom/android/server/am/AppTimeTracker;->dumpWithHeader(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 19451
    :cond_4e
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v4

    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    move-result v4

    if-lez v4, :cond_53

    .line 19452
    const-string v4, "  Mem watch processes:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19453
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v36

    .line 19455
    .local v36, "procs":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;>;>;"
    const/16 v16, 0x0

    .restart local v16    # "i":I
    :goto_17
    invoke-virtual/range {v36 .. v36}, Landroid/util/ArrayMap;->size()I

    move-result v4

    move/from16 v0, v16

    if-ge v0, v4, :cond_52

    .line 19456
    move-object/from16 v0, v36

    move/from16 v1, v16

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v35

    check-cast v35, Ljava/lang/String;

    .line 19457
    .local v35, "proc":Ljava/lang/String;
    move-object/from16 v0, v36

    move/from16 v1, v16

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v42

    check-cast v42, Landroid/util/SparseArray;

    .line 19458
    .local v42, "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;>;"
    const/16 v21, 0x0

    .local v21, "j":I
    :goto_18
    invoke-virtual/range {v42 .. v42}, Landroid/util/SparseArray;->size()I

    move-result v4

    move/from16 v0, v21

    if-ge v0, v4, :cond_51

    .line 19459
    if-eqz v9, :cond_4f

    .line 19460
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19461
    const/4 v9, 0x0

    .line 19463
    :cond_4f
    new-instance v40, Ljava/lang/StringBuilder;

    invoke-direct/range {v40 .. v40}, Ljava/lang/StringBuilder;-><init>()V

    .line 19464
    .restart local v40    # "sb":Ljava/lang/StringBuilder;
    const-string v4, "    "

    move-object/from16 v0, v40

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, v35

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const/16 v5, 0x2f

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 19465
    move-object/from16 v0, v42

    move/from16 v1, v21

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v4

    move-object/from16 v0, v40

    invoke-static {v0, v4}, Landroid/os/UserHandle;->formatUid(Ljava/lang/StringBuilder;I)V

    .line 19466
    move-object/from16 v0, v42

    move/from16 v1, v21

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v46

    check-cast v46, Landroid/util/Pair;

    .line 19467
    .local v46, "val":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;"
    const-string v4, ": "

    move-object/from16 v0, v40

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v0, v46

    iget-object v4, v0, Landroid/util/Pair;->first:Ljava/lang/Object;

    check-cast v4, Ljava/lang/Long;

    invoke-virtual {v4}, Ljava/lang/Long;->longValue()J

    move-result-wide v4

    move-object/from16 v0, v40

    invoke-static {v4, v5, v0}, Landroid/util/DebugUtils;->sizeValueToString(JLjava/lang/StringBuilder;)Ljava/lang/String;

    .line 19468
    move-object/from16 v0, v46

    iget-object v4, v0, Landroid/util/Pair;->second:Ljava/lang/Object;

    if-eqz v4, :cond_50

    .line 19469
    const-string v4, ", report to "

    move-object/from16 v0, v40

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, v46

    iget-object v4, v0, Landroid/util/Pair;->second:Ljava/lang/Object;

    check-cast v4, Ljava/lang/String;

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 19471
    :cond_50
    invoke-virtual/range {v40 .. v40}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19458
    add-int/lit8 v21, v21, 0x1

    goto :goto_18

    .line 19455
    .end local v40    # "sb":Ljava/lang/StringBuilder;
    .end local v46    # "val":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;"
    :cond_51
    add-int/lit8 v16, v16, 0x1

    goto/16 :goto_17

    .line 19474
    .end local v21    # "j":I
    .end local v35    # "proc":Ljava/lang/String;
    .end local v42    # "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;>;"
    :cond_52
    const-string v4, "  mMemWatchDumpProcName="

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpProcName:Ljava/lang/String;

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19475
    const-string v4, "  mMemWatchDumpFile="

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpFile:Ljava/lang/String;

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19476
    const-string v4, "  mMemWatchDumpPid="

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpPid:I

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 19477
    const-string v4, " mMemWatchDumpUid="

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpUid:I

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(I)V

    .line 19479
    .end local v16    # "i":I
    .end local v36    # "procs":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;>;>;"
    :cond_53
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    if-eqz v4, :cond_56

    .line 19480
    if-eqz p6, :cond_54

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    move-object/from16 v0, p6

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_56

    .line 19481
    :cond_54
    if-eqz v9, :cond_55

    .line 19482
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19483
    const/4 v9, 0x0

    .line 19485
    :cond_55
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mOpenGlTraceApp="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19488
    :cond_56
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    if-nez v4, :cond_57

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    if-nez v4, :cond_57

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFile:Ljava/lang/String;

    if-nez v4, :cond_57

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    if-eqz v4, :cond_5a

    .line 19490
    :cond_57
    if-eqz p6, :cond_58

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    move-object/from16 v0, p6

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_5a

    .line 19491
    :cond_58
    if-eqz v9, :cond_59

    .line 19492
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19493
    const/4 v9, 0x0

    .line 19495
    :cond_59
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mProfileApp="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mProfileProc="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19496
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mProfileFile="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFile:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mProfileFd="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19497
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mSamplingInterval="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mSamplingInterval:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mAutoStopProfiler="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mAutoStopProfiler:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19499
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mProfileType="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19502
    :cond_5a
    if-nez p6, :cond_5d

    .line 19503
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    if-nez v4, :cond_5b

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    if-eqz v4, :cond_5c

    .line 19504
    :cond_5b
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mAlwaysFinishActivities="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mController="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19507
    :cond_5c
    if-eqz p5, :cond_5d

    .line 19508
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  Total persistent processes: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, v25

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19509
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mProcessesReady="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mSystemReady="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mBooted="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mFactoryTest="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19513
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mBooting="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mCallFinishBooting="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mBootAnimationComplete="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19516
    const-string v4, "  mLastPowerCheckRealtime="

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19517
    move-object/from16 v0, p0

    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckRealtime:J

    move-object/from16 v0, p2

    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 19518
    const-string v4, ""

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19519
    const-string v4, "  mLastPowerCheckUptime="

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19520
    move-object/from16 v0, p0

    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    move-object/from16 v0, p2

    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 19521
    const-string v4, ""

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19522
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mGoingToSleep="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v5, v5, Lcom/android/server/am/ActivityStackSupervisor;->mGoingToSleep:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19523
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mLaunchingActivity="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v5, v5, Lcom/android/server/am/ActivityStackSupervisor;->mLaunchingActivity:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19524
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mAdjSeq="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mLruSeq="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19525
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mNumNonCachedProcs="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " ("

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " total)"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mNumCachedHiddenProcs="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mNumServiceProcs="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mNewNumServiceProcs="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19530
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mAllowLowerMemLevel="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mLastMemoryLevel"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mLastNumProcesses"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mLastNumProcesses:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19533
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v26

    .line 19534
    .restart local v26    # "now":J
    const-string v4, "  mLastIdleTime="

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19535
    move-object/from16 v0, p0

    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    move-wide/from16 v0, v26

    move-object/from16 v2, p2

    invoke-static {v0, v1, v4, v5, v2}, Landroid/util/TimeUtils;->formatDuration(JJLjava/io/PrintWriter;)V

    .line 19536
    const-string v4, " mLowRamSinceLastIdle="

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19537
    move-object/from16 v0, p0

    move-wide/from16 v1, v26

    invoke-direct {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->getLowRamTimeSinceIdle(J)J

    move-result-wide v4

    move-object/from16 v0, p2

    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 19538
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 19542
    .end local v26    # "now":J
    :cond_5d
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  TRIM_EMPTY_APPS: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    sget v5, Lcom/android/server/am/ProcessList;->TRIM_EMPTY_APPS:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19543
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  TRIM_CACHED_APPS: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    sget v5, Lcom/android/server/am/ProcessList;->TRIM_CACHED_APPS:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19544
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  TRIM_CRITICAL_THRESHOLD: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    sget v5, Lcom/android/server/am/ProcessList;->TRIM_CRITICAL_THRESHOLD:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19545
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  TRIM_LOW_THRESHOLD: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    sget v5, Lcom/android/server/am/ProcessList;->TRIM_LOW_THRESHOLD:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19547
    if-nez v34, :cond_5e

    .line 19548
    const-string v4, "  (nothing)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19550
    :cond_5e
    return-void
.end method

.method dumpProcessesToGc(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)Z
    .locals 8
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "needSep"    # Z
    .param p6, "dumpAll"    # Z
    .param p7, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 19554
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-lez v5, :cond_3

    .line 19555
    const/4 v1, 0x0

    .line 19556
    .local v1, "printed":Z
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    .line 19557
    .local v2, "now":J
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-ge v0, v5, :cond_3

    .line 19558
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 19559
    .local v4, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz p7, :cond_0

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p7, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_0

    .line 19557
    :goto_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 19562
    :cond_0
    if-nez v1, :cond_2

    .line 19563
    if-eqz p5, :cond_1

    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 19564
    :cond_1
    const/4 p5, 0x1

    .line 19565
    const-string v5, "  Processes that are waiting to GC:"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19566
    const/4 v1, 0x1

    .line 19568
    :cond_2
    const-string v5, "    Process "

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19569
    const-string v5, "      lowMem="

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v5, v4, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Z)V

    .line 19570
    const-string v5, ", last gced="

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19571
    iget-wide v6, v4, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    sub-long v6, v2, v6

    invoke-virtual {p2, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 19572
    const-string v5, " ms ago, last lowMem="

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19573
    iget-wide v6, v4, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J

    sub-long v6, v2, v6

    invoke-virtual {p2, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 19574
    const-string v5, " ms ago"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_1

    .line 19578
    .end local v0    # "i":I
    .end local v1    # "printed":Z
    .end local v2    # "now":J
    .end local v4    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_3
    return p5
.end method

.method protected dumpProvider(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
    .locals 7
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "args"    # [Ljava/lang/String;
    .param p5, "opti"    # I
    .param p6, "dumpAll"    # Z

    .prologue
    .line 19656
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v4, p4

    move v5, p5

    move v6, p6

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ProviderMap;->dumpProvider(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result v0

    return v0
.end method

.method dumpProvidersLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 7
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 19928
    const/4 v4, 0x0

    .line 19930
    .local v4, "printedAnything":Z
    new-instance v1, Lcom/android/server/am/ActivityManagerService$ItemMatcher;

    invoke-direct {v1}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;-><init>()V

    .line 19931
    .local v1, "matcher":Lcom/android/server/am/ActivityManagerService$ItemMatcher;
    invoke-virtual {v1, p3, p4}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;->build([Ljava/lang/String;I)I

    .line 19933
    const-string v6, "ACTIVITY MANAGER CONTENT PROVIDERS (dumpsys activity providers)"

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19935
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v6, p2, p5, p6}, Lcom/android/server/am/ProviderMap;->dumpProvidersLocked(Ljava/io/PrintWriter;ZLjava/lang/String;)Z

    move-result v2

    .line 19936
    .local v2, "needSep":Z
    or-int/2addr v4, v2

    .line 19938
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v6

    if-lez v6, :cond_3

    .line 19939
    const/4 v3, 0x0

    .line 19940
    .local v3, "printed":Z
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v6

    add-int/lit8 v0, v6, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_3

    .line 19941
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ContentProviderRecord;

    .line 19942
    .local v5, "r":Lcom/android/server/am/ContentProviderRecord;
    if-eqz p6, :cond_0

    iget-object v6, v5, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {v6}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {p6, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_0

    .line 19940
    :goto_1
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 19945
    :cond_0
    if-nez v3, :cond_2

    .line 19946
    if-eqz v2, :cond_1

    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 19947
    :cond_1
    const/4 v2, 0x1

    .line 19948
    const-string v6, "  Launching content providers:"

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19949
    const/4 v3, 0x1

    .line 19950
    const/4 v4, 0x1

    .line 19952
    :cond_2
    const-string v6, "  Launching #"

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string v6, ": "

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19953
    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    goto :goto_1

    .line 19957
    .end local v0    # "i":I
    .end local v3    # "printed":Z
    .end local v5    # "r":Lcom/android/server/am/ContentProviderRecord;
    :cond_3
    if-nez v4, :cond_4

    .line 19958
    const-string v6, "  (nothing)"

    invoke-virtual {p2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19960
    :cond_4
    return-void
.end method

.method dumpRecentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 7
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 18965
    const-string v5, "ACTIVITY MANAGER RECENT TASKS (dumpsys activity recents)"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18967
    const/4 v2, 0x0

    .line 18969
    .local v2, "printedAnything":Z
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    if-eqz v5, :cond_3

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v5}, Lcom/android/server/am/RecentTasks;->size()I

    move-result v5

    if-lez v5, :cond_3

    .line 18970
    const/4 v3, 0x0

    .line 18972
    .local v3, "printedHeader":Z
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v5}, Lcom/android/server/am/RecentTasks;->size()I

    move-result v0

    .line 18973
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_3

    .line 18974
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v5, v1}, Lcom/android/server/am/RecentTasks;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/TaskRecord;

    .line 18975
    .local v4, "tr":Lcom/android/server/am/TaskRecord;
    if-eqz p6, :cond_1

    .line 18976
    iget-object v5, v4, Lcom/android/server/am/TaskRecord;->realActivity:Landroid/content/ComponentName;

    if-eqz v5, :cond_0

    iget-object v5, v4, Lcom/android/server/am/TaskRecord;->realActivity:Landroid/content/ComponentName;

    invoke-virtual {p6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_1

    .line 18973
    :cond_0
    :goto_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 18981
    :cond_1
    if-nez v3, :cond_2

    .line 18982
    const-string v5, "  Recent tasks:"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18983
    const/4 v3, 0x1

    .line 18984
    const/4 v2, 0x1

    .line 18986
    :cond_2
    const-string v5, "  * Recent #"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->print(I)V

    const-string v5, ": "

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18987
    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 18988
    if-eqz p5, :cond_0

    .line 18989
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v5, v1}, Lcom/android/server/am/RecentTasks;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/TaskRecord;

    const-string v6, "    "

    invoke-virtual {v5, p2, v6}, Lcom/android/server/am/TaskRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    goto :goto_1

    .line 18994
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v3    # "printedHeader":Z
    .end local v4    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_3
    if-nez v2, :cond_4

    .line 18995
    const-string v5, "  (nothing)"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 18997
    :cond_4
    return-void
.end method

.method public enableSafeMode()V
    .locals 3

    .prologue
    .line 29901
    const-string v1, "com.samsung.android.permission.ACCESS_SAFE_MODE"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    .line 29902
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: enableSafeMode() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "com.samsung.android.permission.ACCESS_SAFE_MODE"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 29904
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 29905
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 29907
    .end local v0    # "msg":Ljava/lang/String;
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v2, 0x3e8

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendEmptyMessage(I)Z

    .line 29908
    return-void
.end method

.method enableScreenAfterBoot()V
    .locals 1

    .prologue
    .line 9577
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowManagerService;->enableScreenAfterBoot()V

    .line 9579
    monitor-enter p0

    .line 9580
    :try_start_0
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->updateEventDispatchingLocked()V

    .line 9581
    monitor-exit p0

    .line 9582
    return-void

    .line 9581
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
    .locals 3
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "func"    # Ljava/lang/String;

    .prologue
    .line 11306
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-nez v1, :cond_0

    .line 11308
    return-void

    .line 11311
    :cond_0
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 11315
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11316
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method enforceNotIsolatedCaller(Ljava/lang/String;)V
    .locals 3
    .param p1, "caller"    # Ljava/lang/String;

    .prologue
    .line 5831
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-static {v0}, Landroid/os/UserHandle;->isIsolated(I)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 5832
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Isolated process not allowed to call "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5834
    :cond_0
    return-void
.end method

.method enforceShellRestriction(Ljava/lang/String;I)V
    .locals 3
    .param p1, "restriction"    # Ljava/lang/String;
    .param p2, "userHandle"    # I

    .prologue
    .line 5837
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x7d0

    if-ne v0, v1, :cond_1

    .line 5838
    if-ltz p2, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/pm/UserManagerService;->hasUserRestriction(Ljava/lang/String;I)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 5840
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Shell does not have permission to access user "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5844
    :cond_1
    return-void
.end method

.method final ensureBootCompleted()V
    .locals 4

    .prologue
    const/4 v1, 0x1

    const/4 v2, 0x0

    .line 10015
    monitor-enter p0

    .line 10016
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 10017
    .local v0, "booting":Z
    const/4 v3, 0x0

    iput-boolean v3, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 10018
    iget-boolean v3, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-nez v3, :cond_2

    .line 10019
    .local v1, "enableScreen":Z
    :goto_0
    const/4 v2, 0x1

    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    .line 10020
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10022
    if-eqz v0, :cond_0

    .line 10023
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->finishBooting()V

    .line 10026
    :cond_0
    if-eqz v1, :cond_1

    .line 10027
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->enableScreenAfterBoot()V

    .line 10029
    :cond_1
    return-void

    .end local v1    # "enableScreen":Z
    :cond_2
    move v1, v2

    .line 10018
    goto :goto_0

    .line 10020
    .end local v0    # "booting":Z
    :catchall_0
    move-exception v2

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v2
.end method

.method ensurePackageDexOpt(Ljava/lang/String;)V
    .locals 2
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    .line 4934
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    .line 4936
    .local v0, "pm":Landroid/content/pm/IPackageManager;
    const/4 v1, 0x0

    :try_start_0
    invoke-interface {v0, p1, v1}, Landroid/content/pm/IPackageManager;->performDexOptIfNeeded(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 4937
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mDidDexOpt:Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 4941
    :cond_0
    :goto_0
    return-void

    .line 4939
    :catch_0
    move-exception v1

    goto :goto_0
.end method

.method public final enterSafeMode()V
    .locals 1

    .prologue
    .line 16238
    monitor-enter p0

    .line 16241
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v0, :cond_0

    .line 16243
    :try_start_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    invoke-interface {v0}, Landroid/content/pm/IPackageManager;->enterSafeMode()V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 16248
    :cond_0
    :goto_0
    const/4 v0, 0x1

    :try_start_2
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSafeMode:Z

    .line 16249
    monitor-exit p0

    .line 16250
    return-void

    .line 16249
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v0

    .line 16244
    :catch_0
    move-exception v0

    goto :goto_0
.end method

.method public exchangeTaskToStack(IIZ)V
    .locals 8
    .param p1, "task1Id"    # I
    .param p2, "task2Id"    # I
    .param p3, "toTop"    # Z

    .prologue
    const/4 v2, 0x1

    const/4 v3, 0x0

    .line 13496
    const-string v4, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v5, "exchangeTaskToStack()"

    invoke-virtual {p0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13498
    monitor-enter p0

    .line 13499
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v0

    .line 13503
    .local v0, "ident":J
    :try_start_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4, p1, p2, p3}, Lcom/android/server/am/ActivityStackSupervisor;->exchangeTaskToStack(IIZ)V

    .line 13504
    const v4, 0x12c4b3

    const/4 v5, 0x3

    new-array v5, v5, [Ljava/lang/Object;

    const/4 v6, 0x0

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v5, v6

    const/4 v6, 0x1

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v5, v6

    const/4 v6, 0x2

    if-eqz p3, :cond_0

    :goto_0
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    aput-object v2, v5, v6

    invoke-static {v4, v5}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13506
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13508
    monitor-exit p0

    .line 13509
    return-void

    :cond_0
    move v2, v3

    .line 13504
    goto :goto_0

    .line 13506
    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .line 13508
    .end local v0    # "ident":J
    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v2
.end method

.method public exitByCloseBtn(I)V
    .locals 4
    .param p1, "taskId"    # I

    .prologue
    .line 13130
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v1

    .line 13131
    .local v1, "task":Lcom/android/server/am/TaskRecord;
    if-eqz v1, :cond_0

    .line 13132
    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Lcom/android/server/am/TaskRecord;->topRunningActivityLocked(Lcom/android/server/am/ActivityRecord;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 13133
    .local v0, "ar":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    .line 13135
    :try_start_0
    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    invoke-interface {v2, v3}, Landroid/app/IApplicationThread;->scheduleMultiWindowExitByCloseBtn(Landroid/os/IBinder;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 13140
    .end local v0    # "ar":Lcom/android/server/am/ActivityRecord;
    :cond_0
    :goto_0
    return-void

    .line 13136
    .restart local v0    # "ar":Lcom/android/server/am/ActivityRecord;
    :catch_0
    move-exception v2

    goto :goto_0
.end method

.method public final finishActivity(Landroid/os/IBinder;ILandroid/content/Intent;Z)Z
    .locals 17
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "resultCode"    # I
    .param p3, "resultData"    # Landroid/content/Intent;
    .param p4, "finishTask"    # Z

    .prologue
    .line 6993
    if-eqz p3, :cond_0

    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v2

    const/4 v3, 0x1

    if-ne v2, v3, :cond_0

    .line 6994
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "File descriptors passed in Intent"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 6997
    :cond_0
    monitor-enter p0

    .line 6998
    :try_start_0
    invoke-static/range {p1 .. p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v12

    .line 6999
    .local v12, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v12, :cond_1

    .line 7000
    const/4 v13, 0x1

    monitor-exit p0

    .line 7073
    :goto_0
    return v13

    .line 7003
    :cond_1
    iget-object v0, v12, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v16, v0

    .line 7004
    .local v16, "tr":Lcom/android/server/am/TaskRecord;
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/am/TaskRecord;->getRootActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v15

    .line 7005
    .local v15, "rootR":Lcom/android/server/am/ActivityRecord;
    if-nez v15, :cond_2

    .line 7006
    const-string v2, "ActivityManager"

    const-string v3, "Finishing task with all activities already finished"

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7010
    :cond_2
    move-object/from16 v0, v16

    iget v2, v0, Lcom/android/server/am/TaskRecord;->mLockTaskAuth:I

    const/4 v3, 0x4

    if-eq v2, v3, :cond_3

    if-ne v15, v12, :cond_3

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, v16

    invoke-virtual {v2, v0}, Lcom/android/server/am/ActivityStackSupervisor;->isLastLockedTask(Lcom/android/server/am/TaskRecord;)Z

    move-result v2

    if-eqz v2, :cond_3

    .line 7011
    const-string v2, "ActivityManager"

    const-string v3, "Not finishing task in lock task mode"

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 7012
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStackSupervisor;->showLockTaskToast()V

    .line 7013
    const/4 v13, 0x0

    monitor-exit p0

    goto :goto_0

    .line 7075
    .end local v12    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v15    # "rootR":Lcom/android/server/am/ActivityRecord;
    .end local v16    # "tr":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2

    .line 7034
    .restart local v12    # "r":Lcom/android/server/am/ActivityRecord;
    .restart local v15    # "rootR":Lcom/android/server/am/ActivityRecord;
    .restart local v16    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_3
    :try_start_1
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    if-eqz v2, :cond_4

    .line 7036
    iget-object v2, v12, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v2, v2, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    const/4 v3, 0x0

    move-object/from16 v0, p1

    invoke-virtual {v2, v0, v3}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Landroid/os/IBinder;I)Lcom/android/server/am/ActivityRecord;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-object v9

    .line 7037
    .local v9, "next":Lcom/android/server/am/ActivityRecord;
    if-eqz v9, :cond_4

    .line 7039
    const/4 v14, 0x1

    .line 7041
    .local v14, "resumeOK":Z
    :try_start_2
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    iget-object v3, v9, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-interface {v2, v3}, Landroid/app/IActivityController;->activityResuming(Ljava/lang/String;)Z
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-result v14

    .line 7047
    :goto_1
    if-nez v14, :cond_4

    .line 7048
    :try_start_3
    const-string v2, "ActivityManager"

    const-string v3, "Not finishing activity because controller resumed"

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 7049
    const/4 v13, 0x0

    monitor-exit p0

    goto :goto_0

    .line 7042
    :catch_0
    move-exception v8

    .line 7043
    .local v8, "e":Landroid/os/RemoteException;
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 7044
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v2

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/android/server/Watchdog;->setActivityController(Landroid/app/IActivityController;)V

    goto :goto_1

    .line 7053
    .end local v8    # "e":Landroid/os/RemoteException;
    .end local v9    # "next":Lcom/android/server/am/ActivityRecord;
    .end local v14    # "resumeOK":Z
    :cond_4
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-result-wide v10

    .line 7056
    .local v10, "origId":J
    if-eqz p4, :cond_6

    if-ne v12, v15, :cond_6

    .line 7060
    :try_start_4
    move-object/from16 v0, v16

    iget v2, v0, Lcom/android/server/am/TaskRecord;->taskId:I

    const/4 v3, 0x0

    const/4 v4, 0x1

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZZ)Z

    move-result v13

    .line 7061
    .local v13, "res":Z
    if-nez v13, :cond_5

    .line 7062
    const-string v2, "ActivityManager"

    const-string v3, "Removing task failed to finish activity"

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 7073
    :cond_5
    :goto_2
    :try_start_5
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    goto/16 :goto_0

    .line 7065
    .end local v13    # "res":Z
    :cond_6
    :try_start_6
    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    const-string v6, "app-request"

    const/4 v7, 0x1

    move-object/from16 v3, p1

    move/from16 v4, p2

    move-object/from16 v5, p3

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActivityStack;->requestFinishActivityLocked(Landroid/os/IBinder;ILandroid/content/Intent;Ljava/lang/String;Z)Z

    move-result v13

    .line 7067
    .restart local v13    # "res":Z
    if-nez v13, :cond_5

    .line 7068
    const-string v2, "ActivityManager"

    const-string v3, "Failed to finish by app-request"

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    goto :goto_2

    .line 7073
    .end local v13    # "res":Z
    :catchall_1
    move-exception v2

    :try_start_7
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0
.end method

.method public finishActivityAffinity(Landroid/os/IBinder;)Z
    .locals 7
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/4 v4, 0x0

    .line 7191
    monitor-enter p0

    .line 7192
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-wide v0

    .line 7194
    .local v0, "origId":J
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    move-result-object v2

    .line 7195
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v2, :cond_0

    .line 7223
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :goto_0
    return v4

    .line 7201
    :cond_0
    :try_start_3
    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    .line 7202
    .local v3, "task":Lcom/android/server/am/TaskRecord;
    iget v5, v3, Lcom/android/server/am/TaskRecord;->mLockTaskAuth:I

    const/4 v6, 0x4

    if-eq v5, v6, :cond_1

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v5, v3}, Lcom/android/server/am/ActivityStackSupervisor;->isLastLockedTask(Lcom/android/server/am/TaskRecord;)Z

    move-result v5

    if-eqz v5, :cond_1

    invoke-virtual {v3}, Lcom/android/server/am/TaskRecord;->getRootActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v5

    if-ne v5, v2, :cond_1

    .line 7204
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v5}, Lcom/android/server/am/ActivityStackSupervisor;->showLockTaskToast()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 7223
    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0

    goto :goto_0

    .line 7225
    .end local v0    # "origId":J
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v3    # "task":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    throw v4

    .line 7221
    .restart local v0    # "origId":J
    .restart local v2    # "r":Lcom/android/server/am/ActivityRecord;
    .restart local v3    # "task":Lcom/android/server/am/TaskRecord;
    :cond_1
    :try_start_5
    iget-object v4, v3, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v4, v2}, Lcom/android/server/am/ActivityStack;->finishActivityAffinityLocked(Lcom/android/server/am/ActivityRecord;)Z
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    move-result v4

    .line 7223
    :try_start_6
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0

    goto :goto_0

    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v3    # "task":Lcom/android/server/am/TaskRecord;
    :catchall_1
    move-exception v4

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0
.end method

.method final finishBooting()V
    .locals 40

    .prologue
    .line 9658
    monitor-enter p0

    .line 9659
    :try_start_0
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    if-nez v2, :cond_1

    .line 9660
    const/4 v2, 0x1

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 9661
    monitor-exit p0

    .line 9965
    :cond_0
    :goto_0
    return-void

    .line 9663
    :cond_1
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 9664
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 9666
    new-instance v24, Landroid/util/ArraySet;

    invoke-direct/range {v24 .. v24}, Landroid/util/ArraySet;-><init>()V

    .line 9667
    .local v24, "completedIsas":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    sget-object v23, Landroid/os/Build;->SUPPORTED_ABIS:[Ljava/lang/String;

    .local v23, "arr$":[Ljava/lang/String;
    move-object/from16 v0, v23

    array-length v0, v0

    move/from16 v32, v0

    .local v32, "len$":I
    const/16 v27, 0x0

    .local v27, "i$":I
    :goto_1
    move/from16 v0, v27

    move/from16 v1, v32

    if-ge v0, v1, :cond_4

    aget-object v21, v23, v27

    .line 9668
    .local v21, "abi":Ljava/lang/String;
    invoke-static/range {v21 .. v21}, Landroid/os/Process;->establishZygoteConnectionForAbi(Ljava/lang/String;)V

    .line 9669
    invoke-static/range {v21 .. v21}, Ldalvik/system/VMRuntime;->getInstructionSet(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v29

    .line 9670
    .local v29, "instructionSet":Ljava/lang/String;
    move-object/from16 v0, v24

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_3

    .line 9671
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mInstaller:Lcom/android/server/pm/Installer;

    invoke-static/range {v21 .. v21}, Ldalvik/system/VMRuntime;->getInstructionSet(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Lcom/android/server/pm/Installer;->markBootComplete(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_2

    .line 9672
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Unable to mark boot complete for abi: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, v21

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 9674
    :cond_2
    move-object/from16 v0, v24

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 9667
    :cond_3
    add-int/lit8 v27, v27, 0x1

    goto :goto_1

    .line 9664
    .end local v21    # "abi":Ljava/lang/String;
    .end local v23    # "arr$":[Ljava/lang/String;
    .end local v24    # "completedIsas":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    .end local v27    # "i$":I
    .end local v29    # "instructionSet":Ljava/lang/String;
    .end local v32    # "len$":I
    :catchall_0
    move-exception v2

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v2

    .line 9679
    .restart local v23    # "arr$":[Ljava/lang/String;
    .restart local v24    # "completedIsas":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    .restart local v27    # "i$":I
    .restart local v32    # "len$":I
    :cond_4
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    const/16 v3, 0x3e8

    invoke-virtual {v2, v3}, Lcom/android/server/SystemServiceManager;->startBootPhase(I)V

    .line 9682
    new-instance v39, Landroid/content/IntentFilter;

    invoke-direct/range {v39 .. v39}, Landroid/content/IntentFilter;-><init>()V

    .line 9683
    .local v39, "widgetFilter":Landroid/content/IntentFilter;
    const-string v2, "android.intent.WIDGETSSR.WIDGETADD"

    move-object/from16 v0, v39

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 9684
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v3, Lcom/android/server/am/ActivityManagerService$8;

    move-object/from16 v0, p0

    invoke-direct {v3, v0}, Lcom/android/server/am/ActivityManagerService$8;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    move-object/from16 v0, v39

    invoke-virtual {v2, v3, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 9707
    sget-boolean v2, Lcom/android/server/am/SmartAdjustManager;->SAMP_ENABLE:Z

    if-nez v2, :cond_5

    sget-boolean v2, Lcom/android/server/am/ActivityManagerService;->SHIP_BUILD:Z

    if-nez v2, :cond_5

    .line 9708
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v2}, Lcom/android/server/am/ProcessList;->updateDHAParameter()V

    .line 9711
    :cond_5
    new-instance v34, Landroid/content/IntentFilter;

    invoke-direct/range {v34 .. v34}, Landroid/content/IntentFilter;-><init>()V

    .line 9712
    .local v34, "pkgFilter":Landroid/content/IntentFilter;
    const-string v2, "android.intent.action.QUERY_PACKAGE_RESTART"

    move-object/from16 v0, v34

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 9713
    const-string/jumbo v2, "package"

    move-object/from16 v0, v34

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addDataScheme(Ljava/lang/String;)V

    .line 9714
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v3, Lcom/android/server/am/ActivityManagerService$9;

    move-object/from16 v0, p0

    invoke-direct {v3, v0}, Lcom/android/server/am/ActivityManagerService$9;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    move-object/from16 v0, v34

    invoke-virtual {v2, v3, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 9733
    new-instance v25, Landroid/content/IntentFilter;

    invoke-direct/range {v25 .. v25}, Landroid/content/IntentFilter;-><init>()V

    .line 9734
    .local v25, "dumpheapFilter":Landroid/content/IntentFilter;
    const-string v2, "com.android.server.am.DELETE_DUMPHEAP"

    move-object/from16 v0, v25

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 9735
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v3, Lcom/android/server/am/ActivityManagerService$10;

    move-object/from16 v0, p0

    invoke-direct {v3, v0}, Lcom/android/server/am/ActivityManagerService$10;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    move-object/from16 v0, v25

    invoke-virtual {v2, v3, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 9746
    const-string v2, "com.android.server.am.BROADCAST_DO_TRIM"

    move-object/from16 v0, v25

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 9747
    const-string v2, "com.android.server.am.BROADCAST_SET_TRIM_TH"

    move-object/from16 v0, v25

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 9748
    const-string v2, "com.android.server.am.BROADCAST_DHA_DEBUG_ON"

    move-object/from16 v0, v25

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 9749
    const-string v2, "com.android.server.am.BROADCAST_SET_DHA_PARAMETER"

    move-object/from16 v0, v25

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 9751
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v3, Lcom/android/server/am/ActivityManagerService$11;

    move-object/from16 v0, p0

    invoke-direct {v3, v0}, Lcom/android/server/am/ActivityManagerService$11;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    move-object/from16 v0, v25

    invoke-virtual {v2, v3, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 9820
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v2

    const-string v3, "CscFeature_Clock_EnableAutoPowerOnOffMenu"

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;Z)Z

    move-result v31

    .line 9821
    .local v31, "isEnabledAutoPowerOnAlarm":Z
    if-eqz v31, :cond_6

    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v3, 0x1

    if-eq v2, v3, :cond_6

    .line 9822
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v3, "power"

    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v35

    check-cast v35, Landroid/os/PowerManager;

    .line 9823
    .local v35, "pm":Landroid/os/PowerManager;
    if-eqz v35, :cond_7

    .line 9824
    const/4 v2, 0x1

    const-string v3, "BOOT_COMPLETED"

    move-object/from16 v0, v35

    invoke-virtual {v0, v2, v3}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    move-result-object v2

    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBootPartialWakeLock:Landroid/os/PowerManager$WakeLock;

    .line 9825
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBootPartialWakeLock:Landroid/os/PowerManager$WakeLock;

    if-eqz v2, :cond_6

    .line 9826
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBootPartialWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->acquire()V

    .line 9833
    .end local v35    # "pm":Landroid/os/PowerManager;
    :cond_6
    :goto_2
    monitor-enter p0

    .line 9836
    :try_start_2
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v20

    .line 9837
    .local v20, "NP":I
    if-lez v20, :cond_8

    .line 9838
    new-instance v36, Ljava/util/ArrayList;

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    move-object/from16 v0, v36

    invoke-direct {v0, v2}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 9840
    .local v36, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    const/16 v30, 0x0

    .local v30, "ip":I
    :goto_3
    move/from16 v0, v30

    move/from16 v1, v20

    if-ge v0, v1, :cond_8

    .line 9843
    move-object/from16 v0, v36

    move/from16 v1, v30

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    const-string/jumbo v3, "on-hold"

    const/4 v4, 0x0

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 9840
    add-int/lit8 v30, v30, 0x1

    goto :goto_3

    .line 9829
    .end local v20    # "NP":I
    .end local v30    # "ip":I
    .end local v36    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v35    # "pm":Landroid/os/PowerManager;
    :cond_7
    const-string v2, "ActivityManager"

    const-string v3, "!@ PowerManager Not Ready"

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    .line 9847
    .end local v35    # "pm":Landroid/os/PowerManager;
    .restart local v20    # "NP":I
    :cond_8
    :try_start_3
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v3, 0x1

    if-eq v2, v3, :cond_f

    .line 9849
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0x1b

    invoke-virtual {v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v33

    .line 9850
    .local v33, "nmsg":Landroid/os/Message;
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-wide/32 v6, 0xdbba0

    move-object/from16 v0, v33

    invoke-virtual {v2, v0, v6, v7}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 9852
    const-string/jumbo v2, "sys.boot_completed"

    const-string v3, "1"

    invoke-static {v2, v3}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 9855
    const-string/jumbo v2, "trigger_restart_min_framework"

    const-string/jumbo v3, "vold.decrypt"

    invoke-static {v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_9

    const-string v2, ""

    const-string/jumbo v3, "vold.encrypt_progress"

    invoke-static {v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_a

    .line 9857
    :cond_9
    const-string/jumbo v2, "dev.bootcomplete"

    const-string v3, "1"

    invoke-static {v2, v3}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 9859
    :cond_a
    const/16 v26, 0x0

    .local v26, "i":I
    :goto_4
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v2

    move/from16 v0, v26

    if-ge v0, v2, :cond_c

    .line 9860
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move/from16 v0, v26

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v38

    check-cast v38, Lcom/android/server/am/UserState;

    .line 9861
    .local v38, "uss":Lcom/android/server/am/UserState;
    move-object/from16 v0, v38

    iget v2, v0, Lcom/android/server/am/UserState;->mState:I

    if-nez v2, :cond_b

    .line 9862
    const/4 v2, 0x1

    move-object/from16 v0, v38

    iput v2, v0, Lcom/android/server/am/UserState;->mState:I

    .line 9863
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move/from16 v0, v26

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v18

    .line 9864
    .local v18, "userId":I
    new-instance v5, Landroid/content/Intent;

    const-string v2, "android.intent.action.BOOT_COMPLETED"

    const/4 v3, 0x0

    invoke-direct {v5, v2, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 9865
    .local v5, "intent":Landroid/content/Intent;
    const-string v2, "android.intent.extra.user_handle"

    move/from16 v0, v18

    invoke-virtual {v5, v2, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 9866
    const/high16 v2, 0x8000000

    invoke-virtual {v5, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 9867
    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v6, 0x0

    new-instance v7, Lcom/android/server/am/ActivityManagerService$12;

    move-object/from16 v0, p0

    invoke-direct {v7, v0}, Lcom/android/server/am/ActivityManagerService$12;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v2, 0x1

    new-array v11, v2, [Ljava/lang/String;

    const/4 v2, 0x0

    const-string v12, "android.permission.RECEIVE_BOOT_COMPLETED"

    aput-object v12, v11, v2

    const/4 v12, -0x1

    const/4 v13, 0x0

    const/4 v14, 0x1

    const/4 v15, 0x0

    sget v16, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v17, 0x3e8

    move-object/from16 v2, p0

    invoke-direct/range {v2 .. v18}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 9859
    .end local v5    # "intent":Landroid/content/Intent;
    .end local v18    # "userId":I
    :cond_b
    add-int/lit8 v26, v26, 0x1

    goto :goto_4

    .line 9890
    .end local v38    # "uss":Lcom/android/server/am/UserState;
    :cond_c
    :try_start_4
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    const/16 v3, 0x400

    invoke-interface {v2, v3}, Landroid/content/pm/IPackageManager;->getPersistentApplications(I)Ljava/util/List;

    move-result-object v22

    .line 9891
    .local v22, "apps":Ljava/util/List;
    if-eqz v22, :cond_e

    .line 9892
    invoke-interface/range {v22 .. v22}, Ljava/util/List;->size()I

    move-result v19

    .line 9894
    .local v19, "N":I
    const/16 v26, 0x0

    :goto_5
    move/from16 v0, v26

    move/from16 v1, v19

    if-ge v0, v1, :cond_e

    .line 9895
    move-object/from16 v0, v22

    move/from16 v1, v26

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v28

    check-cast v28, Landroid/content/pm/ApplicationInfo;

    .line 9896
    .local v28, "info":Landroid/content/pm/ApplicationInfo;
    if-eqz v28, :cond_d

    move-object/from16 v0, v28

    iget-boolean v2, v0, Landroid/content/pm/ApplicationInfo;->enabled:Z

    if-eqz v2, :cond_d

    move-object/from16 v0, v28

    iget-object v2, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const-string v3, "android"

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_d

    move-object/from16 v0, v28

    iget-object v2, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const-string/jumbo v3, "sec_container_"

    invoke-virtual {v2, v3}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v2

    if-nez v2, :cond_d

    .line 9899
    move-object/from16 v0, v28

    iget-object v2, v0, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    const-string v3, "com.android.phone"

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_d

    move-object/from16 v0, v28

    iget-object v2, v0, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    const-string v3, "com.android.nfc"

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_d

    move-object/from16 v0, v28

    iget-object v2, v0, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    const-string v3, "com.android.systemui"

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_d

    .line 9900
    const/4 v2, 0x0

    const/4 v3, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v28

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;ZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 9894
    :cond_d
    add-int/lit8 v26, v26, 0x1

    goto :goto_5

    .line 9905
    .end local v19    # "N":I
    .end local v22    # "apps":Ljava/util/List;
    .end local v28    # "info":Landroid/content/pm/ApplicationInfo;
    :catch_0
    move-exception v2

    .line 9908
    :cond_e
    :try_start_5
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->scheduleStartProfilesLocked()V

    .line 9910
    const/4 v6, 0x5

    const/4 v7, 0x2

    const/4 v8, 0x1

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v9

    const-string v10, "ActivityManagerService"

    const-string v11, "Android boot completed"

    invoke-static/range {v6 .. v11}, Landroid/sec/enterprise/auditlog/AuditLog;->log(IIZILjava/lang/String;Ljava/lang/String;)V

    .line 9917
    .end local v26    # "i":I
    .end local v33    # "nmsg":Landroid/os/Message;
    :cond_f
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v2

    const-string v3, "CscFeature_Common_SupportDeviceReporting"

    invoke-virtual {v2, v3}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_10

    .line 9918
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-static {v2, v3}, Lcom/android/server/am/AppStateBroadcaster;->enableIntentBroadcast(Landroid/content/Context;Lcom/android/internal/app/ProcessMap;)V

    .line 9920
    :cond_10
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 9922
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->isSNNEnabled()Z

    move-result v2

    if-eqz v2, :cond_11

    .line 9923
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBgHandler:Landroid/os/Handler;

    const/4 v3, 0x2

    move-object/from16 v0, p0

    iget-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->SNN_CPU_COLLECT_DATA_INTERVAL:J

    invoke-virtual {v2, v3, v6, v7}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 9924
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBgHandler:Landroid/os/Handler;

    const/4 v3, 0x3

    move-object/from16 v0, p0

    iget-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->SNN_CPU_COLLECT_DATA_INTERVAL:J

    const-wide/16 v8, 0xc

    mul-long/2addr v6, v8

    const-wide/16 v8, 0xe10

    mul-long/2addr v6, v8

    invoke-virtual {v2, v3, v6, v7}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 9927
    :cond_11
    const-string v2, "ActivityManager"

    const-string v3, "!@Boot: bootcomplete"

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9930
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->upDateWidgetList()V

    .line 9933
    new-instance v6, Lcom/android/server/am/ActivityManagerService$13;

    const-wide/32 v8, 0x927c0

    const-wide/32 v10, 0x927c0

    move-object/from16 v7, p0

    invoke-direct/range {v6 .. v11}, Lcom/android/server/am/ActivityManagerService$13;-><init>(Lcom/android/server/am/ActivityManagerService;JJ)V

    invoke-virtual {v6}, Lcom/android/server/am/ActivityManagerService$13;->start()Landroid/os/CountDownTimer;

    move-result-object v37

    .line 9944
    .local v37, "setMaxStartingBackgroundTimer":Landroid/os/CountDownTimer;
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mSmartAdjustManager:Lcom/android/server/am/SmartAdjustManager;

    if-eqz v2, :cond_12

    .line 9945
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mSmartAdjustManager:Lcom/android/server/am/SmartAdjustManager;

    invoke-virtual {v2}, Lcom/android/server/am/SmartAdjustManager;->updateProperty()V

    .line 9950
    :cond_12
    sget-boolean v2, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    if-eqz v2, :cond_13

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    if-eqz v2, :cond_13

    .line 9951
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    invoke-virtual {v2}, Lcom/android/server/am/MARsPolicyManager;->init()V

    .line 9961
    :cond_13
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->SUPPORT_APPLOCK:Z

    if-eqz v2, :cond_0

    .line 9962
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-static {v2, v3}, Lcom/android/internal/app/AppLockPolicy;->getInstance(Landroid/content/Context;Landroid/os/Handler;)Lcom/android/internal/app/AppLockPolicy;

    move-result-object v2

    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

    goto/16 :goto_0

    .line 9920
    .end local v20    # "NP":I
    .end local v37    # "setMaxStartingBackgroundTimer":Landroid/os/CountDownTimer;
    :catchall_1
    move-exception v2

    :try_start_6
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    throw v2
.end method

.method public final finishHeavyWeightApp()V
    .locals 9

    .prologue
    .line 7080
    const-string v0, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_0

    .line 7082
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: finishHeavyWeightApp() from pid="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v2, ", uid="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v2, " requires "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v2, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    .line 7086
    .local v8, "msg":Ljava/lang/String;
    const-string v0, "ActivityManager"

    invoke-static {v0, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7087
    new-instance v0, Ljava/lang/SecurityException;

    invoke-direct {v0, v8}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 7090
    .end local v8    # "msg":Ljava/lang/String;
    :cond_0
    monitor-enter p0

    .line 7091
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-nez v0, :cond_1

    .line 7092
    monitor-exit p0

    .line 7108
    :goto_0
    return-void

    .line 7095
    :cond_1
    new-instance v6, Ljava/util/ArrayList;

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-direct {v6, v0}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 7096
    .local v6, "activities":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityRecord;>;"
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_1
    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-ge v7, v0, :cond_3

    .line 7097
    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ActivityRecord;

    .line 7098
    .local v1, "r":Lcom/android/server/am/ActivityRecord;
    iget-boolean v0, v1, Lcom/android/server/am/ActivityRecord;->finishing:Z

    if-nez v0, :cond_2

    invoke-virtual {v1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked()Z

    move-result v0

    if-eqz v0, :cond_2

    .line 7099
    iget-object v0, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    const/4 v2, 0x0

    const/4 v3, 0x0

    const-string/jumbo v4, "finish-heavy"

    const/4 v5, 0x1

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityStack;->finishActivityLocked(Lcom/android/server/am/ActivityRecord;ILandroid/content/Intent;Ljava/lang/String;Z)Z

    .line 7096
    :cond_2
    add-int/lit8 v7, v7, 0x1

    goto :goto_1

    .line 7104
    .end local v1    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_3
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0x19

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget v4, v4, Lcom/android/server/am/ProcessRecord;->userId:I

    const/4 v5, 0x0

    invoke-virtual {v2, v3, v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v2

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 7106
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    .line 7107
    monitor-exit p0

    goto :goto_0

    .end local v6    # "activities":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityRecord;>;"
    .end local v7    # "i":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public finishInstrumentation(Landroid/app/IApplicationThread;ILandroid/os/Bundle;)V
    .locals 7
    .param p1, "target"    # Landroid/app/IApplicationThread;
    .param p2, "resultCode"    # I
    .param p3, "results"    # Landroid/os/Bundle;

    .prologue
    .line 23917
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v1

    .line 23919
    .local v1, "userId":I
    if-eqz p3, :cond_0

    invoke-virtual {p3}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v4

    if-eqz v4, :cond_0

    .line 23920
    new-instance v4, Ljava/lang/IllegalArgumentException;

    const-string v5, "File descriptors passed in Intent"

    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 23923
    :cond_0
    monitor-enter p0

    .line 23924
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 23925
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    if-nez v0, :cond_1

    .line 23926
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "finishInstrumentation: no app for "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 23927
    monitor-exit p0

    .line 23933
    :goto_0
    return-void

    .line 23929
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 23930
    .local v2, "origId":J
    invoke-virtual {p0, v0, p2, p3}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V

    .line 23931
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 23932
    monitor-exit p0

    goto :goto_0

    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v2    # "origId":J
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v4
.end method

.method finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V
    .locals 10
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "resultCode"    # I
    .param p3, "results"    # Landroid/os/Bundle;

    .prologue
    const/4 v5, 0x1

    const/4 v3, 0x0

    const/4 v4, 0x0

    .line 23885
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instrumentationWatcher:Landroid/app/IInstrumentationWatcher;

    if-eqz v0, :cond_0

    .line 23888
    :try_start_0
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instrumentationWatcher:Landroid/app/IInstrumentationWatcher;

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    invoke-interface {v0, v1, p2, p3}, Landroid/app/IInstrumentationWatcher;->instrumentationFinished(Landroid/content/ComponentName;ILandroid/os/Bundle;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 23897
    :cond_0
    :goto_0
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instrumentationUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    if-eqz v0, :cond_1

    .line 23898
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x39

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->instrumentationUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v0

    invoke-virtual {v0}, Landroid/os/Message;->sendToTarget()V

    .line 23902
    :cond_1
    iput-object v4, p1, Lcom/android/server/am/ProcessRecord;->instrumentationWatcher:Landroid/app/IInstrumentationWatcher;

    .line 23903
    iput-object v4, p1, Lcom/android/server/am/ProcessRecord;->instrumentationUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    .line 23904
    iput-object v4, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    .line 23905
    iput-object v4, p1, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;

    .line 23906
    iput-object v4, p1, Lcom/android/server/am/ProcessRecord;->instrumentationProfileFile:Ljava/lang/String;

    .line 23907
    iput-object v4, p1, Lcom/android/server/am/ProcessRecord;->instrumentationArguments:Landroid/os/Bundle;

    .line 23909
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    if-eqz v0, :cond_2

    .line 23910
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v2, -0x1

    iget v8, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    const-string/jumbo v9, "finished inst"

    move-object v0, p0

    move v4, v3

    move v6, v5

    move v7, v3

    invoke-direct/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 23913
    :cond_2
    return-void

    .line 23892
    :catch_0
    move-exception v0

    goto :goto_0
.end method

.method public finishReceiver(Landroid/os/IBinder;ILjava/lang/String;Landroid/os/Bundle;ZI)V
    .locals 17
    .param p1, "who"    # Landroid/os/IBinder;
    .param p2, "resultCode"    # I
    .param p3, "resultData"    # Ljava/lang/String;
    .param p4, "resultExtras"    # Landroid/os/Bundle;
    .param p5, "resultAbort"    # Z
    .param p6, "queueIndex"    # I

    .prologue
    .line 23713
    if-eqz p4, :cond_0

    invoke-virtual/range {p4 .. p4}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 23714
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v4, "File descriptors passed in Bundle"

    invoke-direct {v2, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 23717
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v14

    .line 23719
    .local v14, "origId":J
    const/4 v10, 0x0

    .line 23720
    .local v10, "doNext":Z
    const/4 v3, 0x0

    .line 23722
    .local v3, "r":Lcom/android/server/am/BroadcastRecord;
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 23732
    add-int/lit8 v11, p6, -0x1

    .line 23733
    .local v11, "idx":I
    if-ltz v11, :cond_6

    :try_start_1
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v2, v2

    if-ge v11, v2, :cond_6

    .line 23734
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    aget-object v13, v2, v11

    .line 23735
    .local v13, "queue":Lcom/android/server/am/BroadcastQueue;
    move-object/from16 v0, p1

    invoke-virtual {v13, v0}, Lcom/android/server/am/BroadcastQueue;->getMatchingOrderedReceiver(Landroid/os/IBinder;)Lcom/android/server/am/BroadcastRecord;

    move-result-object v3

    .line 23736
    if-nez v3, :cond_1

    invoke-static {}, Landroid/os/Debug;->isProductShip()I

    move-result v2

    if-nez v2, :cond_1

    .line 23738
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->broadcastRecordForReceiverLocked(Landroid/os/IBinder;)Lcom/android/server/am/BroadcastRecord;

    move-result-object v12

    .line 23739
    .local v12, "legacyResult":Lcom/android/server/am/BroadcastRecord;
    const-string v2, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "[NO_ERROR] no matching finished receiver[r==null]. queueIndex("

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p6

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ")"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " receiver("

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ")"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " [legacy] : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 23749
    .end local v12    # "legacyResult":Lcom/android/server/am/BroadcastRecord;
    .end local v13    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_1
    :goto_0
    if-eqz v3, :cond_2

    .line 23750
    iget-object v2, v3, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    const/4 v8, 0x1

    move/from16 v4, p2

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move/from16 v7, p5

    invoke-virtual/range {v2 .. v8}, Lcom/android/server/am/BroadcastQueue;->finishReceiverLocked(Lcom/android/server/am/BroadcastRecord;ILjava/lang/String;Landroid/os/Bundle;ZZ)Z

    move-result v10

    .line 23753
    :cond_2
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 23755
    if-eqz v10, :cond_8

    .line 23758
    :try_start_2
    const-string v2, "android.intent.action.BOOT_COMPLETED"

    iget-object v4, v3, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v4}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v2, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_4

    .line 23759
    monitor-enter p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 23760
    :try_start_3
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mSplitStart:Z

    if-nez v2, :cond_3

    const-string v2, "background"

    iget-object v4, v3, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    iget-object v4, v4, Lcom/android/server/am/BroadcastQueue;->mQueueName:Ljava/lang/String;

    invoke-virtual {v2, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_3

    iget-boolean v2, v3, Lcom/android/server/am/BroadcastRecord;->splitCheck:Z

    if-eqz v2, :cond_3

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, Lcom/android/server/am/ActivityManagerService;->isSplitIntentLocked(Lcom/android/server/am/BroadcastRecord;)Z

    move-result v2

    if-eqz v2, :cond_3

    iget-boolean v2, v3, Lcom/android/server/am/BroadcastRecord;->ordered:Z

    iget-object v4, v3, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;

    invoke-static {v2, v4}, Lcom/android/server/am/BroadcastQueue;->isDeferrable(ZLandroid/content/Intent;)Z

    move-result v2

    if-nez v2, :cond_3

    .line 23763
    move-object/from16 v0, p0

    invoke-direct {v0, v3}, Lcom/android/server/am/ActivityManagerService;->startSplitIntentLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 23765
    :cond_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    .line 23770
    :cond_4
    :try_start_4
    iget-object v2, v3, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->getSluggishDelay(Lcom/android/server/am/BroadcastQueue;)I

    move-result v9

    .line 23771
    .local v9, "delay":I
    const/16 v16, 0x0

    .line 23772
    .local v16, "trimmed":Z
    if-gtz v9, :cond_7

    .line 23774
    iget-object v2, v3, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    const/4 v4, 0x0

    const/4 v5, 0x1

    invoke-virtual {v2, v4, v5}, Lcom/android/server/am/BroadcastQueue;->processNextBroadcast(ZZ)Z

    move-result v16

    .line 23778
    :goto_1
    if-nez v16, :cond_5

    .line 23779
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->trimApplications()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 23786
    .end local v9    # "delay":I
    .end local v16    # "trimmed":Z
    :cond_5
    :goto_2
    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 23788
    return-void

    .line 23742
    :cond_6
    :try_start_5
    invoke-static {}, Landroid/os/Debug;->isProductShip()I

    move-result v2

    if-nez v2, :cond_1

    .line 23744
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->broadcastRecordForReceiverLocked(Landroid/os/IBinder;)Lcom/android/server/am/BroadcastRecord;

    move-result-object v12

    .line 23745
    .restart local v12    # "legacyResult":Lcom/android/server/am/BroadcastRecord;
    const-string v2, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "[NO_ERROR] no matching queue index. queueIndex("

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p6

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ")"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " receiver("

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ")"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " [legacy] : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_0

    .line 23753
    .end local v12    # "legacyResult":Lcom/android/server/am/BroadcastRecord;
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    throw v2
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 23786
    .end local v11    # "idx":I
    :catchall_1
    move-exception v2

    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .line 23765
    .restart local v11    # "idx":I
    :catchall_2
    move-exception v2

    :try_start_7
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    :try_start_8
    throw v2

    .line 23776
    .restart local v9    # "delay":I
    .restart local v16    # "trimmed":Z
    :cond_7
    iget-object v2, v3, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    int-to-long v4, v9

    invoke-virtual {v2, v4, v5}, Lcom/android/server/am/BroadcastQueue;->scheduleBroadcastsLocked(J)V

    goto :goto_1

    .line 23783
    .end local v9    # "delay":I
    .end local v16    # "trimmed":Z
    :cond_8
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->trimApplications()V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    goto :goto_2
.end method

.method finishRunningVoiceLocked()V
    .locals 1

    .prologue
    .line 15273
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz v0, :cond_0

    .line 15274
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    .line 15275
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->release()V

    .line 15276
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateSleepIfNeededLocked()V

    .line 15278
    :cond_0
    return-void
.end method

.method public final finishSubActivity(Landroid/os/IBinder;Ljava/lang/String;I)V
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "resultWho"    # Ljava/lang/String;
    .param p3, "requestCode"    # I

    .prologue
    .line 7170
    monitor-enter p0

    .line 7171
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 7172
    .local v0, "origId":J
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 7173
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v2, :cond_0

    .line 7174
    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v3, v3, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v3, v2, p2, p3}, Lcom/android/server/am/ActivityStack;->finishSubActivityLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;I)V

    .line 7185
    :cond_0
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7186
    monitor-exit p0

    .line 7187
    return-void

    .line 7186
    .end local v0    # "origId":J
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v3
.end method

.method finishUserBoot(Lcom/android/server/am/UserState;)V
    .locals 18
    .param p1, "uss"    # Lcom/android/server/am/UserState;

    .prologue
    .line 27953
    monitor-enter p0

    .line 27954
    :try_start_0
    move-object/from16 v0, p1

    iget v1, v0, Lcom/android/server/am/UserState;->mState:I

    if-nez v1, :cond_0

    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/UserState;->mHandle:Landroid/os/UserHandle;

    invoke-virtual {v2}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v2

    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    move-object/from16 v0, p1

    if-ne v1, v0, :cond_0

    .line 27956
    const/4 v1, 0x1

    move-object/from16 v0, p1

    iput v1, v0, Lcom/android/server/am/UserState;->mState:I

    .line 27957
    move-object/from16 v0, p1

    iget-object v1, v0, Lcom/android/server/am/UserState;->mHandle:Landroid/os/UserHandle;

    invoke-virtual {v1}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v17

    .line 27958
    .local v17, "userId":I
    new-instance v4, Landroid/content/Intent;

    const-string v1, "android.intent.action.BOOT_COMPLETED"

    const/4 v2, 0x0

    invoke-direct {v4, v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 27959
    .local v4, "intent":Landroid/content/Intent;
    const-string v1, "android.intent.extra.user_handle"

    move/from16 v0, v17

    invoke-virtual {v4, v1, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 27960
    const/high16 v1, 0x8000000

    invoke-virtual {v4, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 27961
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v1, 0x1

    new-array v10, v1, [Ljava/lang/String;

    const/4 v1, 0x0

    const-string v11, "android.permission.RECEIVE_BOOT_COMPLETED"

    aput-object v11, v10, v1

    const/4 v11, -0x1

    const/4 v12, 0x0

    const/4 v13, 0x1

    const/4 v14, 0x0

    sget v15, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v16, 0x3e8

    move-object/from16 v1, p0

    invoke-direct/range {v1 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 27967
    .end local v4    # "intent":Landroid/content/Intent;
    .end local v17    # "userId":I
    :cond_0
    monitor-exit p0

    .line 27968
    return-void

    .line 27967
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method finishUserStop(Lcom/android/server/am/UserState;)V
    .locals 8
    .param p1, "uss"    # Lcom/android/server/am/UserState;

    .prologue
    .line 28139
    iget-object v5, p1, Lcom/android/server/am/UserState;->mHandle:Landroid/os/UserHandle;

    invoke-virtual {v5}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v3

    .line 28142
    .local v3, "userId":I
    monitor-enter p0

    .line 28143
    :try_start_0
    new-instance v0, Ljava/util/ArrayList;

    iget-object v5, p1, Lcom/android/server/am/UserState;->mStopCallbacks:Ljava/util/ArrayList;

    invoke-direct {v0, v5}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 28144
    .local v0, "callbacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IStopUserCallback;>;"
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v5, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v5

    if-eq v5, p1, :cond_1

    .line 28145
    const/4 v2, 0x0

    .line 28169
    .local v2, "stopped":Z
    :cond_0
    :goto_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v5, v3}, Lcom/android/server/am/RecentTasks;->removeTasksForUserLocked(I)V

    .line 28170
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 28172
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_1
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-ge v1, v5, :cond_4

    .line 28174
    if-eqz v2, :cond_3

    :try_start_1
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/app/IStopUserCallback;

    invoke-interface {v5, v3}, Landroid/app/IStopUserCallback;->userStopped(I)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 28172
    :goto_2
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 28146
    .end local v1    # "i":I
    .end local v2    # "stopped":Z
    :cond_1
    :try_start_2
    iget v5, p1, Lcom/android/server/am/UserState;->mState:I

    const/4 v6, 0x3

    if-eq v5, v6, :cond_2

    .line 28147
    const/4 v2, 0x0

    .restart local v2    # "stopped":Z
    goto :goto_0

    .line 28149
    .end local v2    # "stopped":Z
    :cond_2
    const/4 v2, 0x1

    .line 28151
    .restart local v2    # "stopped":Z
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v5, v3}, Landroid/util/SparseArray;->remove(I)V

    .line 28152
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 28153
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->updateStartedUserArrayLocked()V

    .line 28157
    const-string/jumbo v5, "finish user"

    invoke-direct {p0, v3, v5}, Lcom/android/server/am/ActivityManagerService;->forceStopUserLocked(ILjava/lang/String;)V

    .line 28159
    invoke-static {}, Landroid/os/PersonaManager;->getKnoxInfo()Landroid/os/Bundle;

    move-result-object v4

    .line 28160
    .local v4, "versionInfo":Landroid/os/Bundle;
    const-string v5, "2.0"

    const-string/jumbo v6, "version"

    invoke-virtual {v4, v6}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_0

    .line 28161
    const/16 v5, 0x64

    if-lt v3, v5, :cond_0

    const/16 v5, 0xc8

    if-gt v3, v5, :cond_0

    .line 28162
    const-string v5, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "clear ordered broadcast queues for persona "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 28163
    invoke-direct {p0, v3}, Lcom/android/server/am/ActivityManagerService;->clearOrderedBroadcastQueues(I)V

    goto :goto_0

    .line 28170
    .end local v0    # "callbacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IStopUserCallback;>;"
    .end local v2    # "stopped":Z
    .end local v4    # "versionInfo":Landroid/os/Bundle;
    :catchall_0
    move-exception v5

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v5

    .line 28175
    .restart local v0    # "callbacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IStopUserCallback;>;"
    .restart local v1    # "i":I
    .restart local v2    # "stopped":Z
    :cond_3
    :try_start_3
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/app/IStopUserCallback;

    invoke-interface {v5, v3}, Landroid/app/IStopUserCallback;->userStopAborted(I)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0

    goto :goto_2

    .line 28176
    :catch_0
    move-exception v5

    goto :goto_2

    .line 28180
    :cond_4
    if-eqz v2, :cond_5

    .line 28181
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    invoke-virtual {v5, v3}, Lcom/android/server/SystemServiceManager;->cleanupUser(I)V

    .line 28182
    monitor-enter p0

    .line 28183
    :try_start_4
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v5, v3}, Lcom/android/server/am/ActivityStackSupervisor;->removeUserLocked(I)V

    .line 28184
    monitor-exit p0

    .line 28192
    :cond_5
    return-void

    .line 28184
    :catchall_1
    move-exception v5

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v5
.end method

.method finishUserSwitch(Lcom/android/server/am/UserState;)V
    .locals 7
    .param p1, "uss"    # Lcom/android/server/am/UserState;

    .prologue
    const/4 v6, 0x3

    .line 27971
    monitor-enter p0

    .line 27972
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->finishUserBoot(Lcom/android/server/am/UserState;)V

    .line 27974
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->startProfilesLocked()V

    .line 27976
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 27977
    .local v1, "num":I
    const/4 v0, 0x0

    .line 27978
    .local v0, "i":I
    :goto_0
    if-le v1, v6, :cond_5

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-ge v0, v4, :cond_5

    .line 27979
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Integer;

    .line 27980
    .local v2, "oldUserId":Ljava/lang/Integer;
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v5

    invoke-virtual {v4, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/UserState;

    .line 27981
    .local v3, "oldUss":Lcom/android/server/am/UserState;
    if-nez v3, :cond_0

    .line 27983
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 27984
    add-int/lit8 v1, v1, -0x1

    .line 27985
    goto :goto_0

    .line 27987
    :cond_0
    iget v4, v3, Lcom/android/server/am/UserState;->mState:I

    const/4 v5, 0x2

    if-eq v4, v5, :cond_1

    iget v4, v3, Lcom/android/server/am/UserState;->mState:I

    if-ne v4, v6, :cond_2

    .line 27990
    :cond_1
    add-int/lit8 v1, v1, -0x1

    .line 27991
    add-int/lit8 v0, v0, 0x1

    .line 27992
    goto :goto_0

    .line 27995
    :cond_2
    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v4

    if-eqz v4, :cond_3

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v4

    iget v5, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    if-eq v4, v5, :cond_3

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v4

    invoke-static {v4}, Landroid/os/PersonaManager;->isBBCContainer(I)Z

    move-result v4

    if-eqz v4, :cond_4

    .line 28001
    :cond_3
    add-int/lit8 v0, v0, 0x1

    .line 28002
    goto :goto_0

    .line 28005
    :cond_4
    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v4

    const/4 v5, 0x0

    invoke-direct {p0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->stopUserLocked(ILandroid/app/IStopUserCallback;)I

    .line 28006
    add-int/lit8 v1, v1, -0x1

    .line 28007
    add-int/lit8 v0, v0, 0x1

    .line 28008
    goto :goto_0

    .line 28009
    .end local v2    # "oldUserId":Ljava/lang/Integer;
    .end local v3    # "oldUss":Lcom/android/server/am/UserState;
    :cond_5
    monitor-exit p0

    .line 28010
    return-void

    .line 28009
    .end local v0    # "i":I
    .end local v1    # "num":I
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v4
.end method

.method public finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V
    .locals 3
    .param p1, "session"    # Landroid/service/voice/IVoiceInteractionSession;

    .prologue
    .line 7230
    monitor-enter p0

    .line 7231
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v0

    .line 7233
    .local v0, "origId":J
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 7235
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7237
    monitor-exit p0

    .line 7239
    return-void

    .line 7235
    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .line 7237
    .end local v0    # "origId":J
    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v2
.end method

.method public forceStopPackage(Ljava/lang/String;I)V
    .locals 23
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I

    .prologue
    .line 8359
    const-string v2, "android.permission.FORCE_STOP_PACKAGES"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_0

    .line 8361
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Permission Denial: forceStopPackage() from pid="

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v4, ", uid="

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v4, " requires "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v4, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v20

    .line 8365
    .local v20, "msg":Ljava/lang/String;
    const-string v2, "ActivityManager"

    move-object/from16 v0, v20

    invoke-static {v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8366
    new-instance v2, Ljava/lang/SecurityException;

    move-object/from16 v0, v20

    invoke-direct {v2, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 8368
    .end local v20    # "msg":Ljava/lang/String;
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    .line 8369
    .local v3, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v16

    .line 8370
    .local v16, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    const/4 v6, 0x1

    const/4 v7, 0x2

    const-string/jumbo v8, "forceStopPackage"

    const/4 v9, 0x0

    move-object/from16 v2, p0

    move/from16 v5, p2

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    .line 8372
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v14

    .line 8374
    .local v14, "callingId":J
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v21

    .line 8375
    .local v21, "pm":Landroid/content/pm/IPackageManager;
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8376
    const/4 v2, -0x1

    move/from16 v0, p2

    if-ne v0, v2, :cond_2

    :try_start_1
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getUsersLocked()[I

    move-result-object v22

    .line 8378
    .local v22, "users":[I
    :goto_0
    move-object/from16 v13, v22

    .local v13, "arr$":[I
    array-length v0, v13

    move/from16 v19, v0

    .local v19, "len$":I
    const/16 v18, 0x0

    .local v18, "i$":I
    :goto_1
    move/from16 v0, v18

    move/from16 v1, v19

    if-ge v0, v1, :cond_6

    aget v6, v13, v18

    .line 8379
    .local v6, "user":I
    const/4 v11, -0x1

    .line 8381
    .local v11, "pkgUid":I
    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    move-object/from16 v4, p0

    move-object/from16 v5, p1

    invoke-direct/range {v4 .. v9}, Lcom/android/server/am/ActivityManagerService;->isForceStopDisabled(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_3

    .line 8378
    :cond_1
    :goto_2
    add-int/lit8 v18, v18, 0x1

    goto :goto_1

    .line 8376
    .end local v6    # "user":I
    .end local v11    # "pkgUid":I
    .end local v13    # "arr$":[I
    .end local v18    # "i$":I
    .end local v19    # "len$":I
    .end local v22    # "users":[I
    :cond_2
    const/4 v2, 0x1

    new-array v0, v2, [I

    move-object/from16 v22, v0

    const/4 v2, 0x0

    aput p2, v22, v2

    goto :goto_0

    .line 8414
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    throw v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 8416
    .end local v21    # "pm":Landroid/content/pm/IPackageManager;
    :catchall_1
    move-exception v2

    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .line 8386
    .restart local v6    # "user":I
    .restart local v11    # "pkgUid":I
    .restart local v13    # "arr$":[I
    .restart local v18    # "i$":I
    .restart local v19    # "len$":I
    .restart local v21    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v22    # "users":[I
    :cond_3
    :try_start_3
    move-object/from16 v0, v21

    move-object/from16 v1, p1

    invoke-interface {v0, v1, v6}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_2
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-result v11

    .line 8389
    :goto_3
    const/4 v2, -0x1

    if-ne v11, v2, :cond_4

    .line 8390
    :try_start_4
    const-string v2, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Invalid packageName: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    .line 8393
    :cond_4
    move-object/from16 v0, p0

    invoke-direct {v0, v6}, Lcom/android/server/am/ActivityManagerService;->isKnox(I)Z

    move-result v2

    if-eqz v2, :cond_5

    invoke-static/range {v16 .. v16}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    if-eq v6, v2, :cond_5

    invoke-static {}, Landroid/os/Process;->myPid()I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    move-result v2

    if-eq v3, v2, :cond_5

    .line 8395
    const/4 v2, -0x1

    if-eq v11, v2, :cond_5

    .line 8396
    :try_start_5
    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;

    move-result-object v7

    const-string/jumbo v12, "forceStopPackage"

    move v8, v3

    move/from16 v9, v16

    move-object/from16 v10, p1

    invoke-interface/range {v7 .. v12}, Landroid/app/IActivityManager;->checkKnoxPermission(IILjava/lang/String;ILjava/lang/String;)Z
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_0
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 8404
    :cond_5
    :goto_4
    const/4 v2, 0x1

    :try_start_6
    move-object/from16 v0, v21

    move-object/from16 v1, p1

    invoke-interface {v0, v1, v2, v6}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;ZI)V
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_3
    .catch Ljava/lang/IllegalArgumentException; {:try_start_6 .. :try_end_6} :catch_1
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    .line 8410
    :goto_5
    const/4 v2, 0x0

    :try_start_7
    move-object/from16 v0, p0

    invoke-virtual {v0, v6, v2}, Lcom/android/server/am/ActivityManagerService;->isUserRunningLocked(IZ)Z

    move-result v2

    if-eqz v2, :cond_1

    .line 8411
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "from pid "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v1, v11, v2}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;ILjava/lang/String;)V

    goto/16 :goto_2

    .line 8398
    :catch_0
    move-exception v17

    .line 8399
    .local v17, "e":Ljava/lang/Exception;
    const-string v2, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "isAcrossKnox exception: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual/range {v17 .. v17}, Ljava/lang/Exception;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    .line 8406
    .end local v17    # "e":Ljava/lang/Exception;
    :catch_1
    move-exception v17

    .line 8407
    .local v17, "e":Ljava/lang/IllegalArgumentException;
    const-string v2, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Failed trying to unstop package "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ": "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, v17

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_5

    .line 8414
    .end local v6    # "user":I
    .end local v11    # "pkgUid":I
    .end local v17    # "e":Ljava/lang/IllegalArgumentException;
    :cond_6
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    .line 8416
    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8418
    return-void

    .line 8387
    .restart local v6    # "user":I
    .restart local v11    # "pkgUid":I
    :catch_2
    move-exception v2

    goto/16 :goto_3

    .line 8405
    :catch_3
    move-exception v2

    goto :goto_5
.end method

.method public forceStopPackageByAdmin(Ljava/lang/String;I)V
    .locals 7
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I

    .prologue
    .line 8425
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 8426
    .local v0, "callingPid":I
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v4

    if-eq v0, v4, :cond_0

    .line 8427
    const-string v4, "ActivityManager"

    const-string/jumbo v5, "forceStopPackageByAdmin: non system call"

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8452
    :goto_0
    return-void

    .line 8430
    :cond_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v3

    .line 8431
    .local v3, "pm":Landroid/content/pm/IPackageManager;
    monitor-enter p0

    .line 8432
    const/4 v2, -0x1

    .line 8434
    .local v2, "pkgUid":I
    :try_start_0
    invoke-interface {v3, p1, p2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v2

    .line 8437
    :goto_1
    const/4 v4, -0x1

    if-ne v2, v4, :cond_1

    .line 8438
    :try_start_1
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Invalid packageName: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8439
    monitor-exit p0

    goto :goto_0

    .line 8451
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v4

    .line 8442
    :cond_1
    const/4 v4, 0x1

    :try_start_2
    invoke-interface {v3, p1, v4, p2}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;ZI)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_2
    .catch Ljava/lang/IllegalArgumentException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 8448
    :goto_2
    const/4 v4, 0x0

    :try_start_3
    invoke-virtual {p0, p2, v4}, Lcom/android/server/am/ActivityManagerService;->isUserRunningLocked(IZ)Z

    move-result v4

    if-eqz v4, :cond_2

    .line 8449
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "from pid "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {p0, p1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;ILjava/lang/String;)V

    .line 8451
    :cond_2
    monitor-exit p0

    goto :goto_0

    .line 8444
    :catch_0
    move-exception v1

    .line 8445
    .local v1, "e":Ljava/lang/IllegalArgumentException;
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Failed trying to unstop package "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ": "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_2

    .line 8435
    .end local v1    # "e":Ljava/lang/IllegalArgumentException;
    :catch_1
    move-exception v4

    goto :goto_1

    .line 8443
    :catch_2
    move-exception v4

    goto :goto_2
.end method

.method protected forceStopPackageForMARsLocked(Ljava/lang/String;Ljava/lang/String;ZZ)Z
    .locals 27
    .param p1, "killpkgName"    # Ljava/lang/String;
    .param p2, "reason"    # Ljava/lang/String;
    .param p3, "nonSticky"    # Z
    .param p4, "needClearNotification"    # Z

    .prologue
    .line 29754
    if-eqz p3, :cond_2

    .line 29755
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v2}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v2

    invoke-virtual {v2}, Landroid/util/ArrayMap;->size()I

    move-result v20

    .line 29756
    .local v20, "NP":I
    const/16 v24, 0x0

    .local v24, "ip":I
    :goto_0
    move/from16 v0, v24

    move/from16 v1, v20

    if-ge v0, v1, :cond_2

    .line 29757
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v2}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v2

    move/from16 v0, v24

    invoke-virtual {v2, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v22

    check-cast v22, Landroid/util/SparseArray;

    .line 29758
    .local v22, "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    invoke-virtual/range {v22 .. v22}, Landroid/util/SparseArray;->size()I

    move-result v19

    .line 29759
    .local v19, "NA":I
    const/16 v23, 0x0

    .local v23, "ia":I
    :goto_1
    move/from16 v0, v23

    move/from16 v1, v19

    if-ge v0, v1, :cond_1

    .line 29760
    invoke-virtual/range {v22 .. v23}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v21

    check-cast v21, Lcom/android/server/am/ProcessRecord;

    .line 29763
    .local v21, "app":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, v21

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p1

    invoke-virtual {v2, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_0

    move-object/from16 v0, v21

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    const/4 v3, 0x5

    if-ge v2, v3, :cond_0

    .line 29764
    const/4 v2, 0x0

    .line 29796
    .end local v19    # "NA":I
    .end local v20    # "NP":I
    .end local v21    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v22    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v23    # "ia":I
    .end local v24    # "ip":I
    :goto_2
    return v2

    .line 29759
    .restart local v19    # "NA":I
    .restart local v20    # "NP":I
    .restart local v21    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v22    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v23    # "ia":I
    .restart local v24    # "ip":I
    :cond_0
    add-int/lit8 v23, v23, 0x1

    goto :goto_1

    .line 29756
    .end local v21    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_1
    add-int/lit8 v24, v24, 0x1

    goto :goto_0

    .line 29769
    .end local v19    # "NA":I
    .end local v20    # "NP":I
    .end local v22    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v23    # "ia":I
    .end local v24    # "ip":I
    :cond_2
    const/4 v4, -0x1

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x1

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object/from16 v11, p2

    invoke-direct/range {v2 .. v11}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 29771
    if-eqz p4, :cond_5

    .line 29772
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v26

    .line 29773
    .local v26, "pm":Landroid/content/pm/IPackageManager;
    const/16 v25, -0x1

    .line 29775
    .local v25, "pkgUid":I
    const/4 v2, 0x0

    :try_start_0
    move-object/from16 v0, v26

    move-object/from16 v1, p1

    invoke-interface {v0, v1, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v25

    .line 29778
    :goto_3
    const/4 v2, -0x1

    move/from16 v0, v25

    if-ne v0, v2, :cond_3

    .line 29779
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Invalid packageName: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 29780
    const/4 v2, 0x0

    goto :goto_2

    .line 29783
    :cond_3
    new-instance v5, Landroid/content/Intent;

    const-string v2, "android.intent.action.PACKAGE_RESTARTED"

    const-string/jumbo v3, "package"

    const/4 v4, 0x0

    move-object/from16 v0, p1

    invoke-static {v3, v0, v4}, Landroid/net/Uri;->fromParts(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v3

    invoke-direct {v5, v2, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 29785
    .local v5, "intent":Landroid/content/Intent;
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v2, :cond_4

    .line 29786
    const/high16 v2, 0x50000000

    invoke-virtual {v5, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 29789
    :cond_4
    const-string v2, "android.intent.extra.UID"

    move/from16 v0, v25

    invoke-virtual {v5, v2, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 29790
    const-string v2, "android.intent.extra.user_handle"

    invoke-static/range {v25 .. v25}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v3

    invoke-virtual {v5, v2, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 29792
    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, -0x1

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    sget v16, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v17, 0x3e8

    invoke-static/range {v25 .. v25}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v18

    move-object/from16 v2, p0

    invoke-direct/range {v2 .. v18}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 29796
    .end local v5    # "intent":Landroid/content/Intent;
    .end local v25    # "pkgUid":I
    .end local v26    # "pm":Landroid/content/pm/IPackageManager;
    :cond_5
    const/4 v2, 0x1

    goto/16 :goto_2

    .line 29776
    .restart local v25    # "pkgUid":I
    .restart local v26    # "pm":Landroid/content/pm/IPackageManager;
    :catch_0
    move-exception v2

    goto :goto_3
.end method

.method foregroundTokenDied(Lcom/android/server/am/ActivityManagerService$ForegroundToken;)V
    .locals 5
    .param p1, "token"    # Lcom/android/server/am/ActivityManagerService$ForegroundToken;

    .prologue
    .line 10593
    monitor-enter p0

    .line 10594
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10595
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    iget v4, p1, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->pid:I

    invoke-virtual {v2, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$ForegroundToken;

    .line 10597
    .local v0, "cur":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    if-eq v0, p1, :cond_0

    .line 10598
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 10610
    :goto_0
    return-void

    .line 10600
    :cond_0
    :try_start_3
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    iget v4, p1, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->pid:I

    invoke-virtual {v2, v4}, Landroid/util/SparseArray;->remove(I)V

    .line 10601
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    iget v4, p1, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->pid:I

    invoke-virtual {v2, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 10602
    .local v1, "pr":Lcom/android/server/am/ProcessRecord;
    if-nez v1, :cond_1

    .line 10603
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    monitor-exit p0

    goto :goto_0

    .line 10609
    .end local v0    # "cur":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    .end local v1    # "pr":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    throw v2

    .line 10605
    .restart local v0    # "cur":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    .restart local v1    # "pr":Lcom/android/server/am/ProcessRecord;
    :cond_1
    const/4 v2, 0x0

    :try_start_5
    iput-object v2, v1, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;

    .line 10606
    const/4 v2, 0x0

    const/4 v4, 0x0

    invoke-virtual {p0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 10607
    monitor-exit v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 10608
    :try_start_6
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 10609
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    goto :goto_0

    .line 10607
    .end local v0    # "cur":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    .end local v1    # "pr":Lcom/android/server/am/ProcessRecord;
    :catchall_1
    move-exception v2

    :try_start_7
    monitor-exit v3
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    :try_start_8
    throw v2
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0
.end method

.method public getActivityClassForToken(Landroid/os/IBinder;)Landroid/content/ComponentName;
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 10185
    monitor-enter p0

    .line 10186
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 10187
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 10188
    const/4 v1, 0x0

    monitor-exit p0

    .line 10190
    :goto_0
    return-object v1

    :cond_0
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    monitor-exit p0

    goto :goto_0

    .line 10191
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public getActivityDisplayId(Landroid/os/IBinder;)I
    .locals 2
    .param p1, "activityToken"    # Landroid/os/IBinder;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 13435
    monitor-enter p0

    .line 13436
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .line 13437
    .local v0, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v0, :cond_0

    iget-object v1, v0, Lcom/android/server/am/ActivityStack;->mActivityContainer:Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;->isAttachedLocked()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 13438
    iget-object v1, v0, Lcom/android/server/am/ActivityStack;->mActivityContainer:Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;->getDisplayId()I

    move-result v1

    monitor-exit p0

    .line 13440
    :goto_0
    return v1

    :cond_0
    const/4 v1, 0x0

    monitor-exit p0

    goto :goto_0

    .line 13441
    .end local v0    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method getActivityInfoForUser(Landroid/content/pm/ActivityInfo;I)Landroid/content/pm/ActivityInfo;
    .locals 3
    .param p1, "aInfo"    # Landroid/content/pm/ActivityInfo;
    .param p2, "userId"    # I

    .prologue
    .line 28364
    if-eqz p1, :cond_0

    const/4 v1, 0x1

    if-ge p2, v1, :cond_1

    iget-object v1, p1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    const v2, 0x186a0

    if-ge v1, v2, :cond_1

    :cond_0
    move-object v0, p1

    .line 28371
    :goto_0
    return-object v0

    .line 28369
    :cond_1
    new-instance v0, Landroid/content/pm/ActivityInfo;

    invoke-direct {v0, p1}, Landroid/content/pm/ActivityInfo;-><init>(Landroid/content/pm/ActivityInfo;)V

    .line 28370
    .local v0, "info":Landroid/content/pm/ActivityInfo;
    iget-object v1, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {p0, v1, p2}, Lcom/android/server/am/ActivityManagerService;->getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v1

    iput-object v1, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    goto :goto_0
.end method

.method public getActivityOptions(Landroid/os/IBinder;)Landroid/app/ActivityOptions;
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/4 v0, 0x0

    .line 16174
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 16176
    .local v2, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 16177
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v1

    .line 16178
    .local v1, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v1, :cond_0

    .line 16179
    iget-object v0, v1, Lcom/android/server/am/ActivityRecord;->pendingOptions:Landroid/app/ActivityOptions;

    .line 16180
    .local v0, "activityOptions":Landroid/app/ActivityOptions;
    const/4 v4, 0x0

    iput-object v4, v1, Lcom/android/server/am/ActivityRecord;->pendingOptions:Landroid/app/ActivityOptions;

    .line 16181
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 16186
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .end local v0    # "activityOptions":Landroid/app/ActivityOptions;
    :goto_0
    return-object v0

    .line 16183
    :cond_0
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 16186
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 16184
    .end local v1    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v4

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 16186
    :catchall_1
    move-exception v4

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4
.end method

.method public getAllAppThreadsForPackage(Ljava/lang/String;I)Ljava/util/ArrayList;
    .locals 14
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "I)",
            "Ljava/util/ArrayList",
            "<",
            "Landroid/app/IApplicationThread;",
            ">;"
        }
    .end annotation

    .prologue
    .line 4856
    const/4 v8, 0x0

    .line 4857
    .local v8, "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    const-string v11, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v12

    invoke-static {v11, v12}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v11

    if-nez v11, :cond_1

    const/4 v0, 0x1

    .line 4859
    .local v0, "allUsers":Z
    :goto_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v11

    invoke-static {v11}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v10

    .line 4860
    .local v10, "userId":I
    monitor-enter p0

    .line 4862
    if-eqz p1, :cond_0

    :try_start_0
    const-string v11, ""

    invoke-virtual {v11, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v11

    if-eqz v11, :cond_2

    .line 4863
    :cond_0
    monitor-exit p0

    move-object v9, v8

    .line 4888
    .end local v8    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    .local v9, "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    :goto_1
    return-object v9

    .line 4857
    .end local v0    # "allUsers":Z
    .end local v9    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    .end local v10    # "userId":I
    .restart local v8    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    :cond_1
    const/4 v0, 0x0

    goto :goto_0

    .line 4864
    .restart local v0    # "allUsers":Z
    .restart local v10    # "userId":I
    :cond_2
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v11

    add-int/lit8 v3, v11, -0x1

    .local v3, "i":I
    :goto_2
    if-ltz v3, :cond_6

    .line 4865
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v11, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 4866
    .local v1, "app":Lcom/android/server/am/ProcessRecord;
    if-nez v0, :cond_4

    iget v11, v1, Lcom/android/server/am/ProcessRecord;->userId:I

    if-eq v11, v10, :cond_4

    .line 4864
    :cond_3
    :goto_3
    add-int/lit8 v3, v3, -0x1

    goto :goto_2

    .line 4869
    :cond_4
    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->getPackageList()[Ljava/lang/String;

    move-result-object v6

    .line 4870
    .local v6, "packages":[Ljava/lang/String;
    if-eqz v6, :cond_3

    array-length v11, v6

    if-lez v11, :cond_3

    .line 4871
    move-object v2, v6

    .local v2, "arr$":[Ljava/lang/String;
    array-length v5, v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .local v5, "len$":I
    const/4 v4, 0x0

    .local v4, "i$":I
    move-object v9, v8

    .end local v8    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    .restart local v9    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    :goto_4
    if-ge v4, v5, :cond_9

    :try_start_1
    aget-object v7, v2, v4

    .line 4872
    .local v7, "pkgName":Ljava/lang/String;
    if-eqz v7, :cond_8

    const-string v11, ""

    invoke-virtual {v11, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v11

    if-eqz v11, :cond_5

    move-object v8, v9

    .line 4871
    .end local v9    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    .restart local v8    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    :goto_5
    add-int/lit8 v4, v4, 0x1

    move-object v9, v8

    .end local v8    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    .restart local v9    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    goto :goto_4

    .line 4874
    :cond_5
    invoke-virtual {v7, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v11

    if-eqz v11, :cond_8

    .line 4875
    iget-object v11, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v11, :cond_8

    iget-boolean v11, v1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-nez v11, :cond_8

    iget-boolean v11, v1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-nez v11, :cond_8

    .line 4876
    if-nez v9, :cond_7

    .line 4877
    new-instance v8, Ljava/util/ArrayList;

    invoke-direct {v8}, Ljava/util/ArrayList;-><init>()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 4880
    .end local v9    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    .restart local v8    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    :goto_6
    :try_start_2
    const-string v11, "ActivityManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "For package "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " process record is "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " thread is "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    iget-object v13, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v11, v12}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 4881
    iget-object v11, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual {v8, v11}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_5

    .line 4887
    .end local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v2    # "arr$":[Ljava/lang/String;
    .end local v3    # "i":I
    .end local v4    # "i$":I
    .end local v5    # "len$":I
    .end local v6    # "packages":[Ljava/lang/String;
    .end local v7    # "pkgName":Ljava/lang/String;
    :catchall_0
    move-exception v11

    :goto_7
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v11

    .restart local v3    # "i":I
    :cond_6
    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-object v9, v8

    .line 4888
    .end local v8    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    .restart local v9    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    goto/16 :goto_1

    .line 4887
    .restart local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v2    # "arr$":[Ljava/lang/String;
    .restart local v4    # "i$":I
    .restart local v5    # "len$":I
    .restart local v6    # "packages":[Ljava/lang/String;
    :catchall_1
    move-exception v11

    move-object v8, v9

    .end local v9    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    .restart local v8    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    goto :goto_7

    .end local v8    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    .restart local v7    # "pkgName":Ljava/lang/String;
    .restart local v9    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    :cond_7
    move-object v8, v9

    .end local v9    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    .restart local v8    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    goto :goto_6

    .end local v8    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    .restart local v9    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    :cond_8
    move-object v8, v9

    .end local v9    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    .restart local v8    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    goto :goto_5

    .end local v7    # "pkgName":Ljava/lang/String;
    .end local v8    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    .restart local v9    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    :cond_9
    move-object v8, v9

    .end local v9    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    .restart local v8    # "runList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IApplicationThread;>;"
    goto :goto_3
.end method

.method public getAllStackInfos()Ljava/util/List;
    .locals 4
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List",
            "<",
            "Landroid/app/ActivityManager$StackInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 13513
    const-string v2, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v3, "getAllStackInfos()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13515
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 13517
    .local v0, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 13518
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStackSupervisor;->getAllStackInfosLocked()Ljava/util/ArrayList;

    move-result-object v2

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13521
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-object v2

    .line 13519
    :catchall_0
    move-exception v2

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 13521
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
.end method

.method getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;
    .locals 3
    .param p1, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "userId"    # I

    .prologue
    .line 28354
    if-nez p1, :cond_0

    const/4 v0, 0x0

    .line 28360
    :goto_0
    return-object v0

    .line 28355
    :cond_0
    new-instance v0, Landroid/content/pm/ApplicationInfo;

    invoke-direct {v0, p1}, Landroid/content/pm/ApplicationInfo;-><init>(Landroid/content/pm/ApplicationInfo;)V

    .line 28356
    .local v0, "newInfo":Landroid/content/pm/ApplicationInfo;
    iget v1, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-direct {p0, v1, p2}, Lcom/android/server/am/ActivityManagerService;->applyUserId(II)I

    move-result v1

    iput v1, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 28357
    iget-object v1, p1, Landroid/content/pm/ApplicationInfo;->volumeUuid:Ljava/lang/String;

    iget-object v2, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-static {v1, p2, v2}, Landroid/os/Environment;->getDataUserPackageDirectory(Ljava/lang/String;ILjava/lang/String;)Ljava/io/File;

    move-result-object v1

    invoke-virtual {v1}, Ljava/io/File;->getAbsolutePath()Ljava/lang/String;

    move-result-object v1

    iput-object v1, v0, Landroid/content/pm/ApplicationInfo;->dataDir:Ljava/lang/String;

    goto :goto_0
.end method

.method public getAppLockedCheckAction()Ljava/lang/String;
    .locals 1

    .prologue
    .line 29856
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

    if-eqz v0, :cond_0

    .line 29857
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

    invoke-virtual {v0}, Lcom/android/internal/app/AppLockPolicy;->getAppLockedCheckAction()Ljava/lang/String;

    move-result-object v0

    .line 29859
    :goto_0
    return-object v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public getAppLockedLockType()Ljava/lang/String;
    .locals 4

    .prologue
    .line 29843
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 29844
    .local v0, "callerUid":I
    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->isSystemUid(I)Z

    move-result v1

    if-nez v1, :cond_0

    .line 29845
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " cannot call getAppLockedLockType()"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 29847
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

    if-eqz v1, :cond_1

    .line 29848
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

    invoke-virtual {v1}, Lcom/android/internal/app/AppLockPolicy;->getAppLockedLockType()Ljava/lang/String;

    move-result-object v1

    .line 29850
    :goto_0
    return-object v1

    :cond_1
    const/4 v1, 0x0

    goto :goto_0
.end method

.method public getAppLockedPackageList()Ljava/util/ArrayList;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/ArrayList",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .prologue
    .line 29806
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

    if-eqz v0, :cond_0

    .line 29807
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

    invoke-virtual {v0}, Lcom/android/internal/app/AppLockPolicy;->getAppLockedPackageList()Ljava/util/ArrayList;

    move-result-object v0

    .line 29809
    :goto_0
    return-object v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public getAppOpsService()Lcom/android/internal/app/IAppOpsService;
    .locals 1

    .prologue
    .line 3279
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    return-object v0
.end method

.method public getAppTaskThumbnailSize()Landroid/graphics/Point;
    .locals 3

    .prologue
    .line 12867
    monitor-enter p0

    .line 12868
    :try_start_0
    new-instance v0, Landroid/graphics/Point;

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mThumbnailWidth:I

    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mThumbnailHeight:I

    invoke-direct {v0, v1, v2}, Landroid/graphics/Point;-><init>(II)V

    monitor-exit p0

    return-object v0

    .line 12869
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getAppTasks(Ljava/lang/String;)Ljava/util/List;
    .locals 11
    .param p1, "callingPackage"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/List",
            "<",
            "Landroid/app/IAppTask;",
            ">;"
        }
    .end annotation

    .prologue
    .line 12452
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 12453
    .local v1, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 12455
    .local v4, "ident":J
    monitor-enter p0

    .line 12456
    :try_start_0
    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 12460
    .local v6, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IAppTask;>;"
    :try_start_1
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v10}, Lcom/android/server/am/RecentTasks;->size()I

    move-result v0

    .line 12461
    .local v0, "N":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_2

    .line 12462
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v10, v2}, Lcom/android/server/am/RecentTasks;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/am/TaskRecord;

    .line 12466
    .local v9, "tr":Lcom/android/server/am/TaskRecord;
    iget v10, v9, Lcom/android/server/am/TaskRecord;->effectiveUid:I

    if-eq v10, v1, :cond_1

    .line 12461
    :cond_0
    :goto_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 12469
    :cond_1
    invoke-virtual {v9}, Lcom/android/server/am/TaskRecord;->getBaseIntent()Landroid/content/Intent;

    move-result-object v3

    .line 12470
    .local v3, "intent":Landroid/content/Intent;
    if-eqz v3, :cond_0

    invoke-virtual {v3}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v10

    invoke-virtual {v10}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {p1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_0

    .line 12474
    invoke-direct {p0, v9}, Lcom/android/server/am/ActivityManagerService;->createRecentTaskInfoFromTaskRecord(Lcom/android/server/am/TaskRecord;)Landroid/app/ActivityManager$RecentTaskInfo;

    move-result-object v8

    .line 12476
    .local v8, "taskInfo":Landroid/app/ActivityManager$RecentTaskInfo;
    new-instance v7, Lcom/android/server/am/ActivityManagerService$AppTaskImpl;

    iget v10, v8, Landroid/app/ActivityManager$RecentTaskInfo;->persistentId:I

    invoke-direct {v7, p0, v10, v1}, Lcom/android/server/am/ActivityManagerService$AppTaskImpl;-><init>(Lcom/android/server/am/ActivityManagerService;II)V

    .line 12477
    .local v7, "taskImpl":Lcom/android/server/am/ActivityManagerService$AppTaskImpl;
    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_1

    .line 12480
    .end local v0    # "N":I
    .end local v2    # "i":I
    .end local v3    # "intent":Landroid/content/Intent;
    .end local v7    # "taskImpl":Lcom/android/server/am/ActivityManagerService$AppTaskImpl;
    .end local v8    # "taskInfo":Landroid/app/ActivityManager$RecentTaskInfo;
    .end local v9    # "tr":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v10

    :try_start_2
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v10

    .line 12483
    .end local v6    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IAppTask;>;"
    :catchall_1
    move-exception v10

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v10

    .line 12480
    .restart local v0    # "N":I
    .restart local v2    # "i":I
    .restart local v6    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IAppTask;>;"
    :cond_2
    :try_start_3
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12482
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    return-object v6
.end method

.method public getAssistContextExtras(I)Landroid/os/Bundle;
    .locals 11
    .param p1, "requestType"    # I

    .prologue
    const/4 v2, 0x0

    .line 15847
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v6

    const-wide/16 v8, 0x1f4

    move-object v0, p0

    move v1, p1

    move-object v3, v2

    move-object v4, v2

    move-object v5, v2

    move-object v7, v2

    invoke-direct/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;Lcom/android/internal/os/IResultReceiver;Landroid/os/IBinder;ILandroid/os/Bundle;J)Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    move-result-object v10

    .line 15849
    .local v10, "pae":Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;
    if-nez v10, :cond_0

    .line 15865
    :goto_0
    return-object v2

    .line 15852
    :cond_0
    monitor-enter v10

    .line 15853
    :goto_1
    :try_start_0
    iget-boolean v0, v10, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->haveResult:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v0, :cond_1

    .line 15855
    :try_start_1
    invoke-virtual {v10}, Ljava/lang/Object;->wait()V
    :try_end_1
    .catch Ljava/lang/InterruptedException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_1

    .line 15856
    :catch_0
    move-exception v0

    goto :goto_1

    .line 15859
    :cond_1
    :try_start_2
    monitor-exit v10
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 15860
    monitor-enter p0

    .line 15861
    :try_start_3
    iget-object v0, v10, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->result:Landroid/os/Bundle;

    invoke-direct {p0, v10, v0}, Lcom/android/server/am/ActivityManagerService;->buildAssistBundleLocked(Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;Landroid/os/Bundle;)V

    .line 15862
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingAssistExtras:Ljava/util/ArrayList;

    invoke-virtual {v0, v10}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 15863
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    invoke-virtual {v0, v10}, Lcom/android/server/am/ActivityManagerService$UiHandler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 15864
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 15865
    iget-object v2, v10, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->extras:Landroid/os/Bundle;

    goto :goto_0

    .line 15859
    :catchall_0
    move-exception v0

    :try_start_4
    monitor-exit v10
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    throw v0

    .line 15864
    :catchall_1
    move-exception v0

    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    throw v0
.end method

.method public getCallingActivity(Landroid/os/IBinder;)Landroid/content/ComponentName;
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 10169
    monitor-enter p0

    .line 10170
    :try_start_0
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getCallingRecordLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 10171
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    :goto_0
    monitor-exit p0

    return-object v1

    :cond_0
    const/4 v1, 0x0

    goto :goto_0

    .line 10172
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public getCallingPackage(Landroid/os/IBinder;)Ljava/lang/String;
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 10161
    monitor-enter p0

    .line 10162
    :try_start_0
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getCallingRecordLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 10163
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    :goto_0
    monitor-exit p0

    return-object v1

    :cond_0
    const/4 v1, 0x0

    goto :goto_0

    .line 10164
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public getConfiguration()Landroid/content/res/Configuration;
    .locals 1

    .prologue
    .line 23981
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->getConfiguration(I)Landroid/content/res/Configuration;

    move-result-object v0

    return-object v0
.end method

.method public getConfiguration(I)Landroid/content/res/Configuration;
    .locals 3
    .param p1, "displayId"    # I

    .prologue
    .line 23987
    monitor-enter p0

    .line 23989
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    .line 23992
    .local v1, "mConfiguration":Landroid/content/res/Configuration;
    new-instance v0, Landroid/content/res/Configuration;

    invoke-direct {v0, v1}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .line 23993
    .local v0, "ci":Landroid/content/res/Configuration;
    const/4 v2, 0x0

    iput-boolean v2, v0, Landroid/content/res/Configuration;->userSetLocale:Z

    .line 23994
    monitor-exit p0

    .line 23995
    return-object v0

    .line 23994
    .end local v0    # "ci":Landroid/content/res/Configuration;
    .end local v1    # "mConfiguration":Landroid/content/res/Configuration;
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method public final getContentProvider(Landroid/app/IApplicationThread;Ljava/lang/String;IZ)Landroid/app/IActivityManager$ContentProviderHolder;
    .locals 7
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "userId"    # I
    .param p4, "stable"    # Z

    .prologue
    .line 14702
    const-string/jumbo v0, "getContentProvider"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 14703
    if-nez p1, :cond_0

    .line 14704
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "null IApplicationThread when getting content provider "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 14706
    .local v6, "msg":Ljava/lang/String;
    const-string v0, "ActivityManager"

    invoke-static {v0, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14707
    new-instance v0, Ljava/lang/SecurityException;

    invoke-direct {v0, v6}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14711
    .end local v6    # "msg":Ljava/lang/String;
    :cond_0
    const/4 v3, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move v4, p4

    move v5, p3

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->getContentProviderImpl(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/os/IBinder;ZI)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v0

    return-object v0
.end method

.method public getContentProviderExternal(Ljava/lang/String;ILandroid/os/IBinder;)Landroid/app/IActivityManager$ContentProviderHolder;
    .locals 8
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "token"    # Landroid/os/IBinder;

    .prologue
    .line 14716
    const-string v0, "android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY"

    const-string v1, "Do not have permission in call getContentProviderExternal()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 14718
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v4, 0x0

    const/4 v5, 0x2

    const-string/jumbo v6, "getContentProvider"

    const/4 v7, 0x0

    move-object v0, p0

    move v3, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    .line 14720
    invoke-direct {p0, p1, p3, p2}, Lcom/android/server/am/ActivityManagerService;->getContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v0

    return-object v0
.end method

.method public getCurrentUser()Landroid/content/pm/UserInfo;
    .locals 4

    .prologue
    .line 28217
    const-string v2, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_0

    const-string v2, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_0

    .line 28221
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Permission Denial: getCurrentUser() from pid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ", uid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " requires "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 28225
    .local v0, "msg":Ljava/lang/String;
    const-string v2, "ActivityManager"

    invoke-static {v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 28226
    new-instance v2, Ljava/lang/SecurityException;

    invoke-direct {v2, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 28228
    .end local v0    # "msg":Ljava/lang/String;
    :cond_0
    monitor-enter p0

    .line 28229
    :try_start_0
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    const/16 v3, -0x2710

    if-eq v2, v3, :cond_1

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    .line 28230
    .local v1, "userId":I
    :goto_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v2

    invoke-virtual {v2, v1}, Lcom/android/server/pm/UserManagerService;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v2

    monitor-exit p0

    return-object v2

    .line 28229
    .end local v1    # "userId":I
    :cond_1
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    goto :goto_0

    .line 28231
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method getCurrentUserIdLocked()I
    .locals 2

    .prologue
    .line 28235
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    const/16 v1, -0x2710

    if-eq v0, v1, :cond_0

    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    :goto_0
    return v0

    :cond_0
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    goto :goto_0
.end method

.method public getDeviceConfigurationInfo()Landroid/content/pm/ConfigurationInfo;
    .locals 4

    .prologue
    .line 23940
    new-instance v0, Landroid/content/pm/ConfigurationInfo;

    invoke-direct {v0}, Landroid/content/pm/ConfigurationInfo;-><init>()V

    .line 23941
    .local v0, "config":Landroid/content/pm/ConfigurationInfo;
    monitor-enter p0

    .line 23947
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    .line 23950
    .local v1, "mConfiguration":Landroid/content/res/Configuration;
    iget v2, v1, Landroid/content/res/Configuration;->touchscreen:I

    iput v2, v0, Landroid/content/pm/ConfigurationInfo;->reqTouchScreen:I

    .line 23951
    iget v2, v1, Landroid/content/res/Configuration;->keyboard:I

    iput v2, v0, Landroid/content/pm/ConfigurationInfo;->reqKeyboardType:I

    .line 23952
    iget v2, v1, Landroid/content/res/Configuration;->navigation:I

    iput v2, v0, Landroid/content/pm/ConfigurationInfo;->reqNavigation:I

    .line 23953
    iget v2, v1, Landroid/content/res/Configuration;->navigation:I

    const/4 v3, 0x2

    if-eq v2, v3, :cond_0

    iget v2, v1, Landroid/content/res/Configuration;->navigation:I

    const/4 v3, 0x3

    if-ne v2, v3, :cond_1

    .line 23955
    :cond_0
    iget v2, v0, Landroid/content/pm/ConfigurationInfo;->reqInputFeatures:I

    or-int/lit8 v2, v2, 0x2

    iput v2, v0, Landroid/content/pm/ConfigurationInfo;->reqInputFeatures:I

    .line 23957
    :cond_1
    iget v2, v1, Landroid/content/res/Configuration;->keyboard:I

    if-eqz v2, :cond_2

    iget v2, v1, Landroid/content/res/Configuration;->keyboard:I

    const/4 v3, 0x1

    if-eq v2, v3, :cond_2

    .line 23959
    iget v2, v0, Landroid/content/pm/ConfigurationInfo;->reqInputFeatures:I

    or-int/lit8 v2, v2, 0x1

    iput v2, v0, Landroid/content/pm/ConfigurationInfo;->reqInputFeatures:I

    .line 23961
    :cond_2
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->GL_ES_VERSION:I

    iput v2, v0, Landroid/content/pm/ConfigurationInfo;->reqGlEsVersion:I

    .line 23962
    monitor-exit p0

    .line 23963
    return-object v0

    .line 23962
    .end local v1    # "mConfiguration":Landroid/content/res/Configuration;
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method public getDumpMemoryInfo()Ljava/util/ArrayList;
    .locals 52
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/internal/app/MemDumpInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 3646
    const/16 v44, 0x0

    .line 3647
    .local v44, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    monitor-enter p0

    .line 3648
    :try_start_0
    new-instance v45, Ljava/util/ArrayList;

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, v45

    invoke-direct {v0, v4}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 3649
    .end local v44    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .local v45, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_4

    .line 3651
    new-instance v42, Ljava/util/ArrayList;

    invoke-direct/range {v42 .. v42}, Ljava/util/ArrayList;-><init>()V

    .line 3652
    .local v42, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    new-instance v43, Landroid/util/SparseArray;

    invoke-direct/range {v43 .. v43}, Landroid/util/SparseArray;-><init>()V

    .line 3653
    .local v43, "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    sget-object v4, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    array-length v4, v4

    new-array v0, v4, [J

    move-object/from16 v40, v0

    .line 3654
    .local v40, "oomPss":[J
    sget-object v4, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    array-length v4, v4

    new-array v0, v4, [J

    move-object/from16 v41, v0

    .line 3655
    .local v41, "oomSwap":[J
    sget-object v4, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    array-length v4, v4

    new-array v0, v4, [Ljava/util/ArrayList;

    move-object/from16 v39, v0

    check-cast v39, [Ljava/util/ArrayList;

    .line 3658
    .local v39, "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    const-wide/16 v50, 0x0

    .line 3659
    .local v50, "totalPss":J
    const-wide/16 v26, 0x0

    .line 3660
    .local v26, "cachedPss":J
    new-instance v37, Ljava/util/ArrayList;

    invoke-direct/range {v37 .. v37}, Ljava/util/ArrayList;-><init>()V

    .line 3662
    .local v37, "oomMemDumps":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/app/MemDumpInfo;>;"
    if-nez v45, :cond_1

    .line 3828
    :cond_0
    :goto_0
    return-object v37

    .line 3649
    .end local v26    # "cachedPss":J
    .end local v37    # "oomMemDumps":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/app/MemDumpInfo;>;"
    .end local v39    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v40    # "oomPss":[J
    .end local v41    # "oomSwap":[J
    .end local v42    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v43    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v45    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .end local v50    # "totalPss":J
    .restart local v44    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :catchall_0
    move-exception v4

    :goto_1
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v4

    .line 3666
    .end local v44    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v26    # "cachedPss":J
    .restart local v37    # "oomMemDumps":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/app/MemDumpInfo;>;"
    .restart local v39    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v40    # "oomPss":[J
    .restart local v41    # "oomSwap":[J
    .restart local v42    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v43    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v45    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v50    # "totalPss":J
    :cond_1
    invoke-virtual/range {v45 .. v45}, Ljava/util/ArrayList;->size()I

    move-result v4

    add-int/lit8 v12, v4, -0x1

    .local v12, "i":I
    :goto_2
    if-ltz v12, :cond_9

    .line 3667
    move-object/from16 v0, v45

    invoke-virtual {v0, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v46

    check-cast v46, Lcom/android/server/am/ProcessRecord;

    .line 3672
    .local v46, "r":Lcom/android/server/am/ProcessRecord;
    monitor-enter p0

    .line 3673
    :try_start_3
    move-object/from16 v0, v46

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move-object/from16 v48, v0

    .line 3674
    .local v48, "thread":Landroid/app/IApplicationThread;
    move-object/from16 v0, v46

    iget v10, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 3675
    .local v10, "pid":I
    invoke-virtual/range {v46 .. v46}, Lcom/android/server/am/ProcessRecord;->getSetAdjWithServices()I

    move-result v35

    .line 3676
    .local v35, "oomAdj":I
    move-object/from16 v0, v46

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-lez v4, :cond_6

    const/4 v11, 0x1

    .line 3677
    .local v11, "hasActivities":Z
    :goto_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 3678
    if-eqz v48, :cond_5

    .line 3679
    const/4 v4, 0x1

    new-array v0, v4, [J

    move-object/from16 v33, v0

    .line 3680
    .local v33, "myTotalPss":[J
    const/4 v4, 0x1

    new-array v0, v4, [J

    move-object/from16 v34, v0

    .line 3682
    .local v34, "myTotalSwappedOutPss":[J
    move-object/from16 v0, v33

    move-object/from16 v1, v34

    invoke-static {v10, v0, v1}, Landroid/os/Debug;->getPssSwapPss(I[J[J)V

    .line 3684
    const/4 v4, 0x0

    aget-wide v4, v33, v4

    add-long v50, v50, v4

    .line 3685
    new-instance v3, Lcom/android/server/am/ActivityManagerService$MemItem;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v46

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " (pid "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    if-eqz v11, :cond_7

    const-string v4, " / activities)"

    :goto_4
    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, v46

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    const/4 v6, 0x0

    aget-wide v6, v33, v6

    const/4 v8, 0x0

    aget-wide v8, v34, v8

    invoke-direct/range {v3 .. v11}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJIZ)V

    .line 3688
    .local v3, "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    move-object/from16 v0, v42

    invoke-virtual {v0, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 3689
    move-object/from16 v0, v43

    invoke-virtual {v0, v10, v3}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 3691
    const/16 v4, 0x9

    move/from16 v0, v35

    if-lt v0, v4, :cond_2

    .line 3692
    const/4 v4, 0x0

    aget-wide v4, v33, v4

    add-long v26, v26, v4

    .line 3695
    :cond_2
    const/16 v36, 0x0

    .local v36, "oomIndex":I
    :goto_5
    move-object/from16 v0, v40

    array-length v4, v0

    move/from16 v0, v36

    if-ge v0, v4, :cond_5

    .line 3696
    sget-object v4, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v4, v4, v36

    move/from16 v0, v35

    if-le v0, v4, :cond_3

    move-object/from16 v0, v40

    array-length v4, v0

    add-int/lit8 v4, v4, -0x1

    move/from16 v0, v36

    if-ne v0, v4, :cond_8

    .line 3698
    :cond_3
    aget-wide v4, v40, v36

    const/4 v6, 0x0

    aget-wide v6, v33, v6

    add-long/2addr v4, v6

    aput-wide v4, v40, v36

    .line 3699
    aget-wide v4, v41, v36

    const/4 v6, 0x0

    aget-wide v6, v34, v6

    add-long/2addr v4, v6

    aput-wide v4, v41, v36

    .line 3700
    aget-object v4, v39, v36

    if-nez v4, :cond_4

    .line 3701
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    aput-object v4, v39, v36

    .line 3703
    :cond_4
    aget-object v4, v39, v36

    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 3666
    .end local v3    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v33    # "myTotalPss":[J
    .end local v34    # "myTotalSwappedOutPss":[J
    .end local v36    # "oomIndex":I
    :cond_5
    add-int/lit8 v12, v12, -0x1

    goto/16 :goto_2

    .line 3676
    .end local v11    # "hasActivities":Z
    :cond_6
    const/4 v11, 0x0

    goto/16 :goto_3

    .line 3677
    .end local v10    # "pid":I
    .end local v35    # "oomAdj":I
    .end local v48    # "thread":Landroid/app/IApplicationThread;
    :catchall_1
    move-exception v4

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v4

    .line 3685
    .restart local v10    # "pid":I
    .restart local v11    # "hasActivities":Z
    .restart local v33    # "myTotalPss":[J
    .restart local v34    # "myTotalSwappedOutPss":[J
    .restart local v35    # "oomAdj":I
    .restart local v48    # "thread":Landroid/app/IApplicationThread;
    :cond_7
    const-string v4, ")"

    goto :goto_4

    .line 3695
    .restart local v3    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .restart local v36    # "oomIndex":I
    :cond_8
    add-int/lit8 v36, v36, 0x1

    goto :goto_5

    .line 3710
    .end local v3    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v10    # "pid":I
    .end local v11    # "hasActivities":Z
    .end local v33    # "myTotalPss":[J
    .end local v34    # "myTotalSwappedOutPss":[J
    .end local v35    # "oomAdj":I
    .end local v36    # "oomIndex":I
    .end local v46    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v48    # "thread":Landroid/app/IApplicationThread;
    :cond_9
    const-wide/16 v24, 0x0

    .line 3712
    .local v24, "nativeProcTotalPss":J
    invoke-virtual/range {v45 .. v45}, Ljava/util/ArrayList;->size()I

    move-result v4

    const/4 v5, 0x1

    if-le v4, v5, :cond_0

    .line 3715
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 3717
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    monitor-enter v5

    .line 3718
    :try_start_5
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v4}, Lcom/android/internal/os/ProcessCpuTracker;->countStats()I

    move-result v2

    .line 3719
    .local v2, "N":I
    const/4 v12, 0x0

    :goto_6
    if-ge v12, v2, :cond_c

    .line 3720
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v4, v12}, Lcom/android/internal/os/ProcessCpuTracker;->getStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v47

    .line 3721
    .local v47, "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    move-object/from16 v0, v47

    iget-wide v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->vsize:J

    const-wide/16 v8, 0x0

    cmp-long v4, v6, v8

    if-lez v4, :cond_b

    move-object/from16 v0, v47

    iget v4, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move-object/from16 v0, v43

    invoke-virtual {v0, v4}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v4

    if-gez v4, :cond_b

    .line 3723
    const/4 v4, 0x1

    new-array v0, v4, [J

    move-object/from16 v33, v0

    .line 3724
    .restart local v33    # "myTotalPss":[J
    const/4 v4, 0x1

    new-array v0, v4, [J

    move-object/from16 v34, v0

    .line 3726
    .restart local v34    # "myTotalSwappedOutPss":[J
    move-object/from16 v0, v47

    iget v4, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move-object/from16 v0, v33

    move-object/from16 v1, v34

    invoke-static {v4, v0, v1}, Landroid/os/Debug;->getPssSwapPss(I[J[J)V

    .line 3728
    const/4 v4, 0x0

    aget-wide v6, v33, v4

    add-long v50, v50, v6

    .line 3729
    const/4 v4, 0x0

    aget-wide v6, v33, v4

    add-long v24, v24, v6

    .line 3731
    new-instance v3, Lcom/android/server/am/ActivityManagerService$MemItem;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v47

    iget-object v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, " (pid "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, v47

    iget v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, ")"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v14

    move-object/from16 v0, v47

    iget-object v15, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    const/4 v4, 0x0

    aget-wide v16, v33, v4

    const/4 v4, 0x0

    aget-wide v18, v34, v4

    move-object/from16 v0, v47

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move/from16 v20, v0

    const/16 v21, 0x0

    move-object v13, v3

    invoke-direct/range {v13 .. v21}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJIZ)V

    .line 3733
    .restart local v3    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    move-object/from16 v0, v42

    invoke-virtual {v0, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 3735
    const/4 v4, 0x0

    aget-wide v6, v40, v4

    const/4 v8, 0x0

    aget-wide v8, v33, v8

    add-long/2addr v6, v8

    aput-wide v6, v40, v4

    .line 3736
    const/4 v4, 0x0

    aget-wide v6, v41, v4

    const/4 v8, 0x0

    aget-wide v8, v34, v8

    add-long/2addr v6, v8

    aput-wide v6, v41, v4

    .line 3737
    const/4 v4, 0x0

    aget-object v4, v39, v4

    if-nez v4, :cond_a

    .line 3738
    const/4 v4, 0x0

    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V

    aput-object v6, v39, v4

    .line 3740
    :cond_a
    const/4 v4, 0x0

    aget-object v4, v39, v4

    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 3719
    .end local v3    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v33    # "myTotalPss":[J
    .end local v34    # "myTotalSwappedOutPss":[J
    :cond_b
    add-int/lit8 v12, v12, 0x1

    goto/16 :goto_6

    .line 3743
    .end local v47    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :cond_c
    monitor-exit v5
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    .line 3745
    new-instance v38, Ljava/util/ArrayList;

    invoke-direct/range {v38 .. v38}, Ljava/util/ArrayList;-><init>()V

    .line 3747
    .local v38, "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    const/16 v28, 0x0

    .local v28, "j":I
    :goto_7
    move-object/from16 v0, v40

    array-length v4, v0

    move/from16 v0, v28

    if-ge v0, v4, :cond_e

    .line 3748
    aget-wide v4, v40, v28

    const-wide/16 v6, 0x0

    cmp-long v4, v4, v6

    if-eqz v4, :cond_d

    .line 3749
    sget-object v4, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    aget-object v14, v4, v28

    .line 3750
    .local v14, "label":Ljava/lang/String;
    new-instance v13, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v16, v40, v28

    aget-wide v18, v41, v28

    sget-object v4, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v20, v4, v28

    move-object v15, v14

    invoke-direct/range {v13 .. v20}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JJI)V

    .line 3752
    .local v13, "item":Lcom/android/server/am/ActivityManagerService$MemItem;
    aget-object v4, v39, v28

    iput-object v4, v13, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    .line 3753
    move-object/from16 v0, v38

    invoke-virtual {v0, v13}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 3747
    .end local v13    # "item":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v14    # "label":Ljava/lang/String;
    :cond_d
    add-int/lit8 v28, v28, 0x1

    goto :goto_7

    .line 3743
    .end local v2    # "N":I
    .end local v28    # "j":I
    .end local v38    # "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :catchall_2
    move-exception v4

    :try_start_6
    monitor-exit v5
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    throw v4

    .line 3757
    .restart local v2    # "N":I
    .restart local v28    # "j":I
    .restart local v38    # "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    :cond_e
    const/4 v12, 0x0

    :goto_8
    invoke-virtual/range {v38 .. v38}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-ge v12, v4, :cond_f

    .line 3758
    move-object/from16 v0, v38

    invoke-virtual {v0, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v32

    check-cast v32, Lcom/android/server/am/ActivityManagerService$MemItem;

    .line 3760
    .local v32, "mitem":Lcom/android/server/am/ActivityManagerService$MemItem;
    new-instance v30, Lcom/android/internal/app/MemDumpInfo;

    invoke-direct/range {v30 .. v30}, Lcom/android/internal/app/MemDumpInfo;-><init>()V

    .line 3761
    .local v30, "md_info":Lcom/android/internal/app/MemDumpInfo;
    move-object/from16 v0, v32

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->label:Ljava/lang/String;

    move-object/from16 v0, v30

    iput-object v4, v0, Lcom/android/internal/app/MemDumpInfo;->label:Ljava/lang/String;

    .line 3762
    move-object/from16 v0, v32

    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    move-object/from16 v0, v30

    iput-wide v4, v0, Lcom/android/internal/app/MemDumpInfo;->pss:J

    .line 3763
    move-object/from16 v0, v32

    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->swap_pss:J

    move-object/from16 v0, v30

    iput-wide v4, v0, Lcom/android/internal/app/MemDumpInfo;->swap_out:J

    .line 3764
    move-object/from16 v0, v37

    move-object/from16 v1, v30

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 3757
    add-int/lit8 v12, v12, 0x1

    goto :goto_8

    .line 3794
    .end local v30    # "md_info":Lcom/android/internal/app/MemDumpInfo;
    .end local v32    # "mitem":Lcom/android/server/am/ActivityManagerService$MemItem;
    :cond_f
    new-instance v31, Lcom/android/internal/util/MemInfoReader;

    invoke-direct/range {v31 .. v31}, Lcom/android/internal/util/MemInfoReader;-><init>()V

    .line 3795
    .local v31, "memInfo":Lcom/android/internal/util/MemInfoReader;
    invoke-virtual/range {v31 .. v31}, Lcom/android/internal/util/MemInfoReader;->readMemInfo()V

    .line 3796
    const-wide/16 v4, 0x0

    cmp-long v4, v24, v4

    if-lez v4, :cond_10

    .line 3797
    monitor-enter p0

    .line 3798
    :try_start_7
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual/range {v31 .. v31}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v16

    invoke-virtual/range {v31 .. v31}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v18

    invoke-virtual/range {v31 .. v31}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v20

    invoke-virtual/range {v31 .. v31}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v22

    invoke-virtual/range {v15 .. v25}, Lcom/android/server/am/ProcessStatsService;->addSysMemUsageLocked(JJJJJ)V

    .line 3801
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_3

    .line 3804
    :cond_10
    new-instance v29, Lcom/android/internal/app/MemDumpInfo;

    invoke-direct/range {v29 .. v29}, Lcom/android/internal/app/MemDumpInfo;-><init>()V

    .line 3805
    .local v29, "md_extra":Lcom/android/internal/app/MemDumpInfo;
    const/4 v4, 0x1

    move-object/from16 v0, v29

    iput-boolean v4, v0, Lcom/android/internal/app/MemDumpInfo;->hasExtra:Z

    .line 3806
    invoke-virtual/range {v31 .. v31}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v4

    move-object/from16 v0, v29

    invoke-virtual {v0, v4, v5}, Lcom/android/internal/app/MemDumpInfo;->SetTotalSize(J)V

    .line 3807
    invoke-virtual/range {v31 .. v31}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v4

    add-long v4, v4, v26

    invoke-virtual/range {v31 .. v31}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v6

    add-long/2addr v4, v6

    move-object/from16 v0, v29

    invoke-virtual {v0, v4, v5}, Lcom/android/internal/app/MemDumpInfo;->SetFreeSize(J)V

    .line 3808
    sub-long v4, v50, v26

    invoke-virtual/range {v31 .. v31}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v6

    add-long/2addr v4, v6

    move-object/from16 v0, v29

    invoke-virtual {v0, v4, v5}, Lcom/android/internal/app/MemDumpInfo;->SetUsedSize(J)V

    .line 3809
    invoke-virtual/range {v31 .. v31}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v4

    sub-long v4, v4, v50

    invoke-virtual/range {v31 .. v31}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v6

    sub-long/2addr v4, v6

    invoke-virtual/range {v31 .. v31}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v6

    sub-long/2addr v4, v6

    invoke-virtual/range {v31 .. v31}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v6

    sub-long/2addr v4, v6

    move-object/from16 v0, v29

    invoke-virtual {v0, v4, v5}, Lcom/android/internal/app/MemDumpInfo;->SetLostSize(J)V

    .line 3810
    move-object/from16 v0, v37

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto/16 :goto_0

    .line 3801
    .end local v29    # "md_extra":Lcom/android/internal/app/MemDumpInfo;
    :catchall_3
    move-exception v4

    :try_start_8
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_3

    throw v4

    .line 3649
    .end local v2    # "N":I
    .end local v12    # "i":I
    .end local v24    # "nativeProcTotalPss":J
    .end local v26    # "cachedPss":J
    .end local v28    # "j":I
    .end local v31    # "memInfo":Lcom/android/internal/util/MemInfoReader;
    .end local v37    # "oomMemDumps":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/app/MemDumpInfo;>;"
    .end local v38    # "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v39    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v40    # "oomPss":[J
    .end local v41    # "oomSwap":[J
    .end local v42    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v43    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v50    # "totalPss":J
    :catchall_4
    move-exception v4

    move-object/from16 v44, v45

    .end local v45    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v44    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    goto/16 :goto_1
.end method

.method getFocusedStack()Lcom/android/server/am/ActivityStack;
    .locals 1

    .prologue
    .line 23967
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v0

    return-object v0
.end method

.method public getFocusedStackId()I
    .locals 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 23972
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .line 23973
    .local v0, "focusedStack":Lcom/android/server/am/ActivityStack;
    if-eqz v0, :cond_0

    .line 23974
    invoke-virtual {v0}, Lcom/android/server/am/ActivityStack;->getStackId()I

    move-result v1

    .line 23976
    :goto_0
    return v1

    :cond_0
    const/4 v1, -0x1

    goto :goto_0
.end method

.method public getFrontActivityScreenCompatMode()I
    .locals 1

    .prologue
    .line 5848
    const-string/jumbo v0, "getFrontActivityScreenCompatMode"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 5849
    monitor-enter p0

    .line 5850
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0}, Lcom/android/server/am/CompatModePackages;->getFrontActivityScreenCompatModeLocked()I

    move-result v0

    monitor-exit p0

    return v0

    .line 5851
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getGrabedIntentSenders()Ljava/util/Map;
    .locals 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Map",
            "<",
            "Ljava/lang/Long;",
            "Landroid/content/IIntentSender;",
            ">;"
        }
    .end annotation

    .prologue
    .line 10421
    monitor-enter p0

    .line 10422
    :try_start_0
    new-instance v1, Ljava/util/HashMap;

    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V

    .line 10423
    .local v1, "pirMap":Ljava/util/Map;, "Ljava/util/Map<Ljava/lang/Long;Landroid/content/IIntentSender;>;"
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mGrabedIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->size()I

    move-result v3

    if-lez v3, :cond_0

    .line 10424
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mGrabedIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v0

    .line 10426
    .local v0, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/PendingIntentRecord;>;"
    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_0

    .line 10427
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/PendingIntentRecord;

    .line 10428
    .local v2, "rec":Lcom/android/server/am/PendingIntentRecord;
    iget-object v3, v2, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    invoke-virtual {v3}, Lcom/android/server/am/PendingIntentRecord$Key;->getTime()J

    move-result-wide v4

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v3

    invoke-interface {v1, v3, v2}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_0

    .line 10432
    .end local v0    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/PendingIntentRecord;>;"
    .end local v1    # "pirMap":Ljava/util/Map;, "Ljava/util/Map<Ljava/lang/Long;Landroid/content/IIntentSender;>;"
    .end local v2    # "rec":Lcom/android/server/am/PendingIntentRecord;
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v3

    .line 10431
    .restart local v1    # "pirMap":Ljava/util/Map;, "Ljava/util/Map<Ljava/lang/Long;Landroid/content/IIntentSender;>;"
    :cond_0
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    return-object v1
.end method

.method getHomeIntent()Landroid/content/Intent;
    .locals 1

    .prologue
    const/4 v0, 0x0

    .line 5648
    invoke-virtual {p0, v0, v0}, Lcom/android/server/am/ActivityManagerService;->getHomeIntent(IZ)Landroid/content/Intent;

    move-result-object v0

    return-object v0
.end method

.method getHomeIntent(IZ)Landroid/content/Intent;
    .locals 3
    .param p1, "displayId"    # I
    .param p2, "queryExpandHomeIntent"    # Z

    .prologue
    .line 5653
    new-instance v0, Landroid/content/Intent;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mTopData:Ljava/lang/String;

    if-eqz v1, :cond_1

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mTopData:Ljava/lang/String;

    invoke-static {v1}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v1

    :goto_0
    invoke-direct {v0, v2, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 5654
    .local v0, "intent":Landroid/content/Intent;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;

    invoke-virtual {v0, v1}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 5655
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v2, 0x1

    if-eq v1, v2, :cond_0

    .line 5675
    const-string v1, "android.intent.category.HOME"

    invoke-virtual {v0, v1}, Landroid/content/Intent;->addCategory(Ljava/lang/String;)Landroid/content/Intent;

    .line 5680
    :cond_0
    return-object v0

    .line 5653
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_1
    const/4 v1, 0x0

    goto :goto_0
.end method

.method public getIntentForIntentSender(Landroid/content/IIntentSender;)Landroid/content/Intent;
    .locals 5
    .param p1, "pendingResult"    # Landroid/content/IIntentSender;

    .prologue
    const/4 v3, 0x0

    .line 10513
    instance-of v2, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v2, :cond_0

    .line 10521
    :goto_0
    return-object v3

    .line 10517
    :cond_0
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v1, v0

    .line 10518
    .local v1, "res":Lcom/android/server/am/PendingIntentRecord;
    iget-object v2, v1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v2, v2, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    if-eqz v2, :cond_1

    new-instance v2, Landroid/content/Intent;

    iget-object v4, v1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v4, v4, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    invoke-direct {v2, v4}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    :goto_1
    move-object v3, v2

    goto :goto_0

    :cond_1
    move-object v2, v3

    goto :goto_1

    .line 10519
    .end local v1    # "res":Lcom/android/server/am/PendingIntentRecord;
    :catch_0
    move-exception v2

    goto :goto_0
.end method

.method public getIntentSender(ILjava/lang/String;Landroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;I)Landroid/content/IIntentSender;
    .locals 22
    .param p1, "type"    # I
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "token"    # Landroid/os/IBinder;
    .param p4, "resultWho"    # Ljava/lang/String;
    .param p5, "requestCode"    # I
    .param p6, "intents"    # [Landroid/content/Intent;
    .param p7, "resolvedTypes"    # [Ljava/lang/String;
    .param p8, "flags"    # I
    .param p9, "options"    # Landroid/os/Bundle;
    .param p10, "userId"    # I

    .prologue
    .line 10221
    const-string/jumbo v1, "getIntentSender"

    move-object/from16 v0, p0

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 10223
    if-eqz p6, :cond_5

    .line 10224
    move-object/from16 v0, p6

    array-length v1, v0

    const/4 v2, 0x1

    if-ge v1, v2, :cond_0

    .line 10225
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "Intents array length must be >= 1"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 10227
    :cond_0
    const/16 v17, 0x0

    .local v17, "i":I
    :goto_0
    move-object/from16 v0, p6

    array-length v1, v0

    move/from16 v0, v17

    if-ge v0, v1, :cond_4

    .line 10228
    aget-object v18, p6, v17

    .line 10229
    .local v18, "intent":Landroid/content/Intent;
    if-eqz v18, :cond_3

    .line 10230
    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v1

    if-eqz v1, :cond_1

    .line 10231
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "File descriptors passed in Intent"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 10233
    :cond_1
    const/4 v1, 0x1

    move/from16 v0, p1

    if-ne v0, v1, :cond_2

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getFlags()I

    move-result v1

    const/high16 v2, 0x2000000

    and-int/2addr v1, v2

    if-eqz v1, :cond_2

    .line 10235
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "Can\'t use FLAG_RECEIVER_BOOT_UPGRADE here"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 10238
    :cond_2
    new-instance v1, Landroid/content/Intent;

    move-object/from16 v0, v18

    invoke-direct {v1, v0}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    aput-object v1, p6, v17

    .line 10227
    :cond_3
    add-int/lit8 v17, v17, 0x1

    goto :goto_0

    .line 10241
    .end local v18    # "intent":Landroid/content/Intent;
    :cond_4
    if-eqz p7, :cond_5

    move-object/from16 v0, p7

    array-length v1, v0

    move-object/from16 v0, p6

    array-length v2, v0

    if-eq v1, v2, :cond_5

    .line 10242
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "Intent array length does not match resolvedTypes length"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 10246
    .end local v17    # "i":I
    :cond_5
    if-eqz p9, :cond_6

    .line 10247
    invoke-virtual/range {p9 .. p9}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v1

    if-eqz v1, :cond_6

    .line 10248
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "File descriptors passed in options"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 10252
    :cond_6
    monitor-enter p0

    .line 10253
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 10254
    .local v3, "callingUid":I
    move/from16 v20, p10

    .line 10255
    .local v20, "origUserId":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    const/4 v1, 0x1

    move/from16 v0, p1

    if-ne v0, v1, :cond_8

    const/4 v5, 0x1

    :goto_1
    const/4 v6, 0x0

    const-string/jumbo v7, "getIntentSender"

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move/from16 v4, p10

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result p10

    .line 10258
    const/4 v1, -0x2

    move/from16 v0, v20

    if-ne v0, v1, :cond_7

    .line 10262
    const/16 p10, -0x2

    .line 10265
    :cond_7
    if-eqz v3, :cond_9

    const/16 v1, 0x3e8

    if-eq v3, v1, :cond_9

    .line 10266
    :try_start_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    invoke-static {v3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    move-object/from16 v0, p2

    invoke-interface {v1, v0, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I

    move-result v21

    .line 10268
    .local v21, "uid":I
    move/from16 v0, v21

    invoke-static {v3, v0}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result v1

    if-nez v1, :cond_9

    .line 10269
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: getIntentSender() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", (need uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    move/from16 v0, v21

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ")"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " is not allowed to send as package "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    move-object/from16 v0, p2

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v19

    .line 10274
    .local v19, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    move-object/from16 v0, v19

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10275
    new-instance v1, Ljava/lang/SecurityException;

    move-object/from16 v0, v19

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10282
    .end local v19    # "msg":Ljava/lang/String;
    .end local v21    # "uid":I
    :catch_0
    move-exception v16

    .line 10283
    .local v16, "e":Landroid/os/RemoteException;
    :try_start_2
    new-instance v1, Ljava/lang/SecurityException;

    move-object/from16 v0, v16

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/Throwable;)V

    throw v1

    .line 10285
    .end local v3    # "callingUid":I
    .end local v16    # "e":Landroid/os/RemoteException;
    .end local v20    # "origUserId":I
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v1

    .line 10255
    .restart local v3    # "callingUid":I
    .restart local v20    # "origUserId":I
    :cond_8
    const/4 v5, 0x0

    goto/16 :goto_1

    :cond_9
    move-object/from16 v4, p0

    move/from16 v5, p1

    move-object/from16 v6, p2

    move v7, v3

    move/from16 v8, p10

    move-object/from16 v9, p3

    move-object/from16 v10, p4

    move/from16 v11, p5

    move-object/from16 v12, p6

    move-object/from16 v13, p7

    move/from16 v14, p8

    move-object/from16 v15, p9

    .line 10279
    :try_start_3
    invoke-virtual/range {v4 .. v15}, Lcom/android/server/am/ActivityManagerService;->getIntentSenderLocked(ILjava/lang/String;IILandroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;)Landroid/content/IIntentSender;
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-result-object v1

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    return-object v1
.end method

.method getIntentSenderLocked(ILjava/lang/String;IILandroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;)Landroid/content/IIntentSender;
    .locals 18
    .param p1, "type"    # I
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "callingUid"    # I
    .param p4, "userId"    # I
    .param p5, "token"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "intents"    # [Landroid/content/Intent;
    .param p9, "resolvedTypes"    # [Ljava/lang/String;
    .param p10, "flags"    # I
    .param p11, "options"    # Landroid/os/Bundle;

    .prologue
    .line 10293
    const/4 v5, 0x0

    .line 10294
    .local v5, "activity":Lcom/android/server/am/ActivityRecord;
    const/4 v3, 0x3

    move/from16 v0, p1

    if-ne v0, v3, :cond_2

    .line 10295
    invoke-static/range {p5 .. p5}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v5

    .line 10296
    if-nez v5, :cond_1

    .line 10297
    const/4 v15, 0x0

    .line 10349
    :cond_0
    :goto_0
    return-object v15

    .line 10299
    :cond_1
    iget-boolean v3, v5, Lcom/android/server/am/ActivityRecord;->finishing:Z

    if-eqz v3, :cond_2

    .line 10300
    const/4 v15, 0x0

    goto :goto_0

    .line 10304
    :cond_2
    const/high16 v3, 0x20000000

    and-int v3, v3, p10

    if-eqz v3, :cond_4

    const/4 v14, 0x1

    .line 10305
    .local v14, "noCreate":Z
    :goto_1
    const/high16 v3, 0x10000000

    and-int v3, v3, p10

    if-eqz v3, :cond_5

    const/4 v13, 0x1

    .line 10306
    .local v13, "cancelCurrent":Z
    :goto_2
    const/high16 v3, 0x8000000

    and-int v3, v3, p10

    if-eqz v3, :cond_6

    const/16 v17, 0x1

    .line 10307
    .local v17, "updateCurrent":Z
    :goto_3
    const v3, -0x38000001

    and-int p10, p10, v3

    .line 10310
    new-instance v2, Lcom/android/server/am/PendingIntentRecord$Key;

    move/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v6, p6

    move/from16 v7, p7

    move-object/from16 v8, p8

    move-object/from16 v9, p9

    move/from16 v10, p10

    move-object/from16 v11, p11

    move/from16 v12, p4

    invoke-direct/range {v2 .. v12}, Lcom/android/server/am/PendingIntentRecord$Key;-><init>(ILjava/lang/String;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;I)V

    .line 10314
    .local v2, "key":Lcom/android/server/am/PendingIntentRecord$Key;
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v3, v2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Ljava/lang/ref/WeakReference;

    .line 10315
    .local v16, "ref":Ljava/lang/ref/WeakReference;, "Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;"
    if-eqz v16, :cond_7

    invoke-virtual/range {v16 .. v16}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/PendingIntentRecord;

    move-object v15, v3

    .line 10316
    .local v15, "rec":Lcom/android/server/am/PendingIntentRecord;
    :goto_4
    if-eqz v15, :cond_b

    .line 10317
    if-nez v13, :cond_a

    .line 10318
    if-eqz v17, :cond_0

    .line 10319
    iget-object v3, v15, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    if-eqz v3, :cond_3

    .line 10320
    iget-object v3, v15, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v4, v3, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    if-eqz p8, :cond_8

    move-object/from16 v0, p8

    array-length v3, v0

    add-int/lit8 v3, v3, -0x1

    aget-object v3, p8, v3

    :goto_5
    invoke-virtual {v4, v3}, Landroid/content/Intent;->replaceExtras(Landroid/content/Intent;)Landroid/content/Intent;

    .line 10323
    :cond_3
    if-eqz p8, :cond_9

    .line 10324
    move-object/from16 v0, p8

    array-length v3, v0

    add-int/lit8 v3, v3, -0x1

    iget-object v4, v15, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v4, v4, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    aput-object v4, p8, v3

    .line 10325
    iget-object v3, v15, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    move-object/from16 v0, p8

    iput-object v0, v3, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    .line 10326
    iget-object v3, v15, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    move-object/from16 v0, p9

    iput-object v0, v3, Lcom/android/server/am/PendingIntentRecord$Key;->allResolvedTypes:[Ljava/lang/String;

    goto/16 :goto_0

    .line 10304
    .end local v2    # "key":Lcom/android/server/am/PendingIntentRecord$Key;
    .end local v13    # "cancelCurrent":Z
    .end local v14    # "noCreate":Z
    .end local v15    # "rec":Lcom/android/server/am/PendingIntentRecord;
    .end local v16    # "ref":Ljava/lang/ref/WeakReference;, "Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;"
    .end local v17    # "updateCurrent":Z
    :cond_4
    const/4 v14, 0x0

    goto :goto_1

    .line 10305
    .restart local v14    # "noCreate":Z
    :cond_5
    const/4 v13, 0x0

    goto :goto_2

    .line 10306
    .restart local v13    # "cancelCurrent":Z
    :cond_6
    const/16 v17, 0x0

    goto :goto_3

    .line 10315
    .restart local v2    # "key":Lcom/android/server/am/PendingIntentRecord$Key;
    .restart local v16    # "ref":Ljava/lang/ref/WeakReference;, "Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;"
    .restart local v17    # "updateCurrent":Z
    :cond_7
    const/4 v15, 0x0

    goto :goto_4

    .line 10320
    .restart local v15    # "rec":Lcom/android/server/am/PendingIntentRecord;
    :cond_8
    const/4 v3, 0x0

    goto :goto_5

    .line 10328
    :cond_9
    iget-object v3, v15, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    const/4 v4, 0x0

    iput-object v4, v3, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    .line 10329
    iget-object v3, v15, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    const/4 v4, 0x0

    iput-object v4, v3, Lcom/android/server/am/PendingIntentRecord$Key;->allResolvedTypes:[Ljava/lang/String;

    goto/16 :goto_0

    .line 10334
    :cond_a
    const/4 v3, 0x1

    iput-boolean v3, v15, Lcom/android/server/am/PendingIntentRecord;->canceled:Z

    .line 10335
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v3, v2}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 10337
    :cond_b
    if-nez v14, :cond_0

    .line 10340
    new-instance v15, Lcom/android/server/am/PendingIntentRecord;

    .end local v15    # "rec":Lcom/android/server/am/PendingIntentRecord;
    move-object/from16 v0, p0

    move/from16 v1, p3

    invoke-direct {v15, v0, v2, v1}, Lcom/android/server/am/PendingIntentRecord;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/PendingIntentRecord$Key;I)V

    .line 10341
    .restart local v15    # "rec":Lcom/android/server/am/PendingIntentRecord;
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    iget-object v4, v15, Lcom/android/server/am/PendingIntentRecord;->ref:Ljava/lang/ref/WeakReference;

    invoke-virtual {v3, v2, v4}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10342
    const/4 v3, 0x3

    move/from16 v0, p1

    if-ne v0, v3, :cond_0

    .line 10343
    iget-object v3, v5, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    if-nez v3, :cond_c

    .line 10344
    new-instance v3, Ljava/util/HashSet;

    invoke-direct {v3}, Ljava/util/HashSet;-><init>()V

    iput-object v3, v5, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    .line 10347
    :cond_c
    iget-object v3, v5, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    iget-object v4, v15, Lcom/android/server/am/PendingIntentRecord;->ref:Ljava/lang/ref/WeakReference;

    invoke-virtual {v3, v4}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    goto/16 :goto_0
.end method

.method public getKidForIntentSender(Landroid/content/IIntentSender;)I
    .locals 3
    .param p1, "sender"    # Landroid/content/IIntentSender;

    .prologue
    .line 10463
    instance-of v2, p1, Lcom/android/server/am/PendingIntentRecord;

    if-eqz v2, :cond_0

    .line 10465
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v1, v0

    .line 10466
    .local v1, "res":Lcom/android/server/am/PendingIntentRecord;
    iget-object v2, v1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    invoke-virtual {v2}, Lcom/android/server/am/PendingIntentRecord$Key;->hashCode()I
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v2

    .line 10470
    .end local v1    # "res":Lcom/android/server/am/PendingIntentRecord;
    :goto_0
    return v2

    .line 10467
    :catch_0
    move-exception v2

    .line 10470
    :cond_0
    const/4 v2, -0x1

    goto :goto_0
.end method

.method public getLaunchedFromPackage(Landroid/os/IBinder;)Ljava/lang/String;
    .locals 2
    .param p1, "activityToken"    # Landroid/os/IBinder;

    .prologue
    .line 24650
    monitor-enter p0

    .line 24651
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 24652
    .local v0, "srec":Lcom/android/server/am/ActivityRecord;
    monitor-exit p0

    .line 24653
    if-nez v0, :cond_0

    .line 24654
    const/4 v1, 0x0

    .line 24656
    :goto_0
    return-object v1

    .line 24652
    .end local v0    # "srec":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 24656
    .restart local v0    # "srec":Lcom/android/server/am/ActivityRecord;
    :cond_0
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->launchedFromPackage:Ljava/lang/String;

    goto :goto_0
.end method

.method public getLaunchedFromUid(Landroid/os/IBinder;)I
    .locals 2
    .param p1, "activityToken"    # Landroid/os/IBinder;

    .prologue
    .line 24639
    monitor-enter p0

    .line 24640
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 24641
    .local v0, "srec":Lcom/android/server/am/ActivityRecord;
    monitor-exit p0

    .line 24642
    if-nez v0, :cond_0

    .line 24643
    const/4 v1, -0x1

    .line 24645
    :goto_0
    return v1

    .line 24641
    .end local v0    # "srec":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 24645
    .restart local v0    # "srec":Lcom/android/server/am/ActivityRecord;
    :cond_0
    iget v1, v0, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    goto :goto_0
.end method

.method public getLockTaskModeState()I
    .locals 1

    .prologue
    .line 13781
    monitor-enter p0

    .line 13782
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->getLockTaskModeState()I

    move-result v0

    monitor-exit p0

    return v0

    .line 13783
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method getLpnetManagerLocked()Lcom/android/server/LpnetManagerService;
    .locals 2

    .prologue
    .line 22729
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLpnetManager:Lcom/android/server/LpnetManagerService;

    if-nez v1, :cond_0

    .line 22730
    const-string/jumbo v1, "lpnet"

    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 22731
    .local v0, "b":Landroid/os/IBinder;
    invoke-static {v0}, Landroid/os/ILpnetManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/ILpnetManager;

    move-result-object v1

    check-cast v1, Lcom/android/server/LpnetManagerService;

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLpnetManager:Lcom/android/server/LpnetManagerService;

    .line 22733
    .end local v0    # "b":Landroid/os/IBinder;
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLpnetManager:Lcom/android/server/LpnetManagerService;

    return-object v1
.end method

.method public getMemoryInfo(Landroid/app/ActivityManager$MemoryInfo;)V
    .locals 14
    .param p1, "outInfo"    # Landroid/app/ActivityManager$MemoryInfo;

    .prologue
    const/4 v5, 0x1

    const/4 v6, 0x0

    .line 12431
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v7, 0x6

    invoke-virtual {v4, v7}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v2

    .line 12432
    .local v2, "homeAppMem":J
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v7, 0x9

    invoke-virtual {v4, v7}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v0

    .line 12433
    .local v0, "cachedAppMem":J
    invoke-static {}, Landroid/os/Process;->getFreeMemory()J

    move-result-wide v8

    iput-wide v8, p1, Landroid/app/ActivityManager$MemoryInfo;->availMem:J

    .line 12434
    invoke-static {}, Landroid/os/Process;->getTotalMemory()J

    move-result-wide v8

    iput-wide v8, p1, Landroid/app/ActivityManager$MemoryInfo;->totalMem:J

    .line 12435
    iput-wide v2, p1, Landroid/app/ActivityManager$MemoryInfo;->threshold:J

    .line 12436
    iget-wide v8, p1, Landroid/app/ActivityManager$MemoryInfo;->availMem:J

    sub-long v10, v0, v2

    const-wide/16 v12, 0x2

    div-long/2addr v10, v12

    add-long/2addr v10, v2

    cmp-long v4, v8, v10

    if-gez v4, :cond_0

    move v4, v5

    :goto_0
    iput-boolean v4, p1, Landroid/app/ActivityManager$MemoryInfo;->lowMemory:Z

    .line 12437
    iput-wide v0, p1, Landroid/app/ActivityManager$MemoryInfo;->hiddenAppThreshold:J

    .line 12438
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v7, 0x5

    invoke-virtual {v4, v7}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v8

    iput-wide v8, p1, Landroid/app/ActivityManager$MemoryInfo;->secondaryServerThreshold:J

    .line 12440
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v4, v5}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v4

    iput-wide v4, p1, Landroid/app/ActivityManager$MemoryInfo;->visibleAppThreshold:J

    .line 12442
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v4, v6}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v4

    iput-wide v4, p1, Landroid/app/ActivityManager$MemoryInfo;->foregroundAppThreshold:J

    .line 12444
    return-void

    :cond_0
    move v4, v6

    .line 12436
    goto :goto_0
.end method

.method public getMyMemoryState(Landroid/app/ActivityManager$RunningAppProcessInfo;)V
    .locals 4
    .param p1, "outInfo"    # Landroid/app/ActivityManager$RunningAppProcessInfo;

    .prologue
    .line 18498
    const-string/jumbo v1, "getMyMemoryState"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 18499
    monitor-enter p0

    .line 18501
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 18502
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-virtual {v1, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 18503
    .local v0, "proc":Lcom/android/server/am/ProcessRecord;
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 18504
    :try_start_2
    invoke-direct {p0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->fillInProcMemInfo(Lcom/android/server/am/ProcessRecord;Landroid/app/ActivityManager$RunningAppProcessInfo;)V

    .line 18505
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 18506
    return-void

    .line 18503
    .end local v0    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v1

    :try_start_3
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v1

    .line 18505
    :catchall_1
    move-exception v1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v1
.end method

.method public getPackageAskScreenCompat(Ljava/lang/String;)Z
    .locals 1
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    .line 5882
    const-string/jumbo v0, "getPackageAskScreenCompat"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 5883
    monitor-enter p0

    .line 5884
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1}, Lcom/android/server/am/CompatModePackages;->getPackageAskCompatModeLocked(Ljava/lang/String;)Z

    move-result v0

    monitor-exit p0

    return v0

    .line 5885
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getPackageForIntentSender(Landroid/content/IIntentSender;)Ljava/lang/String;
    .locals 4
    .param p1, "pendingResult"    # Landroid/content/IIntentSender;

    .prologue
    const/4 v2, 0x0

    .line 10438
    instance-of v3, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v3, :cond_0

    .line 10446
    :goto_0
    return-object v2

    .line 10442
    :cond_0
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v1, v0

    .line 10443
    .local v1, "res":Lcom/android/server/am/PendingIntentRecord;
    iget-object v3, v1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v2, v3, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 10444
    .end local v1    # "res":Lcom/android/server/am/PendingIntentRecord;
    :catch_0
    move-exception v3

    goto :goto_0
.end method

.method public getPackageForToken(Landroid/os/IBinder;)Ljava/lang/String;
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 10196
    monitor-enter p0

    .line 10197
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 10198
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 10199
    const/4 v1, 0x0

    monitor-exit p0

    .line 10201
    :goto_0
    return-object v1

    :cond_0
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    monitor-exit p0

    goto :goto_0

    .line 10202
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public getPackageFromAppProcesses(I)Ljava/lang/String;
    .locals 6
    .param p1, "pid"    # I

    .prologue
    .line 18455
    const/4 v3, 0x0

    .line 18456
    .local v3, "pr":Lcom/android/server/am/ProcessRecord;
    :try_start_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    monitor-enter v5
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 18457
    :try_start_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    add-int/lit8 v2, v4, -0x1

    .local v2, "i":I
    :goto_0
    if-ltz v2, :cond_1

    .line 18458
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    move-object v0, v4

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    move-object v3, v0

    .line 18459
    if-eqz v3, :cond_0

    iget v4, v3, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v4, p1, :cond_0

    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    if-eqz v4, :cond_0

    .line 18460
    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    monitor-exit v5

    .line 18466
    .end local v2    # "i":I
    :goto_1
    return-object v4

    .line 18457
    .restart local v2    # "i":I
    :cond_0
    add-int/lit8 v2, v2, -0x1

    goto :goto_0

    .line 18462
    :cond_1
    monitor-exit v5

    .line 18466
    .end local v2    # "i":I
    :goto_2
    const/4 v4, 0x0

    goto :goto_1

    .line 18462
    :catchall_0
    move-exception v4

    monitor-exit v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    throw v4
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    .line 18463
    :catch_0
    move-exception v1

    .line 18464
    .local v1, "e":Ljava/lang/Exception;
    const-string v4, "ActivityManager"

    invoke-static {v1}, Landroid/util/Log;->getStackTraceString(Ljava/lang/Throwable;)Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2
.end method

.method public getPackageProcessState(Ljava/lang/String;Ljava/lang/String;)I
    .locals 7
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "callingPackage"    # Ljava/lang/String;

    .prologue
    .line 5909
    invoke-direct {p0, p2}, Lcom/android/server/am/ActivityManagerService;->hasUsageStatsPermission(Ljava/lang/String;)Z

    move-result v5

    if-nez v5, :cond_0

    .line 5910
    const-string v5, "android.permission.GET_PACKAGE_IMPORTANCE"

    const-string/jumbo v6, "getPackageProcessState"

    invoke-virtual {p0, v5, v6}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 5914
    :cond_0
    const/4 v4, -0x1

    .line 5915
    .local v4, "procState":I
    monitor-enter p0

    .line 5916
    :try_start_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    add-int/lit8 v1, v5, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_6

    .line 5917
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 5918
    .local v3, "proc":Lcom/android/server/am/ProcessRecord;
    const/4 v5, -0x1

    if-eq v4, v5, :cond_1

    iget v5, v3, Lcom/android/server/am/ProcessRecord;->setProcState:I

    if-le v4, v5, :cond_4

    .line 5920
    :cond_1
    const/4 v0, 0x0

    .line 5921
    .local v0, "found":Z
    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v5}, Landroid/util/ArrayMap;->size()I

    move-result v5

    add-int/lit8 v2, v5, -0x1

    .local v2, "j":I
    :goto_1
    if-ltz v2, :cond_3

    if-nez v0, :cond_3

    .line 5922
    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v5, v2}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    invoke-virtual {v5, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_2

    .line 5923
    iget v4, v3, Lcom/android/server/am/ProcessRecord;->setProcState:I

    .line 5924
    const/4 v0, 0x1

    .line 5921
    :cond_2
    add-int/lit8 v2, v2, -0x1

    goto :goto_1

    .line 5927
    :cond_3
    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    if-eqz v5, :cond_4

    if-nez v0, :cond_4

    .line 5928
    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    invoke-virtual {v5}, Landroid/util/ArraySet;->size()I

    move-result v5

    add-int/lit8 v2, v5, -0x1

    :goto_2
    if-ltz v2, :cond_4

    .line 5929
    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    invoke-virtual {v5, v2}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    invoke-virtual {v5, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_5

    .line 5930
    iget v4, v3, Lcom/android/server/am/ProcessRecord;->setProcState:I

    .line 5916
    .end local v0    # "found":Z
    .end local v2    # "j":I
    :cond_4
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 5928
    .restart local v0    # "found":Z
    .restart local v2    # "j":I
    :cond_5
    add-int/lit8 v2, v2, -0x1

    goto :goto_2

    .line 5937
    .end local v0    # "found":Z
    .end local v2    # "j":I
    .end local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_6
    monitor-exit p0

    .line 5938
    return v4

    .line 5937
    .end local v1    # "i":I
    :catchall_0
    move-exception v5

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v5
.end method

.method public getPackageScreenCompatMode(Ljava/lang/String;)I
    .locals 1
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    .line 5865
    const-string/jumbo v0, "getPackageScreenCompatMode"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 5866
    monitor-enter p0

    .line 5867
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1}, Lcom/android/server/am/CompatModePackages;->getPackageScreenCompatModeLocked(Ljava/lang/String;)I

    move-result v0

    monitor-exit p0

    return v0

    .line 5868
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method getPermissionRequestActivities()Ljava/util/ArrayList;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/ArrayList",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .prologue
    .line 24212
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPermissionRequestActivities:Ljava/util/ArrayList;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPermissionRequestActivities:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v0

    if-nez v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPermissionRequestActivities:Ljava/util/ArrayList;

    :goto_0
    return-object v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public getPersistedUriPermissions(Ljava/lang/String;Z)Landroid/content/pm/ParceledListSlice;
    .locals 13
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "incoming"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "Z)",
            "Landroid/content/pm/ParceledListSlice",
            "<",
            "Landroid/content/UriPermission;",
            ">;"
        }
    .end annotation

    .prologue
    .line 12369
    const-string/jumbo v10, "getPersistedUriPermissions"

    invoke-virtual {p0, v10}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 12370
    const-string/jumbo v10, "packageName"

    invoke-static {p1, v10}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 12372
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 12373
    .local v0, "callingUid":I
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v7

    .line 12375
    .local v7, "pm":Landroid/content/pm/IPackageManager;
    :try_start_0
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v10

    invoke-interface {v7, p1, v10}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I

    move-result v4

    .line 12376
    .local v4, "packageUid":I
    if-eq v4, v0, :cond_0

    .line 12377
    new-instance v10, Ljava/lang/SecurityException;

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Package "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, " does not belong to calling UID "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-direct {v10, v11}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v10
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 12380
    .end local v4    # "packageUid":I
    :catch_0
    move-exception v1

    .line 12381
    .local v1, "e":Landroid/os/RemoteException;
    new-instance v10, Ljava/lang/SecurityException;

    const-string v11, "Failed to verify package name ownership"

    invoke-direct {v10, v11}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v10

    .line 12384
    .end local v1    # "e":Landroid/os/RemoteException;
    .restart local v4    # "packageUid":I
    :cond_0
    invoke-static {}, Lcom/google/android/collect/Lists;->newArrayList()Ljava/util/ArrayList;

    move-result-object v8

    .line 12385
    .local v8, "result":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/UriPermission;>;"
    monitor-enter p0

    .line 12386
    if-eqz p2, :cond_4

    .line 12387
    :try_start_1
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v10, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/util/ArrayMap;

    .line 12389
    .local v6, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-nez v6, :cond_2

    .line 12390
    const-string v10, "ActivityManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "No permission grants found for "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v10, v11}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12410
    .end local v6    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    :cond_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 12411
    new-instance v10, Landroid/content/pm/ParceledListSlice;

    invoke-direct {v10, v8}, Landroid/content/pm/ParceledListSlice;-><init>(Ljava/util/List;)V

    return-object v10

    .line 12392
    .restart local v6    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    :cond_2
    :try_start_2
    invoke-virtual {v6}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v10

    invoke-interface {v10}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v3

    .local v3, "i$":Ljava/util/Iterator;
    :cond_3
    :goto_0
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v10

    if-eqz v10, :cond_1

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/UriPermission;

    .line 12393
    .local v5, "perm":Lcom/android/server/am/UriPermission;
    iget-object v10, v5, Lcom/android/server/am/UriPermission;->targetPkg:Ljava/lang/String;

    invoke-virtual {p1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_3

    iget v10, v5, Lcom/android/server/am/UriPermission;->persistedModeFlags:I

    if-eqz v10, :cond_3

    .line 12394
    invoke-virtual {v5}, Lcom/android/server/am/UriPermission;->buildPersistedPublicApiObject()Landroid/content/UriPermission;

    move-result-object v10

    invoke-virtual {v8, v10}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_0

    .line 12410
    .end local v3    # "i$":Ljava/util/Iterator;
    .end local v5    # "perm":Lcom/android/server/am/UriPermission;
    .end local v6    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    :catchall_0
    move-exception v10

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v10

    .line 12399
    :cond_4
    :try_start_3
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v10}, Landroid/util/SparseArray;->size()I

    move-result v9

    .line 12400
    .local v9, "size":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    if-ge v2, v9, :cond_1

    .line 12401
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v10, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/util/ArrayMap;

    .line 12403
    .restart local v6    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    invoke-virtual {v6}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v10

    invoke-interface {v10}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v3

    .restart local v3    # "i$":Ljava/util/Iterator;
    :cond_5
    :goto_2
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v10

    if-eqz v10, :cond_6

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/UriPermission;

    .line 12404
    .restart local v5    # "perm":Lcom/android/server/am/UriPermission;
    iget-object v10, v5, Lcom/android/server/am/UriPermission;->sourcePkg:Ljava/lang/String;

    invoke-virtual {p1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_5

    iget v10, v5, Lcom/android/server/am/UriPermission;->persistedModeFlags:I

    if-eqz v10, :cond_5

    .line 12405
    invoke-virtual {v5}, Lcom/android/server/am/UriPermission;->buildPersistedPublicApiObject()Landroid/content/UriPermission;

    move-result-object v10

    invoke-virtual {v8, v10}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_2

    .line 12400
    .end local v5    # "perm":Lcom/android/server/am/UriPermission;
    :cond_6
    add-int/lit8 v2, v2, 0x1

    goto :goto_1
.end method

.method getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;
    .locals 2

    .prologue
    .line 28331
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPersonaManager:Lcom/android/server/pm/PersonaManagerService;

    if-nez v1, :cond_0

    .line 28332
    const-string/jumbo v1, "persona"

    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 28333
    .local v0, "b":Landroid/os/IBinder;
    invoke-static {v0}, Landroid/os/IPersonaManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/IPersonaManager;

    move-result-object v1

    check-cast v1, Lcom/android/server/pm/PersonaManagerService;

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPersonaManager:Lcom/android/server/pm/PersonaManagerService;

    .line 28336
    .end local v0    # "b":Landroid/os/IBinder;
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPersonaManager:Lcom/android/server/pm/PersonaManagerService;

    return-object v1
.end method

.method public getProcessLimit()I
    .locals 1

    .prologue
    .line 10587
    monitor-enter p0

    .line 10588
    :try_start_0
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessLimitOverride:I

    monitor-exit p0

    return v0

    .line 10589
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getProcessMemoryInfo([I)[Landroid/os/Debug$MemoryInfo;
    .locals 12
    .param p1, "pids"    # [I

    .prologue
    const/4 v11, 0x0

    .line 8554
    const-string/jumbo v1, "getProcessMemoryInfo"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 8555
    array-length v1, p1

    new-array v8, v1, [Landroid/os/Debug$MemoryInfo;

    .line 8556
    .local v8, "infos":[Landroid/os/Debug$MemoryInfo;
    array-length v1, p1

    add-int/lit8 v0, v1, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_3

    .line 8559
    monitor-enter p0

    .line 8560
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8561
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    aget v3, p1, v0

    invoke-virtual {v1, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/am/ProcessRecord;

    .line 8562
    .local v10, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v10, :cond_2

    iget v9, v10, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 8563
    .local v9, "oomAdj":I
    :goto_1
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 8564
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 8565
    new-instance v1, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v1}, Landroid/os/Debug$MemoryInfo;-><init>()V

    aput-object v1, v8, v0

    .line 8566
    aget v1, p1, v0

    aget-object v2, v8, v0

    invoke-static {v1, v2}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)V

    .line 8567
    if-eqz v10, :cond_1

    .line 8568
    monitor-enter p0

    .line 8569
    :try_start_3
    iget-object v1, v10, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v1, :cond_0

    iget v1, v10, Lcom/android/server/am/ProcessRecord;->setAdj:I

    if-ne v1, v9, :cond_0

    .line 8571
    iget-object v1, v10, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    aget-object v2, v8, v0

    invoke-virtual {v2}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v2

    int-to-long v2, v2

    aget-object v4, v8, v0

    invoke-virtual {v4}, Landroid/os/Debug$MemoryInfo;->getTotalUss()I

    move-result v4

    int-to-long v4, v4

    const/4 v6, 0x0

    iget-object v7, v10, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual/range {v1 .. v7}, Lcom/android/internal/app/ProcessStats$ProcessState;->addPss(JJZLandroid/util/ArrayMap;)V

    .line 8574
    :cond_0
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    .line 8556
    :cond_1
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .end local v9    # "oomAdj":I
    :cond_2
    move v9, v11

    .line 8562
    goto :goto_1

    .line 8563
    .end local v10    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v1

    :try_start_4
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    throw v1

    .line 8564
    :catchall_1
    move-exception v1

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    throw v1

    .line 8574
    .restart local v9    # "oomAdj":I
    .restart local v10    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_2
    move-exception v1

    :try_start_6
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    throw v1

    .line 8577
    .end local v9    # "oomAdj":I
    .end local v10    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_3
    return-object v8
.end method

.method public getProcessPss([I)[J
    .locals 13
    .param p1, "pids"    # [I

    .prologue
    const/4 v12, 0x0

    .line 8582
    const-string/jumbo v1, "getProcessPss"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 8583
    array-length v1, p1

    new-array v10, v1, [J

    .line 8584
    .local v10, "pss":[J
    array-length v1, p1

    add-int/lit8 v0, v1, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_3

    .line 8587
    monitor-enter p0

    .line 8588
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8589
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    aget v3, p1, v0

    invoke-virtual {v1, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/am/ProcessRecord;

    .line 8590
    .local v9, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v9, :cond_2

    iget v8, v9, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 8591
    .local v8, "oomAdj":I
    :goto_1
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 8592
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 8593
    const/4 v1, 0x1

    new-array v11, v1, [J

    .line 8594
    .local v11, "tmpUss":[J
    aget v1, p1, v0

    const/4 v2, 0x0

    invoke-static {v1, v11, v2}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v2

    aput-wide v2, v10, v0

    .line 8595
    if-eqz v9, :cond_1

    .line 8596
    monitor-enter p0

    .line 8597
    :try_start_3
    iget-object v1, v9, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v1, :cond_0

    iget v1, v9, Lcom/android/server/am/ProcessRecord;->setAdj:I

    if-ne v1, v8, :cond_0

    .line 8599
    iget-object v1, v9, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    aget-wide v2, v10, v0

    const/4 v4, 0x0

    aget-wide v4, v11, v4

    const/4 v6, 0x0

    iget-object v7, v9, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual/range {v1 .. v7}, Lcom/android/internal/app/ProcessStats$ProcessState;->addPss(JJZLandroid/util/ArrayMap;)V

    .line 8601
    :cond_0
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    .line 8584
    :cond_1
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .end local v8    # "oomAdj":I
    .end local v11    # "tmpUss":[J
    :cond_2
    move v8, v12

    .line 8590
    goto :goto_1

    .line 8591
    .end local v9    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v1

    :try_start_4
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    throw v1

    .line 8592
    :catchall_1
    move-exception v1

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    throw v1

    .line 8601
    .restart local v8    # "oomAdj":I
    .restart local v9    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v11    # "tmpUss":[J
    :catchall_2
    move-exception v1

    :try_start_6
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    throw v1

    .line 8604
    .end local v8    # "oomAdj":I
    .end local v9    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v11    # "tmpUss":[J
    :cond_3
    return-object v10
.end method

.method final getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;
    .locals 10
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .param p3, "keepIfLarge"    # Z

    .prologue
    .line 4893
    const/16 v5, 0x3e8

    if-ne p2, v5, :cond_3

    .line 4897
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v5}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v5

    invoke-virtual {v5, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/util/SparseArray;

    .line 4898
    .local v4, "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    if-nez v4, :cond_0

    const/4 v5, 0x0

    .line 4930
    .end local v4    # "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    :goto_0
    return-object v5

    .line 4900
    .restart local v4    # "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    :cond_0
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 4901
    .local v2, "procCount":I
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_1
    if-ge v0, v2, :cond_3

    .line 4902
    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v3

    .line 4903
    .local v3, "procUid":I
    invoke-static {v3}, Landroid/os/UserHandle;->isApp(I)Z

    move-result v5

    if-nez v5, :cond_1

    invoke-static {v3, p2}, Landroid/os/UserHandle;->isSameUser(II)Z

    move-result v5

    if-nez v5, :cond_2

    .line 4901
    :cond_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 4907
    :cond_2
    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ProcessRecord;

    goto :goto_0

    .line 4910
    .end local v0    # "i":I
    .end local v2    # "procCount":I
    .end local v3    # "procUid":I
    .end local v4    # "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    :cond_3
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v5, p1, p2}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 4919
    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v1, :cond_5

    if-nez p3, :cond_5

    iget v5, p0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    if-lez v5, :cond_5

    iget v5, v1, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v6, 0x10

    if-lt v5, v6, :cond_5

    .line 4923
    iget-wide v6, v1, Lcom/android/server/am/ProcessRecord;->lastCachedPss:J

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v5}, Lcom/android/server/am/ProcessList;->getCachedRestoreThresholdKb()J

    move-result-wide v8

    cmp-long v5, v6, v8

    if-ltz v5, :cond_5

    .line 4924
    iget-object v5, v1, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    if-eqz v5, :cond_4

    .line 4925
    iget-object v5, v1, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    iget-object v6, v1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    iget-wide v8, v1, Lcom/android/server/am/ProcessRecord;->lastCachedPss:J

    invoke-virtual {v5, v6, v8, v9}, Lcom/android/internal/app/ProcessStats$ProcessState;->reportCachedKill(Landroid/util/ArrayMap;J)V

    .line 4927
    :cond_4
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    iget-wide v6, v1, Lcom/android/server/am/ProcessRecord;->lastCachedPss:J

    invoke-static {v6, v7}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v6, "k from cached"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    const/4 v6, 0x1

    invoke-virtual {v1, v5, v6}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    :cond_5
    move-object v5, v1

    .line 4930
    goto :goto_0
.end method

.method public getProcessStatesForPIDs([I[I)V
    .locals 5
    .param p1, "pids"    # [I
    .param p2, "states"    # [I

    .prologue
    .line 10741
    if-nez p1, :cond_0

    .line 10742
    new-instance v2, Ljava/lang/NullPointerException;

    const-string/jumbo v3, "pids"

    invoke-direct {v2, v3}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 10743
    :cond_0
    if-nez p2, :cond_1

    .line 10744
    new-instance v2, Ljava/lang/NullPointerException;

    const-string/jumbo v3, "states"

    invoke-direct {v2, v3}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 10745
    :cond_1
    array-length v2, p1

    array-length v3, p2

    if-eq v2, v3, :cond_2

    .line 10746
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v3, "input and output arrays have different lengths!"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 10749
    :cond_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v3

    .line 10750
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    :try_start_0
    array-length v2, p1

    if-ge v0, v2, :cond_4

    .line 10751
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    aget v4, p1, v0

    invoke-virtual {v2, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 10752
    .local v1, "pr":Lcom/android/server/am/ProcessRecord;
    if-nez v1, :cond_3

    const/4 v2, -0x1

    :goto_1
    aput v2, p2, v0

    .line 10750
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 10752
    :cond_3
    iget v2, v1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    goto :goto_1

    .line 10755
    .end local v1    # "pr":Lcom/android/server/am/ProcessRecord;
    :cond_4
    monitor-exit v3

    .line 10756
    return-void

    .line 10755
    :catchall_0
    move-exception v2

    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method public getProcessesInErrorState()Ljava/util/List;
    .locals 10
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List",
            "<",
            "Landroid/app/ActivityManager$ProcessErrorStateInfo;",
            ">;"
        }
    .end annotation

    .prologue
    const/4 v0, 0x1

    .line 18327
    const-string/jumbo v7, "getProcessesInErrorState"

    invoke-virtual {p0, v7}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 18329
    const/4 v2, 0x0

    .line 18331
    .local v2, "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    const-string v7, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v8

    invoke-static {v7, v8}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v7

    if-nez v7, :cond_0

    .line 18333
    .local v0, "allUsers":Z
    :goto_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    invoke-static {v7}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v6

    .line 18335
    .local v6, "userId":I
    monitor-enter p0

    .line 18338
    :try_start_0
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v7

    add-int/lit8 v4, v7, -0x1

    .local v4, "i":I
    move-object v3, v2

    .end local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .local v3, "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    :goto_1
    if-ltz v4, :cond_7

    .line 18339
    :try_start_1
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v7, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 18340
    .local v1, "app":Lcom/android/server/am/ProcessRecord;
    if-nez v0, :cond_1

    iget v7, v1, Lcom/android/server/am/ProcessRecord;->userId:I

    if-eq v7, v6, :cond_1

    move-object v2, v3

    .line 18338
    .end local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    :goto_2
    add-int/lit8 v4, v4, -0x1

    move-object v3, v2

    .end local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    goto :goto_1

    .line 18331
    .end local v0    # "allUsers":Z
    .end local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .end local v4    # "i":I
    .end local v6    # "userId":I
    .restart local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    :cond_0
    const/4 v0, 0x0

    goto :goto_0

    .line 18343
    .end local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v0    # "allUsers":Z
    .restart local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v4    # "i":I
    .restart local v6    # "userId":I
    :cond_1
    iget-object v7, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v7, :cond_6

    iget-boolean v7, v1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-nez v7, :cond_2

    iget-boolean v7, v1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-eqz v7, :cond_6

    .line 18346
    :cond_2
    const/4 v5, 0x0

    .line 18347
    .local v5, "report":Landroid/app/ActivityManager$ProcessErrorStateInfo;
    iget-boolean v7, v1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-eqz v7, :cond_4

    .line 18348
    iget-object v5, v1, Lcom/android/server/am/ProcessRecord;->crashingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    .line 18353
    :cond_3
    :goto_3
    if-eqz v5, :cond_5

    .line 18354
    if-nez v3, :cond_8

    .line 18355
    new-instance v2, Ljava/util/ArrayList;

    const/4 v7, 0x1

    invoke-direct {v2, v7}, Ljava/util/ArrayList;-><init>(I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 18357
    .end local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    :goto_4
    :try_start_2
    invoke-interface {v2, v5}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 18365
    .end local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v4    # "i":I
    .end local v5    # "report":Landroid/app/ActivityManager$ProcessErrorStateInfo;
    :catchall_0
    move-exception v7

    :goto_5
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v7

    .line 18349
    .end local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v4    # "i":I
    .restart local v5    # "report":Landroid/app/ActivityManager$ProcessErrorStateInfo;
    :cond_4
    :try_start_3
    iget-boolean v7, v1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-eqz v7, :cond_3

    .line 18350
    iget-object v5, v1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    goto :goto_3

    .line 18359
    :cond_5
    const-string v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Missing app error report, app = "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    iget-object v9, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " crashing = "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    iget-boolean v9, v1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " notResponding = "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    iget-boolean v9, v1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .end local v5    # "report":Landroid/app/ActivityManager$ProcessErrorStateInfo;
    :cond_6
    move-object v2, v3

    .end local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    goto :goto_2

    .line 18365
    .end local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    :cond_7
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 18367
    return-object v3

    .line 18365
    :catchall_1
    move-exception v7

    move-object v2, v3

    .end local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    goto :goto_5

    .end local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v5    # "report":Landroid/app/ActivityManager$ProcessErrorStateInfo;
    :cond_8
    move-object v2, v3

    .end local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    goto :goto_4
.end method

.method public getProviderMimeType(Landroid/net/Uri;I)Ljava/lang/String;
    .locals 12
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "userId"    # I

    .prologue
    const/4 v8, 0x0

    .line 15024
    const-string/jumbo v9, "getProviderMimeType"

    invoke-virtual {p0, v9}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 15025
    invoke-virtual {p1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v5

    .line 15026
    .local v5, "name":Ljava/lang/String;
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 15027
    .local v1, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 15028
    .local v0, "callingPid":I
    const-wide/16 v6, 0x0

    .line 15029
    .local v6, "ident":J
    const/4 v2, 0x0

    .line 15030
    .local v2, "clearedIdentity":Z
    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService;->unsafeConvertIncomingUser(I)I

    move-result p2

    .line 15031
    invoke-direct {p0, v0, v1, p2}, Lcom/android/server/am/ActivityManagerService;->canClearIdentity(III)Z

    move-result v9

    if-eqz v9, :cond_0

    .line 15032
    const/4 v2, 0x1

    .line 15033
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 15035
    :cond_0
    const/4 v4, 0x0

    .line 15037
    .local v4, "holder":Landroid/app/IActivityManager$ContentProviderHolder;
    const/4 v9, 0x0

    :try_start_0
    invoke-direct {p0, v5, v9, p2}, Lcom/android/server/am/ActivityManagerService;->getContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v4

    .line 15038
    if-eqz v4, :cond_3

    .line 15039
    iget-object v9, v4, Landroid/app/IActivityManager$ContentProviderHolder;->provider:Landroid/content/IContentProvider;

    invoke-interface {v9, p1}, Landroid/content/IContentProvider;->getType(Landroid/net/Uri;)Ljava/lang/String;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    move-result-object v8

    .line 15046
    if-nez v2, :cond_1

    .line 15047
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 15050
    :cond_1
    if-eqz v4, :cond_2

    .line 15051
    const/4 v9, 0x0

    :try_start_1
    invoke-direct {p0, v5, v9, p2}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 15054
    :cond_2
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 15058
    :goto_0
    return-object v8

    .line 15054
    :catchall_0
    move-exception v8

    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v8

    .line 15046
    :cond_3
    if-nez v2, :cond_4

    .line 15047
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 15050
    :cond_4
    if-eqz v4, :cond_5

    .line 15051
    const/4 v9, 0x0

    :try_start_2
    invoke-direct {p0, v5, v9, p2}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 15054
    :cond_5
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    :catchall_1
    move-exception v8

    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v8

    .line 15041
    :catch_0
    move-exception v3

    .line 15042
    .local v3, "e":Landroid/os/RemoteException;
    :try_start_3
    const-string v9, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Content provider dead retrieving "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10, v3}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    .line 15046
    if-nez v2, :cond_6

    .line 15047
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 15050
    :cond_6
    if-eqz v4, :cond_7

    .line 15051
    const/4 v9, 0x0

    :try_start_4
    invoke-direct {p0, v5, v9, p2}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 15054
    :cond_7
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    :catchall_2
    move-exception v8

    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v8

    .line 15046
    .end local v3    # "e":Landroid/os/RemoteException;
    :catchall_3
    move-exception v8

    if-nez v2, :cond_8

    .line 15047
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 15050
    :cond_8
    if-eqz v4, :cond_9

    .line 15051
    const/4 v9, 0x0

    :try_start_5
    invoke-direct {p0, v5, v9, p2}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_4

    .line 15054
    :cond_9
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v8

    :catchall_4
    move-exception v8

    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v8
.end method

.method getRecentTaskSizeLocked(II)I
    .locals 7
    .param p1, "userId"    # I
    .param p2, "maxCount"    # I

    .prologue
    .line 12711
    const/4 v1, 0x0

    .line 12712
    .local v1, "count":I
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    if-eqz v5, :cond_4

    .line 12713
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v5}, Lcom/android/server/am/RecentTasks;->size()I

    move-result v0

    .line 12714
    .local v0, "N":I
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_0
    if-ge v3, v0, :cond_4

    .line 12715
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v5, v3}, Lcom/android/server/am/RecentTasks;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/TaskRecord;

    .line 12717
    .local v4, "tr":Lcom/android/server/am/TaskRecord;
    iget v5, v4, Lcom/android/server/am/TaskRecord;->userId:I

    if-eq v5, p1, :cond_1

    .line 12714
    :cond_0
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 12718
    :cond_1
    if-eqz v3, :cond_2

    iget-object v5, v4, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    if-eqz v5, :cond_2

    iget-object v5, v4, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v5}, Landroid/content/Intent;->getFlags()I

    move-result v5

    const/high16 v6, 0x800000

    and-int/2addr v5, v6

    if-nez v5, :cond_0

    .line 12720
    :cond_2
    invoke-direct {p0, v4}, Lcom/android/server/am/ActivityManagerService;->canAddRecentTaskLocked(Lcom/android/server/am/TaskRecord;)Z

    move-result v5

    if-eqz v5, :cond_3

    .line 12721
    add-int/lit8 v1, v1, 0x1

    .line 12723
    :cond_3
    if-gt p2, v1, :cond_0

    move v2, v1

    .line 12729
    .end local v0    # "N":I
    .end local v1    # "count":I
    .end local v3    # "i":I
    .end local v4    # "tr":Lcom/android/server/am/TaskRecord;
    .local v2, "count":I
    :goto_1
    return v2

    .end local v2    # "count":I
    .restart local v1    # "count":I
    :cond_4
    move v2, v1

    .end local v1    # "count":I
    .restart local v2    # "count":I
    goto :goto_1
.end method

.method public getRecentTasks(III)Ljava/util/List;
    .locals 20
    .param p1, "maxNum"    # I
    .param p2, "flags"    # I
    .param p3, "userId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(III)",
            "Ljava/util/List",
            "<",
            "Landroid/app/ActivityManager$RecentTaskInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 12618
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 12619
    .local v4, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    const/4 v6, 0x0

    const/4 v7, 0x2

    const-string/jumbo v8, "getRecentTasks"

    const/4 v9, 0x0

    move-object/from16 v2, p0

    move/from16 v5, p3

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p3

    .line 12622
    and-int/lit8 v2, p2, 0x4

    if-eqz v2, :cond_1

    const/4 v13, 0x1

    .line 12623
    .local v13, "includeProfiles":Z
    :goto_0
    and-int/lit8 v2, p2, 0x1

    if-eqz v2, :cond_2

    const/16 v19, 0x1

    .line 12624
    .local v19, "withExcluded":Z
    :goto_1
    monitor-enter p0

    .line 12625
    :try_start_0
    const-string/jumbo v2, "getRecentTasks"

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->isGetTasksAllowed(Ljava/lang/String;II)Z

    move-result v10

    .line 12627
    .local v10, "allowed":Z
    const-string v2, "android.permission.GET_DETAILED_TASKS"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-nez v2, :cond_3

    const/4 v11, 0x1

    .line 12631
    .local v11, "detailed":Z
    :goto_2
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v2}, Lcom/android/server/am/RecentTasks;->size()I

    move-result v15

    .line 12632
    .local v15, "recentsCount":I
    new-instance v16, Ljava/util/ArrayList;

    move/from16 v0, p1

    if-ge v0, v15, :cond_4

    move/from16 v2, p1

    :goto_3
    move-object/from16 v0, v16

    invoke-direct {v0, v2}, Ljava/util/ArrayList;-><init>(I)V

    .line 12636
    .local v16, "res":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ActivityManager$RecentTaskInfo;>;"
    if-eqz v13, :cond_5

    .line 12637
    move-object/from16 v0, p0

    move/from16 v1, p3

    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService;->getProfileIdsLocked(I)Ljava/util/Set;

    move-result-object v14

    .line 12641
    .local v14, "includedUsers":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    :goto_4
    invoke-static/range {p3 .. p3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v14, v2}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 12643
    const/4 v12, 0x0

    .local v12, "i":I
    :goto_5
    if-ge v12, v15, :cond_d

    if-lez p1, :cond_d

    .line 12644
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v2, v12}, Lcom/android/server/am/RecentTasks;->get(I)Ljava/lang/Object;

    move-result-object v18

    check-cast v18, Lcom/android/server/am/TaskRecord;

    .line 12646
    .local v18, "tr":Lcom/android/server/am/TaskRecord;
    move-object/from16 v0, v18

    iget v2, v0, Lcom/android/server/am/TaskRecord;->userId:I

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v14, v2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_6

    .line 12643
    :cond_0
    :goto_6
    add-int/lit8 v12, v12, 0x1

    goto :goto_5

    .line 12622
    .end local v10    # "allowed":Z
    .end local v11    # "detailed":Z
    .end local v12    # "i":I
    .end local v13    # "includeProfiles":Z
    .end local v14    # "includedUsers":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    .end local v15    # "recentsCount":I
    .end local v16    # "res":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ActivityManager$RecentTaskInfo;>;"
    .end local v18    # "tr":Lcom/android/server/am/TaskRecord;
    .end local v19    # "withExcluded":Z
    :cond_1
    const/4 v13, 0x0

    goto :goto_0

    .line 12623
    .restart local v13    # "includeProfiles":Z
    :cond_2
    const/16 v19, 0x0

    goto :goto_1

    .line 12627
    .restart local v10    # "allowed":Z
    .restart local v19    # "withExcluded":Z
    :cond_3
    const/4 v11, 0x0

    goto :goto_2

    .restart local v11    # "detailed":Z
    .restart local v15    # "recentsCount":I
    :cond_4
    move v2, v15

    .line 12632
    goto :goto_3

    .line 12639
    .restart local v16    # "res":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ActivityManager$RecentTaskInfo;>;"
    :cond_5
    new-instance v14, Ljava/util/HashSet;

    invoke-direct {v14}, Ljava/util/HashSet;-><init>()V

    .restart local v14    # "includedUsers":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    goto :goto_4

    .line 12657
    .restart local v12    # "i":I
    .restart local v18    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_6
    if-eqz v12, :cond_7

    if-nez v19, :cond_7

    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    if-eqz v2, :cond_7

    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v2}, Landroid/content/Intent;->getFlags()I

    move-result v2

    const/high16 v3, 0x800000

    and-int/2addr v2, v3

    if-nez v2, :cond_0

    .line 12662
    :cond_7
    if-nez v10, :cond_8

    .line 12665
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/am/TaskRecord;->isHomeTask()Z

    move-result v2

    if-nez v2, :cond_8

    move-object/from16 v0, v18

    iget v2, v0, Lcom/android/server/am/TaskRecord;->effectiveUid:I

    if-ne v2, v4, :cond_0

    .line 12676
    :cond_8
    and-int/lit8 v2, p2, 0x8

    if-eqz v2, :cond_9

    .line 12677
    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    if-eqz v2, :cond_9

    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStack;->isHomeStack()Z

    move-result v2

    if-nez v2, :cond_0

    .line 12683
    :cond_9
    move-object/from16 v0, v18

    iget-boolean v2, v0, Lcom/android/server/am/TaskRecord;->autoRemoveRecents:Z

    if-eqz v2, :cond_a

    invoke-virtual/range {v18 .. v18}, Lcom/android/server/am/TaskRecord;->getTopActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    if-eqz v2, :cond_0

    .line 12689
    :cond_a
    and-int/lit8 v2, p2, 0x2

    if-eqz v2, :cond_b

    move-object/from16 v0, v18

    iget-boolean v2, v0, Lcom/android/server/am/TaskRecord;->isAvailable:Z

    if-eqz v2, :cond_0

    .line 12696
    :cond_b
    move-object/from16 v0, p0

    move-object/from16 v1, v18

    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService;->createRecentTaskInfoFromTaskRecord(Lcom/android/server/am/TaskRecord;)Landroid/app/ActivityManager$RecentTaskInfo;

    move-result-object v17

    .line 12697
    .local v17, "rti":Landroid/app/ActivityManager$RecentTaskInfo;
    if-nez v11, :cond_c

    .line 12698
    move-object/from16 v0, v17

    iget-object v3, v0, Landroid/app/ActivityManager$RecentTaskInfo;->baseIntent:Landroid/content/Intent;

    const/4 v2, 0x0

    check-cast v2, Landroid/os/Bundle;

    invoke-virtual {v3, v2}, Landroid/content/Intent;->replaceExtras(Landroid/os/Bundle;)Landroid/content/Intent;

    .line 12701
    :cond_c
    invoke-virtual/range {v16 .. v17}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 12702
    add-int/lit8 p1, p1, -0x1

    goto :goto_6

    .line 12705
    .end local v17    # "rti":Landroid/app/ActivityManager$RecentTaskInfo;
    .end local v18    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_d
    monitor-exit p0

    return-object v16

    .line 12706
    .end local v10    # "allowed":Z
    .end local v11    # "detailed":Z
    .end local v12    # "i":I
    .end local v14    # "includedUsers":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    .end local v15    # "recentsCount":I
    .end local v16    # "res":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ActivityManager$RecentTaskInfo;>;"
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method final getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;
    .locals 2
    .param p1, "thread"    # Landroid/app/IApplicationThread;

    .prologue
    const/4 v1, 0x0

    .line 7412
    if-nez p1, :cond_1

    .line 7417
    :cond_0
    :goto_0
    return-object v1

    .line 7416
    :cond_1
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getLRURecordIndexForAppLocked(Landroid/app/IApplicationThread;)I

    move-result v0

    .line 7417
    .local v0, "appIndex":I
    if-ltz v0, :cond_0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    goto :goto_0
.end method

.method public getRequestedOrientation(Landroid/os/IBinder;)I
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6969
    monitor-enter p0

    .line 6970
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 6971
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 6972
    const/4 v1, -0x1

    monitor-exit p0

    .line 6974
    :goto_0
    return v1

    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService;->getAppOrientation(Landroid/view/IApplicationToken;)I

    move-result v1

    monitor-exit p0

    goto :goto_0

    .line 6975
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public getRunningAppProcesses()Ljava/util/List;
    .locals 13
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List",
            "<",
            "Landroid/app/ActivityManager$RunningAppProcessInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 18403
    const-string/jumbo v10, "getRunningAppProcesses"

    invoke-virtual {p0, v10}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 18405
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 18408
    .local v3, "callingUid":I
    const/4 v7, 0x0

    .line 18409
    .local v7, "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    const-string v10, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-static {v10, v3}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v10

    if-nez v10, :cond_1

    const/4 v1, 0x1

    .line 18411
    .local v1, "allUsers":Z
    :goto_0
    invoke-static {v3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v9

    .line 18412
    .local v9, "userId":I
    const-string/jumbo v10, "getRunningAppProcesses"

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v11

    invoke-direct {p0, v10, v11, v3}, Lcom/android/server/am/ActivityManagerService;->isGetTasksAllowed(Ljava/lang/String;II)Z

    move-result v0

    .line 18415
    .local v0, "allUids":Z
    monitor-enter p0

    .line 18417
    :try_start_0
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v10}, Ljava/util/ArrayList;->size()I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v10

    add-int/lit8 v5, v10, -0x1

    .local v5, "i":I
    move-object v8, v7

    .end local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .local v8, "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :goto_1
    if-ltz v5, :cond_6

    .line 18418
    :try_start_1
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v10, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 18419
    .local v2, "app":Lcom/android/server/am/ProcessRecord;
    if-nez v1, :cond_0

    iget v10, v2, Lcom/android/server/am/ProcessRecord;->userId:I

    if-ne v10, v9, :cond_8

    :cond_0
    if-nez v0, :cond_2

    iget v10, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    if-eq v10, v3, :cond_2

    move-object v7, v8

    .line 18417
    .end local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :goto_2
    add-int/lit8 v5, v5, -0x1

    move-object v8, v7

    .end local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    goto :goto_1

    .line 18409
    .end local v0    # "allUids":Z
    .end local v1    # "allUsers":Z
    .end local v2    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v5    # "i":I
    .end local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .end local v9    # "userId":I
    .restart local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :cond_1
    const/4 v1, 0x0

    goto :goto_0

    .line 18423
    .end local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v0    # "allUids":Z
    .restart local v1    # "allUsers":Z
    .restart local v2    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v5    # "i":I
    .restart local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v9    # "userId":I
    :cond_2
    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v10, :cond_8

    iget-boolean v10, v2, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-nez v10, :cond_8

    iget-boolean v10, v2, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-nez v10, :cond_8

    .line 18425
    new-instance v4, Landroid/app/ActivityManager$RunningAppProcessInfo;

    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v11, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v2}, Lcom/android/server/am/ProcessRecord;->getPackageList()[Ljava/lang/String;

    move-result-object v12

    invoke-direct {v4, v10, v11, v12}, Landroid/app/ActivityManager$RunningAppProcessInfo;-><init>(Ljava/lang/String;I[Ljava/lang/String;)V

    .line 18428
    .local v4, "currApp":Landroid/app/ActivityManager$RunningAppProcessInfo;
    invoke-direct {p0, v2, v4}, Lcom/android/server/am/ActivityManagerService;->fillInProcMemInfo(Lcom/android/server/am/ProcessRecord;Landroid/app/ActivityManager$RunningAppProcessInfo;)V

    .line 18429
    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    instance-of v10, v10, Lcom/android/server/am/ProcessRecord;

    if-eqz v10, :cond_5

    .line 18430
    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    check-cast v10, Lcom/android/server/am/ProcessRecord;

    iget v10, v10, Lcom/android/server/am/ProcessRecord;->pid:I

    iput v10, v4, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonPid:I

    .line 18431
    iget v10, v2, Lcom/android/server/am/ProcessRecord;->adjSourceProcState:I

    invoke-static {v10}, Landroid/app/ActivityManager$RunningAppProcessInfo;->procStateToImportance(I)I

    move-result v10

    iput v10, v4, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonImportance:I

    .line 18438
    :cond_3
    :goto_3
    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    instance-of v10, v10, Landroid/content/ComponentName;

    if-eqz v10, :cond_4

    .line 18439
    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    check-cast v10, Landroid/content/ComponentName;

    iput-object v10, v4, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonComponent:Landroid/content/ComponentName;

    .line 18443
    :cond_4
    if-nez v8, :cond_7

    .line 18444
    new-instance v7, Ljava/util/ArrayList;

    invoke-direct {v7}, Ljava/util/ArrayList;-><init>()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 18446
    .end local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :goto_4
    :try_start_2
    invoke-interface {v7, v4}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 18449
    .end local v2    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v4    # "currApp":Landroid/app/ActivityManager$RunningAppProcessInfo;
    .end local v5    # "i":I
    :catchall_0
    move-exception v10

    :goto_5
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v10

    .line 18434
    .end local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v2    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v4    # "currApp":Landroid/app/ActivityManager$RunningAppProcessInfo;
    .restart local v5    # "i":I
    .restart local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :cond_5
    :try_start_3
    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    instance-of v10, v10, Lcom/android/server/am/ActivityRecord;

    if-eqz v10, :cond_3

    .line 18435
    iget-object v6, v2, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    check-cast v6, Lcom/android/server/am/ActivityRecord;

    .line 18436
    .local v6, "r":Lcom/android/server/am/ActivityRecord;
    iget-object v10, v6, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v10, :cond_3

    iget-object v10, v6, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v10, v10, Lcom/android/server/am/ProcessRecord;->pid:I

    iput v10, v4, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonPid:I

    goto :goto_3

    .line 18449
    .end local v2    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v4    # "currApp":Landroid/app/ActivityManager$RunningAppProcessInfo;
    .end local v6    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_1
    move-exception v10

    move-object v7, v8

    .end local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    goto :goto_5

    .end local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :cond_6
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 18450
    return-object v8

    .restart local v2    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v4    # "currApp":Landroid/app/ActivityManager$RunningAppProcessInfo;
    :cond_7
    move-object v7, v8

    .end local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    goto :goto_4

    .end local v4    # "currApp":Landroid/app/ActivityManager$RunningAppProcessInfo;
    .end local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :cond_8
    move-object v7, v8

    .end local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    goto :goto_2
.end method

.method public getRunningExternalApplications()Ljava/util/List;
    .locals 13
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List",
            "<",
            "Landroid/content/pm/ApplicationInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 18470
    const-string/jumbo v11, "getRunningExternalApplications"

    invoke-virtual {p0, v11}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 18471
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getRunningAppProcesses()Ljava/util/List;

    move-result-object v10

    .line 18472
    .local v10, "runningApps":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    .line 18473
    .local v9, "retList":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ApplicationInfo;>;"
    if-eqz v10, :cond_3

    invoke-interface {v10}, Ljava/util/List;->size()I

    move-result v11

    if-lez v11, :cond_3

    .line 18474
    new-instance v2, Ljava/util/HashSet;

    invoke-direct {v2}, Ljava/util/HashSet;-><init>()V

    .line 18475
    .local v2, "extList":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    invoke-interface {v10}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :cond_0
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v11

    if-eqz v11, :cond_1

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/ActivityManager$RunningAppProcessInfo;

    .line 18476
    .local v0, "app":Landroid/app/ActivityManager$RunningAppProcessInfo;
    iget-object v11, v0, Landroid/app/ActivityManager$RunningAppProcessInfo;->pkgList:[Ljava/lang/String;

    if-eqz v11, :cond_0

    .line 18477
    iget-object v1, v0, Landroid/app/ActivityManager$RunningAppProcessInfo;->pkgList:[Ljava/lang/String;

    .local v1, "arr$":[Ljava/lang/String;
    array-length v6, v1

    .local v6, "len$":I
    const/4 v4, 0x0

    .local v4, "i$":I
    :goto_0
    if-ge v4, v6, :cond_0

    aget-object v7, v1, v4

    .line 18478
    .local v7, "pkg":Ljava/lang/String;
    invoke-interface {v2, v7}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 18477
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 18482
    .end local v0    # "app":Landroid/app/ActivityManager$RunningAppProcessInfo;
    .end local v1    # "arr$":[Ljava/lang/String;
    .end local v4    # "i$":I
    .end local v6    # "len$":I
    .end local v7    # "pkg":Ljava/lang/String;
    :cond_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v8

    .line 18483
    .local v8, "pm":Landroid/content/pm/IPackageManager;
    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v3

    .local v3, "i$":Ljava/util/Iterator;
    :cond_2
    :goto_1
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v11

    if-eqz v11, :cond_3

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/lang/String;

    .line 18485
    .restart local v7    # "pkg":Ljava/lang/String;
    const/4 v11, 0x0

    :try_start_0
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v12

    invoke-interface {v8, v7, v11, v12}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v5

    .line 18486
    .local v5, "info":Landroid/content/pm/ApplicationInfo;
    iget v11, v5, Landroid/content/pm/ApplicationInfo;->flags:I

    const/high16 v12, 0x40000

    and-int/2addr v11, v12

    if-eqz v11, :cond_2

    .line 18487
    invoke-interface {v9, v5}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_1

    .line 18489
    .end local v5    # "info":Landroid/content/pm/ApplicationInfo;
    :catch_0
    move-exception v11

    goto :goto_1

    .line 18493
    .end local v2    # "extList":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    .end local v3    # "i$":Ljava/util/Iterator;
    .end local v7    # "pkg":Ljava/lang/String;
    .end local v8    # "pm":Landroid/content/pm/IPackageManager;
    :cond_3
    return-object v9
.end method

.method public getRunningServiceControlPanel(Landroid/content/ComponentName;)Landroid/app/PendingIntent;
    .locals 1
    .param p1, "name"    # Landroid/content/ComponentName;

    .prologue
    .line 21692
    const-string/jumbo v0, "getRunningServiceControlPanel"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 21693
    monitor-enter p0

    .line 21694
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActiveServices;->getRunningServiceControlPanelLocked(Landroid/content/ComponentName;)Landroid/app/PendingIntent;

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 21695
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getRunningUserIds()[I
    .locals 3

    .prologue
    .line 28268
    const-string v1, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    .line 28270
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: isUserRunning() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 28274
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 28275
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 28277
    .end local v0    # "msg":Ljava/lang/String;
    :cond_0
    monitor-enter p0

    .line 28278
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    monitor-exit p0

    return-object v1

    .line 28279
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public getSMpkgsList(Ljava/util/List;)V
    .locals 0
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;)V"
        }
    .end annotation

    .prologue
    .line 22764
    .local p1, "smPackagesList":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    return-void
.end method

.method getSamsungPinnedHomeIntent()Landroid/content/Intent;
    .locals 3

    .prologue
    .line 29471
    new-instance v0, Landroid/content/Intent;

    const-string v1, "android.intent.action.MAIN"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 29472
    .local v0, "intent":Landroid/content/Intent;
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v2, 0x1

    if-eq v1, v2, :cond_0

    .line 29473
    const-string v1, "com.samsung.android.dualscreen.intent.category.SAMSUNG_PINNED_HOME"

    invoke-virtual {v0, v1}, Landroid/content/Intent;->addCategory(Ljava/lang/String;)Landroid/content/Intent;

    .line 29475
    :cond_0
    return-object v0
.end method

.method public getServices(II)Ljava/util/List;
    .locals 1
    .param p1, "maxNum"    # I
    .param p2, "flags"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(II)",
            "Ljava/util/List",
            "<",
            "Landroid/app/ActivityManager$RunningServiceInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 21684
    const-string/jumbo v0, "getServices"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 21685
    monitor-enter p0

    .line 21686
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/ActiveServices;->getRunningServiceInfoLocked(II)Ljava/util/List;

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 21687
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method getSluggishDelay(Lcom/android/server/am/BroadcastQueue;)I
    .locals 10
    .param p1, "queue"    # Lcom/android/server/am/BroadcastQueue;

    .prologue
    const/4 v2, 0x0

    .line 23641
    iget v6, p1, Lcom/android/server/am/BroadcastQueue;->mQueueType:I

    const/4 v7, 0x4

    if-le v6, v7, :cond_0

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->isSNNEnabled()Z

    move-result v6

    if-nez v6, :cond_1

    .line 23705
    :cond_0
    :goto_0
    return v2

    .line 23644
    :cond_1
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v6}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v5

    .line 23645
    .local v5, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    invoke-virtual {v5}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn()Z

    move-result v6

    if-eqz v6, :cond_0

    .line 23650
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v6, v6, Lcom/android/server/am/ActivityStackSupervisor;->mLaunchingActivity:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v6}, Landroid/os/PowerManager$WakeLock;->isHeld()Z

    move-result v0

    .line 23651
    .local v0, "applaunching":Z
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    iget-wide v8, v8, Lcom/android/server/am/ActiveServices;->mLastServiceStartTime:J

    sub-long/2addr v6, v8

    long-to-int v3, v6

    .line 23652
    .local v3, "lastser":I
    iget v6, p1, Lcom/android/server/am/BroadcastQueue;->mQueueType:I

    const/4 v7, 0x5

    if-ge v6, v7, :cond_3

    .line 23653
    if-nez v0, :cond_2

    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->SNN_LAST_SERVICE_START:I

    if-ge v3, v6, :cond_0

    .line 23654
    :cond_2
    const-string v6, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "BGQ getDeferredInfo app launch "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget v8, p0, Lcom/android/server/am/ActivityManagerService;->SNN_DELAY_APP_LAUNCH:I

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 23655
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->SNN_DELAY_APP_LAUNCH:I

    goto :goto_0

    .line 23663
    :cond_3
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 23664
    const/4 v2, 0x0

    .line 23665
    .local v2, "delay":I
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v6}, Lcom/android/internal/os/ProcessCpuTracker;->getTotalCpuPercent()F

    move-result v6

    float-to-int v1, v6

    .line 23666
    .local v1, "cpup":I
    iget v4, p0, Lcom/android/server/am/ActivityManagerService;->mIOWaitPercentage:I

    .line 23676
    .local v4, "mIOWaitTime":I
    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->SNN_IO_WAIT_TH:I

    if-le v4, v6, :cond_4

    .line 23677
    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->SNN_IO_WAIT_TH:I

    add-int/lit8 v6, v6, -0x1

    sub-int v6, v4, v6

    iget v7, p0, Lcom/android/server/am/ActivityManagerService;->SNN_DELAY_UNIT:I

    mul-int/2addr v6, v7

    add-int/2addr v2, v6

    .line 23685
    :cond_4
    if-nez v0, :cond_5

    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->SNN_LAST_SERVICE_START:I

    if-ge v3, v6, :cond_6

    .line 23686
    :cond_5
    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->SNN_DELAY_APP_LAUNCH:I

    add-int/2addr v2, v6

    .line 23692
    :cond_6
    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->SNN_CPUTH:I

    if-le v1, v6, :cond_7

    .line 23693
    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->SNN_CPUTH:I

    add-int/lit8 v6, v6, -0x1

    sub-int v6, v1, v6

    iget v7, p0, Lcom/android/server/am/ActivityManagerService;->SNN_DELAY_UNIT:I

    mul-int/2addr v6, v7

    add-int/2addr v2, v6

    .line 23704
    :cond_7
    const-string v6, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, " getDeferredInfo final delay "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 23705
    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->SNN_MAX_DELAY:I

    if-gt v2, v6, :cond_8

    if-gez v2, :cond_0

    :cond_8
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->SNN_MAX_DELAY:I

    goto/16 :goto_0
.end method

.method public getStackInfo(I)Landroid/app/ActivityManager$StackInfo;
    .locals 4
    .param p1, "stackId"    # I

    .prologue
    .line 13527
    const-string v2, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v3, "getStackInfo()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13529
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 13531
    .local v0, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 13532
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->getStackInfoLocked(I)Landroid/app/ActivityManager$StackInfo;

    move-result-object v2

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13535
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-object v2

    .line 13533
    :catchall_0
    move-exception v2

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 13535
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
.end method

.method public getTagForIntentSender(Landroid/content/IIntentSender;Ljava/lang/String;)Ljava/lang/String;
    .locals 4
    .param p1, "pendingResult"    # Landroid/content/IIntentSender;
    .param p2, "prefix"    # Ljava/lang/String;

    .prologue
    const/4 v2, 0x0

    .line 10526
    instance-of v3, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v3, :cond_0

    .line 10536
    :goto_0
    return-object v2

    .line 10530
    :cond_0
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v1, v0

    .line 10531
    .local v1, "res":Lcom/android/server/am/PendingIntentRecord;
    monitor-enter p0
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    .line 10532
    :try_start_1
    invoke-virtual {p0, v1, p2}, Lcom/android/server/am/ActivityManagerService;->getTagForIntentSenderLocked(Lcom/android/server/am/PendingIntentRecord;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    monitor-exit p0

    move-object v2, v3

    goto :goto_0

    .line 10533
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    throw v3
    :try_end_2
    .catch Ljava/lang/ClassCastException; {:try_start_2 .. :try_end_2} :catch_0

    .line 10534
    .end local v1    # "res":Lcom/android/server/am/PendingIntentRecord;
    :catch_0
    move-exception v3

    goto :goto_0
.end method

.method getTagForIntentSenderLocked(Lcom/android/server/am/PendingIntentRecord;Ljava/lang/String;)Ljava/lang/String;
    .locals 3
    .param p1, "res"    # Lcom/android/server/am/PendingIntentRecord;
    .param p2, "prefix"    # Ljava/lang/String;

    .prologue
    .line 10540
    iget-object v2, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v0, v2, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    .line 10541
    .local v0, "intent":Landroid/content/Intent;
    if-eqz v0, :cond_5

    .line 10542
    iget-object v2, p1, Lcom/android/server/am/PendingIntentRecord;->lastTag:Ljava/lang/String;

    if-eqz v2, :cond_1

    iget-object v2, p1, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    if-ne v2, p2, :cond_1

    iget-object v2, p1, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    if-eqz v2, :cond_0

    iget-object v2, p1, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    invoke-virtual {v2, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1

    .line 10544
    :cond_0
    iget-object v2, p1, Lcom/android/server/am/PendingIntentRecord;->lastTag:Ljava/lang/String;

    .line 10560
    :goto_0
    return-object v2

    .line 10546
    :cond_1
    iput-object p2, p1, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    .line 10547
    new-instance v1, Ljava/lang/StringBuilder;

    const/16 v2, 0x80

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 10548
    .local v1, "sb":Ljava/lang/StringBuilder;
    if-eqz p2, :cond_2

    .line 10549
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10551
    :cond_2
    invoke-virtual {v0}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    if-eqz v2, :cond_3

    .line 10552
    invoke-virtual {v0}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10558
    :goto_1
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    iput-object v2, p1, Lcom/android/server/am/PendingIntentRecord;->lastTag:Ljava/lang/String;

    goto :goto_0

    .line 10553
    :cond_3
    invoke-virtual {v0}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v2

    if-eqz v2, :cond_4

    .line 10554
    invoke-virtual {v0}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v2

    invoke-virtual {v2, v1}, Landroid/content/ComponentName;->appendShortString(Ljava/lang/StringBuilder;)V

    goto :goto_1

    .line 10556
    :cond_4
    const-string v2, "?"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_1

    .line 10560
    .end local v1    # "sb":Ljava/lang/StringBuilder;
    :cond_5
    const/4 v2, 0x0

    goto :goto_0
.end method

.method public getTaskDescriptionIcon(Ljava/lang/String;)Landroid/graphics/Bitmap;
    .locals 3
    .param p1, "filename"    # Ljava/lang/String;

    .prologue
    .line 12920
    invoke-static {p1}, Landroid/os/FileUtils;->isValidExtFilename(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    const-string v0, "_activity_icon_"

    invoke-virtual {p1, v0}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_1

    .line 12922
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Bad filename: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 12924
    :cond_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    invoke-virtual {v0, p1}, Lcom/android/server/am/TaskPersister;->getTaskDescriptionIcon(Ljava/lang/String;)Landroid/graphics/Bitmap;

    move-result-object v0

    return-object v0
.end method

.method public getTaskForActivity(Landroid/os/IBinder;Z)I
    .locals 1
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "onlyRoot"    # Z

    .prologue
    .line 13556
    monitor-enter p0

    .line 13557
    :try_start_0
    invoke-static {p1, p2}, Lcom/android/server/am/ActivityRecord;->getTaskForActivityLocked(Landroid/os/IBinder;Z)I

    move-result v0

    monitor-exit p0

    return v0

    .line 13558
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getTaskThumbnail(I)Landroid/app/ActivityManager$TaskThumbnail;
    .locals 3
    .param p1, "id"    # I

    .prologue
    .line 12757
    monitor-enter p0

    .line 12758
    :try_start_0
    const-string v1, "android.permission.READ_FRAME_BUFFER"

    const-string/jumbo v2, "getTaskThumbnail()"

    invoke-virtual {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 12760
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v2, 0x0

    invoke-virtual {v1, p1, v2}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(IZ)Lcom/android/server/am/TaskRecord;

    move-result-object v0

    .line 12761
    .local v0, "tr":Lcom/android/server/am/TaskRecord;
    if-eqz v0, :cond_0

    .line 12762
    invoke-virtual {v0}, Lcom/android/server/am/TaskRecord;->getTaskThumbnailLocked()Landroid/app/ActivityManager$TaskThumbnail;

    move-result-object v1

    monitor-exit p0

    .line 12765
    :goto_0
    return-object v1

    .line 12764
    :cond_0
    monitor-exit p0

    .line 12765
    const/4 v1, 0x0

    goto :goto_0

    .line 12764
    .end local v0    # "tr":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public getTasks(II)Ljava/util/List;
    .locals 1
    .param p1, "maxNum"    # I
    .param p2, "flags"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(II)",
            "Ljava/util/List",
            "<",
            "Landroid/app/ActivityManager$RunningTaskInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 12498
    const/4 v0, -0x1

    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->getTasks(III)Ljava/util/List;

    move-result-object v0

    return-object v0
.end method

.method public getTasks(III)Ljava/util/List;
    .locals 6
    .param p1, "maxNum"    # I
    .param p2, "flags"    # I
    .param p3, "displayId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(III)",
            "Ljava/util/List",
            "<",
            "Landroid/app/ActivityManager$RunningTaskInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 12504
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 12505
    .local v3, "callingUid":I
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 12507
    .local v2, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ActivityManager$RunningTaskInfo;>;"
    monitor-enter p0

    .line 12511
    :try_start_0
    const-string/jumbo v0, "getTasks"

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-direct {p0, v0, v1, v3}, Lcom/android/server/am/ActivityManagerService;->isGetTasksAllowed(Ljava/lang/String;II)Z

    move-result v4

    .line 12521
    .local v4, "allowed":Z
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move v1, p1

    move v5, p2

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityStackSupervisor;->getTasksLocked(ILjava/util/List;IZI)V

    .line 12523
    monitor-exit p0

    .line 12525
    return-object v2

    .line 12523
    .end local v4    # "allowed":Z
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getUidForIntentSender(Landroid/content/IIntentSender;)I
    .locals 3
    .param p1, "sender"    # Landroid/content/IIntentSender;

    .prologue
    .line 10451
    instance-of v2, p1, Lcom/android/server/am/PendingIntentRecord;

    if-eqz v2, :cond_0

    .line 10453
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v1, v0

    .line 10454
    .local v1, "res":Lcom/android/server/am/PendingIntentRecord;
    iget v2, v1, Lcom/android/server/am/PendingIntentRecord;->uid:I
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    .line 10458
    .end local v1    # "res":Lcom/android/server/am/PendingIntentRecord;
    :goto_0
    return v2

    .line 10455
    :catch_0
    move-exception v2

    .line 10458
    :cond_0
    const/4 v2, -0x1

    goto :goto_0
.end method

.method getUserManagerLocked()Lcom/android/server/pm/UserManagerService;
    .locals 2

    .prologue
    .line 28342
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    if-nez v1, :cond_0

    .line 28343
    const-string/jumbo v1, "user"

    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 28344
    .local v0, "b":Landroid/os/IBinder;
    invoke-static {v0}, Landroid/os/IUserManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/IUserManager;

    move-result-object v1

    check-cast v1, Lcom/android/server/pm/UserManagerService;

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    .line 28346
    .end local v0    # "b":Landroid/os/IBinder;
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    return-object v1
.end method

.method getUsersLocked()[I
    .locals 3

    .prologue
    const/4 v2, 0x0

    .line 28325
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v0

    .line 28326
    .local v0, "ums":Lcom/android/server/pm/UserManagerService;
    if-eqz v0, :cond_0

    invoke-virtual {v0}, Lcom/android/server/pm/UserManagerService;->getUserIds()[I

    move-result-object v1

    :goto_0
    return-object v1

    :cond_0
    const/4 v1, 0x1

    new-array v1, v1, [I

    aput v2, v1, v2

    goto :goto_0
.end method

.method public grabIntentSender(Landroid/content/IIntentSender;Ljava/lang/String;[J)Landroid/content/IIntentSender;
    .locals 18
    .param p1, "sender"    # Landroid/content/IIntentSender;
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "outTime"    # [J

    .prologue
    .line 10392
    move-object/from16 v0, p1

    instance-of v3, v0, Lcom/android/server/am/PendingIntentRecord;

    if-nez v3, :cond_0

    .line 10393
    const/4 v13, 0x0

    .line 10415
    :goto_0
    return-object v13

    .line 10395
    :cond_0
    if-nez p3, :cond_1

    .line 10396
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string v4, "OutTime should be initialized"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 10399
    :cond_1
    monitor-enter p0

    .line 10400
    :try_start_0
    move-object/from16 v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v14, v0

    .line 10401
    .local v14, "rec":Lcom/android/server/am/PendingIntentRecord;
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    iget-object v4, v14, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 10404
    iget-object v3, v14, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget v10, v3, Lcom/android/server/am/PendingIntentRecord$Key;->flags:I

    .line 10405
    .local v10, "flags":I
    const v3, -0x40000001    # -1.9999999f

    and-int/2addr v10, v3

    .line 10407
    new-instance v2, Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v3, v14, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->type:I

    iget-object v4, v14, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v5, v4, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;

    iget-object v4, v14, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v6, v4, Lcom/android/server/am/PendingIntentRecord$Key;->who:Ljava/lang/String;

    iget-object v4, v14, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget v7, v4, Lcom/android/server/am/PendingIntentRecord$Key;->requestCode:I

    iget-object v4, v14, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v8, v4, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    iget-object v4, v14, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v9, v4, Lcom/android/server/am/PendingIntentRecord$Key;->allResolvedTypes:[Ljava/lang/String;

    iget-object v4, v14, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v11, v4, Lcom/android/server/am/PendingIntentRecord$Key;->options:Landroid/os/Bundle;

    iget-object v4, v14, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget v12, v4, Lcom/android/server/am/PendingIntentRecord$Key;->userId:I

    move-object/from16 v4, p2

    invoke-direct/range {v2 .. v12}, Lcom/android/server/am/PendingIntentRecord$Key;-><init>(ILjava/lang/String;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;I)V

    .line 10410
    .local v2, "newKey":Lcom/android/server/am/PendingIntentRecord$Key;
    new-instance v13, Lcom/android/server/am/PendingIntentRecord;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    move-object/from16 v0, p0

    invoke-direct {v13, v0, v2, v3}, Lcom/android/server/am/PendingIntentRecord;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/PendingIntentRecord$Key;I)V

    .line 10411
    .local v13, "newRec":Lcom/android/server/am/PendingIntentRecord;
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v16

    .line 10412
    .local v16, "time":J
    iget-object v3, v13, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    move-wide/from16 v0, v16

    invoke-virtual {v3, v0, v1}, Lcom/android/server/am/PendingIntentRecord$Key;->setTime(J)V

    .line 10413
    const/4 v3, 0x0

    aput-wide v16, p3, v3

    .line 10414
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mGrabedIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v3, v2, v13}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 10415
    monitor-exit p0

    goto :goto_0

    .line 10416
    .end local v2    # "newKey":Lcom/android/server/am/PendingIntentRecord$Key;
    .end local v10    # "flags":I
    .end local v13    # "newRec":Lcom/android/server/am/PendingIntentRecord;
    .end local v14    # "rec":Lcom/android/server/am/PendingIntentRecord;
    .end local v16    # "time":J
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v3
.end method

.method public grantUriPermission(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/net/Uri;II)V
    .locals 8
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "uri"    # Landroid/net/Uri;
    .param p4, "modeFlags"    # I
    .param p5, "userId"    # I

    .prologue
    .line 11847
    const-string/jumbo v0, "grantUriPermission"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 11848
    new-instance v3, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v0, 0x0

    invoke-direct {v3, p5, p3, v0}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    .line 11849
    .local v3, "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    monitor-enter p0

    .line 11850
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v7

    .line 11851
    .local v7, "r":Lcom/android/server/am/ProcessRecord;
    if-nez v7, :cond_0

    .line 11852
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unable to find app for caller "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " when granting permission to uri "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 11870
    .end local v7    # "r":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    .line 11856
    .restart local v7    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_0
    if-nez p2, :cond_1

    .line 11857
    :try_start_1
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "null target"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 11859
    :cond_1
    if-nez v3, :cond_2

    .line 11860
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "null uri"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 11863
    :cond_2
    const/16 v0, 0xc3

    invoke-static {p4, v0}, Lcom/android/internal/util/Preconditions;->checkFlagsArgument(II)V

    .line 11868
    iget v1, v7, Lcom/android/server/am/ProcessRecord;->uid:I

    const/4 v5, 0x0

    iget v0, v7, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v6

    move-object v0, p0

    move-object v2, p2

    move v4, p4

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;I)V

    .line 11870
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11871
    return-void
.end method

.method grantUriPermissionFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;Lcom/android/server/am/UriPermissionOwner;I)V
    .locals 8
    .param p1, "callingUid"    # I
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "owner"    # Lcom/android/server/am/UriPermissionOwner;
    .param p5, "targetUserId"    # I

    .prologue
    .line 11831
    if-eqz p3, :cond_0

    invoke-virtual {p3}, Landroid/content/Intent;->getFlags()I

    move-result v4

    :goto_0
    const/4 v5, 0x0

    move-object v0, p0

    move v1, p1

    move-object v2, p2

    move-object v3, p3

    move v6, p5

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;ILcom/android/server/am/ActivityManagerService$NeededUriGrants;I)Lcom/android/server/am/ActivityManagerService$NeededUriGrants;

    move-result-object v7

    .line 11833
    .local v7, "needed":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    if-nez v7, :cond_1

    .line 11838
    :goto_1
    return-void

    .line 11831
    .end local v7    # "needed":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    :cond_0
    const/4 v4, 0x0

    goto :goto_0

    .line 11837
    .restart local v7    # "needed":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    :cond_1
    invoke-virtual {p0, v7, p4}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionUncheckedFromIntentLocked(Lcom/android/server/am/ActivityManagerService$NeededUriGrants;Lcom/android/server/am/UriPermissionOwner;)V

    goto :goto_1
.end method

.method public grantUriPermissionFromOwner(Landroid/os/IBinder;ILjava/lang/String;Landroid/net/Uri;III)V
    .locals 8
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "fromUid"    # I
    .param p3, "targetPkg"    # Ljava/lang/String;
    .param p4, "uri"    # Landroid/net/Uri;
    .param p5, "modeFlags"    # I
    .param p6, "sourceUserId"    # I
    .param p7, "targetUserId"    # I

    .prologue
    const/4 v4, 0x0

    .line 12076
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v5, 0x2

    const-string/jumbo v6, "grantUriPermissionFromOwner"

    const/4 v7, 0x0

    move-object v0, p0

    move v3, p7

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p7

    .line 12078
    monitor-enter p0

    .line 12079
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/UriPermissionOwner;->fromExternalToken(Landroid/os/IBinder;)Lcom/android/server/am/UriPermissionOwner;

    move-result-object v5

    .line 12080
    .local v5, "owner":Lcom/android/server/am/UriPermissionOwner;
    if-nez v5, :cond_0

    .line 12081
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unknown owner: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 12099
    .end local v5    # "owner":Lcom/android/server/am/UriPermissionOwner;
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    .line 12083
    .restart local v5    # "owner":Lcom/android/server/am/UriPermissionOwner;
    :cond_0
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    if-eq p2, v0, :cond_1

    .line 12084
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-static {}, Landroid/os/Process;->myUid()I

    move-result v1

    if-eq v0, v1, :cond_1

    .line 12087
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "nice try"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 12090
    :cond_1
    if-nez p3, :cond_2

    .line 12091
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "null target"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 12093
    :cond_2
    if-nez p4, :cond_3

    .line 12094
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "null uri"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 12097
    :cond_3
    new-instance v3, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v0, 0x0

    invoke-direct {v3, p6, p4, v0}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    move-object v0, p0

    move v1, p2

    move-object v2, p3

    move v4, p5

    move v6, p7

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;I)V

    .line 12099
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 12100
    return-void
.end method

.method grantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;I)V
    .locals 13
    .param p1, "callingUid"    # I
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;
    .param p4, "modeFlags"    # I
    .param p5, "owner"    # Lcom/android/server/am/UriPermissionOwner;
    .param p6, "targetUserId"    # I

    .prologue
    .line 11697
    if-nez p2, :cond_0

    .line 11698
    new-instance v1, Ljava/lang/NullPointerException;

    const-string/jumbo v2, "targetPkg"

    invoke-direct {v1, v2}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 11701
    :cond_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v12

    .line 11703
    .local v12, "pm":Landroid/content/pm/IPackageManager;
    :try_start_0
    move/from16 v0, p6

    invoke-interface {v12, p2, v0}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v6

    .local v6, "targetUid":I
    move-object v1, p0

    move v2, p1

    move-object v3, p2

    move-object/from16 v4, p3

    move/from16 v5, p4

    .line 11708
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;II)I

    move-result v6

    .line 11710
    if-gez v6, :cond_1

    .line 11716
    .end local v6    # "targetUid":I
    :goto_0
    return-void

    .line 11704
    :catch_0
    move-exception v11

    .line 11705
    .local v11, "ex":Landroid/os/RemoteException;
    goto :goto_0

    .end local v11    # "ex":Landroid/os/RemoteException;
    .restart local v6    # "targetUid":I
    :cond_1
    move-object v5, p0

    move-object v7, p2

    move-object/from16 v8, p3

    move/from16 v9, p4

    move-object/from16 v10, p5

    .line 11714
    invoke-virtual/range {v5 .. v10}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionUncheckedLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;)V

    goto :goto_0
.end method

.method grantUriPermissionUncheckedFromIntentLocked(Lcom/android/server/am/ActivityManagerService$NeededUriGrants;Lcom/android/server/am/UriPermissionOwner;)V
    .locals 7
    .param p1, "needed"    # Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    .param p2, "owner"    # Lcom/android/server/am/UriPermissionOwner;

    .prologue
    .line 11820
    if-eqz p1, :cond_0

    .line 11821
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_0
    invoke-virtual {p1}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->size()I

    move-result v0

    if-ge v6, v0, :cond_0

    .line 11822
    invoke-virtual {p1, v6}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActivityManagerService$GrantUri;

    .line 11823
    .local v3, "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    iget v1, p1, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->targetUid:I

    iget-object v2, p1, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->targetPkg:Ljava/lang/String;

    iget v4, p1, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->flags:I

    move-object v0, p0

    move-object v5, p2

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionUncheckedLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;)V

    .line 11821
    add-int/lit8 v6, v6, 0x1

    goto :goto_0

    .line 11827
    .end local v3    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    .end local v6    # "i":I
    :cond_0
    return-void
.end method

.method grantUriPermissionUncheckedLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;)V
    .locals 6
    .param p1, "targetUid"    # I
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;
    .param p4, "modeFlags"    # I
    .param p5, "owner"    # Lcom/android/server/am/UriPermissionOwner;

    .prologue
    .line 11669
    invoke-static {p4}, Landroid/content/Intent;->isAccessUriMode(I)Z

    move-result v3

    if-nez v3, :cond_0

    .line 11693
    :goto_0
    return-void

    .line 11680
    :cond_0
    iget-object v3, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v3}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v0

    .line 11681
    .local v0, "authority":Ljava/lang/String;
    iget v3, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    invoke-direct {p0, v0, v3}, Lcom/android/server/am/ActivityManagerService;->getProviderInfoLocked(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;

    move-result-object v2

    .line 11682
    .local v2, "pi":Landroid/content/pm/ProviderInfo;
    if-nez v2, :cond_1

    .line 11683
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "No content provider found for grant: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {p3}, Lcom/android/server/am/ActivityManagerService$GrantUri;->toSafeString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 11687
    :cond_1
    and-int/lit16 v3, p4, 0x80

    if-eqz v3, :cond_2

    .line 11688
    const/4 v3, 0x1

    iput-boolean v3, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->prefix:Z

    .line 11690
    :cond_2
    iget-object v3, v2, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    invoke-direct {p0, v3, p2, p1, p3}, Lcom/android/server/am/ActivityManagerService;->findOrCreateUriPermissionLocked(Ljava/lang/String;Ljava/lang/String;ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object v1

    .line 11692
    .local v1, "perm":Lcom/android/server/am/UriPermission;
    invoke-virtual {v1, p4, p5}, Lcom/android/server/am/UriPermission;->grantModes(ILcom/android/server/am/UriPermissionOwner;)V

    goto :goto_0
.end method

.method public handleApplicationCrash(Landroid/os/IBinder;Landroid/app/ApplicationErrorReport$CrashInfo;)V
    .locals 18
    .param p1, "app"    # Landroid/os/IBinder;
    .param p2, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    .line 17575
    const-string v2, "Crash"

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v15

    .line 17576
    .local v15, "r":Lcom/android/server/am/ProcessRecord;
    if-nez p1, :cond_2

    const-string/jumbo v14, "system_server"

    .line 17578
    .local v14, "processName":Ljava/lang/String;
    :goto_0
    if-nez v15, :cond_4

    const/4 v8, 0x0

    .line 17581
    .local v8, "userId":I
    :goto_1
    move-object/from16 v0, p2

    iget-object v2, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionClassName:Ljava/lang/String;

    const-string/jumbo v3, "java.lang.OutOfMemoryError"

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 17582
    const/4 v12, 0x0

    .line 17583
    .local v12, "isDumpingHeapAllowed":Z
    const/4 v9, 0x0

    .line 17585
    .local v9, "PRODUCT_DEV":I
    invoke-static {}, Landroid/os/Debug;->isProductShip()I

    move-result v2

    if-nez v2, :cond_5

    .line 17586
    const/4 v12, 0x1

    .line 17592
    :goto_2
    if-eqz v12, :cond_0

    .line 17593
    const/4 v2, 0x4

    new-array v0, v2, [Ljava/lang/String;

    move-object/from16 v16, v0

    const/4 v2, 0x0

    const-string v3, "am"

    aput-object v3, v16, v2

    const/4 v2, 0x1

    const-string/jumbo v3, "dumpheap"

    aput-object v3, v16, v2

    const/4 v2, 0x2

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-static {v3}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v3

    aput-object v3, v16, v2

    const/4 v2, 0x3

    const-string v3, "/data/log/hprof-oom.hprof"

    aput-object v3, v16, v2

    .line 17594
    .local v16, "shellCmd":[Ljava/lang/String;
    new-instance v11, Lcom/android/server/am/ActivityManagerService$21;

    const-string v2, "/data/log/hprof-oom.hprof"

    const/16 v3, 0x8

    move-object/from16 v0, p0

    invoke-direct {v11, v0, v2, v3}, Lcom/android/server/am/ActivityManagerService$21;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;I)V

    .line 17600
    .local v11, "hprofObserver":Landroid/os/FileObserver;
    :try_start_0
    const-string v2, "ActivityManager"

    const-string v3, "Executing HeapDump Command"

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 17601
    invoke-static {}, Ljava/lang/Runtime;->getRuntime()Ljava/lang/Runtime;

    move-result-object v2

    move-object/from16 v0, v16

    invoke-virtual {v2, v0}, Ljava/lang/Runtime;->exec([Ljava/lang/String;)Ljava/lang/Process;

    move-result-object v13

    .line 17602
    .local v13, "proc":Ljava/lang/Process;
    invoke-virtual {v13}, Ljava/lang/Process;->getErrorStream()Ljava/io/InputStream;

    move-result-object v2

    invoke-virtual {v2}, Ljava/io/InputStream;->close()V

    .line 17603
    invoke-virtual {v13}, Ljava/lang/Process;->getInputStream()Ljava/io/InputStream;

    move-result-object v2

    invoke-virtual {v2}, Ljava/io/InputStream;->close()V

    .line 17604
    invoke-virtual {v13}, Ljava/lang/Process;->getOutputStream()Ljava/io/OutputStream;

    move-result-object v2

    invoke-virtual {v2}, Ljava/io/OutputStream;->close()V

    .line 17605
    invoke-virtual {v13}, Ljava/lang/Process;->waitFor()I

    .line 17607
    invoke-virtual {v11}, Landroid/os/FileObserver;->startWatching()V

    .line 17608
    monitor-enter v11
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 17609
    :try_start_1
    const-string v2, "ActivityManager"

    const-string v3, "Waiting for write-close"

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 17610
    const-wide/32 v2, 0x9c40

    invoke-virtual {v11, v2, v3}, Ljava/lang/Object;->wait(J)V

    .line 17611
    const-string v2, "ActivityManager"

    const-string v3, "Got notified write-close or passed 40s"

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 17612
    monitor-exit v11
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 17617
    invoke-virtual {v11}, Landroid/os/FileObserver;->stopWatching()V

    .line 17624
    .end local v9    # "PRODUCT_DEV":I
    .end local v11    # "hprofObserver":Landroid/os/FileObserver;
    .end local v12    # "isDumpingHeapAllowed":Z
    .end local v13    # "proc":Ljava/lang/Process;
    .end local v16    # "shellCmd":[Ljava/lang/String;
    :cond_0
    :goto_3
    const/4 v2, 0x3

    const/4 v3, 0x5

    const/4 v4, 0x0

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v5

    const-string v6, "ActivityManagerService"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v17, "Application "

    move-object/from16 v0, v17

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string/jumbo v17, "crashed due to"

    move-object/from16 v0, v17

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p2

    iget-object v0, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionClassName:Ljava/lang/String;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static/range {v2 .. v8}, Landroid/sec/enterprise/auditlog/AuditLog;->logAsUser(IIZILjava/lang/String;Ljava/lang/String;I)V

    .line 17630
    if-eqz v15, :cond_1

    .line 17632
    iget v4, v15, Lcom/android/server/am/ProcessRecord;->userId:I

    const-string/jumbo v5, "crash"

    move-object/from16 v0, p2

    iget-object v6, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->throwClassName:Ljava/lang/String;

    move-object/from16 v0, p2

    iget-object v7, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionClassName:Ljava/lang/String;

    move-object/from16 v2, p0

    move-object v3, v14

    invoke-direct/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->isForceStopDisabled(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

    .line 17636
    :cond_1
    const-string/jumbo v2, "crash"

    move-object/from16 v0, p0

    move-object/from16 v1, p2

    invoke-virtual {v0, v2, v15, v14, v1}, Lcom/android/server/am/ActivityManagerService;->handleApplicationCrashInner(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 17637
    return-void

    .line 17576
    .end local v8    # "userId":I
    .end local v14    # "processName":Ljava/lang/String;
    :cond_2
    if-nez v15, :cond_3

    const-string/jumbo v14, "unknown"

    goto/16 :goto_0

    :cond_3
    iget-object v14, v15, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    goto/16 :goto_0

    .line 17578
    .restart local v14    # "processName":Ljava/lang/String;
    :cond_4
    iget v8, v15, Lcom/android/server/am/ProcessRecord;->userId:I

    goto/16 :goto_1

    .line 17589
    .restart local v8    # "userId":I
    .restart local v9    # "PRODUCT_DEV":I
    .restart local v12    # "isDumpingHeapAllowed":Z
    :cond_5
    const-string/jumbo v2, "dalvik.debug.oom"

    invoke-static {v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    const-string v3, "1"

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v12

    goto/16 :goto_2

    .line 17612
    .restart local v11    # "hprofObserver":Landroid/os/FileObserver;
    .restart local v13    # "proc":Ljava/lang/Process;
    .restart local v16    # "shellCmd":[Ljava/lang/String;
    :catchall_0
    move-exception v2

    :try_start_2
    monitor-exit v11
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v2
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 17613
    .end local v13    # "proc":Ljava/lang/Process;
    :catch_0
    move-exception v10

    .line 17614
    .local v10, "e":Ljava/lang/Exception;
    :try_start_4
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, " Unable to dump heap: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 17615
    invoke-virtual {v10}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 17617
    invoke-virtual {v11}, Landroid/os/FileObserver;->stopWatching()V

    goto/16 :goto_3

    .end local v10    # "e":Ljava/lang/Exception;
    :catchall_1
    move-exception v2

    invoke-virtual {v11}, Landroid/os/FileObserver;->stopWatching()V

    throw v2
.end method

.method handleApplicationCrashInner(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)V
    .locals 10
    .param p1, "eventType"    # Ljava/lang/String;
    .param p2, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p3, "processName"    # Ljava/lang/String;
    .param p4, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    const/4 v4, 0x0

    .line 17644
    const/16 v1, 0x7557

    const/16 v0, 0x8

    new-array v2, v0, [Ljava/lang/Object;

    const/4 v0, 0x0

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    aput-object v3, v2, v0

    const/4 v0, 0x1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    invoke-static {v3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v3

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    aput-object v3, v2, v0

    const/4 v0, 0x2

    aput-object p3, v2, v0

    const/4 v3, 0x3

    if-nez p2, :cond_0

    const/4 v0, -0x1

    :goto_0
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    aput-object v0, v2, v3

    const/4 v0, 0x4

    iget-object v3, p4, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionClassName:Ljava/lang/String;

    aput-object v3, v2, v0

    const/4 v0, 0x5

    iget-object v3, p4, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionMessage:Ljava/lang/String;

    aput-object v3, v2, v0

    const/4 v0, 0x6

    iget-object v3, p4, Landroid/app/ApplicationErrorReport$CrashInfo;->throwFileName:Ljava/lang/String;

    aput-object v3, v2, v0

    const/4 v0, 0x7

    iget v3, p4, Landroid/app/ApplicationErrorReport$CrashInfo;->throwLineNumber:I

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    aput-object v3, v2, v0

    invoke-static {v1, v2}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v5, v4

    move-object v6, v4

    move-object v7, v4

    move-object v8, v4

    move-object v9, p4

    .line 17652
    invoke-virtual/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 17654
    invoke-direct {p0, p2, p4}, Lcom/android/server/am/ActivityManagerService;->crashApplication(Lcom/android/server/am/ProcessRecord;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 17655
    return-void

    .line 17644
    :cond_0
    iget-object v0, p2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    goto :goto_0
.end method

.method public handleApplicationStrictModeViolation(Landroid/os/IBinder;ILandroid/os/StrictMode$ViolationInfo;)V
    .locals 12
    .param p1, "app"    # Landroid/os/IBinder;
    .param p2, "violationMask"    # I
    .param p3, "info"    # Landroid/os/StrictMode$ViolationInfo;

    .prologue
    .line 17661
    const-string v9, "StrictMode"

    invoke-direct {p0, p1, v9}, Lcom/android/server/am/ActivityManagerService;->findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 17662
    .local v3, "r":Lcom/android/server/am/ProcessRecord;
    if-nez v3, :cond_1

    .line 17710
    :cond_0
    :goto_0
    return-void

    .line 17666
    :cond_1
    const/high16 v9, 0x200000

    and-int/2addr v9, p2

    if-eqz v9, :cond_2

    .line 17667
    invoke-virtual {p3}, Landroid/os/StrictMode$ViolationInfo;->hashCode()I

    move-result v9

    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v8

    .line 17668
    .local v8, "stackFingerprint":Ljava/lang/Integer;
    const/4 v1, 0x1

    .line 17669
    .local v1, "logIt":Z
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    monitor-enter v10

    .line 17670
    :try_start_0
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v9, v8}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_3

    .line 17671
    const/4 v1, 0x0

    .line 17684
    :goto_1
    monitor-exit v10
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 17685
    if-eqz v1, :cond_2

    .line 17686
    invoke-direct {p0, v3, p3}, Lcom/android/server/am/ActivityManagerService;->logStrictModeViolationToDropBox(Lcom/android/server/am/ProcessRecord;Landroid/os/StrictMode$ViolationInfo;)V

    .line 17690
    .end local v1    # "logIt":Z
    .end local v8    # "stackFingerprint":Ljava/lang/Integer;
    :cond_2
    const/high16 v9, 0x20000

    and-int/2addr v9, p2

    if-eqz v9, :cond_0

    .line 17691
    new-instance v7, Lcom/android/server/am/AppErrorResult;

    invoke-direct {v7}, Lcom/android/server/am/AppErrorResult;-><init>()V

    .line 17692
    .local v7, "result":Lcom/android/server/am/AppErrorResult;
    monitor-enter p0

    .line 17693
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 17695
    .local v4, "origId":J
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v2

    .line 17696
    .local v2, "msg":Landroid/os/Message;
    const/16 v9, 0x1a

    iput v9, v2, Landroid/os/Message;->what:I

    .line 17697
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    .line 17698
    .local v0, "data":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;"
    const-string/jumbo v9, "result"

    invoke-virtual {v0, v9, v7}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 17699
    const-string v9, "app"

    invoke-virtual {v0, v9, v3}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 17700
    const-string/jumbo v9, "violationMask"

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    invoke-virtual {v0, v9, v10}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 17701
    const-string/jumbo v9, "info"

    invoke-virtual {v0, v9, p3}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 17702
    iput-object v0, v2, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 17703
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    invoke-virtual {v9, v2}, Lcom/android/server/am/ActivityManagerService$UiHandler;->sendMessage(Landroid/os/Message;)Z

    .line 17705
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 17706
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 17707
    invoke-virtual {v7}, Lcom/android/server/am/AppErrorResult;->get()I

    move-result v6

    .line 17708
    .local v6, "res":I
    const-string v9, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "handleApplicationStrictModeViolation; res="

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 17679
    .end local v0    # "data":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;"
    .end local v2    # "msg":Landroid/os/Message;
    .end local v4    # "origId":J
    .end local v6    # "res":I
    .end local v7    # "result":Lcom/android/server/am/AppErrorResult;
    .restart local v1    # "logIt":Z
    .restart local v8    # "stackFingerprint":Ljava/lang/Integer;
    :cond_3
    :try_start_2
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v9}, Ljava/util/HashSet;->size()I

    move-result v9

    const/16 v11, 0x1388

    if-lt v9, v11, :cond_4

    .line 17680
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v9}, Ljava/util/HashSet;->clear()V

    .line 17682
    :cond_4
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v9, v8}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    goto :goto_1

    .line 17684
    :catchall_0
    move-exception v9

    monitor-exit v10
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v9

    .line 17706
    .end local v1    # "logIt":Z
    .end local v8    # "stackFingerprint":Ljava/lang/Integer;
    .restart local v7    # "result":Lcom/android/server/am/AppErrorResult;
    :catchall_1
    move-exception v9

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v9
.end method

.method public handleApplicationWtf(Landroid/os/IBinder;Ljava/lang/String;ZLandroid/app/ApplicationErrorReport$CrashInfo;)Z
    .locals 10
    .param p1, "app"    # Landroid/os/IBinder;
    .param p2, "tag"    # Ljava/lang/String;
    .param p3, "system"    # Z
    .param p4, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    const/4 v8, 0x0

    .line 17844
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 17845
    .local v2, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    .line 17847
    .local v3, "callingPid":I
    if-eqz p3, :cond_0

    .line 17851
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v0, Lcom/android/server/am/ActivityManagerService$24;

    move-object v1, p0

    move-object v4, p1

    move-object v5, p2

    move-object v6, p4

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService$24;-><init>(Lcom/android/server/am/ActivityManagerService;IILandroid/os/IBinder;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    invoke-virtual {v9, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    move v0, v8

    .line 17868
    :goto_0
    return v0

    :cond_0
    move-object v1, p0

    move-object v4, p1

    move-object v5, p2

    move-object v6, p4

    .line 17859
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->handleApplicationWtfInner(IILandroid/os/IBinder;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)Lcom/android/server/am/ProcessRecord;

    move-result-object v7

    .line 17862
    .local v7, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz v7, :cond_1

    iget v0, v7, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v1

    if-eq v0, v1, :cond_1

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const-string/jumbo v1, "wtf_is_fatal"

    invoke-static {v0, v1, v8}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v0

    if-eqz v0, :cond_1

    .line 17865
    invoke-direct {p0, v7, p4}, Lcom/android/server/am/ActivityManagerService;->crashApplication(Lcom/android/server/am/ProcessRecord;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 17866
    const/4 v0, 0x1

    goto :goto_0

    :cond_1
    move v0, v8

    .line 17868
    goto :goto_0
.end method

.method handleApplicationWtfInner(IILandroid/os/IBinder;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)Lcom/android/server/am/ProcessRecord;
    .locals 10
    .param p1, "callingUid"    # I
    .param p2, "callingPid"    # I
    .param p3, "app"    # Landroid/os/IBinder;
    .param p4, "tag"    # Ljava/lang/String;
    .param p5, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    const/4 v4, 0x0

    .line 17874
    const-string v0, "WTF"

    invoke-direct {p0, p3, v0}, Lcom/android/server/am/ActivityManagerService;->findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    .line 17875
    .local v2, "r":Lcom/android/server/am/ProcessRecord;
    if-nez p3, :cond_0

    const-string/jumbo v3, "system_server"

    .line 17878
    .local v3, "processName":Ljava/lang/String;
    :goto_0
    const/16 v1, 0x7558

    const/4 v0, 0x6

    new-array v5, v0, [Ljava/lang/Object;

    const/4 v0, 0x0

    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v6

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v5, v0

    const/4 v0, 0x1

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v5, v0

    const/4 v0, 0x2

    aput-object v3, v5, v0

    const/4 v6, 0x3

    if-nez v2, :cond_2

    const/4 v0, -0x1

    :goto_1
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    aput-object v0, v5, v6

    const/4 v0, 0x4

    aput-object p4, v5, v0

    const/4 v0, 0x5

    iget-object v6, p5, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionMessage:Ljava/lang/String;

    aput-object v6, v5, v0

    invoke-static {v1, v5}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 17881
    const-string/jumbo v1, "wtf"

    move-object v0, p0

    move-object v5, v4

    move-object v6, p4

    move-object v7, v4

    move-object v8, v4

    move-object v9, p5

    invoke-virtual/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 17883
    return-object v2

    .line 17875
    .end local v3    # "processName":Ljava/lang/String;
    :cond_0
    if-nez v2, :cond_1

    const-string/jumbo v3, "unknown"

    goto :goto_0

    :cond_1
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    goto :goto_0

    .line 17878
    .restart local v3    # "processName":Ljava/lang/String;
    :cond_2
    iget-object v0, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    goto :goto_1
.end method

.method handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I
    .locals 14
    .param p1, "callingPid"    # I
    .param p2, "callingUid"    # I
    .param p3, "userId"    # I
    .param p4, "allowAll"    # Z
    .param p5, "allowMode"    # I
    .param p6, "name"    # Ljava/lang/String;
    .param p7, "callerPackage"    # Ljava/lang/String;

    .prologue
    .line 21982
    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v10

    .line 21983
    .local v10, "callingUserId":I
    move/from16 v0, p3

    if-ne v10, v0, :cond_0

    .line 22066
    .end local p3    # "userId":I
    :goto_0
    return p3

    .line 21993
    .restart local p3    # "userId":I
    :cond_0
    move/from16 v0, p3

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->unsafeConvertIncomingUser(I)I

    move-result v13

    .line 21995
    .local v13, "targetUserId":I
    if-eqz p2, :cond_1

    const/16 v1, 0x3e8

    move/from16 v0, p2

    if-eq v0, v1, :cond_1

    .line 21997
    const-string v2, "android.permission.INTERACT_ACROSS_USERS_FULL"

    const/4 v5, -0x1

    const/4 v6, 0x1

    move-object v1, p0

    move v3, p1

    move/from16 v4, p2

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v1

    if-nez v1, :cond_2

    .line 22000
    const/4 v7, 0x1

    .line 22025
    .local v7, "allow":Z
    :goto_1
    if-nez v7, :cond_1

    .line 22026
    const/4 v1, -0x3

    move/from16 v0, p3

    if-ne v0, v1, :cond_8

    .line 22029
    move v13, v10

    .line 22054
    .end local v7    # "allow":Z
    :cond_1
    if-nez p4, :cond_b

    if-gez v13, :cond_b

    .line 22055
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Call does not support special user #"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 22001
    :cond_2
    const/4 v1, 0x2

    move/from16 v0, p5

    if-ne v0, v1, :cond_3

    .line 22003
    const/4 v7, 0x0

    .restart local v7    # "allow":Z
    goto :goto_1

    .line 22004
    .end local v7    # "allow":Z
    :cond_3
    const-string v2, "android.permission.INTERACT_ACROSS_USERS"

    const/4 v5, -0x1

    const/4 v6, 0x1

    move-object v1, p0

    move v3, p1

    move/from16 v4, p2

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v1

    if-eqz v1, :cond_4

    .line 22007
    const/4 v7, 0x0

    .restart local v7    # "allow":Z
    goto :goto_1

    .line 22008
    .end local v7    # "allow":Z
    :cond_4
    if-nez p5, :cond_5

    .line 22010
    const/4 v7, 0x1

    .restart local v7    # "allow":Z
    goto :goto_1

    .line 22011
    .end local v7    # "allow":Z
    :cond_5
    const/4 v1, 0x1

    move/from16 v0, p5

    if-ne v0, v1, :cond_7

    .line 22014
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    monitor-enter v2

    .line 22015
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    const/4 v3, -0x1

    invoke-virtual {v1, v10, v3}, Landroid/util/SparseIntArray;->get(II)I

    move-result v9

    .line 22017
    .local v9, "callingProfile":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    const/4 v3, -0x1

    invoke-virtual {v1, v13, v3}, Landroid/util/SparseIntArray;->get(II)I

    move-result v12

    .line 22019
    .local v12, "targetProfile":I
    const/4 v1, -0x1

    if-eq v9, v1, :cond_6

    if-ne v9, v12, :cond_6

    const/4 v7, 0x1

    .line 22021
    .restart local v7    # "allow":Z
    :goto_2
    monitor-exit v2

    goto :goto_1

    .end local v7    # "allow":Z
    .end local v9    # "callingProfile":I
    .end local v12    # "targetProfile":I
    :catchall_0
    move-exception v1

    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 22019
    .restart local v9    # "callingProfile":I
    .restart local v12    # "targetProfile":I
    :cond_6
    const/4 v7, 0x0

    goto :goto_2

    .line 22023
    .end local v9    # "callingProfile":I
    .end local v12    # "targetProfile":I
    :cond_7
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unknown mode: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move/from16 v0, p5

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 22031
    .restart local v7    # "allow":Z
    :cond_8
    new-instance v8, Ljava/lang/StringBuilder;

    const/16 v1, 0x80

    invoke-direct {v8, v1}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 22032
    .local v8, "builder":Ljava/lang/StringBuilder;
    const-string v1, "Permission Denial: "

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 22033
    move-object/from16 v0, p6

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 22034
    if-eqz p7, :cond_9

    .line 22035
    const-string v1, " from "

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 22036
    move-object/from16 v0, p7

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 22038
    :cond_9
    const-string v1, " asks to run as user "

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 22039
    move/from16 v0, p3

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 22040
    const-string v1, " but is calling from user "

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 22041
    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 22042
    const-string v1, "; this requires "

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 22043
    const-string v1, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 22044
    const/4 v1, 0x2

    move/from16 v0, p5

    if-eq v0, v1, :cond_a

    .line 22045
    const-string v1, " or "

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 22046
    const-string v1, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 22048
    :cond_a
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    .line 22049
    .local v11, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v11}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22050
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v11}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 22059
    .end local v7    # "allow":Z
    .end local v8    # "builder":Ljava/lang/StringBuilder;
    .end local v11    # "msg":Ljava/lang/String;
    :cond_b
    const/16 v1, 0x7d0

    move/from16 v0, p2

    if-ne v0, v1, :cond_c

    if-ltz v13, :cond_c

    .line 22060
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    const-string/jumbo v2, "no_debugging_features"

    invoke-virtual {v1, v2, v13}, Lcom/android/server/pm/UserManagerService;->hasUserRestriction(Ljava/lang/String;I)Z

    move-result v1

    if-eqz v1, :cond_c

    .line 22062
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Shell does not have permission to access user "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const/4 v3, 0x3

    invoke-static {v3}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_c
    move/from16 p3, v13

    .line 22066
    goto/16 :goto_0
.end method

.method public handleIncomingUser(IIIZZLjava/lang/String;Ljava/lang/String;)I
    .locals 19
    .param p1, "callingPid"    # I
    .param p2, "callingUid"    # I
    .param p3, "userId"    # I
    .param p4, "allowAll"    # Z
    .param p5, "requireFull"    # Z
    .param p6, "name"    # Ljava/lang/String;
    .param p7, "callerPackage"    # Ljava/lang/String;

    .prologue
    .line 21881
    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v15

    .line 21882
    .local v15, "callingUserId":I
    move/from16 v0, p3

    if-ne v15, v0, :cond_0

    .line 21967
    .end local p3    # "userId":I
    :goto_0
    return p3

    .line 21887
    .restart local p3    # "userId":I
    :cond_0
    if-eqz p5, :cond_2

    const/4 v12, 0x2

    .line 21895
    .local v12, "allowMode":I
    :goto_1
    move-object/from16 v0, p0

    move/from16 v1, p3

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->unsafeConvertIncomingUser(I)I

    move-result v18

    .line 21897
    .local v18, "targetUserId":I
    if-eqz p2, :cond_1

    const/16 v2, 0x3e8

    move/from16 v0, p2

    if-eq v0, v2, :cond_1

    .line 21899
    const/4 v3, 0x0

    const-string v4, "android.permission.INTERACT_ACROSS_USERS_FULL"

    const/4 v7, -0x1

    const/4 v8, 0x0

    const/4 v9, 0x1

    const/4 v10, 0x0

    move-object/from16 v2, p0

    move/from16 v5, p1

    move/from16 v6, p2

    invoke-virtual/range {v2 .. v10}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Landroid/content/Intent;Ljava/lang/String;IIILjava/lang/String;ZZ)I

    move-result v2

    if-nez v2, :cond_3

    .line 21902
    const/4 v11, 0x1

    .line 21927
    .local v11, "allow":Z
    :goto_2
    if-nez v11, :cond_1

    .line 21928
    const/4 v2, -0x3

    move/from16 v0, p3

    if-ne v0, v2, :cond_9

    .line 21931
    move/from16 v18, v15

    .line 21956
    .end local v11    # "allow":Z
    :cond_1
    if-nez p4, :cond_c

    if-gez v18, :cond_c

    .line 21957
    new-instance v2, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Call does not support special user #"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, v18

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 21887
    .end local v12    # "allowMode":I
    .end local v18    # "targetUserId":I
    :cond_2
    const/4 v12, 0x0

    goto :goto_1

    .line 21903
    .restart local v12    # "allowMode":I
    .restart local v18    # "targetUserId":I
    :cond_3
    const/4 v2, 0x2

    if-ne v12, v2, :cond_4

    .line 21905
    const/4 v11, 0x0

    .restart local v11    # "allow":Z
    goto :goto_2

    .line 21906
    .end local v11    # "allow":Z
    :cond_4
    const/4 v3, 0x0

    const-string v4, "android.permission.INTERACT_ACROSS_USERS"

    const/4 v7, -0x1

    const/4 v8, 0x0

    const/4 v9, 0x1

    const/4 v10, 0x0

    move-object/from16 v2, p0

    move/from16 v5, p1

    move/from16 v6, p2

    invoke-virtual/range {v2 .. v10}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Landroid/content/Intent;Ljava/lang/String;IIILjava/lang/String;ZZ)I

    move-result v2

    if-eqz v2, :cond_5

    .line 21909
    const/4 v11, 0x0

    .restart local v11    # "allow":Z
    goto :goto_2

    .line 21910
    .end local v11    # "allow":Z
    :cond_5
    if-nez v12, :cond_6

    .line 21912
    const/4 v11, 0x1

    .restart local v11    # "allow":Z
    goto :goto_2

    .line 21913
    .end local v11    # "allow":Z
    :cond_6
    const/4 v2, 0x1

    if-ne v12, v2, :cond_8

    .line 21916
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    monitor-enter v3

    .line 21917
    :try_start_0
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    const/4 v4, -0x1

    invoke-virtual {v2, v15, v4}, Landroid/util/SparseIntArray;->get(II)I

    move-result v14

    .line 21919
    .local v14, "callingProfile":I
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    const/4 v4, -0x1

    move/from16 v0, v18

    invoke-virtual {v2, v0, v4}, Landroid/util/SparseIntArray;->get(II)I

    move-result v17

    .line 21921
    .local v17, "targetProfile":I
    const/4 v2, -0x1

    if-eq v14, v2, :cond_7

    move/from16 v0, v17

    if-ne v14, v0, :cond_7

    const/4 v11, 0x1

    .line 21923
    .restart local v11    # "allow":Z
    :goto_3
    monitor-exit v3

    goto :goto_2

    .end local v11    # "allow":Z
    .end local v14    # "callingProfile":I
    .end local v17    # "targetProfile":I
    :catchall_0
    move-exception v2

    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2

    .line 21921
    .restart local v14    # "callingProfile":I
    .restart local v17    # "targetProfile":I
    :cond_7
    const/4 v11, 0x0

    goto :goto_3

    .line 21925
    .end local v14    # "callingProfile":I
    .end local v17    # "targetProfile":I
    :cond_8
    new-instance v2, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Unknown mode: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 21933
    .restart local v11    # "allow":Z
    :cond_9
    new-instance v13, Ljava/lang/StringBuilder;

    const/16 v2, 0x80

    invoke-direct {v13, v2}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 21934
    .local v13, "builder":Ljava/lang/StringBuilder;
    const-string v2, "Permission Denial: "

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21935
    move-object/from16 v0, p6

    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21936
    if-eqz p7, :cond_a

    .line 21937
    const-string v2, " from "

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21938
    move-object/from16 v0, p7

    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21940
    :cond_a
    const-string v2, " asks to run as user "

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21941
    move/from16 v0, p3

    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 21942
    const-string v2, " but is calling from user "

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21943
    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 21944
    const-string v2, "; this requires "

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21945
    const-string v2, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21946
    const/4 v2, 0x2

    if-eq v12, v2, :cond_b

    .line 21947
    const-string v2, " or "

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21948
    const-string v2, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21950
    :cond_b
    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v16

    .line 21951
    .local v16, "msg":Ljava/lang/String;
    const-string v2, "ActivityManager"

    move-object/from16 v0, v16

    invoke-static {v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 21952
    new-instance v2, Ljava/lang/SecurityException;

    move-object/from16 v0, v16

    invoke-direct {v2, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 21961
    .end local v11    # "allow":Z
    .end local v13    # "builder":Ljava/lang/StringBuilder;
    .end local v16    # "msg":Ljava/lang/String;
    :cond_c
    const/16 v2, 0x7d0

    move/from16 v0, p2

    if-ne v0, v2, :cond_d

    if-ltz v18, :cond_d

    .line 21962
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    const-string/jumbo v3, "no_debugging_features"

    move/from16 v0, v18

    invoke-virtual {v2, v3, v0}, Lcom/android/server/pm/UserManagerService;->hasUserRestriction(Ljava/lang/String;I)Z

    move-result v2

    if-eqz v2, :cond_d

    .line 21963
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Shell does not have permission to access user "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, v18

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, "\n "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const/4 v4, 0x3

    invoke-static {v4}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    :cond_d
    move/from16 p3, v18

    .line 21967
    goto/16 :goto_0
.end method

.method public hang(Landroid/os/IBinder;Z)V
    .locals 5
    .param p1, "who"    # Landroid/os/IBinder;
    .param p2, "allowRestart"    # Z

    .prologue
    .line 16464
    const-string v2, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_0

    .line 16466
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 16470
    :cond_0
    new-instance v0, Lcom/android/server/am/ActivityManagerService$16;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$16;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 16480
    .local v0, "death":Landroid/os/IBinder$DeathRecipient;
    const/4 v2, 0x0

    :try_start_0
    invoke-interface {p1, v0, v2}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    .line 16486
    monitor-enter p0

    .line 16487
    :try_start_1
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v2

    invoke-virtual {v2, p2}, Lcom/android/server/Watchdog;->setAllowRestart(Z)V

    .line 16488
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Hanging system process at request of pid "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 16489
    monitor-enter v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 16490
    :goto_0
    :try_start_2
    invoke-interface {p1}, Landroid/os/IBinder;->isBinderAlive()Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    move-result v2

    if-eqz v2, :cond_1

    .line 16492
    :try_start_3
    invoke-virtual {v0}, Ljava/lang/Object;->wait()V
    :try_end_3
    .catch Ljava/lang/InterruptedException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    goto :goto_0

    .line 16493
    :catch_0
    move-exception v2

    goto :goto_0

    .line 16481
    :catch_1
    move-exception v1

    .line 16482
    .local v1, "e":Landroid/os/RemoteException;
    const-string v2, "ActivityManager"

    const-string/jumbo v3, "hang: given caller IBinder is already dead."

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16499
    .end local v1    # "e":Landroid/os/RemoteException;
    :goto_1
    return-void

    .line 16496
    :cond_1
    :try_start_4
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 16497
    :try_start_5
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v2

    const/4 v3, 0x1

    invoke-virtual {v2, v3}, Lcom/android/server/Watchdog;->setAllowRestart(Z)V

    .line 16498
    monitor-exit p0

    goto :goto_1

    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    throw v2

    .line 16496
    :catchall_1
    move-exception v2

    :try_start_6
    monitor-exit v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :try_start_7
    throw v2
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0
.end method

.method public hideMultiWindows(I)V
    .locals 1
    .param p1, "userId"    # I

    .prologue
    .line 30009
    monitor-enter p0

    .line 30010
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStackSupervisor;->hideMultiWindowsLocked(I)V

    .line 30011
    monitor-exit p0

    .line 30012
    return-void

    .line 30011
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method incProviderCountLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Lcom/android/server/am/ContentProviderConnection;
    .locals 8
    .param p1, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "cpr"    # Lcom/android/server/am/ContentProviderRecord;
    .param p3, "externalProcessToken"    # Landroid/os/IBinder;
    .param p4, "stable"    # Z

    .prologue
    const/4 v1, 0x1

    .line 14190
    if-eqz p1, :cond_4

    .line 14191
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_0
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-ge v7, v0, :cond_2

    .line 14192
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v0, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ContentProviderConnection;

    .line 14193
    .local v6, "conn":Lcom/android/server/am/ContentProviderConnection;
    iget-object v0, v6, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    if-ne v0, p2, :cond_1

    .line 14199
    if-eqz p4, :cond_0

    .line 14200
    iget v0, v6, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    add-int/lit8 v0, v0, 0x1

    iput v0, v6, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    .line 14201
    iget v0, v6, Lcom/android/server/am/ContentProviderConnection;->numStableIncs:I

    add-int/lit8 v0, v0, 0x1

    iput v0, v6, Lcom/android/server/am/ContentProviderConnection;->numStableIncs:I

    .line 14223
    .end local v6    # "conn":Lcom/android/server/am/ContentProviderConnection;
    .end local v7    # "i":I
    :goto_1
    return-object v6

    .line 14203
    .restart local v6    # "conn":Lcom/android/server/am/ContentProviderConnection;
    .restart local v7    # "i":I
    :cond_0
    iget v0, v6, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    add-int/lit8 v0, v0, 0x1

    iput v0, v6, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    .line 14204
    iget v0, v6, Lcom/android/server/am/ContentProviderConnection;->numUnstableIncs:I

    add-int/lit8 v0, v0, 0x1

    iput v0, v6, Lcom/android/server/am/ContentProviderConnection;->numUnstableIncs:I

    goto :goto_1

    .line 14191
    :cond_1
    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    .line 14209
    .end local v6    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :cond_2
    new-instance v6, Lcom/android/server/am/ContentProviderConnection;

    invoke-direct {v6, p2, p1}, Lcom/android/server/am/ContentProviderConnection;-><init>(Lcom/android/server/am/ContentProviderRecord;Lcom/android/server/am/ProcessRecord;)V

    .line 14210
    .restart local v6    # "conn":Lcom/android/server/am/ContentProviderConnection;
    if-eqz p4, :cond_3

    .line 14211
    iput v1, v6, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    .line 14212
    iput v1, v6, Lcom/android/server/am/ContentProviderConnection;->numStableIncs:I

    .line 14217
    :goto_2
    iget-object v0, p2, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v0, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14218
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v0, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14219
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v3, p2, Lcom/android/server/am/ContentProviderRecord;->uid:I

    iget-object v4, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    iget-object v0, p2, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v5, v0, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    move-object v0, p0

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->startAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;Ljava/lang/String;)Lcom/android/server/am/ActivityManagerService$Association;

    goto :goto_1

    .line 14214
    :cond_3
    iput v1, v6, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    .line 14215
    iput v1, v6, Lcom/android/server/am/ContentProviderConnection;->numUnstableIncs:I

    goto :goto_2

    .line 14222
    .end local v6    # "conn":Lcom/android/server/am/ContentProviderConnection;
    .end local v7    # "i":I
    :cond_4
    invoke-virtual {p2, p3}, Lcom/android/server/am/ContentProviderRecord;->addExternalProcessHandleLocked(Landroid/os/IBinder;)V

    .line 14223
    const/4 v6, 0x0

    goto :goto_1
.end method

.method public initPowerManagement()V
    .locals 3

    .prologue
    .line 3615
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->initPowerManagement()V

    .line 3616
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v1}, Lcom/android/server/am/BatteryStatsService;->initPowerManagement()V

    .line 3617
    const-class v1, Landroid/os/PowerManagerInternal;

    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/os/PowerManagerInternal;

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLocalPowerManager:Landroid/os/PowerManagerInternal;

    .line 3618
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v2, "power"

    invoke-virtual {v1, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/PowerManager;

    .line 3619
    .local v0, "pm":Landroid/os/PowerManager;
    const/4 v1, 0x1

    const-string v2, "*voice*"

    invoke-virtual {v0, v1, v2}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    move-result-object v1

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    .line 3620
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    .line 3621
    return-void
.end method

.method public inputDispatchingTimedOut(IZLjava/lang/String;)J
    .locals 10
    .param p1, "pid"    # I
    .param p2, "aboveSystem"    # Z
    .param p3, "reason"    # Ljava/lang/String;

    .prologue
    const/4 v2, 0x0

    .line 15757
    const-string v0, "android.permission.FILTER_EVENTS"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_0

    .line 15759
    new-instance v0, Ljava/lang/SecurityException;

    const-string v2, "Requires permission android.permission.FILTER_EVENTS"

    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 15764
    :cond_0
    monitor-enter p0

    .line 15765
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 15766
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 15767
    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 15768
    :try_start_2
    invoke-static {v1}, Lcom/android/server/am/ActivityManagerService;->getInputDispatchingTimeoutLocked(Lcom/android/server/am/ProcessRecord;)J

    move-result-wide v8

    .line 15769
    .local v8, "timeout":J
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    move-object v0, p0

    move-object v3, v2

    move v4, p2

    move-object v5, p3

    move v6, p1

    .line 15771
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->inputDispatchingTimedOut(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;I)Z

    move-result v0

    if-nez v0, :cond_1

    .line 15772
    const-wide/16 v8, -0x1

    .line 15775
    .end local v8    # "timeout":J
    :cond_1
    return-wide v8

    .line 15767
    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v0

    .line 15769
    :catchall_1
    move-exception v0

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v0
.end method

.method public inputDispatchingTimedOut(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;)Z
    .locals 7
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "activity"    # Lcom/android/server/am/ActivityRecord;
    .param p3, "parent"    # Lcom/android/server/am/ActivityRecord;
    .param p4, "aboveSystem"    # Z
    .param p5, "reason"    # Ljava/lang/String;

    .prologue
    .line 15785
    const/4 v6, -0x1

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move v4, p4

    move-object v5, p5

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->inputDispatchingTimedOut(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;I)Z

    move-result v0

    return v0
.end method

.method public inputDispatchingTimedOut(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;I)Z
    .locals 10
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "activity"    # Lcom/android/server/am/ActivityRecord;
    .param p3, "parent"    # Lcom/android/server/am/ActivityRecord;
    .param p4, "aboveSystem"    # Z
    .param p5, "reason"    # Ljava/lang/String;
    .param p6, "origPid"    # I

    .prologue
    .line 15795
    const-string v0, "android.permission.FILTER_EVENTS"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_0

    .line 15797
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.FILTER_EVENTS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 15802
    :cond_0
    if-nez p5, :cond_1

    .line 15803
    const-string v4, "Input dispatching timed out"

    .line 15808
    .local v4, "annotation":Ljava/lang/String;
    :goto_0
    if-eqz p1, :cond_5

    .line 15809
    monitor-enter p0

    .line 15810
    :try_start_0
    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->debugging:Z

    if-eqz v0, :cond_2

    .line 15811
    const/4 v0, 0x0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15842
    :goto_1
    return v0

    .line 15805
    .end local v4    # "annotation":Ljava/lang/String;
    :cond_1
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Input dispatching timed out ("

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, ")"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .restart local v4    # "annotation":Ljava/lang/String;
    goto :goto_0

    .line 15814
    :cond_2
    :try_start_1
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mDidDexOpt:Z

    if-eqz v0, :cond_3

    .line 15816
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mDidDexOpt:Z

    .line 15817
    const/4 v0, 0x0

    monitor-exit p0

    goto :goto_1

    .line 15827
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0

    .line 15820
    :cond_3
    :try_start_2
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-eqz v0, :cond_4

    .line 15821
    new-instance v8, Landroid/os/Bundle;

    invoke-direct {v8}, Landroid/os/Bundle;-><init>()V

    .line 15822
    .local v8, "info":Landroid/os/Bundle;
    const-string/jumbo v0, "shortMsg"

    const-string/jumbo v1, "keyDispatchingTimedOut"

    invoke-virtual {v8, v0, v1}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 15823
    const-string/jumbo v0, "longMsg"

    invoke-virtual {v8, v0, v4}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 15824
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0, v8}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V

    .line 15825
    const/4 v0, 0x1

    monitor-exit p0

    goto :goto_1

    .line 15827
    .end local v8    # "info":Landroid/os/Bundle;
    :cond_4
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 15828
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v0, Lcom/android/server/am/ActivityManagerService$15;

    move-object v1, p0

    move/from16 v2, p6

    move-object v3, p1

    move-object v5, p2

    move-object v6, p3

    move v7, p4

    invoke-direct/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService$15;-><init>(Lcom/android/server/am/ActivityManagerService;ILcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Z)V

    invoke-virtual {v9, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 15842
    :cond_5
    const/4 v0, 0x1

    goto :goto_1
.end method

.method public final installSystemProviders()V
    .locals 7

    .prologue
    .line 14989
    monitor-enter p0

    .line 14990
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    const-string/jumbo v5, "system"

    const/16 v6, 0x3e8

    invoke-virtual {v4, v5, v6}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 14991
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->generateApplicationProvidersLocked(Lcom/android/server/am/ProcessRecord;)Ljava/util/List;

    move-result-object v3

    .line 14992
    .local v3, "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    if-eqz v3, :cond_1

    .line 14993
    invoke-interface {v3}, Ljava/util/List;->size()I

    move-result v4

    add-int/lit8 v1, v4, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_1

    .line 14994
    invoke-interface {v3, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/ProviderInfo;

    .line 14995
    .local v2, "pi":Landroid/content/pm/ProviderInfo;
    iget-object v4, v2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v4, v4, 0x1

    if-nez v4, :cond_0

    .line 14996
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Not installing system proc provider "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v6, v2, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ": not system .apk"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14998
    invoke-interface {v3, v1}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 14993
    :cond_0
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 15002
    .end local v1    # "i":I
    .end local v2    # "pi":Landroid/content/pm/ProviderInfo;
    :cond_1
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15003
    if-eqz v3, :cond_2

    .line 15004
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    invoke-virtual {v4, v3}, Landroid/app/ActivityThread;->installSystemProviders(Ljava/util/List;)V

    .line 15007
    :cond_2
    new-instance v4, Lcom/android/server/am/CoreSettingsObserver;

    invoke-direct {v4, p0}, Lcom/android/server/am/CoreSettingsObserver;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;

    .line 15010
    return-void

    .line 15002
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v3    # "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    :catchall_0
    move-exception v4

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v4
.end method

.method isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z
    .locals 1
    .param p1, "ai"    # Landroid/content/pm/ApplicationInfo;

    .prologue
    .line 5195
    iget v0, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v0, v0, 0x8

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public isAppLockedPackage(Ljava/lang/String;)Z
    .locals 1
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    .line 29825
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

    if-eqz v0, :cond_0

    .line 29826
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

    invoke-virtual {v0, p1}, Lcom/android/internal/app/AppLockPolicy;->isAppLockedPackage(Ljava/lang/String;)Z

    move-result v0

    .line 29828
    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public isAppLockedVerifying(Ljava/lang/String;)Z
    .locals 1
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    .line 29875
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

    if-eqz v0, :cond_0

    .line 29876
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

    invoke-virtual {v0, p1}, Lcom/android/internal/app/AppLockPolicy;->isAppLockedVerifying(Ljava/lang/String;)Z

    move-result v0

    .line 29878
    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public isAssistDataAllowedOnCurrentActivity()Z
    .locals 6

    .prologue
    const/4 v3, 0x0

    .line 15870
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    .line 15871
    .local v2, "userId":I
    monitor-enter p0

    .line 15872
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v4

    invoke-virtual {v4}, Lcom/android/server/am/ActivityStack;->topActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 15873
    .local v0, "activity":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_1

    .line 15874
    monitor-exit p0

    .line 15880
    :cond_0
    :goto_0
    return v3

    .line 15876
    :cond_1
    iget v2, v0, Lcom/android/server/am/ActivityRecord;->userId:I

    .line 15877
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15878
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v5, "device_policy"

    invoke-virtual {v4, v5}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/app/admin/DevicePolicyManager;

    .line 15880
    .local v1, "dpm":Landroid/app/admin/DevicePolicyManager;
    if-eqz v1, :cond_2

    const/4 v4, 0x0

    invoke-virtual {v1, v4, v2}, Landroid/app/admin/DevicePolicyManager;->getScreenCaptureDisabled(Landroid/content/ComponentName;I)Z

    move-result v4

    if-nez v4, :cond_0

    :cond_2
    const/4 v3, 0x1

    goto :goto_0

    .line 15877
    .end local v0    # "activity":Lcom/android/server/am/ActivityRecord;
    .end local v1    # "dpm":Landroid/app/admin/DevicePolicyManager;
    :catchall_0
    move-exception v3

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v3
.end method

.method public isAutoRunBlockedApp(Ljava/lang/String;)Z
    .locals 10
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    const/4 v3, 0x1

    const/4 v6, 0x0

    .line 29527
    const/4 v2, 0x0

    .line 29528
    .local v2, "isAutoRunBlocked":Z
    if-nez p1, :cond_0

    .line 29551
    :goto_0
    return v6

    .line 29531
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 29533
    .local v4, "token":J
    :try_start_0
    sget-boolean v7, Landroid/os/Build;->isOSUpgradeKK2LL:Z

    if-eqz v7, :cond_1

    .line 29534
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v7}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v7

    const/4 v8, 0x0

    invoke-virtual {v7, p1, v8}, Landroid/content/pm/PackageManager;->getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v0

    .line 29535
    .local v0, "appInfo":Landroid/content/pm/ApplicationInfo;
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    const/16 v8, 0x43

    iget v9, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v7, v8, v9, p1}, Lcom/android/server/AppOpsService;->noteOperation(IILjava/lang/String;)I

    move-result v7

    if-ne v7, v3, :cond_2

    move v2, v3

    .line 29541
    .end local v0    # "appInfo":Landroid/content/pm/ApplicationInfo;
    :cond_1
    :goto_1
    if-eqz v2, :cond_3

    .line 29542
    const-string v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "isAutoRunBlockedApp:: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, ", Auto Run OFF"

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 29548
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    move v6, v3

    goto :goto_0

    .restart local v0    # "appInfo":Landroid/content/pm/ApplicationInfo;
    :cond_2
    move v2, v6

    .line 29535
    goto :goto_1

    .line 29548
    .end local v0    # "appInfo":Landroid/content/pm/ApplicationInfo;
    :cond_3
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 29550
    :goto_2
    const-string v3, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "isAutoRunBlockedApp:: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, ", Auto Run ON"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v3, v7}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 29545
    :catch_0
    move-exception v1

    .line 29546
    .local v1, "e":Ljava/lang/Exception;
    :try_start_1
    const-string v3, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "exception="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v3, v7}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 29548
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_2

    .end local v1    # "e":Ljava/lang/Exception;
    :catchall_0
    move-exception v3

    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method public isBackgroundVisibleBehind(Landroid/os/IBinder;)Z
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 16158
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 16160
    .local v0, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 16161
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v2

    .line 16162
    .local v2, "stack":Lcom/android/server/am/ActivityStack;
    if-nez v2, :cond_0

    const/4 v3, 0x0

    .line 16165
    .local v3, "visible":Z
    :goto_0
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 16168
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return v3

    .line 16162
    .end local v3    # "visible":Z
    :cond_0
    :try_start_2
    invoke-virtual {v2}, Lcom/android/server/am/ActivityStack;->hasVisibleBehindActivity()Z

    move-result v3

    goto :goto_0

    .line 16166
    .end local v2    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v4
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 16168
    :catchall_1
    move-exception v4

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4
.end method

.method public isImmersive(Landroid/os/IBinder;)Z
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 16209
    monitor-enter p0

    .line 16210
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 16211
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 16212
    new-instance v1, Ljava/lang/IllegalArgumentException;

    invoke-direct {v1}, Ljava/lang/IllegalArgumentException;-><init>()V

    throw v1

    .line 16215
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 16214
    .restart local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    :try_start_1
    iget-boolean v1, v0, Lcom/android/server/am/ActivityRecord;->immersive:Z

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    return v1
.end method

.method public isInHomeStack(I)Z
    .locals 6
    .param p1, "taskId"    # I

    .prologue
    const/4 v3, 0x0

    .line 13541
    const-string v4, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v5, "getStackInfo()"

    invoke-virtual {p0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13543
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 13545
    .local v0, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 13546
    :try_start_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v5, 0x0

    invoke-virtual {v4, p1, v5}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(IZ)Lcom/android/server/am/TaskRecord;

    move-result-object v2

    .line 13547
    .local v2, "tr":Lcom/android/server/am/TaskRecord;
    if-eqz v2, :cond_0

    iget-object v4, v2, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    if-eqz v4, :cond_0

    iget-object v4, v2, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v4}, Lcom/android/server/am/ActivityStack;->isHomeStack()Z

    move-result v4

    if-eqz v4, :cond_0

    const/4 v3, 0x1

    :cond_0
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13550
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return v3

    .line 13548
    .end local v2    # "tr":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v3

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 13550
    :catchall_1
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method public isInLockTaskMode()Z
    .locals 1

    .prologue
    .line 13776
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getLockTaskModeState()I

    move-result v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public isIntentSenderAnActivity(Landroid/content/IIntentSender;)Z
    .locals 5
    .param p1, "pendingResult"    # Landroid/content/IIntentSender;

    .prologue
    const/4 v2, 0x0

    .line 10497
    instance-of v3, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v3, :cond_1

    .line 10508
    :cond_0
    :goto_0
    return v2

    .line 10501
    :cond_1
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v1, v0

    .line 10502
    .local v1, "res":Lcom/android/server/am/PendingIntentRecord;
    iget-object v3, v1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->type:I
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    const/4 v4, 0x2

    if-ne v3, v4, :cond_0

    .line 10503
    const/4 v2, 0x1

    goto :goto_0

    .line 10506
    .end local v1    # "res":Lcom/android/server/am/PendingIntentRecord;
    :catch_0
    move-exception v3

    goto :goto_0
.end method

.method public isIntentSenderTargetedToPackage(Landroid/content/IIntentSender;)Z
    .locals 6
    .param p1, "pendingResult"    # Landroid/content/IIntentSender;

    .prologue
    const/4 v4, 0x0

    .line 10475
    instance-of v5, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v5, :cond_1

    .line 10492
    :cond_0
    :goto_0
    return v4

    .line 10479
    :cond_1
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v3, v0

    .line 10480
    .local v3, "res":Lcom/android/server/am/PendingIntentRecord;
    iget-object v5, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v5, v5, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    if-eqz v5, :cond_0

    .line 10483
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_1
    iget-object v5, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v5, v5, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    array-length v5, v5

    if-ge v1, v5, :cond_3

    .line 10484
    iget-object v5, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v5, v5, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    aget-object v2, v5, v1

    .line 10485
    .local v2, "intent":Landroid/content/Intent;
    invoke-virtual {v2}, Landroid/content/Intent;->getPackage()Ljava/lang/String;

    move-result-object v5

    if-eqz v5, :cond_2

    invoke-virtual {v2}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v5

    if-nez v5, :cond_0

    .line 10483
    :cond_2
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 10489
    .end local v2    # "intent":Landroid/content/Intent;
    :cond_3
    const/4 v4, 0x1

    goto :goto_0

    .line 10490
    .end local v1    # "i":I
    .end local v3    # "res":Lcom/android/server/am/PendingIntentRecord;
    :catch_0
    move-exception v5

    goto :goto_0
.end method

.method public isKnoxMultiWindowExist()Z
    .locals 1

    .prologue
    .line 30021
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->isKnoxMultiWindowExist(I)Z

    move-result v0

    return v0
.end method

.method public isKnoxMultiWindowExist(I)Z
    .locals 1
    .param p1, "userId"    # I

    .prologue
    .line 30015
    monitor-enter p0

    .line 30016
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStackSupervisor;->isKnoxMultiWindowExistLocked(I)Z

    move-result v0

    monitor-exit p0

    return v0

    .line 30017
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method isNextTransitionForward()Z
    .locals 1

    .prologue
    .line 4945
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->isNextTransitionForward(I)Z

    move-result v0

    return v0
.end method

.method isNextTransitionForward(I)Z
    .locals 2
    .param p1, "displayId"    # I

    .prologue
    .line 4950
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowManagerService;->getPendingAppTransition(I)I

    move-result v0

    .line 4951
    .local v0, "transit":I
    const/4 v1, 0x6

    if-eq v0, v1, :cond_0

    const/16 v1, 0x8

    if-eq v0, v1, :cond_0

    const/16 v1, 0xa

    if-eq v0, v1, :cond_0

    const/16 v1, 0x65

    if-ne v0, v1, :cond_1

    :cond_0
    const/4 v1, 0x1

    :goto_0
    return v1

    :cond_1
    const/4 v1, 0x0

    goto :goto_0
.end method

.method isPendingBGSplitqueueBroadcastProcessLocked(I)Z
    .locals 6
    .param p1, "pid"    # I

    .prologue
    .line 22408
    const/4 v1, 0x0

    .line 22410
    .local v1, "bReturn":Z
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgSplitBroadcastQueue:[Lcom/android/server/am/BroadcastQueue;

    .local v0, "arr$":[Lcom/android/server/am/BroadcastQueue;
    array-length v3, v0

    .local v3, "len$":I
    const/4 v2, 0x0

    .local v2, "i$":I
    :goto_0
    if-ge v2, v3, :cond_0

    aget-object v4, v0, v2

    .line 22411
    .local v4, "queue":Lcom/android/server/am/BroadcastQueue;
    invoke-virtual {v4, p1}, Lcom/android/server/am/BroadcastQueue;->isPendingBroadcastProcessLocked(I)Z

    move-result v5

    or-int/2addr v1, v5

    .line 22410
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 22413
    .end local v4    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_0
    return v1
.end method

.method isPendingBroadcastProcessLocked(I)Z
    .locals 1
    .param p1, "pid"    # I

    .prologue
    .line 22396
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    invoke-virtual {v0, p1}, Lcom/android/server/am/BroadcastQueue;->isPendingBroadcastProcessLocked(I)Z

    move-result v0

    if-nez v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    invoke-virtual {v0, p1}, Lcom/android/server/am/BroadcastQueue;->isPendingBroadcastProcessLocked(I)Z

    move-result v0

    if-nez v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDeferredBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    invoke-virtual {v0, p1}, Lcom/android/server/am/BroadcastQueue;->isPendingBroadcastProcessLocked(I)Z

    move-result v0

    if-nez v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mSecBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    invoke-virtual {v0, p1}, Lcom/android/server/am/BroadcastQueue;->isPendingBroadcastProcessLocked(I)Z

    move-result v0

    if-nez v0, :cond_0

    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->isPendingBGSplitqueueBroadcastProcessLocked(I)Z

    move-result v0

    if-eqz v0, :cond_1

    :cond_0
    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_1
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public isRootVoiceInteraction(Landroid/os/IBinder;)Z
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 10207
    monitor-enter p0

    .line 10208
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 10209
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 10210
    const/4 v1, 0x0

    monitor-exit p0

    .line 10212
    :goto_0
    return v1

    :cond_0
    iget-boolean v1, v0, Lcom/android/server/am/ActivityRecord;->rootVoiceInteraction:Z

    monitor-exit p0

    goto :goto_0

    .line 10213
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public isSNNEnable()I
    .locals 1

    .prologue
    .line 3637
    const-string/jumbo v0, "isSNNEnable"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 3638
    monitor-enter p0

    .line 3639
    :try_start_0
    sget-boolean v0, Lcom/android/server/am/ActivityManagerService;->DEFERRED_Q_ENABLED:Z

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    monitor-exit p0

    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0

    .line 3640
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public isSNNEnabled()Z
    .locals 1

    .prologue
    .line 3631
    sget-boolean v0, Lcom/android/server/am/ActivityManagerService;->DEFERRED_Q_ENABLED:Z

    return v0
.end method

.method public isScreenOn(I)Z
    .locals 3
    .param p1, "displayId"    # I

    .prologue
    const/4 v0, 0x0

    .line 15395
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mIsBackWindowShown:Z

    if-eqz v1, :cond_1

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mBackWindowDisplayId:I

    if-ne p1, v1, :cond_1

    .line 15398
    :cond_0
    :goto_0
    return v0

    :cond_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mScreenState:[I

    aget v1, v1, p1

    const/4 v2, 0x2

    if-ne v1, v2, :cond_0

    const/4 v0, 0x1

    goto :goto_0
.end method

.method isSingleton(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)Z
    .locals 6
    .param p1, "componentProcessName"    # Ljava/lang/String;
    .param p2, "aInfo"    # Landroid/content/pm/ApplicationInfo;
    .param p3, "className"    # Ljava/lang/String;
    .param p4, "flags"    # I

    .prologue
    const/high16 v5, 0x40000000    # 2.0f

    .line 22071
    const/4 v2, 0x0

    .line 22073
    .local v2, "result":Z
    iget v3, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v3}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    const/16 v4, 0x2710

    if-lt v3, v4, :cond_2

    .line 22074
    and-int v3, p4, v5

    if-eqz v3, :cond_1

    .line 22075
    const-string v3, "android.permission.INTERACT_ACROSS_USERS"

    iget v4, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v3, v4}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v3

    if-eqz v3, :cond_0

    .line 22078
    new-instance v0, Landroid/content/ComponentName;

    iget-object v3, p2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-direct {v0, v3, p3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 22079
    .local v0, "comp":Landroid/content/ComponentName;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Permission Denial: Component "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v0}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " requests FLAG_SINGLE_USER, but app does not hold "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 22082
    .local v1, "msg":Ljava/lang/String;
    const-string v3, "ActivityManager"

    invoke-static {v3, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22083
    new-instance v3, Ljava/lang/SecurityException;

    invoke-direct {v3, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 22086
    .end local v0    # "comp":Landroid/content/ComponentName;
    .end local v1    # "msg":Ljava/lang/String;
    :cond_0
    const/4 v2, 0x1

    .line 22098
    :cond_1
    :goto_0
    return v2

    .line 22088
    :cond_2
    const-string/jumbo v3, "system"

    invoke-virtual {v3, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_3

    .line 22089
    const/4 v2, 0x1

    goto :goto_0

    .line 22090
    :cond_3
    and-int v3, p4, v5

    if-eqz v3, :cond_1

    .line 22092
    iget v3, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    const/16 v4, 0x3e9

    invoke-static {v3, v4}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result v3

    if-nez v3, :cond_4

    iget v3, p2, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v3, v3, 0x8

    if-eqz v3, :cond_5

    :cond_4
    const/4 v2, 0x1

    :goto_1
    goto :goto_0

    :cond_5
    const/4 v2, 0x0

    goto :goto_1
.end method

.method public isSleeping()Z
    .locals 1

    .prologue
    .line 15225
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    return v0
.end method

.method public isSleepingOrShuttingDown()Z
    .locals 1

    .prologue
    .line 15215
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->isSleeping()Z

    move-result v0

    if-nez v0, :cond_0

    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    if-eqz v0, :cond_1

    :cond_0
    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_1
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public isSleepingOrShuttingDown(I)Z
    .locals 1
    .param p1, "displayId"    # I

    .prologue
    .line 15220
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->isSleepingOrShuttingDown()Z

    move-result v0

    if-nez v0, :cond_0

    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->isScreenOn(I)Z

    move-result v0

    if-nez v0, :cond_1

    :cond_0
    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_1
    const/4 v0, 0x0

    goto :goto_0
.end method

.method isSplitIntentLocked(Lcom/android/server/am/BroadcastRecord;)Z
    .locals 8
    .param p1, "r"    # Lcom/android/server/am/BroadcastRecord;

    .prologue
    const/4 v5, 0x1

    const/4 v4, 0x0

    .line 28973
    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->mInitBgSplitQueueNum:I

    if-gtz v6, :cond_1

    .line 28974
    iput-boolean v4, p1, Lcom/android/server/am/BroadcastRecord;->splitCheck:Z

    .line 29047
    :cond_0
    :goto_0
    return v4

    .line 28978
    :cond_1
    iget-boolean v6, p1, Lcom/android/server/am/BroadcastRecord;->ordered:Z

    if-ne v6, v5, :cond_2

    iget-object v6, p1, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v6}, Landroid/content/Intent;->getFlags()I

    move-result v6

    const/high16 v7, 0x8000000

    and-int/2addr v6, v7

    if-nez v6, :cond_2

    .line 28979
    iput-boolean v4, p1, Lcom/android/server/am/BroadcastRecord;->splitCheck:Z

    goto :goto_0

    .line 28984
    :cond_2
    const-string v6, "android.net.conn.CONNECTIVITY_CHANGE"

    iget-object v7, p1, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v7}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_3

    const-string v6, "com.sec.android.intent.action.HOME_RESUME"

    iget-object v7, p1, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v7}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_4

    .line 28986
    :cond_3
    iput-boolean v4, p1, Lcom/android/server/am/BroadcastRecord;->splitCheck:Z

    goto :goto_0

    .line 28997
    :cond_4
    const/4 v0, 0x0

    .line 28998
    .local v0, "curt":Landroid/content/pm/ResolveInfo;
    const/4 v1, 0x0

    .line 29000
    .local v1, "last":Landroid/content/pm/ResolveInfo;
    iget-object v6, p1, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    iget-object v7, p1, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v7}, Ljava/util/List;->size()I

    move-result v7

    add-int/lit8 v7, v7, -0x1

    invoke-interface {v6, v7}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    .line 29001
    .local v2, "lasto":Ljava/lang/Object;
    instance-of v6, v2, Landroid/content/pm/ResolveInfo;

    if-nez v6, :cond_5

    .line 29002
    iput-boolean v4, p1, Lcom/android/server/am/BroadcastRecord;->splitCheck:Z

    goto :goto_0

    :cond_5
    move-object v1, v2

    .line 29006
    check-cast v1, Landroid/content/pm/ResolveInfo;

    .line 29007
    iget v6, v1, Landroid/content/pm/ResolveInfo;->priority:I

    if-nez v6, :cond_8

    .line 29009
    iget-object v6, p1, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    iget v7, p1, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I

    add-int/lit8 v7, v7, -0x1

    invoke-interface {v6, v7}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    .line 29010
    .local v3, "o":Ljava/lang/Object;
    instance-of v6, v3, Landroid/content/pm/ResolveInfo;

    if-eqz v6, :cond_0

    move-object v0, v3

    .line 29011
    check-cast v0, Landroid/content/pm/ResolveInfo;

    .line 29012
    iget v6, v0, Landroid/content/pm/ResolveInfo;->priority:I

    if-nez v6, :cond_0

    .line 29014
    iget-object v6, p1, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v6}, Ljava/util/List;->size()I

    move-result v6

    iget v7, p1, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I

    sub-int/2addr v6, v7

    iget v7, p0, Lcom/android/server/am/ActivityManagerService;->mInitBgSplitQueueNum:I

    add-int/lit8 v7, v7, 0x1

    mul-int/lit8 v7, v7, 0x2

    if-ge v6, v7, :cond_6

    .line 29015
    const-string/jumbo v5, "splitIntent"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "DO NOT SPLIT!! not enough receivers. r.nextReceiver="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget v7, p1, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " receivers.size="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v7, p1, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v7}, Ljava/util/List;->size()I

    move-result v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " intent="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v7, p1, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v7}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 29019
    iput-boolean v4, p1, Lcom/android/server/am/BroadcastRecord;->splitCheck:Z

    goto/16 :goto_0

    .line 29025
    :cond_6
    iget-object v6, p1, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v6}, Ljava/util/List;->size()I

    move-result v6

    iget v7, p1, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I

    if-ne v6, v7, :cond_7

    .line 29026
    const-string/jumbo v5, "splitIntent"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "DO NOT SPLIT!!  r.nextReceiver="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget v7, p1, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " receivers.size="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v7, p1, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;

    invoke-interface {v7}, Ljava/util/List;->size()I

    move-result v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " intent="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v7, p1, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v7}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 29030
    iput-boolean v4, p1, Lcom/android/server/am/BroadcastRecord;->splitCheck:Z

    goto/16 :goto_0

    .line 29035
    :cond_7
    const-string/jumbo v4, "splitIntent"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "now progressing "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v7, p1, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v7}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " with priority 0 in BG queue. so we split it to "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget v7, p0, Lcom/android/server/am/ActivityManagerService;->mBgSplitQueueNum:I

    add-int/lit8 v7, v7, 0x1

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " queues."

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    move v4, v5

    .line 29038
    goto/16 :goto_0

    .line 29042
    .end local v3    # "o":Ljava/lang/Object;
    :cond_8
    const-string/jumbo v5, "splitIntent"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "DO NOT SPLIT!! - last receiver got a priority. p="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget v7, v1, Landroid/content/pm/ResolveInfo;->priority:I

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_0
.end method

.method isTargetDismissIntent(Lcom/android/server/am/ActivityRecord;)Z
    .locals 2
    .param p1, "r"    # Lcom/android/server/am/ActivityRecord;

    .prologue
    .line 9645
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTargetDismiss:Landroid/content/Intent;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTargetDismiss:Landroid/content/Intent;

    invoke-virtual {v0}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTargetDismiss:Landroid/content/Intent;

    invoke-virtual {v0}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    :cond_0
    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_1
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public isTopActivityImmersive()Z
    .locals 3

    .prologue
    .line 16219
    const-string/jumbo v1, "startActivity"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 16220
    monitor-enter p0

    .line 16221
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v1

    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Lcom/android/server/am/ActivityRecord;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 16222
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    iget-boolean v1, v0, Lcom/android/server/am/ActivityRecord;->immersive:Z

    :goto_0
    monitor-exit p0

    return v1

    :cond_0
    const/4 v1, 0x0

    goto :goto_0

    .line 16223
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public isTopOfTask(Landroid/os/IBinder;)Z
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 16228
    monitor-enter p0

    .line 16229
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 16230
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 16231
    new-instance v1, Ljava/lang/IllegalArgumentException;

    invoke-direct {v1}, Ljava/lang/IllegalArgumentException;-><init>()V

    throw v1

    .line 16234
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 16233
    .restart local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    :try_start_1
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    invoke-virtual {v1}, Lcom/android/server/am/TaskRecord;->getTopActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v1

    if-ne v1, v0, :cond_1

    const/4 v1, 0x1

    :goto_0
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    return v1

    :cond_1
    const/4 v1, 0x0

    goto :goto_0
.end method

.method public isUserAMonkey()Z
    .locals 1

    .prologue
    .line 15733
    monitor-enter p0

    .line 15735
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserIsMonkey:Z

    if-nez v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    if-eqz v0, :cond_1

    :cond_0
    const/4 v0, 0x1

    :goto_0
    monitor-exit p0

    return v0

    :cond_1
    const/4 v0, 0x0

    goto :goto_0

    .line 15736
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public isUserRunning(IZ)Z
    .locals 3
    .param p1, "userId"    # I
    .param p2, "orStopped"    # Z

    .prologue
    .line 28240
    const-string v1, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    .line 28242
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: isUserRunning() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 28246
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 28247
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 28249
    .end local v0    # "msg":Ljava/lang/String;
    :cond_0
    monitor-enter p0

    .line 28250
    :try_start_0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->isUserRunningLocked(IZ)Z

    move-result v1

    monitor-exit p0

    return v1

    .line 28251
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method isUserRunningLocked(IZ)Z
    .locals 5
    .param p1, "userId"    # I
    .param p2, "orStopped"    # Z

    .prologue
    const/4 v1, 0x1

    const/4 v2, 0x0

    .line 28255
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/UserState;

    .line 28256
    .local v0, "state":Lcom/android/server/am/UserState;
    if-nez v0, :cond_1

    move v1, v2

    .line 28262
    :cond_0
    :goto_0
    return v1

    .line 28259
    :cond_1
    if-nez p2, :cond_0

    .line 28262
    iget v3, v0, Lcom/android/server/am/UserState;->mState:I

    const/4 v4, 0x2

    if-eq v3, v4, :cond_2

    iget v3, v0, Lcom/android/server/am/UserState;->mState:I

    const/4 v4, 0x3

    if-ne v3, v4, :cond_0

    :cond_2
    move v1, v2

    goto :goto_0
.end method

.method isValidSingletonCall(II)Z
    .locals 2
    .param p1, "callingUid"    # I
    .param p2, "componentUid"    # I

    .prologue
    .line 22108
    invoke-static {p2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    .line 22109
    .local v0, "componentAppId":I
    invoke-static {p1, p2}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result v1

    if-nez v1, :cond_0

    const/16 v1, 0x3e8

    if-eq v0, v1, :cond_0

    const/16 v1, 0x3e9

    if-eq v0, v1, :cond_0

    const-string v1, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-static {v1, p2}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v1

    if-nez v1, :cond_1

    :cond_0
    const/4 v1, 0x1

    :goto_0
    return v1

    :cond_1
    const/4 v1, 0x0

    goto :goto_0
.end method

.method public isWidgetUsingPkg(Ljava/lang/String;)Z
    .locals 3
    .param p1, "pkgName"    # Ljava/lang/String;

    .prologue
    .line 30061
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWidgetOnHomescreen:Ljava/util/HashSet;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWidgetOnHomescreen:Ljava/util/HashSet;

    invoke-virtual {v0, p1}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 30062
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "isWidgetUsingPkg : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " widget is using."

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 30063
    const/4 v0, 0x1

    .line 30066
    :goto_0
    return v0

    .line 30065
    :cond_0
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "isWidgetUsingPkg : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " no widget is using."

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 30066
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public keyguardGoingAway(ZZ)V
    .locals 4
    .param p1, "disableWindowAnimations"    # Z
    .param p2, "keyguardGoingToNotificationShade"    # Z

    .prologue
    .line 9617
    const-string/jumbo v2, "keyguardGoingAway"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 9618
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9620
    .local v0, "token":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 9622
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v2, p1, p2}, Lcom/android/server/wm/WindowManagerService;->keyguardGoingAway(ZZ)V

    .line 9626
    const/4 v2, 0x1

    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mKeyguardGoingAway:Z

    .line 9629
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    const/4 v3, 0x2

    if-ne v2, v3, :cond_0

    .line 9630
    const/4 v2, 0x0

    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    .line 9631
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateSleepIfNeededLocked()V

    .line 9633
    :cond_0
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 9635
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9637
    return-void

    .line 9633
    :catchall_0
    move-exception v2

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 9635
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
.end method

.method public keyguardWaitingForActivityDrawn()V
    .locals 4

    .prologue
    .line 9595
    const-string/jumbo v2, "keyguardWaitingForActivityDrawn"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 9596
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9598
    .local v0, "token":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 9601
    const/4 v2, 0x1

    :try_start_1
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mIsKeyguardWaitingForActivityDrawnRequested:Z

    .line 9603
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowManagerService;->keyguardWaitingForActivityDrawn()V

    .line 9604
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    const/4 v3, 0x2

    if-ne v2, v3, :cond_0

    .line 9605
    const/4 v2, 0x1

    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    .line 9606
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateSleepIfNeededLocked()V

    .line 9608
    :cond_0
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 9610
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9612
    return-void

    .line 9608
    :catchall_0
    move-exception v2

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 9610
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
.end method

.method public keyguardWaitingForActivityDrawnTarget(Landroid/content/Intent;)V
    .locals 0
    .param p1, "target"    # Landroid/content/Intent;

    .prologue
    .line 9651
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mTargetDismiss:Landroid/content/Intent;

    .line 9652
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->keyguardWaitingForActivityDrawn()V

    .line 9653
    return-void
.end method

.method public killAllBackgroundProcesses()V
    .locals 23

    .prologue
    .line 8272
    const-string v19, "android.permission.KILL_BACKGROUND_PROCESSES"

    move-object/from16 v0, p0

    move-object/from16 v1, v19

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v19

    if-eqz v19, :cond_0

    .line 8274
    new-instance v19, Ljava/lang/StringBuilder;

    invoke-direct/range {v19 .. v19}, Ljava/lang/StringBuilder;-><init>()V

    const-string v20, "Permission Denial: killAllBackgroundProcesses() from pid="

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v20

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v19

    const-string v20, ", uid="

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v20

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v19

    const-string v20, " requires "

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    const-string v20, "android.permission.KILL_BACKGROUND_PROCESSES"

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    invoke-virtual/range {v19 .. v19}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    .line 8278
    .local v17, "msg":Ljava/lang/String;
    const-string v19, "ActivityManager"

    move-object/from16 v0, v19

    move-object/from16 v1, v17

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8279
    new-instance v19, Ljava/lang/SecurityException;

    move-object/from16 v0, v19

    move-object/from16 v1, v17

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v19

    .line 8283
    .end local v17    # "msg":Ljava/lang/String;
    :cond_0
    const/4 v11, 0x0

    .line 8285
    .local v11, "excludeKnox":Z
    sget-object v19, Landroid/os/PersonaManager$KnoxContainerVersion;->KNOX_CONTAINER_VERSION_2_4_0:Landroid/os/PersonaManager$KnoxContainerVersion;

    invoke-static/range {v19 .. v19}, Landroid/os/PersonaManager;->isKnoxVersionSupported(Landroid/os/PersonaManager$KnoxContainerVersion;)Z

    move-result v19

    if-eqz v19, :cond_1

    .line 8286
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v19

    const/16 v20, 0x7d0

    move/from16 v0, v19

    move/from16 v1, v20

    if-ne v0, v1, :cond_1

    .line 8287
    const-string v19, "ActivityManager"

    const-string/jumbo v20, "excluding knox IDs from killAllBackgroundProcesses"

    invoke-static/range {v19 .. v20}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 8288
    const/4 v11, 0x1

    .line 8294
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v12

    .line 8296
    .local v12, "callingId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8297
    :try_start_1
    new-instance v18, Ljava/util/ArrayList;

    invoke-direct/range {v18 .. v18}, Ljava/util/ArrayList;-><init>()V

    .line 8298
    .local v18, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v19

    invoke-virtual/range {v19 .. v19}, Landroid/util/ArrayMap;->size()I

    move-result v8

    .line 8299
    .local v8, "NP":I
    const/16 v16, 0x0

    .local v16, "ip":I
    :goto_0
    move/from16 v0, v16

    if-ge v0, v8, :cond_7

    .line 8300
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v19

    move-object/from16 v0, v19

    move/from16 v1, v16

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Landroid/util/SparseArray;

    .line 8301
    .local v10, "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    invoke-virtual {v10}, Landroid/util/SparseArray;->size()I

    move-result v7

    .line 8302
    .local v7, "NA":I
    const/4 v15, 0x0

    .local v15, "ia":I
    :goto_1
    if-ge v15, v7, :cond_6

    .line 8303
    invoke-virtual {v10, v15}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/am/ProcessRecord;

    .line 8304
    .local v9, "app":Lcom/android/server/am/ProcessRecord;
    iget-boolean v0, v9, Lcom/android/server/am/ProcessRecord;->persistent:Z

    move/from16 v19, v0

    if-eqz v19, :cond_3

    .line 8302
    :cond_2
    :goto_2
    add-int/lit8 v15, v15, 0x1

    goto :goto_1

    .line 8310
    :cond_3
    sget-object v19, Landroid/os/PersonaManager$KnoxContainerVersion;->KNOX_CONTAINER_VERSION_2_4_0:Landroid/os/PersonaManager$KnoxContainerVersion;

    invoke-static/range {v19 .. v19}, Landroid/os/PersonaManager;->isKnoxVersionSupported(Landroid/os/PersonaManager$KnoxContainerVersion;)Z

    move-result v19

    if-eqz v19, :cond_4

    .line 8312
    if-eqz v11, :cond_4

    iget v0, v9, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v19, v0

    invoke-static/range {v19 .. v19}, Landroid/os/PersonaManager;->isKnoxId(I)Z

    move-result v19

    if-eqz v19, :cond_4

    .line 8313
    const-string v19, "ActivityManager"

    new-instance v20, Ljava/lang/StringBuilder;

    invoke-direct/range {v20 .. v20}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v21, "skip killing "

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    iget-object v0, v9, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v21, v0

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    const-string v21, " for user "

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    iget v0, v9, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v21, v0

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v20

    invoke-virtual/range {v20 .. v20}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v20

    invoke-static/range {v19 .. v20}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    .line 8347
    .end local v7    # "NA":I
    .end local v8    # "NP":I
    .end local v9    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v10    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v15    # "ia":I
    .end local v16    # "ip":I
    .end local v18    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :catchall_0
    move-exception v19

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    throw v19
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 8349
    :catchall_1
    move-exception v19

    invoke-static {v12, v13}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v19

    .line 8319
    .restart local v7    # "NA":I
    .restart local v8    # "NP":I
    .restart local v9    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v10    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v15    # "ia":I
    .restart local v16    # "ip":I
    .restart local v18    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_4
    :try_start_3
    iget-boolean v0, v9, Lcom/android/server/am/ProcessRecord;->removed:Z

    move/from16 v19, v0

    if-eqz v19, :cond_5

    .line 8320
    move-object/from16 v0, v18

    invoke-virtual {v0, v9}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 8321
    :cond_5
    iget v0, v9, Lcom/android/server/am/ProcessRecord;->setAdj:I

    move/from16 v19, v0

    const/16 v20, 0x9

    move/from16 v0, v19

    move/from16 v1, v20

    if-lt v0, v1, :cond_2

    .line 8322
    const/16 v19, 0x1

    move/from16 v0, v19

    iput-boolean v0, v9, Lcom/android/server/am/ProcessRecord;->removed:Z

    .line 8323
    move-object/from16 v0, v18

    invoke-virtual {v0, v9}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 8299
    .end local v9    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_6
    add-int/lit8 v16, v16, 0x1

    goto/16 :goto_0

    .line 8328
    .end local v7    # "NA":I
    .end local v10    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v15    # "ia":I
    :cond_7
    invoke-virtual/range {v18 .. v18}, Ljava/util/ArrayList;->size()I

    move-result v6

    .line 8329
    .local v6, "N":I
    const/4 v14, 0x0

    .local v14, "i":I
    :goto_3
    if-ge v14, v6, :cond_9

    .line 8332
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v19

    const-string v20, "CscFeature_Common_SupportDeviceReporting"

    invoke-virtual/range {v19 .. v20}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v19

    if-eqz v19, :cond_8

    .line 8335
    const/16 v20, 0x190

    move-object/from16 v0, v18

    invoke-virtual {v0, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v21, v0

    move-object/from16 v0, v18

    invoke-virtual {v0, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, v19

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v19, v0

    const/16 v22, 0x0

    move-object/from16 v0, p0

    move/from16 v1, v20

    move-object/from16 v2, v21

    move/from16 v3, v19

    move/from16 v4, v22

    invoke-direct {v0, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->sendAppStateMsg(ILjava/lang/String;II)V

    .line 8339
    :cond_8
    move-object/from16 v0, v18

    invoke-virtual {v0, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Lcom/android/server/am/ProcessRecord;

    const/16 v20, 0x0

    const/16 v21, 0x1

    const-string/jumbo v22, "kill all background"

    move-object/from16 v0, p0

    move-object/from16 v1, v19

    move/from16 v2, v20

    move/from16 v3, v21

    move-object/from16 v4, v22

    invoke-direct {v0, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z

    .line 8341
    move-object/from16 v0, v18

    invoke-virtual {v0, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Lcom/android/server/am/ProcessRecord;

    const/16 v20, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, v19

    move/from16 v2, v20

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->cleanupAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z

    .line 8329
    add-int/lit8 v14, v14, 0x1

    goto :goto_3

    .line 8344
    :cond_9
    const/16 v19, 0x1

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    .line 8345
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 8346
    const/16 v19, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v19

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->doLowMemReportIfNeededLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 8347
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 8349
    invoke-static {v12, v13}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8351
    return-void
.end method

.method killAppAtUsersRequest(Lcom/android/server/am/ProcessRecord;Landroid/app/Dialog;)V
    .locals 6
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "fromDialog"    # Landroid/app/Dialog;

    .prologue
    .line 17420
    monitor-enter p0

    .line 17423
    :try_start_0
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v0

    const-string v1, "CscFeature_Common_SupportDeviceReporting"

    invoke-virtual {v0, v1}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v0, :cond_0

    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v1, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v0, v1, :cond_0

    .line 17426
    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-eqz v0, :cond_4

    .line 17427
    const/16 v0, 0x190

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    const/4 v3, 0x2

    invoke-direct {p0, v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->sendAppStateMsg(ILjava/lang/String;II)V

    .line 17436
    :cond_0
    :goto_0
    const/4 v0, 0x0

    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    .line 17437
    const/4 v0, 0x0

    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->crashingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    .line 17438
    const/4 v0, 0x0

    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    .line 17439
    const/4 v0, 0x0

    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    .line 17440
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;

    if-ne v0, p2, :cond_1

    .line 17441
    const/4 v0, 0x0

    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;

    .line 17443
    :cond_1
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;

    if-ne v0, p2, :cond_2

    .line 17444
    const/4 v0, 0x0

    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;

    .line 17446
    :cond_2
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v0, :cond_3

    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v1, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v0, v1, :cond_3

    .line 17447
    const-string/jumbo v2, "user-terminated"

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x0

    move-object v0, p0

    move-object v1, p1

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->handleAppCrashLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

    .line 17449
    const-string/jumbo v0, "user request after error"

    const/4 v1, 0x1

    invoke-virtual {p1, v0, v1}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 17451
    :cond_3
    monitor-exit p0

    .line 17452
    return-void

    .line 17430
    :cond_4
    const/16 v0, 0x190

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    const/4 v3, 0x1

    invoke-direct {p0, v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->sendAppStateMsg(ILjava/lang/String;II)V

    goto :goto_0

    .line 17451
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public killApplicationProcess(Ljava/lang/String;I)V
    .locals 5
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .prologue
    .line 8609
    if-nez p1, :cond_0

    .line 8633
    :goto_0
    return-void

    .line 8613
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 8615
    .local v1, "callerUid":I
    const/16 v2, 0x3e8

    if-ne v1, v2, :cond_2

    .line 8616
    monitor-enter p0

    .line 8617
    const/4 v2, 0x1

    :try_start_0
    invoke-virtual {p0, p1, p2, v2}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 8618
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    if-eqz v0, :cond_1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v2, :cond_1

    .line 8620
    :try_start_1
    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v2}, Landroid/app/IApplicationThread;->scheduleSuicide()V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 8628
    :goto_1
    :try_start_2
    monitor-exit p0

    goto :goto_0

    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v2

    .line 8625
    .restart local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_1
    :try_start_3
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Process/uid not found attempting kill of "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " / "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_1

    .line 8630
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_2
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " cannot kill app process: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 8621
    .restart local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v2

    goto :goto_1
.end method

.method public killApplicationWithAppId(Ljava/lang/String;ILjava/lang/String;)V
    .locals 6
    .param p1, "pkg"    # Ljava/lang/String;
    .param p2, "appid"    # I
    .param p3, "reason"    # Ljava/lang/String;

    .prologue
    .line 8481
    if-nez p1, :cond_0

    .line 8505
    :goto_0
    return-void

    .line 8485
    :cond_0
    if-gez p2, :cond_1

    .line 8486
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Invalid appid specified for pkg : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 8489
    :cond_1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 8491
    .local v1, "callerUid":I
    invoke-static {v1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    const/16 v4, 0x3e8

    if-ne v3, v4, :cond_2

    .line 8493
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v4, 0x16

    invoke-virtual {v3, v4}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v2

    .line 8494
    .local v2, "msg":Landroid/os/Message;
    iput p2, v2, Landroid/os/Message;->arg1:I

    .line 8495
    const/4 v3, 0x0

    iput v3, v2, Landroid/os/Message;->arg2:I

    .line 8496
    new-instance v0, Landroid/os/Bundle;

    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V

    .line 8497
    .local v0, "bundle":Landroid/os/Bundle;
    const-string/jumbo v3, "pkg"

    invoke-virtual {v0, v3, p1}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 8498
    const-string/jumbo v3, "reason"

    invoke-virtual {v0, v3, p3}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 8499
    iput-object v0, v2, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 8500
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v3, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    goto :goto_0

    .line 8502
    .end local v0    # "bundle":Landroid/os/Bundle;
    .end local v2    # "msg":Landroid/os/Message;
    :cond_2
    new-instance v3, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " cannot kill pkg: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3
.end method

.method public killBackgroundProcesses(Ljava/lang/String;I)V
    .locals 16
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I

    .prologue
    .line 8209
    const-string v2, "android.permission.KILL_BACKGROUND_PROCESSES"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_0

    const-string v2, "android.permission.RESTART_PACKAGES"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_0

    .line 8213
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Permission Denial: killBackgroundProcesses() from pid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ", uid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " requires "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "android.permission.KILL_BACKGROUND_PROCESSES"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v14

    .line 8217
    .local v14, "msg":Ljava/lang/String;
    const-string v2, "ActivityManager"

    invoke-static {v2, v14}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8218
    new-instance v2, Ljava/lang/SecurityException;

    invoke-direct {v2, v14}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 8221
    .end local v14    # "msg":Ljava/lang/String;
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    const/4 v6, 0x1

    const/4 v7, 0x2

    const-string/jumbo v8, "killBackgroundProcesses"

    const/4 v9, 0x0

    move-object/from16 v2, p0

    move/from16 v5, p2

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    .line 8226
    sget-object v2, Landroid/os/PersonaManager$KnoxContainerVersion;->KNOX_CONTAINER_VERSION_2_4_0:Landroid/os/PersonaManager$KnoxContainerVersion;

    invoke-static {v2}, Landroid/os/PersonaManager;->isKnoxVersionSupported(Landroid/os/PersonaManager$KnoxContainerVersion;)Z

    move-result v2

    if-eqz v2, :cond_1

    .line 8227
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/16 v3, 0x7d0

    if-ne v2, v3, :cond_1

    const/4 v2, -0x1

    move/from16 v0, p2

    if-ne v0, v2, :cond_1

    .line 8228
    const-string v2, "ActivityManager"

    const-string/jumbo v3, "sanitizing user id to all except knox due to call from shell"

    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 8229
    const/16 p2, -0x4

    .line 8236
    :cond_1
    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move/from16 v4, p2

    invoke-direct/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->isForceStopDisabled(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_2

    .line 8268
    :goto_0
    return-void

    .line 8240
    :cond_2
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v12

    .line 8242
    .local v12, "callingId":J
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v15

    .line 8243
    .local v15, "pm":Landroid/content/pm/IPackageManager;
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8244
    const/4 v4, -0x1

    .line 8246
    .local v4, "appId":I
    const/4 v2, 0x0

    :try_start_1
    move-object/from16 v0, p1

    invoke-interface {v15, v0, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I

    move-result v2

    invoke-static {v2}, Landroid/os/UserHandle;->getAppId(I)I
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v4

    .line 8249
    :goto_1
    const/4 v2, -0x1

    if-ne v4, v2, :cond_3

    .line 8250
    :try_start_2
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Invalid packageName: "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8251
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 8266
    invoke-static {v12, v13}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 8255
    :cond_3
    :try_start_3
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v2

    const-string v3, "CscFeature_Common_SupportDeviceReporting"

    invoke-virtual {v2, v3}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_4

    .line 8258
    const/16 v2, 0x190

    const/4 v3, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v2, v1, v4, v3}, Lcom/android/server/am/ActivityManagerService;->sendAppStateMsg(ILjava/lang/String;II)V

    .line 8262
    :cond_4
    const/4 v6, 0x5

    const/4 v7, 0x0

    const/4 v8, 0x1

    const/4 v9, 0x1

    const/4 v10, 0x0

    const-string/jumbo v11, "kill background"

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move/from16 v5, p2

    invoke-direct/range {v2 .. v11}, Lcom/android/server/am/ActivityManagerService;->killPackageProcessesLocked(Ljava/lang/String;IIIZZZZLjava/lang/String;)Z

    .line 8264
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 8266
    invoke-static {v12, v13}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 8264
    :catchall_0
    move-exception v2

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    throw v2
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 8266
    .end local v4    # "appId":I
    .end local v15    # "pm":Landroid/content/pm/IPackageManager;
    :catchall_1
    move-exception v2

    invoke-static {v12, v13}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .line 8247
    .restart local v4    # "appId":I
    .restart local v15    # "pm":Landroid/content/pm/IPackageManager;
    :catch_0
    move-exception v2

    goto :goto_1
.end method

.method public killPids([ILjava/lang/String;Z)Z
    .locals 13
    .param p1, "pids"    # [I
    .param p2, "pReason"    # Ljava/lang/String;
    .param p3, "secure"    # Z

    .prologue
    .line 16316
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v8

    const/16 v9, 0x3e8

    if-eq v8, v9, :cond_0

    .line 16317
    new-instance v8, Ljava/lang/SecurityException;

    const-string/jumbo v9, "killPids only available to the system"

    invoke-direct {v8, v9}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v8

    .line 16319
    :cond_0
    if-nez p2, :cond_2

    const-string v4, "Unknown"

    .line 16323
    .local v4, "reason":Ljava/lang/String;
    :goto_0
    const/4 v2, 0x0

    .line 16324
    .local v2, "killed":Z
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v9

    .line 16325
    :try_start_0
    array-length v8, p1

    new-array v6, v8, [I

    .line 16326
    .local v6, "types":[I
    const/4 v7, 0x0

    .line 16327
    .local v7, "worstType":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_1
    array-length v8, p1

    if-ge v1, v8, :cond_3

    .line 16328
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    aget v10, p1, v1

    invoke-virtual {v8, v10}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 16329
    .local v3, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v3, :cond_1

    .line 16330
    iget v5, v3, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 16331
    .local v5, "type":I
    aput v5, v6, v1

    .line 16332
    if-le v5, v7, :cond_1

    .line 16333
    move v7, v5

    .line 16327
    .end local v5    # "type":I
    :cond_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .end local v1    # "i":I
    .end local v2    # "killed":Z
    .end local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v4    # "reason":Ljava/lang/String;
    .end local v6    # "types":[I
    .end local v7    # "worstType":I
    :cond_2
    move-object v4, p2

    .line 16319
    goto :goto_0

    .line 16340
    .restart local v1    # "i":I
    .restart local v2    # "killed":Z
    .restart local v4    # "reason":Ljava/lang/String;
    .restart local v6    # "types":[I
    .restart local v7    # "worstType":I
    :cond_3
    const/16 v8, 0xf

    if-ge v7, v8, :cond_4

    const/16 v8, 0x9

    if-le v7, v8, :cond_4

    .line 16342
    const/16 v7, 0x9

    .line 16347
    :cond_4
    if-nez p3, :cond_5

    const/4 v8, 0x5

    if-ge v7, v8, :cond_5

    .line 16348
    const/4 v7, 0x5

    .line 16351
    :cond_5
    const-string v8, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Killing processes "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " at adjustment "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v8, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16352
    const/4 v1, 0x0

    :goto_2
    array-length v8, p1

    if-ge v1, v8, :cond_9

    .line 16353
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    aget v10, p1, v1

    invoke-virtual {v8, v10}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 16354
    .restart local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    if-nez v3, :cond_7

    .line 16352
    :cond_6
    :goto_3
    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    .line 16357
    :cond_7
    iget v0, v3, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 16377
    .local v0, "adj":I
    if-lt v0, v7, :cond_6

    iget-boolean v8, v3, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v8, :cond_6

    .line 16380
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v8

    const-string v10, "CscFeature_Common_SupportDeviceReporting"

    invoke-virtual {v8, v10}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v8

    if-eqz v8, :cond_8

    .line 16383
    const/16 v8, 0x190

    iget-object v10, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v10, v10, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v11, v3, Lcom/android/server/am/ProcessRecord;->pid:I

    const/4 v12, 0x0

    invoke-direct {p0, v8, v10, v11, v12}, Lcom/android/server/am/ActivityManagerService;->sendAppStateMsg(ILjava/lang/String;II)V

    .line 16387
    :cond_8
    const/4 v8, 0x1

    invoke-virtual {v3, v4, v8}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 16388
    const/4 v2, 0x1

    goto :goto_3

    .line 16392
    .end local v0    # "adj":I
    .end local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_9
    monitor-exit v9

    .line 16393
    return v2

    .line 16392
    .end local v1    # "i":I
    .end local v6    # "types":[I
    .end local v7    # "worstType":I
    :catchall_0
    move-exception v8

    monitor-exit v9
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v8
.end method

.method public killProcessesBelowForeground(Ljava/lang/String;)Z
    .locals 2
    .param p1, "reason"    # Ljava/lang/String;

    .prologue
    .line 16413
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-eq v0, v1, :cond_0

    .line 16414
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "killProcessesBelowForeground() only available to system"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 16417
    :cond_0
    const/4 v0, 0x0

    invoke-direct {p0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->killProcessesBelowAdj(ILjava/lang/String;)Z

    move-result v0

    return v0
.end method

.method public killProcessesForMemoryLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)V
    .locals 22
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "reason"    # Ljava/lang/String;

    .prologue
    .line 28698
    const-string v18, "ActivityManager"

    new-instance v19, Ljava/lang/StringBuilder;

    invoke-direct/range {v19 .. v19}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v20, "killProcessesForMemoryLocked("

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, p0

    iget-wide v0, v0, Lcom/android/server/am/ActivityManagerService;->mKillMemMaxThreshold:J

    move-wide/from16 v20, v0

    invoke-virtual/range {v19 .. v21}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v19

    const-string v20, ", "

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mKillMinAdj:I

    move/from16 v20, v0

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v19

    const-string v20, ", "

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mKillMaxCnt:I

    move/from16 v20, v0

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v19

    const-string v20, ")"

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    invoke-virtual/range {v19 .. v19}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v19

    invoke-static/range {v18 .. v19}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 28700
    const/4 v11, 0x0

    .line 28701
    .local v11, "toBeKilled":I
    invoke-static {}, Landroid/os/Process;->getFreeMemory()J

    move-result-wide v4

    .line 28702
    .local v4, "availableMem":J
    move-object/from16 v0, p0

    iget-wide v0, v0, Lcom/android/server/am/ActivityManagerService;->mKillMemMaxThreshold:J

    move-wide/from16 v18, v0

    move-object/from16 v0, p0

    iget-wide v0, v0, Lcom/android/server/am/ActivityManagerService;->mKillMemMinThreshold:J

    move-wide/from16 v20, v0

    sub-long v12, v18, v20

    .line 28703
    .local v12, "thresholdRange":J
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mKillMaxCnt:I

    move/from16 v18, v0

    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mKillMinCnt:I

    move/from16 v19, v0

    sub-int v10, v18, v19

    .line 28704
    .local v10, "sizeRange":I
    const-wide/16 v16, 0x0

    .line 28706
    .local v16, "unit":J
    const-wide/16 v18, 0x0

    cmp-long v18, v12, v18

    if-lez v18, :cond_3

    if-lez v10, :cond_3

    .line 28707
    int-to-long v0, v10

    move-wide/from16 v18, v0

    div-long v16, v12, v18

    .line 28709
    move-object/from16 v0, p0

    iget-wide v0, v0, Lcom/android/server/am/ActivityManagerService;->mKillMemMaxThreshold:J

    move-wide/from16 v18, v0

    cmp-long v18, v4, v18

    if-gez v18, :cond_0

    .line 28710
    const-wide/16 v18, 0x0

    cmp-long v18, v16, v18

    if-lez v18, :cond_2

    .line 28711
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mKillMinCnt:I

    move/from16 v18, v0

    move-object/from16 v0, p0

    iget-wide v0, v0, Lcom/android/server/am/ActivityManagerService;->mKillMemMaxThreshold:J

    move-wide/from16 v20, v0

    sub-long v20, v20, v4

    div-long v20, v20, v16

    move-wide/from16 v0, v20

    long-to-int v0, v0

    move/from16 v19, v0

    add-int v11, v18, v19

    .line 28716
    :goto_0
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mKillMaxCnt:I

    move/from16 v18, v0

    move/from16 v0, v18

    if-le v11, v0, :cond_0

    .line 28717
    move-object/from16 v0, p0

    iget v11, v0, Lcom/android/server/am/ActivityManagerService;->mKillMaxCnt:I

    .line 28725
    :cond_0
    :goto_1
    const-string v18, "ActivityManager"

    new-instance v19, Ljava/lang/StringBuilder;

    invoke-direct/range {v19 .. v19}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v20, "killProcessesForMemoryLocked Before kill : freeMemory "

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, v19

    invoke-virtual {v0, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v19

    const-string v20, ", toBeKilled "

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, v19

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v19

    invoke-virtual/range {v19 .. v19}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v19

    invoke-static/range {v18 .. v19}, Landroid/util/Slog;->secD(Ljava/lang/String;Ljava/lang/String;)I

    .line 28727
    if-gtz v11, :cond_4

    .line 28728
    const-string v18, "ActivityManager"

    const-string/jumbo v19, "killProcessesForMemoryLocked NOTHING"

    invoke-static/range {v18 .. v19}, Landroid/util/Slog;->secD(Ljava/lang/String;Ljava/lang/String;)I

    .line 28793
    :cond_1
    return-void

    .line 28713
    :cond_2
    move-object/from16 v0, p0

    iget v11, v0, Lcom/android/server/am/ActivityManagerService;->mKillMaxCnt:I

    goto :goto_0

    .line 28721
    :cond_3
    const-string v18, "ActivityManager"

    const-string/jumbo v19, "thresholdRange <= 0 or sizeRange <= 0, so kill as many as max count"

    invoke-static/range {v18 .. v19}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 28722
    move-object/from16 v0, p0

    iget v11, v0, Lcom/android/server/am/ActivityManagerService;->mKillMaxCnt:I

    goto :goto_1

    .line 28732
    :cond_4
    new-instance v9, Ljava/util/ArrayList;

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move-object/from16 v18, v0

    invoke-virtual/range {v18 .. v18}, Ljava/util/ArrayList;->size()I

    move-result v18

    move/from16 v0, v18

    invoke-direct {v9, v0}, Ljava/util/ArrayList;-><init>(I)V

    .line 28734
    .local v9, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/util/Pair<Lcom/android/server/am/ProcessRecord;Ljava/lang/Integer;>;>;"
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_2
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move-object/from16 v18, v0

    invoke-virtual/range {v18 .. v18}, Ljava/util/ArrayList;->size()I

    move-result v18

    move/from16 v0, v18

    if-ge v7, v0, :cond_5

    .line 28735
    new-instance v18, Landroid/util/Pair;

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    invoke-virtual {v0, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v19

    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v20

    invoke-direct/range {v18 .. v20}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    move-object/from16 v0, v18

    invoke-virtual {v9, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 28734
    add-int/lit8 v7, v7, 0x1

    goto :goto_2

    .line 28738
    :cond_5
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v18

    if-lez v18, :cond_1

    .line 28742
    new-instance v6, Lcom/android/server/am/ActivityManagerService$37;

    move-object/from16 v0, p0

    invoke-direct {v6, v0}, Lcom/android/server/am/ActivityManagerService$37;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 28757
    .local v6, "comparator":Ljava/util/Comparator;, "Ljava/util/Comparator<Landroid/util/Pair<Lcom/android/server/am/ProcessRecord;Ljava/lang/Integer;>;>;"
    invoke-static {v9, v6}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 28759
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v2

    .line 28760
    .local v2, "N":I
    const/4 v7, 0x0

    .line 28761
    const/4 v8, 0x0

    .line 28762
    .local v8, "killed":I
    const-wide/16 v14, 0x0

    .line 28764
    .local v14, "totalPss":J
    if-nez p1, :cond_6

    .line 28765
    const-string v18, "ActivityManager"

    const-string/jumbo v19, "proc is null"

    invoke-static/range {v18 .. v19}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 28768
    :cond_6
    :goto_3
    if-ge v7, v2, :cond_1

    if-ge v8, v11, :cond_1

    .line 28769
    invoke-virtual {v9, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v18

    check-cast v18, Landroid/util/Pair;

    move-object/from16 v0, v18

    iget-object v3, v0, Landroid/util/Pair;->first:Ljava/lang/Object;

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 28771
    .local v3, "app":Lcom/android/server/am/ProcessRecord;
    iget-boolean v0, v3, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    move/from16 v18, v0

    if-nez v18, :cond_8

    .line 28772
    iget v0, v3, Lcom/android/server/am/ProcessRecord;->setAdj:I

    move/from16 v18, v0

    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mKillMinAdj:I

    move/from16 v19, v0

    move/from16 v0, v18

    move/from16 v1, v19

    if-lt v0, v1, :cond_1

    .line 28773
    if-eqz p1, :cond_7

    iget-object v0, v3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v18, v0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v19, v0

    invoke-virtual/range {v18 .. v19}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v18

    if-nez v18, :cond_8

    .line 28775
    :cond_7
    const-string v18, "ActivityManager"

    new-instance v19, Ljava/lang/StringBuilder;

    invoke-direct/range {v19 .. v19}, Ljava/lang/StringBuilder;-><init>()V

    const-string v20, "CameraAggressiveKill #9 kill "

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    iget-object v0, v3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v20, v0

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    const-string v20, "(adj "

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    iget v0, v3, Lcom/android/server/am/ProcessRecord;->curAdj:I

    move/from16 v20, v0

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v19

    const-string v20, ") cnt "

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, v19

    invoke-virtual {v0, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v19

    invoke-virtual/range {v19 .. v19}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v19

    invoke-static/range {v18 .. v19}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 28776
    const/16 v18, 0x7547

    const/16 v19, 0x5

    move/from16 v0, v19

    new-array v0, v0, [Ljava/lang/Object;

    move-object/from16 v19, v0

    const/16 v20, 0x0

    iget v0, v3, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v21, v0

    invoke-static/range {v21 .. v21}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v21

    aput-object v21, v19, v20

    const/16 v20, 0x1

    iget v0, v3, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v21, v0

    invoke-static/range {v21 .. v21}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v21

    aput-object v21, v19, v20

    const/16 v20, 0x2

    iget-object v0, v3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v21, v0

    aput-object v21, v19, v20

    const/16 v20, 0x3

    iget v0, v3, Lcom/android/server/am/ProcessRecord;->setAdj:I

    move/from16 v21, v0

    invoke-static/range {v21 .. v21}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v21

    aput-object v21, v19, v20

    const/16 v20, 0x4

    aput-object p2, v19, v20

    invoke-static/range {v18 .. v19}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 28778
    const/16 v18, 0x1

    move/from16 v0, v18

    iput-boolean v0, v3, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    .line 28780
    iget v0, v3, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v18, v0

    invoke-static/range {v18 .. v18}, Landroid/os/Process;->killProcessQuiet(I)V

    .line 28781
    add-int/lit8 v8, v8, 0x1

    .line 28789
    :cond_8
    add-int/lit8 v7, v7, 0x1

    .line 28790
    goto/16 :goto_3
.end method

.method public killUid(IILjava/lang/String;)V
    .locals 12
    .param p1, "appId"    # I
    .param p2, "userId"    # I
    .param p3, "reason"    # Ljava/lang/String;

    .prologue
    .line 16398
    const-string v0, "android.permission.KILL_UID"

    const-string/jumbo v1, "killUid"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 16399
    monitor-enter p0

    .line 16400
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v10

    .line 16402
    .local v10, "identity":J
    const/4 v1, 0x0

    const/16 v4, -0xc

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x1

    const/4 v8, 0x1

    if-eqz p3, :cond_0

    move-object v9, p3

    :goto_0
    move-object v0, p0

    move v2, p1

    move v3, p2

    :try_start_1
    invoke-direct/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->killPackageProcessesLocked(Ljava/lang/String;IIIZZZZLjava/lang/String;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 16406
    :try_start_2
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 16408
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 16409
    return-void

    .line 16402
    :cond_0
    :try_start_3
    const-string/jumbo v9, "kill uid"
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_0

    .line 16406
    :catchall_0
    move-exception v0

    :try_start_4
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0

    .line 16408
    .end local v10    # "identity":J
    :catchall_1
    move-exception v0

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v0
.end method

.method public launchAssistIntent(Landroid/content/Intent;ILjava/lang/String;ILandroid/os/Bundle;)Z
    .locals 10
    .param p1, "intent"    # Landroid/content/Intent;
    .param p2, "requestType"    # I
    .param p3, "hint"    # Ljava/lang/String;
    .param p4, "userHandle"    # I
    .param p5, "args"    # Landroid/os/Bundle;

    .prologue
    const/4 v4, 0x0

    .line 16048
    const-wide/16 v8, 0x1f4

    move-object v0, p0

    move v1, p2

    move-object v2, p1

    move-object v3, p3

    move-object v5, v4

    move v6, p4

    move-object v7, p5

    invoke-direct/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;Lcom/android/internal/os/IResultReceiver;Landroid/os/IBinder;ILandroid/os/Bundle;J)Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    move-result-object v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method final logAppTooSlow(Lcom/android/server/am/ProcessRecord;JLjava/lang/String;)V
    .locals 0
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "startTime"    # J
    .param p4, "msg"    # Ljava/lang/String;

    .prologue
    .line 7796
    return-void
.end method

.method logLockScreen(Ljava/lang/String;)V
    .locals 0
    .param p1, "msg"    # Ljava/lang/String;

    .prologue
    .line 15495
    return-void
.end method

.method matchesProvider(Landroid/net/Uri;Landroid/content/pm/ProviderInfo;)Z
    .locals 7
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "cpi"    # Landroid/content/pm/ProviderInfo;

    .prologue
    .line 14175
    invoke-virtual {p1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v4

    .line 14176
    .local v4, "uriAuth":Ljava/lang/String;
    iget-object v0, p2, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    .line 14177
    .local v0, "cpiAuth":Ljava/lang/String;
    const/16 v5, 0x3b

    invoke-virtual {v0, v5}, Ljava/lang/String;->indexOf(I)I

    move-result v5

    const/4 v6, -0x1

    if-ne v5, v6, :cond_0

    .line 14178
    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    .line 14185
    :goto_0
    return v5

    .line 14180
    :cond_0
    const-string v5, ";"

    invoke-virtual {v0, v5}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v1

    .line 14181
    .local v1, "cpiAuths":[Ljava/lang/String;
    array-length v3, v1

    .line 14182
    .local v3, "length":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    if-ge v2, v3, :cond_2

    .line 14183
    aget-object v5, v1, v2

    invoke-virtual {v5, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_1

    const/4 v5, 0x1

    goto :goto_0

    .line 14182
    :cond_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 14185
    :cond_2
    const/4 v5, 0x0

    goto :goto_0
.end method

.method public monitor()V
    .locals 1

    .prologue
    .line 27311
    monitor-enter p0

    :try_start_0
    monitor-exit p0

    .line 27312
    return-void

    .line 27311
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public moveActivityTaskToBack(Landroid/os/IBinder;Z)Z
    .locals 6
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "nonRoot"    # Z

    .prologue
    const/4 v4, 0x0

    .line 13337
    const-string/jumbo v5, "moveActivityTaskToBack"

    invoke-virtual {p0, v5}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 13338
    monitor-enter p0

    .line 13339
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-wide v0

    .line 13341
    .local v0, "origId":J
    if-nez p2, :cond_0

    const/4 v5, 0x1

    :goto_0
    :try_start_1
    invoke-static {p1, v5}, Lcom/android/server/am/ActivityRecord;->getTaskForActivityLocked(Landroid/os/IBinder;Z)I

    move-result v3

    .line 13342
    .local v3, "taskId":I
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v5, v3}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v2

    .line 13343
    .local v2, "task":Lcom/android/server/am/TaskRecord;
    if-eqz v2, :cond_2

    .line 13344
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v5, v2}, Lcom/android/server/am/ActivityStackSupervisor;->isLockedTask(Lcom/android/server/am/TaskRecord;)Z

    move-result v5

    if-eqz v5, :cond_1

    .line 13345
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v5}, Lcom/android/server/am/ActivityStackSupervisor;->showLockTaskToast()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 13364
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 13367
    :goto_1
    return v4

    .end local v2    # "task":Lcom/android/server/am/TaskRecord;
    .end local v3    # "taskId":I
    :cond_0
    move v5, v4

    .line 13341
    goto :goto_0

    .line 13360
    .restart local v2    # "task":Lcom/android/server/am/TaskRecord;
    .restart local v3    # "taskId":I
    :cond_1
    :try_start_3
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v4

    invoke-virtual {v4, v3}, Lcom/android/server/am/ActivityStack;->moveTaskToBackLocked(I)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    move-result v4

    .line 13364
    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0

    goto :goto_1

    .line 13366
    .end local v0    # "origId":J
    .end local v2    # "task":Lcom/android/server/am/TaskRecord;
    .end local v3    # "taskId":I
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    throw v4

    .line 13364
    .restart local v0    # "origId":J
    .restart local v2    # "task":Lcom/android/server/am/TaskRecord;
    .restart local v3    # "taskId":I
    :cond_2
    :try_start_5
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13366
    monitor-exit p0

    goto :goto_1

    .line 13364
    .end local v2    # "task":Lcom/android/server/am/TaskRecord;
    .end local v3    # "taskId":I
    :catchall_1
    move-exception v4

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0
.end method

.method public moveTaskBackwards(I)V
    .locals 8
    .param p1, "task"    # I

    .prologue
    .line 13372
    const-string v0, "android.permission.REORDER_TASKS"

    const-string/jumbo v1, "moveTaskBackwards()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13375
    monitor-enter p0

    .line 13376
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v3, -0x1

    const/4 v4, -0x1

    const-string v5, "Task backwards"

    move-object v0, p0

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkAppSwitchAllowedLocked(IIIILjava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 13378
    monitor-exit p0

    .line 13384
    :goto_0
    return-void

    .line 13380
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 13381
    .local v6, "origId":J
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->moveTaskBackwardsLocked(I)V

    .line 13382
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13383
    monitor-exit p0

    goto :goto_0

    .end local v6    # "origId":J
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public moveTaskToFront(IILandroid/os/Bundle;)V
    .locals 2
    .param p1, "taskId"    # I
    .param p2, "flags"    # I
    .param p3, "options"    # Landroid/os/Bundle;

    .prologue
    .line 13289
    const-string v0, "android.permission.REORDER_TASKS"

    const-string/jumbo v1, "moveTaskToFront()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13292
    monitor-enter p0

    .line 13293
    :try_start_0
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->moveTaskToFrontLocked(IILandroid/os/Bundle;)V

    .line 13294
    monitor-exit p0

    .line 13295
    return-void

    .line 13294
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method moveTaskToFrontLocked(IILandroid/os/Bundle;)V
    .locals 10
    .param p1, "taskId"    # I
    .param p2, "flags"    # I
    .param p3, "options"    # Landroid/os/Bundle;

    .prologue
    const/4 v3, -0x1

    .line 13298
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const-string v5, "Task to front"

    move-object v0, p0

    move v4, v3

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkAppSwitchAllowedLocked(IIIILjava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 13300
    invoke-static {p3}, Landroid/app/ActivityOptions;->abort(Landroid/os/Bundle;)V

    .line 13324
    :goto_0
    return-void

    .line 13303
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 13305
    .local v6, "origId":J
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v9

    .line 13306
    .local v9, "task":Lcom/android/server/am/TaskRecord;
    if-nez v9, :cond_1

    .line 13307
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Could not find task for id: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 13321
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 13310
    :cond_1
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, v9}, Lcom/android/server/am/ActivityStackSupervisor;->isLockTaskModeViolation(Lcom/android/server/am/TaskRecord;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 13311
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->showLockTaskToast()V

    .line 13312
    const-string v0, "ActivityManager"

    const-string/jumbo v1, "moveTaskToFront: Attempt to violate Lock Task Mode"

    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13321
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 13315
    :cond_2
    :try_start_2
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->topRunningActivityLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v8

    .line 13316
    .local v8, "prev":Lcom/android/server/am/ActivityRecord;
    if-eqz v8, :cond_3

    invoke-virtual {v8}, Lcom/android/server/am/ActivityRecord;->isRecentsActivity()Z

    move-result v0

    if-eqz v0, :cond_3

    .line 13317
    const/4 v0, 0x2

    invoke-virtual {v9, v0}, Lcom/android/server/am/TaskRecord;->setTaskToReturnTo(I)V

    .line 13319
    :cond_3
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-string/jumbo v1, "moveTaskToFront"

    invoke-virtual {v0, v9, p2, p3, v1}, Lcom/android/server/am/ActivityStackSupervisor;->findTaskToMoveToFrontLocked(Lcom/android/server/am/TaskRecord;ILandroid/os/Bundle;Ljava/lang/String;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 13321
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13323
    invoke-static {p3}, Landroid/app/ActivityOptions;->abort(Landroid/os/Bundle;)V

    goto :goto_0

    .line 13321
    .end local v8    # "prev":Lcom/android/server/am/ActivityRecord;
    .end local v9    # "task":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v0

    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0
.end method

.method public moveTaskToStack(IIZ)V
    .locals 6
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "toTop"    # Z

    .prologue
    .line 13446
    const-string v2, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v3, "moveTaskToStack()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13448
    if-nez p2, :cond_0

    .line 13449
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "moveTaskToStack: Attempt to move task "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " to home stack"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    new-instance v4, Ljava/lang/RuntimeException;

    const-string/jumbo v5, "here"

    invoke-direct {v4, v5}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    invoke-virtual {v4}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    move-result-object v4

    invoke-static {v2, v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 13452
    :cond_0
    monitor-enter p0

    .line 13453
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v0

    .line 13457
    .local v0, "ident":J
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1, p2, p3}, Lcom/android/server/am/ActivityStackSupervisor;->moveTaskToStackLocked(IIZ)V

    .line 13460
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    const-string/jumbo v4, "moveTaskToStack"

    invoke-virtual {v2, v3, v4}, Lcom/android/server/am/ActivityStackSupervisor;->setFocusedStack(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13464
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13466
    monitor-exit p0

    .line 13467
    return-void

    .line 13464
    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .line 13466
    .end local v0    # "ident":J
    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v2
.end method

.method moveUserToForeground(Lcom/android/server/am/UserState;II)V
    .locals 2
    .param p1, "uss"    # Lcom/android/server/am/UserState;
    .param p2, "oldUserId"    # I
    .param p3, "newUserId"    # I

    .prologue
    .line 27808
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1, p3, p1}, Lcom/android/server/am/ActivityStackSupervisor;->switchUserLocked(ILcom/android/server/am/UserState;)Z

    move-result v0

    .line 27809
    .local v0, "homeInFront":Z
    if-eqz v0, :cond_0

    .line 27810
    const-string/jumbo v1, "moveUserToFroreground"

    invoke-virtual {p0, p3, v1}, Lcom/android/server/am/ActivityManagerService;->startHomeActivityLocked(ILjava/lang/String;)Z

    .line 27814
    :goto_0
    invoke-static {p3}, Lcom/android/server/am/EventLogTags;->writeAmSwitchUser(I)V

    .line 27815
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v1

    invoke-virtual {v1, p3}, Lcom/android/server/pm/UserManagerService;->onUserForeground(I)V

    .line 27816
    invoke-virtual {p0, p2, p3}, Lcom/android/server/am/ActivityManagerService;->sendUserSwitchBroadcastsLocked(II)V

    .line 27817
    return-void

    .line 27812
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    goto :goto_0
.end method

.method public multiWindowSettingChanged(Z)V
    .locals 3
    .param p1, "value"    # Z

    .prologue
    .line 24172
    monitor-enter p0

    .line 24173
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 24174
    .local v0, "origId":J
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->multiWindowSettingChangeLocked(Z)V

    .line 24175
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 24176
    monitor-exit p0

    .line 24177
    return-void

    .line 24176
    .end local v0    # "origId":J
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method public navigateUpTo(Landroid/os/IBinder;Landroid/content/Intent;ILandroid/content/Intent;)Z
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "destIntent"    # Landroid/content/Intent;
    .param p3, "resultCode"    # I
    .param p4, "resultData"    # Landroid/content/Intent;

    .prologue
    .line 24628
    monitor-enter p0

    .line 24629
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 24630
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    .line 24631
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v1, v1, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v1, v0, p2, p3, p4}, Lcom/android/server/am/ActivityStack;->navigateUpToLocked(Lcom/android/server/am/ActivityRecord;Landroid/content/Intent;ILandroid/content/Intent;)Z

    move-result v1

    monitor-exit p0

    .line 24633
    :goto_0
    return v1

    :cond_0
    const/4 v1, 0x0

    monitor-exit p0

    goto :goto_0

    .line 24634
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public needCheckCenterBarPosition(I)Z
    .locals 6
    .param p1, "stackId"    # I

    .prologue
    const/4 v3, 0x1

    .line 13112
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getStackInfo(I)Landroid/app/ActivityManager$StackInfo;

    move-result-object v0

    .line 13113
    .local v0, "info":Landroid/app/ActivityManager$StackInfo;
    if-nez v0, :cond_1

    .line 13126
    :cond_0
    :goto_0
    return v3

    .line 13117
    :cond_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget v5, v0, Landroid/app/ActivityManager$StackInfo;->stackId:I

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityStackSupervisor;->getStack(I)Lcom/android/server/am/ActivityStack;

    move-result-object v1

    .line 13118
    .local v1, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v1, :cond_0

    .line 13122
    const/4 v4, 0x0

    invoke-virtual {v1, v4}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Lcom/android/server/am/ActivityRecord;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 13123
    .local v2, "topActivity":Lcom/android/server/am/ActivityRecord;
    if-eqz v2, :cond_0

    iget-object v4, v2, Lcom/android/server/am/ActivityRecord;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    const/16 v5, 0x1000

    invoke-virtual {v4, v5}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 13124
    const/4 v3, 0x0

    goto :goto_0
.end method

.method final newProcessRecordLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZI)Lcom/android/server/am/ProcessRecord;
    .locals 11
    .param p1, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "customProcess"    # Ljava/lang/String;
    .param p3, "isolated"    # Z
    .param p4, "isolatedUid"    # I

    .prologue
    const v10, 0x182b8

    const/4 v7, 0x1

    .line 15080
    if-eqz p2, :cond_5

    move-object v0, p2

    .line 15081
    .local v0, "proc":Ljava/lang/String;
    :goto_0
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v8}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v3

    .line 15082
    .local v3, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    iget v8, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v8}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v6

    .line 15083
    .local v6, "userId":I
    iget v5, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 15084
    .local v5, "uid":I
    if-eqz p3, :cond_3

    .line 15085
    if-nez p4, :cond_7

    .line 15086
    const/16 v4, 0x3e8

    .line 15088
    .local v4, "stepsLeft":I
    :cond_0
    iget v8, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    if-lt v8, v10, :cond_1

    iget v8, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    const v9, 0x1869f

    if-le v8, v9, :cond_2

    .line 15090
    :cond_1
    iput v10, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    .line 15092
    :cond_2
    iget v8, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    invoke-static {v6, v8}, Landroid/os/UserHandle;->getUid(II)I

    move-result v5

    .line 15093
    iget v8, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    add-int/lit8 v8, v8, 0x1

    iput v8, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    .line 15094
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {v8, v5}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v8

    if-gez v8, :cond_6

    .line 15109
    .end local v4    # "stepsLeft":I
    :cond_3
    :goto_1
    new-instance v1, Lcom/android/server/am/ProcessRecord;

    invoke-direct {v1, v3, p1, v0, v5}, Lcom/android/server/am/ProcessRecord;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)V

    .line 15110
    .local v1, "r":Lcom/android/server/am/ProcessRecord;
    iget-boolean v8, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-nez v8, :cond_4

    iget-boolean v8, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    if-nez v8, :cond_4

    if-nez v6, :cond_4

    iget v8, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v8, v8, 0x9

    const/16 v9, 0x9

    if-ne v8, v9, :cond_4

    .line 15114
    const-string v8, "com.android.systemui"

    iget-object v9, p1, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    invoke-virtual {v8, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_8

    iget-object v8, p1, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    invoke-virtual {v0, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-nez v8, :cond_8

    move v2, v7

    .line 15115
    .local v2, "skipSetPersistent":Z
    :goto_2
    if-nez v2, :cond_4

    .line 15116
    iput-boolean v7, v1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    .line 15120
    .end local v2    # "skipSetPersistent":Z
    :cond_4
    invoke-direct {p0, v1}, Lcom/android/server/am/ActivityManagerService;->addProcessNameLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 15121
    .end local v1    # "r":Lcom/android/server/am/ProcessRecord;
    :goto_3
    return-object v1

    .line 15080
    .end local v0    # "proc":Ljava/lang/String;
    .end local v3    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    .end local v5    # "uid":I
    .end local v6    # "userId":I
    :cond_5
    iget-object v0, p1, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    goto :goto_0

    .line 15098
    .restart local v0    # "proc":Ljava/lang/String;
    .restart local v3    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    .restart local v4    # "stepsLeft":I
    .restart local v5    # "uid":I
    .restart local v6    # "userId":I
    :cond_6
    add-int/lit8 v4, v4, -0x1

    .line 15099
    if-gtz v4, :cond_0

    .line 15100
    const/4 v1, 0x0

    goto :goto_3

    .line 15106
    .end local v4    # "stepsLeft":I
    :cond_7
    move v5, p4

    goto :goto_1

    .line 15114
    .restart local v1    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_8
    const/4 v2, 0x0

    goto :goto_2
.end method

.method public newUriPermissionOwner(Ljava/lang/String;)Landroid/os/IBinder;
    .locals 2
    .param p1, "name"    # Ljava/lang/String;

    .prologue
    .line 12061
    const-string/jumbo v1, "newUriPermissionOwner"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 12062
    monitor-enter p0

    .line 12063
    :try_start_0
    new-instance v0, Lcom/android/server/am/UriPermissionOwner;

    invoke-direct {v0, p0, p1}, Lcom/android/server/am/UriPermissionOwner;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/Object;)V

    .line 12064
    .local v0, "owner":Lcom/android/server/am/UriPermissionOwner;
    invoke-virtual {v0}, Lcom/android/server/am/UriPermissionOwner;->getExternalTokenLocked()Landroid/os/Binder;

    move-result-object v1

    monitor-exit p0

    return-object v1

    .line 12065
    .end local v0    # "owner":Lcom/android/server/am/UriPermissionOwner;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public noteAlarmFinish(Landroid/content/IIntentSender;ILjava/lang/String;)V
    .locals 5
    .param p1, "sender"    # Landroid/content/IIntentSender;
    .param p2, "sourceUid"    # I
    .param p3, "tag"    # Ljava/lang/String;

    .prologue
    .line 16302
    instance-of v4, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v4, :cond_0

    .line 16313
    .end local p2    # "sourceUid":I
    :goto_0
    return-void

    .restart local p2    # "sourceUid":I
    :cond_0
    move-object v1, p1

    .line 16305
    check-cast v1, Lcom/android/server/am/PendingIntentRecord;

    .line 16306
    .local v1, "rec":Lcom/android/server/am/PendingIntentRecord;
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v4}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v2

    .line 16307
    .local v2, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v2

    .line 16308
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v4}, Lcom/android/server/am/BatteryStatsService;->enforceCallingPermission()V

    .line 16309
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 16310
    .local v0, "MY_UID":I
    iget v4, v1, Lcom/android/server/am/PendingIntentRecord;->uid:I

    if-ne v4, v0, :cond_1

    const/16 v3, 0x3e8

    .line 16311
    .local v3, "uid":I
    :goto_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    if-ltz p2, :cond_2

    .end local p2    # "sourceUid":I
    :goto_2
    invoke-virtual {v4, p3, p2}, Lcom/android/server/am/BatteryStatsService;->noteAlarmFinish(Ljava/lang/String;I)V

    .line 16312
    monitor-exit v2

    goto :goto_0

    .end local v0    # "MY_UID":I
    .end local v3    # "uid":I
    :catchall_0
    move-exception v4

    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v4

    .line 16310
    .restart local v0    # "MY_UID":I
    .restart local p2    # "sourceUid":I
    :cond_1
    :try_start_1
    iget v3, v1, Lcom/android/server/am/PendingIntentRecord;->uid:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_1

    .restart local v3    # "uid":I
    :cond_2
    move p2, v3

    .line 16311
    goto :goto_2
.end method

.method public noteAlarmStart(Landroid/content/IIntentSender;ILjava/lang/String;)V
    .locals 5
    .param p1, "sender"    # Landroid/content/IIntentSender;
    .param p2, "sourceUid"    # I
    .param p3, "tag"    # Ljava/lang/String;

    .prologue
    .line 16288
    instance-of v4, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v4, :cond_0

    .line 16299
    .end local p2    # "sourceUid":I
    :goto_0
    return-void

    .restart local p2    # "sourceUid":I
    :cond_0
    move-object v1, p1

    .line 16291
    check-cast v1, Lcom/android/server/am/PendingIntentRecord;

    .line 16292
    .local v1, "rec":Lcom/android/server/am/PendingIntentRecord;
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v4}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v2

    .line 16293
    .local v2, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v2

    .line 16294
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v4}, Lcom/android/server/am/BatteryStatsService;->enforceCallingPermission()V

    .line 16295
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 16296
    .local v0, "MY_UID":I
    iget v4, v1, Lcom/android/server/am/PendingIntentRecord;->uid:I

    if-ne v4, v0, :cond_1

    const/16 v3, 0x3e8

    .line 16297
    .local v3, "uid":I
    :goto_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    if-ltz p2, :cond_2

    .end local p2    # "sourceUid":I
    :goto_2
    invoke-virtual {v4, p3, p2}, Lcom/android/server/am/BatteryStatsService;->noteAlarmStart(Ljava/lang/String;I)V

    .line 16298
    monitor-exit v2

    goto :goto_0

    .end local v0    # "MY_UID":I
    .end local v3    # "uid":I
    :catchall_0
    move-exception v4

    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v4

    .line 16296
    .restart local v0    # "MY_UID":I
    .restart local p2    # "sourceUid":I
    :cond_1
    :try_start_1
    iget v3, v1, Lcom/android/server/am/PendingIntentRecord;->uid:I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_1

    .restart local v3    # "uid":I
    :cond_2
    move p2, v3

    .line 16297
    goto :goto_2
.end method

.method public noteWakeupAlarm(Landroid/content/IIntentSender;ILjava/lang/String;Ljava/lang/String;)V
    .locals 6
    .param p1, "sender"    # Landroid/content/IIntentSender;
    .param p2, "sourceUid"    # I
    .param p3, "sourcePkg"    # Ljava/lang/String;
    .param p4, "tag"    # Ljava/lang/String;

    .prologue
    .line 16269
    instance-of v5, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v5, :cond_0

    .line 16285
    .end local p2    # "sourceUid":I
    .end local p3    # "sourcePkg":Ljava/lang/String;
    :goto_0
    return-void

    .restart local p2    # "sourceUid":I
    .restart local p3    # "sourcePkg":Ljava/lang/String;
    :cond_0
    move-object v2, p1

    .line 16272
    check-cast v2, Lcom/android/server/am/PendingIntentRecord;

    .line 16273
    .local v2, "rec":Lcom/android/server/am/PendingIntentRecord;
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v5}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v3

    .line 16274
    .local v3, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v3

    .line 16275
    :try_start_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v5}, Lcom/android/server/am/BatteryStatsService;->isOnBattery()Z

    move-result v5

    if-eqz v5, :cond_1

    .line 16276
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v5}, Lcom/android/server/am/BatteryStatsService;->enforceCallingPermission()V

    .line 16277
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 16278
    .local v0, "MY_UID":I
    iget v5, v2, Lcom/android/server/am/PendingIntentRecord;->uid:I

    if-ne v5, v0, :cond_2

    const/16 v4, 0x3e8

    .line 16279
    .local v4, "uid":I
    :goto_1
    if-ltz p2, :cond_3

    .end local p2    # "sourceUid":I
    :goto_2
    if-eqz p3, :cond_4

    .end local p3    # "sourcePkg":Ljava/lang/String;
    :goto_3
    invoke-virtual {v3, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl;->getPackageStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;

    move-result-object v1

    .line 16282
    .local v1, "pkg":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    invoke-virtual {v1, p4}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->noteWakeupAlarmLocked(Ljava/lang/String;)V

    .line 16284
    .end local v0    # "MY_UID":I
    .end local v1    # "pkg":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    .end local v4    # "uid":I
    :cond_1
    monitor-exit v3

    goto :goto_0

    :catchall_0
    move-exception v5

    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v5

    .line 16278
    .restart local v0    # "MY_UID":I
    .restart local p2    # "sourceUid":I
    .restart local p3    # "sourcePkg":Ljava/lang/String;
    :cond_2
    :try_start_1
    iget v4, v2, Lcom/android/server/am/PendingIntentRecord;->uid:I

    goto :goto_1

    .restart local v4    # "uid":I
    :cond_3
    move p2, v4

    .line 16279
    goto :goto_2

    .end local p2    # "sourceUid":I
    :cond_4
    iget-object v5, v2, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object p3, v5, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_3
.end method

.method public notifyActivityDrawn(Landroid/os/IBinder;)V
    .locals 9
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/4 v2, 0x1

    const/4 v3, 0x0

    .line 4522
    monitor-enter p0

    .line 4523
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4, p1}, Lcom/android/server/am/ActivityStackSupervisor;->isInAnyStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v1

    .line 4524
    .local v1, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v1, :cond_1

    .line 4526
    const-string v4, "2.0"

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->knoxVersionInfo:Landroid/os/Bundle;

    const-string/jumbo v6, "version"

    invoke-virtual {v5, v6}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 4528
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowManagerService;->getWindowManagerLock()Ljava/lang/Object;

    move-result-object v4

    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 4529
    :try_start_1
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-object v6, v1, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowManagerService;->getMainWindowAttributesLocked(Landroid/view/IApplicationToken;)Landroid/view/WindowManager$LayoutParams;

    move-result-object v0

    .line 4530
    .local v0, "lp":Landroid/view/WindowManager$LayoutParams;
    monitor-exit v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 4531
    if-eqz v0, :cond_0

    :try_start_2
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v4

    if-eqz v4, :cond_0

    .line 4532
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v5

    iget v6, v1, Lcom/android/server/am/ActivityRecord;->userId:I

    iget-boolean v4, v1, Lcom/android/server/am/ActivityRecord;->fullscreen:Z

    if-eqz v4, :cond_2

    invoke-virtual {v1}, Lcom/android/server/am/ActivityRecord;->isFloatingActivity()Z

    move-result v4

    if-nez v4, :cond_2

    move v4, v2

    :goto_0
    iget v7, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v8, 0x80000

    and-int/2addr v7, v8

    if-eqz v7, :cond_3

    :goto_1
    invoke-virtual {v5, v6, v4, v2}, Lcom/android/server/pm/PersonaManagerService;->notifyActivityDrawn(IZZ)V

    .line 4544
    .end local v0    # "lp":Landroid/view/WindowManager$LayoutParams;
    :cond_0
    iget-object v2, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v2, v2, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v2, v1}, Lcom/android/server/am/ActivityStack;->notifyActivityDrawnLocked(Lcom/android/server/am/ActivityRecord;)V

    .line 4546
    invoke-virtual {v1}, Lcom/android/server/am/ActivityRecord;->isHomeActivity()Z

    move-result v2

    if-eqz v2, :cond_1

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityRecord;->getDisplayId()I

    move-result v3

    invoke-virtual {v2, v3}, Lcom/android/server/am/ActivityStackSupervisor;->allResumedActivitiesVisible(I)Z

    move-result v2

    if-eqz v2, :cond_1

    .line 4547
    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mMinimizeAllPenWindowRequested:Z

    if-eqz v2, :cond_1

    .line 4548
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStackSupervisor;->handleMinimizeAllPenWindow()V

    .line 4552
    :cond_1
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 4553
    return-void

    .line 4530
    :catchall_0
    move-exception v2

    :try_start_3
    monitor-exit v4
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v2

    .line 4552
    .end local v1    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v2

    .restart local v0    # "lp":Landroid/view/WindowManager$LayoutParams;
    .restart local v1    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_2
    move v4, v3

    .line 4532
    goto :goto_0

    :cond_3
    move v2, v3

    goto :goto_1
.end method

.method public notifyCascadeStackRotated(ILandroid/graphics/Rect;)V
    .locals 4
    .param p1, "stackId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    .prologue
    .line 24200
    monitor-enter p0

    .line 24201
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 24202
    .local v0, "origId":J
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3, p1}, Lcom/android/server/am/ActivityStackSupervisor;->getStack(I)Lcom/android/server/am/ActivityStack;

    move-result-object v2

    .line 24203
    .local v2, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v2, :cond_0

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStack;->isFloatingStack()Z

    move-result v3

    if-eqz v3, :cond_0

    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/graphics/Rect;->isEmpty()Z

    move-result v3

    if-nez v3, :cond_0

    .line 24204
    const/16 v3, 0x100

    invoke-virtual {v2, p2, v3}, Lcom/android/server/am/ActivityStack;->setStackBoundForAllTaskInStackLocked(Landroid/graphics/Rect;I)V

    .line 24206
    :cond_0
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 24207
    monitor-exit p0

    .line 24209
    return-void

    .line 24207
    .end local v0    # "origId":J
    .end local v2    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v3
.end method

.method public notifyCleartextNetwork(I[B)V
    .locals 3
    .param p1, "uid"    # I
    .param p2, "firstPacket"    # [B

    .prologue
    .line 15432
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x32

    const/4 v2, 0x0

    invoke-virtual {v0, v1, p1, v2, p2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v0

    invoke-virtual {v0}, Landroid/os/Message;->sendToTarget()V

    .line 15433
    return-void
.end method

.method public notifyDisplayFreezeStopped()V
    .locals 3

    .prologue
    .line 24188
    monitor-enter p0

    .line 24189
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 24190
    .local v0, "origId":J
    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mMinimizeAllPenWindowRequested:Z

    if-eqz v2, :cond_0

    .line 24191
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStackSupervisor;->handleMinimizeAllPenWindow()V

    .line 24193
    :cond_0
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 24194
    monitor-exit p0

    .line 24195
    return-void

    .line 24194
    .end local v0    # "origId":J
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method public final notifyEnterAnimationComplete(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 10156
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v2, 0x2c

    invoke-virtual {v1, v2, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 10157
    return-void
.end method

.method public final notifyLaunchTaskBehindComplete(Landroid/os/IBinder;)V
    .locals 1
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 10151
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStackSupervisor;->scheduleLaunchTaskBehindComplete(Landroid/os/IBinder;)V

    .line 10152
    return-void
.end method

.method public notifyMinimizeMultiWindow(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 24180
    monitor-enter p0

    .line 24181
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 24182
    .local v0, "origId":J
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->notifyMinimizeMultiWindow(Landroid/os/IBinder;)V

    .line 24183
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 24184
    monitor-exit p0

    .line 24185
    return-void

    .line 24184
    .end local v0    # "origId":J
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method notifyTaskPersisterLocked(Lcom/android/server/am/TaskRecord;Z)V
    .locals 1
    .param p1, "task"    # Lcom/android/server/am/TaskRecord;
    .param p2, "flush"    # Z

    .prologue
    .line 15416
    if-eqz p1, :cond_0

    iget-object v0, p1, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    if-eqz v0, :cond_0

    iget-object v0, p1, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStack;->isHomeStack()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 15421
    :goto_0
    return-void

    .line 15420
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/TaskPersister;->wakeup(Lcom/android/server/am/TaskRecord;Z)V

    goto :goto_0
.end method

.method notifyTaskStackChangedLocked()V
    .locals 4

    .prologue
    const/16 v2, 0x31

    .line 15425
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 15426
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    .line 15427
    .local v0, "nmsg":Landroid/os/Message;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-wide/16 v2, 0x3e8

    invoke-virtual {v1, v0, v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 15428
    return-void
.end method

.method onCoreSettingsChange(Landroid/os/Bundle;)V
    .locals 3
    .param p1, "settings"    # Landroid/os/Bundle;

    .prologue
    .line 27315
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v0, v2, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_1

    .line 27316
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 27318
    .local v1, "processRecord":Lcom/android/server/am/ProcessRecord;
    :try_start_0
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_0

    .line 27319
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v2, p1}, Landroid/app/IApplicationThread;->setCoreSettings(Landroid/os/Bundle;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 27315
    :cond_0
    :goto_1
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 27325
    .end local v1    # "processRecord":Lcom/android/server/am/ProcessRecord;
    :cond_1
    return-void

    .line 27321
    .restart local v1    # "processRecord":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v2

    goto :goto_1
.end method

.method protected onFixedScreenModeChanged(I)V
    .locals 4
    .param p1, "fixedTaskId"    # I

    .prologue
    .line 29461
    new-instance v0, Landroid/content/Intent;

    invoke-direct {v0}, Landroid/content/Intent;-><init>()V

    .line 29462
    .local v0, "fixedIntent":Landroid/content/Intent;
    const-string v1, "com.samsung.android.dualscreen.action.FIXED_SCREEN_MODE"

    invoke-virtual {v0, v1}, Landroid/content/Intent;->setAction(Ljava/lang/String;)Landroid/content/Intent;

    .line 29463
    const-string/jumbo v1, "taskId"

    invoke-virtual {v0, v1, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 29464
    const-string/jumbo v2, "enable"

    if-gez p1, :cond_0

    const/4 v1, 0x0

    :goto_0
    invoke-virtual {v0, v2, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 29465
    const/high16 v1, 0x40000000    # 2.0f

    invoke-virtual {v0, v1}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 29467
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    sget-object v2, Landroid/os/UserHandle;->CURRENT_OR_SELF:Landroid/os/UserHandle;

    const-string v3, "com.samsung.android.dualscreen.permission.FIXED_SCREEN_MODE"

    invoke-virtual {v1, v0, v2, v3}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;)V

    .line 29468
    return-void

    .line 29464
    :cond_0
    const/4 v1, 0x1

    goto :goto_0
.end method

.method protected onLockTaskModeChanged(Z)V
    .locals 5
    .param p1, "enabled"    # Z

    .prologue
    .line 29443
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v2

    const-string v3, "CscFeature_Framework_SupportBroadcastScreenPinning"

    invoke-virtual {v2, v3}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 29445
    new-instance v0, Landroid/content/Intent;

    const-string v2, "com.kddi.agent.action.SCREEN_PINNING_CONDITION"

    invoke-direct {v0, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 29446
    .local v0, "intent":Landroid/content/Intent;
    const-string/jumbo v2, "status"

    invoke-virtual {v0, v2, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 29447
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    sget-object v3, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    invoke-virtual {v2, v0, v3}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    .line 29449
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_0
    new-instance v1, Landroid/content/Intent;

    invoke-direct {v1}, Landroid/content/Intent;-><init>()V

    .line 29450
    .local v1, "pinIntent":Landroid/content/Intent;
    const-string v2, "com.samsung.android.action.LOCK_TASK_MODE"

    invoke-virtual {v1, v2}, Landroid/content/Intent;->setAction(Ljava/lang/String;)Landroid/content/Intent;

    .line 29451
    const-string/jumbo v2, "enable"

    invoke-virtual {v1, v2, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 29453
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    sget-object v3, Landroid/os/UserHandle;->CURRENT_OR_SELF:Landroid/os/UserHandle;

    const-string v4, "com.samsung.android.permission.LOCK_TASK_MODE"

    invoke-virtual {v2, v1, v3, v4}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;)V

    .line 29454
    return-void
.end method

.method onScreenStateChanged(II)V
    .locals 0
    .param p1, "displayId"    # I
    .param p2, "state"    # I

    .prologue
    .line 15374
    return-void
.end method

.method public onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    .locals 35
    .param p1, "code"    # I
    .param p2, "data"    # Landroid/os/Parcel;
    .param p3, "reply"    # Landroid/os/Parcel;
    .param p4, "flags"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 3834
    const v30, 0x5f535052

    move/from16 v0, p1

    move/from16 v1, v30

    if-ne v0, v1, :cond_3

    .line 3836
    new-instance v22, Ljava/util/ArrayList;

    invoke-direct/range {v22 .. v22}, Ljava/util/ArrayList;-><init>()V

    .line 3837
    .local v22, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/os/IBinder;>;"
    monitor-enter p0

    .line 3838
    :try_start_0
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v30, v0

    invoke-virtual/range {v30 .. v30}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v30

    invoke-virtual/range {v30 .. v30}, Landroid/util/ArrayMap;->size()I

    move-result v6

    .line 3839
    .local v6, "NP":I
    const/16 v16, 0x0

    .local v16, "ip":I
    :goto_0
    move/from16 v0, v16

    if-ge v0, v6, :cond_2

    .line 3840
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v30, v0

    invoke-virtual/range {v30 .. v30}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v30

    move-object/from16 v0, v30

    move/from16 v1, v16

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Landroid/util/SparseArray;

    .line 3841
    .local v9, "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    invoke-virtual {v9}, Landroid/util/SparseArray;->size()I

    move-result v5

    .line 3842
    .local v5, "NA":I
    const/4 v15, 0x0

    .local v15, "ia":I
    :goto_1
    if-ge v15, v5, :cond_1

    .line 3843
    invoke-virtual {v9, v15}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/am/ProcessRecord;

    .line 3844
    .local v8, "app":Lcom/android/server/am/ProcessRecord;
    iget-object v0, v8, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move-object/from16 v30, v0

    if-eqz v30, :cond_0

    .line 3845
    iget-object v0, v8, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move-object/from16 v30, v0

    invoke-interface/range {v30 .. v30}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v30

    move-object/from16 v0, v22

    move-object/from16 v1, v30

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 3842
    :cond_0
    add-int/lit8 v15, v15, 0x1

    goto :goto_1

    .line 3839
    .end local v8    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_1
    add-int/lit8 v16, v16, 0x1

    goto :goto_0

    .line 3849
    .end local v5    # "NA":I
    .end local v9    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v15    # "ia":I
    :cond_2
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 3851
    invoke-virtual/range {v22 .. v22}, Ljava/util/ArrayList;->size()I

    move-result v4

    .line 3852
    .local v4, "N":I
    const/4 v14, 0x0

    .local v14, "i":I
    :goto_2
    if-ge v14, v4, :cond_17

    .line 3853
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v10

    .line 3855
    .local v10, "data2":Landroid/os/Parcel;
    :try_start_1
    move-object/from16 v0, v22

    invoke-virtual {v0, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v30

    check-cast v30, Landroid/os/IBinder;

    const v31, 0x5f535052

    const/16 v32, 0x0

    const/16 v33, 0x0

    move-object/from16 v0, v30

    move/from16 v1, v31

    move-object/from16 v2, v32

    move/from16 v3, v33

    invoke-interface {v0, v1, v10, v2, v3}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    .line 3858
    :goto_3
    invoke-virtual {v10}, Landroid/os/Parcel;->recycle()V

    .line 3852
    add-int/lit8 v14, v14, 0x1

    goto :goto_2

    .line 3849
    .end local v4    # "N":I
    .end local v6    # "NP":I
    .end local v10    # "data2":Landroid/os/Parcel;
    .end local v14    # "i":I
    .end local v16    # "ip":I
    :catchall_0
    move-exception v30

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v30

    .line 3861
    .end local v22    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/os/IBinder;>;"
    :cond_3
    const/16 v30, 0x458

    move/from16 v0, p1

    move/from16 v1, v30

    if-ne v0, v1, :cond_d

    .line 3862
    const-string v30, "android.permission.HARDWARE_TEST"

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v31

    invoke-static/range {v30 .. v31}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v30

    if-eqz v30, :cond_4

    const-string/jumbo v30, "user"

    sget-object v31, Landroid/os/Build;->TYPE:Ljava/lang/String;

    invoke-virtual/range {v30 .. v31}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v30

    if-eqz v30, :cond_4

    .line 3863
    const-string v30, "ActivityManager"

    new-instance v31, Ljava/lang/StringBuilder;

    invoke-direct/range {v31 .. v31}, Ljava/lang/StringBuilder;-><init>()V

    const-string v32, "Permission denied for "

    invoke-virtual/range {v31 .. v32}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v31

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v32

    invoke-virtual/range {v31 .. v32}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v31

    const-string v32, "("

    invoke-virtual/range {v31 .. v32}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v31

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v32

    invoke-virtual/range {v31 .. v32}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v31

    const-string v32, ") to change the scale."

    invoke-virtual/range {v31 .. v32}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v31

    invoke-virtual/range {v31 .. v31}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v31

    invoke-static/range {v30 .. v31}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 3864
    const/16 v30, 0x0

    .line 3988
    :goto_4
    return v30

    .line 3867
    :cond_4
    const-string v30, "android.app.IActivityManager"

    move-object/from16 v0, p2

    move-object/from16 v1, v30

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->enforceInterface(Ljava/lang/String;)V

    .line 3868
    invoke-virtual/range {p2 .. p2}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v13

    .line 3869
    .local v13, "enable":Ljava/lang/String;
    if-eqz v13, :cond_7

    .line 3870
    const-string v30, ":"

    move-object/from16 v0, v30

    invoke-virtual {v13, v0}, Ljava/lang/String;->lastIndexOf(Ljava/lang/String;)I

    move-result v28

    .line 3871
    .local v28, "separatedIndex":I
    const/16 v30, -0x1

    move/from16 v0, v28

    move/from16 v1, v30

    if-eq v0, v1, :cond_6

    .line 3872
    const/16 v30, 0x0

    move/from16 v0, v30

    move/from16 v1, v28

    invoke-virtual {v13, v0, v1}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v18

    .line 3873
    .local v18, "packageName":Ljava/lang/String;
    add-int/lit8 v30, v28, 0x1

    move/from16 v0, v30

    invoke-virtual {v13, v0}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v29

    .line 3874
    .local v29, "strScale":Ljava/lang/String;
    invoke-static/range {v29 .. v29}, Ljava/lang/Float;->parseFloat(Ljava/lang/String;)F

    move-result v30

    invoke-static/range {v30 .. v30}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    move-result-object v25

    .line 3875
    .local v25, "scale":Ljava/lang/Float;
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mDssHelper:Landroid/os/DssHelper;

    move-object/from16 v30, v0

    invoke-virtual/range {v25 .. v25}, Ljava/lang/Float;->floatValue()F

    move-result v31

    move-object/from16 v0, v30

    move-object/from16 v1, v18

    move/from16 v2, v31

    invoke-virtual {v0, v1, v2}, Landroid/os/DssHelper;->addPackageByTransact(Ljava/lang/String;F)V

    .line 3876
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mDssHelper:Landroid/os/DssHelper;

    move-object/from16 v30, v0

    move-object/from16 v0, v30

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Landroid/os/DssHelper;->isAdss(Ljava/lang/String;)Z

    move-result v30

    if-nez v30, :cond_5

    .line 3877
    const/16 v30, 0x1

    goto :goto_4

    .line 3879
    :cond_5
    const/16 v30, 0x0

    goto :goto_4

    .line 3880
    .end local v18    # "packageName":Ljava/lang/String;
    .end local v25    # "scale":Ljava/lang/Float;
    .end local v29    # "strScale":Ljava/lang/String;
    :cond_6
    const-string v30, "ShowAllDssList"

    move-object/from16 v0, v30

    invoke-virtual {v13, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v30

    if-eqz v30, :cond_8

    .line 3881
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mDssHelper:Landroid/os/DssHelper;

    move-object/from16 v30, v0

    invoke-virtual/range {v30 .. v30}, Landroid/os/DssHelper;->showAllDSSInfo()V

    .line 3908
    .end local v28    # "separatedIndex":I
    :cond_7
    :goto_5
    const/16 v30, 0x1

    goto :goto_4

    .line 3883
    .restart local v28    # "separatedIndex":I
    :cond_8
    const-string v30, "/"

    move-object/from16 v0, v30

    invoke-virtual {v13, v0}, Ljava/lang/String;->lastIndexOf(Ljava/lang/String;)I

    move-result v28

    .line 3884
    const/16 v30, -0x1

    move/from16 v0, v28

    move/from16 v1, v30

    if-eq v0, v1, :cond_7

    .line 3885
    const/16 v30, 0x0

    move/from16 v0, v30

    move/from16 v1, v28

    invoke-virtual {v13, v0, v1}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v19

    .line 3886
    .local v19, "packageNameAndScale":Ljava/lang/String;
    add-int/lit8 v30, v28, 0x1

    move/from16 v0, v30

    invoke-virtual {v13, v0}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v11

    .line 3888
    .local v11, "dssCommand":Ljava/lang/String;
    const-string v30, "/"

    move-object/from16 v0, v19

    move-object/from16 v1, v30

    invoke-virtual {v0, v1}, Ljava/lang/String;->lastIndexOf(Ljava/lang/String;)I

    move-result v28

    .line 3889
    const/16 v30, 0x0

    move-object/from16 v0, v19

    move/from16 v1, v30

    move/from16 v2, v28

    invoke-virtual {v0, v1, v2}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v18

    .line 3890
    .restart local v18    # "packageName":Ljava/lang/String;
    add-int/lit8 v30, v28, 0x1

    move-object/from16 v0, v19

    move/from16 v1, v30

    invoke-virtual {v0, v1}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v29

    .line 3891
    .restart local v29    # "strScale":Ljava/lang/String;
    invoke-static/range {v29 .. v29}, Ljava/lang/Float;->parseFloat(Ljava/lang/String;)F

    move-result v30

    invoke-static/range {v30 .. v30}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    move-result-object v25

    .line 3892
    .restart local v25    # "scale":Ljava/lang/Float;
    const-string v30, "add_fResume"

    move-object/from16 v0, v30

    invoke-virtual {v11, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v30

    if-eqz v30, :cond_9

    .line 3893
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mDssHelper:Landroid/os/DssHelper;

    move-object/from16 v30, v0

    invoke-virtual/range {v25 .. v25}, Ljava/lang/Float;->floatValue()F

    move-result v31

    move-object/from16 v0, v30

    move-object/from16 v1, v18

    move/from16 v2, v31

    invoke-virtual {v0, v1, v2}, Landroid/os/DssHelper;->addAdssPackageByTransact(Ljava/lang/String;F)V

    .line 3894
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v30, v0

    move-object/from16 v0, v30

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityStackSupervisor;->forceResumeTopActivitiesLocked(Ljava/lang/String;)Z

    goto :goto_5

    .line 3895
    :cond_9
    const-string/jumbo v30, "remove_fResume"

    move-object/from16 v0, v30

    invoke-virtual {v11, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v30

    if-eqz v30, :cond_a

    .line 3896
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mDssHelper:Landroid/os/DssHelper;

    move-object/from16 v30, v0

    move-object/from16 v0, v30

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Landroid/os/DssHelper;->removeAdssPackage(Ljava/lang/String;)V

    .line 3897
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v30, v0

    move-object/from16 v0, v30

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityStackSupervisor;->forceResumeTopActivitiesLocked(Ljava/lang/String;)Z

    goto/16 :goto_5

    .line 3898
    :cond_a
    const-string/jumbo v30, "remove"

    move-object/from16 v0, v30

    invoke-virtual {v11, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v30

    if-eqz v30, :cond_b

    .line 3899
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mDssHelper:Landroid/os/DssHelper;

    move-object/from16 v30, v0

    move-object/from16 v0, v30

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Landroid/os/DssHelper;->removeAdssPackage(Ljava/lang/String;)V

    goto/16 :goto_5

    .line 3900
    :cond_b
    const-string v30, "add"

    move-object/from16 v0, v30

    invoke-virtual {v11, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v30

    if-eqz v30, :cond_c

    .line 3901
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mDssHelper:Landroid/os/DssHelper;

    move-object/from16 v30, v0

    invoke-virtual/range {v25 .. v25}, Ljava/lang/Float;->floatValue()F

    move-result v31

    move-object/from16 v0, v30

    move-object/from16 v1, v18

    move/from16 v2, v31

    invoke-virtual {v0, v1, v2}, Landroid/os/DssHelper;->addAdssPackageByTransact(Ljava/lang/String;F)V

    goto/16 :goto_5

    .line 3902
    :cond_c
    const-string/jumbo v30, "fResume"

    move-object/from16 v0, v30

    invoke-virtual {v11, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v30

    if-eqz v30, :cond_7

    .line 3903
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v30, v0

    move-object/from16 v0, v30

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityStackSupervisor;->forceResumeTopActivitiesLocked(Ljava/lang/String;)Z

    goto/16 :goto_5

    .line 3916
    .end local v11    # "dssCommand":Ljava/lang/String;
    .end local v13    # "enable":Ljava/lang/String;
    .end local v18    # "packageName":Ljava/lang/String;
    .end local v19    # "packageNameAndScale":Ljava/lang/String;
    .end local v25    # "scale":Ljava/lang/Float;
    .end local v28    # "separatedIndex":I
    .end local v29    # "strScale":Ljava/lang/String;
    :cond_d
    const/16 v30, 0x459

    move/from16 v0, p1

    move/from16 v1, v30

    if-ne v0, v1, :cond_f

    .line 3918
    invoke-static {}, Landroid/os/DcsHelper;->getInstance()Landroid/os/DcsHelper;

    move-result-object v30

    move-object/from16 v0, v30

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mDcsHelper:Landroid/os/DcsHelper;

    .line 3919
    const-string v30, "android.app.IActivityManager"

    move-object/from16 v0, p2

    move-object/from16 v1, v30

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->enforceInterface(Ljava/lang/String;)V

    .line 3920
    invoke-virtual/range {p2 .. p2}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v13

    .line 3921
    .restart local v13    # "enable":Ljava/lang/String;
    if-eqz v13, :cond_e

    .line 3922
    const-string v30, ":"

    move-object/from16 v0, v30

    invoke-virtual {v13, v0}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v27

    .line 3923
    .local v27, "separated":[Ljava/lang/String;
    const/16 v30, 0x1

    aget-object v30, v27, v30

    invoke-static/range {v30 .. v30}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v30

    invoke-static/range {v30 .. v30}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v25

    .line 3924
    .local v25, "scale":Ljava/lang/Integer;
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mDcsHelper:Landroid/os/DcsHelper;

    move-object/from16 v30, v0

    const/16 v31, 0x0

    aget-object v31, v27, v31

    move-object/from16 v0, v30

    move-object/from16 v1, v31

    move-object/from16 v2, v25

    invoke-virtual {v0, v1, v2}, Landroid/os/DcsHelper;->addPackage(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 3926
    .end local v25    # "scale":Ljava/lang/Integer;
    .end local v27    # "separated":[Ljava/lang/String;
    :cond_e
    const/16 v30, 0x1

    goto/16 :goto_4

    .line 3933
    .end local v13    # "enable":Ljava/lang/String;
    :cond_f
    const/16 v30, 0x45a

    move/from16 v0, p1

    move/from16 v1, v30

    if-ne v0, v1, :cond_11

    .line 3935
    invoke-static {}, Landroid/os/DbqHelper;->getInstance()Landroid/os/DbqHelper;

    move-result-object v30

    move-object/from16 v0, v30

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mDbqHelper:Landroid/os/DbqHelper;

    .line 3936
    const-string v30, "android.app.IActivityManager"

    move-object/from16 v0, p2

    move-object/from16 v1, v30

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->enforceInterface(Ljava/lang/String;)V

    .line 3937
    invoke-virtual/range {p2 .. p2}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v13

    .line 3938
    .restart local v13    # "enable":Ljava/lang/String;
    if-eqz v13, :cond_10

    .line 3939
    const-string v30, ":"

    move-object/from16 v0, v30

    invoke-virtual {v13, v0}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v27

    .line 3940
    .restart local v27    # "separated":[Ljava/lang/String;
    const-string v30, "ActivityManager"

    new-instance v31, Ljava/lang/StringBuilder;

    invoke-direct/range {v31 .. v31}, Ljava/lang/StringBuilder;-><init>()V

    const-string v32, "Values are ::"

    invoke-virtual/range {v31 .. v32}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v31

    const/16 v32, 0x1

    aget-object v32, v27, v32

    invoke-static/range {v32 .. v32}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v32

    invoke-virtual/range {v31 .. v32}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v31

    const-string v32, " "

    invoke-virtual/range {v31 .. v32}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v31

    const/16 v32, 0x2

    aget-object v32, v27, v32

    invoke-static/range {v32 .. v32}, Ljava/lang/Boolean;->parseBoolean(Ljava/lang/String;)Z

    move-result v32

    invoke-virtual/range {v31 .. v32}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v31

    const-string v32, " "

    invoke-virtual/range {v31 .. v32}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v31

    const/16 v32, 0x3

    aget-object v32, v27, v32

    invoke-static/range {v32 .. v32}, Ljava/lang/Boolean;->parseBoolean(Ljava/lang/String;)Z

    move-result v32

    invoke-virtual/range {v31 .. v32}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v31

    invoke-virtual/range {v31 .. v31}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v31

    invoke-static/range {v30 .. v31}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 3941
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mDbqHelper:Landroid/os/DbqHelper;

    move-object/from16 v30, v0

    const/16 v31, 0x0

    aget-object v31, v27, v31

    const/16 v32, 0x1

    aget-object v32, v27, v32

    invoke-static/range {v32 .. v32}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v32

    invoke-static/range {v32 .. v32}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v32

    const/16 v33, 0x2

    aget-object v33, v27, v33

    invoke-static/range {v33 .. v33}, Ljava/lang/Boolean;->parseBoolean(Ljava/lang/String;)Z

    move-result v33

    invoke-static/range {v33 .. v33}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v33

    const/16 v34, 0x3

    aget-object v34, v27, v34

    invoke-static/range {v34 .. v34}, Ljava/lang/Boolean;->parseBoolean(Ljava/lang/String;)Z

    move-result v34

    invoke-static/range {v34 .. v34}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v34

    invoke-virtual/range {v30 .. v34}, Landroid/os/DbqHelper;->addPackage(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Boolean;)V

    .line 3943
    .end local v27    # "separated":[Ljava/lang/String;
    :cond_10
    const/16 v30, 0x1

    goto/16 :goto_4

    .line 3950
    .end local v13    # "enable":Ljava/lang/String;
    :cond_11
    const/16 v30, 0x45b

    move/from16 v0, p1

    move/from16 v1, v30

    if-ne v0, v1, :cond_17

    .line 3954
    invoke-static {}, Landroid/os/DTSHelper;->getInstance()Landroid/os/DTSHelper;

    move-result-object v30

    move-object/from16 v0, v30

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mDTSHelper:Landroid/os/DTSHelper;

    .line 3955
    const-string v30, "android.app.IActivityManager"

    move-object/from16 v0, p2

    move-object/from16 v1, v30

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->enforceInterface(Ljava/lang/String;)V

    .line 3956
    invoke-virtual/range {p2 .. p2}, Landroid/os/Parcel;->readInt()I

    move-result v7

    .line 3957
    .local v7, "actionCode":I
    const/16 v30, 0x64

    move/from16 v0, v30

    if-ne v7, v0, :cond_13

    .line 3959
    invoke-virtual/range {p2 .. p2}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v20

    .line 3960
    .local v20, "packageWithScaleFactor":Ljava/lang/String;
    const-string v30, ":"

    move-object/from16 v0, v20

    move-object/from16 v1, v30

    invoke-virtual {v0, v1}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v21

    .line 3961
    .local v21, "packageWithScaleFactor_split":[Ljava/lang/String;
    const/16 v30, 0x1

    aget-object v30, v21, v30

    invoke-static/range {v30 .. v30}, Ljava/lang/Double;->parseDouble(Ljava/lang/String;)D

    move-result-wide v30

    invoke-static/range {v30 .. v31}, Ljava/lang/Double;->valueOf(D)Ljava/lang/Double;

    move-result-object v26

    .line 3962
    .local v26, "scaleFactor":Ljava/lang/Double;
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mDTSHelper:Landroid/os/DTSHelper;

    move-object/from16 v30, v0

    const/16 v31, 0x0

    aget-object v31, v21, v31

    invoke-virtual/range {v26 .. v26}, Ljava/lang/Double;->doubleValue()D

    move-result-wide v32

    invoke-virtual/range {v30 .. v33}, Landroid/os/DTSHelper;->addPackage(Ljava/lang/String;D)V

    .line 3984
    .end local v20    # "packageWithScaleFactor":Ljava/lang/String;
    .end local v21    # "packageWithScaleFactor_split":[Ljava/lang/String;
    .end local v26    # "scaleFactor":Ljava/lang/Double;
    :cond_12
    :goto_6
    const/16 v30, 0x1

    goto/16 :goto_4

    .line 3963
    :cond_13
    const/16 v30, 0x65

    move/from16 v0, v30

    if-ne v7, v0, :cond_15

    .line 3965
    invoke-virtual/range {p2 .. p2}, Landroid/os/Parcel;->readString()Ljava/lang/String;

    move-result-object v17

    .line 3966
    .local v17, "pack":Ljava/lang/String;
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mDTSHelper:Landroid/os/DTSHelper;

    move-object/from16 v30, v0

    move-object/from16 v0, v30

    move-object/from16 v1, v17

    invoke-virtual {v0, v1}, Landroid/os/DTSHelper;->isPackageExist(Ljava/lang/String;)Z

    move-result v30

    if-eqz v30, :cond_14

    .line 3967
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mDTSHelper:Landroid/os/DTSHelper;

    move-object/from16 v30, v0

    move-object/from16 v0, v30

    move-object/from16 v1, v17

    invoke-virtual {v0, v1}, Landroid/os/DTSHelper;->getScalingFactor(Ljava/lang/String;)D

    move-result-wide v30

    const-wide/high16 v32, 0x4059000000000000L    # 100.0

    mul-double v30, v30, v32

    move-wide/from16 v0, v30

    double-to-int v0, v0

    move/from16 v26, v0

    .line 3968
    .local v26, "scaleFactor":I
    const/16 v30, 0x1

    move-object/from16 v0, p3

    move/from16 v1, v30

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 3969
    move-object/from16 v0, p3

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->writeInt(I)V

    goto :goto_6

    .line 3971
    .end local v26    # "scaleFactor":I
    :cond_14
    const/16 v30, 0x0

    move-object/from16 v0, p3

    move/from16 v1, v30

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->writeInt(I)V

    goto :goto_6

    .line 3973
    .end local v17    # "pack":Ljava/lang/String;
    :cond_15
    const/16 v30, 0x66

    move/from16 v0, v30

    if-ne v7, v0, :cond_16

    .line 3975
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mDTSHelper:Landroid/os/DTSHelper;

    move-object/from16 v30, v0

    invoke-virtual/range {v30 .. v30}, Landroid/os/DTSHelper;->getWhiteList()Ljava/lang/StringBuilder;

    move-result-object v23

    .line 3976
    .local v23, "sb":Ljava/lang/StringBuilder;
    invoke-virtual/range {v23 .. v23}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v30

    const-string v31, "\n"

    invoke-virtual/range {v30 .. v31}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v24

    .line 3977
    .local v24, "sb_lines":[Ljava/lang/String;
    move-object/from16 v0, v24

    array-length v0, v0

    move/from16 v30, v0

    move-object/from16 v0, p3

    move/from16 v1, v30

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->writeInt(I)V

    .line 3978
    const/4 v14, 0x0

    .restart local v14    # "i":I
    :goto_7
    move-object/from16 v0, v24

    array-length v0, v0

    move/from16 v30, v0

    move/from16 v0, v30

    if-ge v14, v0, :cond_12

    .line 3979
    aget-object v30, v24, v14

    move-object/from16 v0, p3

    move-object/from16 v1, v30

    invoke-virtual {v0, v1}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 3978
    add-int/lit8 v14, v14, 0x1

    goto :goto_7

    .line 3982
    .end local v14    # "i":I
    .end local v23    # "sb":Ljava/lang/StringBuilder;
    .end local v24    # "sb_lines":[Ljava/lang/String;
    :cond_16
    const-string v30, "ActivityManager"

    const-string v31, "DTS_AMS : UNDEFINED Action Code"

    invoke-static/range {v30 .. v31}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_6

    .line 3988
    .end local v7    # "actionCode":I
    :cond_17
    :try_start_3
    invoke-super/range {p0 .. p4}, Landroid/app/ActivityManagerNative;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    :try_end_3
    .catch Ljava/lang/RuntimeException; {:try_start_3 .. :try_end_3} :catch_0

    move-result v30

    goto/16 :goto_4

    .line 3989
    :catch_0
    move-exception v12

    .line 3992
    .local v12, "e":Ljava/lang/RuntimeException;
    instance-of v0, v12, Ljava/lang/SecurityException;

    move/from16 v30, v0

    if-nez v30, :cond_18

    .line 3993
    const-string v30, "ActivityManager"

    const-string v31, "Activity Manager Crash"

    move-object/from16 v0, v30

    move-object/from16 v1, v31

    invoke-static {v0, v1, v12}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 3995
    :cond_18
    throw v12

    .line 3856
    .end local v12    # "e":Ljava/lang/RuntimeException;
    .restart local v4    # "N":I
    .restart local v6    # "NP":I
    .restart local v10    # "data2":Landroid/os/Parcel;
    .restart local v14    # "i":I
    .restart local v16    # "ip":I
    .restart local v22    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/os/IBinder;>;"
    :catch_1
    move-exception v30

    goto/16 :goto_3
.end method

.method onUserInitialized(Lcom/android/server/am/UserState;ZII)V
    .locals 2
    .param p1, "uss"    # Lcom/android/server/am/UserState;
    .param p2, "foreground"    # Z
    .param p3, "oldUserId"    # I
    .param p4, "newUserId"    # I

    .prologue
    .line 27798
    monitor-enter p0

    .line 27799
    if-eqz p2, :cond_0

    .line 27800
    :try_start_0
    invoke-virtual {p0, p1, p3, p4}, Lcom/android/server/am/ActivityManagerService;->moveUserToForeground(Lcom/android/server/am/UserState;II)V

    .line 27802
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 27804
    const/4 v0, 0x1

    const/4 v1, 0x0

    invoke-virtual {p0, p1, p4, v0, v1}, Lcom/android/server/am/ActivityManagerService;->completeSwitchAndInitialize(Lcom/android/server/am/UserState;IZZ)V

    .line 27805
    return-void

    .line 27802
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0
.end method

.method onWakefulnessChanged(I)V
    .locals 3
    .param p1, "wakefulness"    # I

    .prologue
    .line 15229
    monitor-enter p0

    .line 15232
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->topRunningActivityLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 15233
    .local v0, "topActivity":Lcom/android/server/am/ActivityRecord;
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v1

    const-string v2, "CscFeature_Common_SupportDeviceReporting"

    invoke-virtual {v1, v2}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    if-eqz v0, :cond_0

    .line 15235
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-static {v1, v2}, Lcom/android/server/am/AppStateBroadcaster;->sendApplicationFocusLoss(Landroid/content/Context;Ljava/lang/String;)V

    .line 15267
    :cond_0
    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    .line 15268
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateSleepIfNeededLocked()V

    .line 15269
    monitor-exit p0

    .line 15270
    return-void

    .line 15269
    .end local v0    # "topActivity":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public openContentUri(Landroid/net/Uri;)Landroid/os/ParcelFileDescriptor;
    .locals 11
    .param p1, "uri"    # Landroid/net/Uri;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    const/4 v10, 0x0

    .line 15180
    const-string/jumbo v0, "openContentUri"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 15181
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v9

    .line 15182
    .local v9, "userId":I
    invoke-virtual {p1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v7

    .line 15183
    .local v7, "name":Ljava/lang/String;
    invoke-direct {p0, v7, v10, v9}, Lcom/android/server/am/ActivityManagerService;->getContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v6

    .line 15184
    .local v6, "cph":Landroid/app/IActivityManager$ContentProviderHolder;
    const/4 v8, 0x0

    .line 15185
    .local v8, "pfd":Landroid/os/ParcelFileDescriptor;
    if-eqz v6, :cond_0

    .line 15193
    new-instance v5, Landroid/os/Binder;

    invoke-direct {v5}, Landroid/os/Binder;-><init>()V

    .line 15194
    .local v5, "token":Landroid/os/Binder;
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$Identity;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    invoke-direct {v1, p0, v5, v2, v3}, Lcom/android/server/am/ActivityManagerService$Identity;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/IBinder;II)V

    invoke-virtual {v0, v1}, Ljava/lang/ThreadLocal;->set(Ljava/lang/Object;)V

    .line 15197
    :try_start_0
    iget-object v0, v6, Landroid/app/IActivityManager$ContentProviderHolder;->provider:Landroid/content/IContentProvider;

    const/4 v1, 0x0

    const-string/jumbo v3, "r"

    const/4 v4, 0x0

    move-object v2, p1

    invoke-interface/range {v0 .. v5}, Landroid/content/IContentProvider;->openFile(Ljava/lang/String;Landroid/net/Uri;Ljava/lang/String;Landroid/os/ICancellationSignal;Landroid/os/IBinder;)Landroid/os/ParcelFileDescriptor;
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v8

    .line 15202
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    invoke-virtual {v0}, Ljava/lang/ThreadLocal;->remove()V

    .line 15204
    invoke-direct {p0, v7, v10, v9}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V

    .line 15209
    .end local v5    # "token":Landroid/os/Binder;
    :goto_0
    return-object v8

    .line 15198
    .restart local v5    # "token":Landroid/os/Binder;
    :catch_0
    move-exception v0

    .line 15202
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    invoke-virtual {v0}, Ljava/lang/ThreadLocal;->remove()V

    .line 15204
    invoke-direct {p0, v7, v10, v9}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V

    goto :goto_0

    .line 15202
    :catchall_0
    move-exception v0

    sget-object v1, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    invoke-virtual {v1}, Ljava/lang/ThreadLocal;->remove()V

    .line 15204
    invoke-direct {p0, v7, v10, v9}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V

    throw v0

    .line 15207
    .end local v5    # "token":Landroid/os/Binder;
    :cond_0
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Failed to get provider for authority \'"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "\'"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0
.end method

.method public overridePendingTransition(Landroid/os/IBinder;Ljava/lang/String;II)V
    .locals 9
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "enterAnim"    # I
    .param p4, "exitAnim"    # I

    .prologue
    .line 7284
    monitor-enter p0

    .line 7285
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v8

    .line 7286
    .local v8, "self":Lcom/android/server/am/ActivityRecord;
    if-nez v8, :cond_0

    .line 7287
    monitor-exit p0

    .line 7311
    :goto_0
    return-void

    .line 7294
    :cond_0
    iget-object v0, v8, Lcom/android/server/am/ActivityRecord;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    if-eqz v0, :cond_2

    if-nez p3, :cond_1

    if-eqz p4, :cond_2

    :cond_1
    iget-object v0, v8, Lcom/android/server/am/ActivityRecord;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    invoke-virtual {v0}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v0

    if-eqz v0, :cond_2

    iget-object v0, v8, Lcom/android/server/am/ActivityRecord;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    const/high16 v1, 0x4000000

    invoke-virtual {v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v0

    if-nez v0, :cond_2

    .line 7297
    monitor-exit p0

    goto :goto_0

    .line 7310
    .end local v8    # "self":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    .line 7301
    .restart local v8    # "self":Lcom/android/server/am/ActivityRecord;
    :cond_2
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 7303
    .local v6, "origId":J
    iget-object v0, v8, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v1, Lcom/android/server/am/ActivityStack$ActivityState;->RESUMED:Lcom/android/server/am/ActivityStack$ActivityState;

    if-eq v0, v1, :cond_3

    iget-object v0, v8, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v1, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSING:Lcom/android/server/am/ActivityStack$ActivityState;

    if-ne v0, v1, :cond_4

    .line 7305
    :cond_3
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const/4 v4, 0x0

    invoke-virtual {v8}, Lcom/android/server/am/ActivityRecord;->getDisplayId()I

    move-result v5

    move-object v1, p2

    move v2, p3

    move v3, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->overridePendingAppTransition(Ljava/lang/String;IILandroid/os/IRemoteCallback;I)V

    .line 7309
    :cond_4
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7310
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0
.end method

.method public peekService(Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;)Landroid/os/IBinder;
    .locals 2
    .param p1, "service"    # Landroid/content/Intent;
    .param p2, "resolvedType"    # Ljava/lang/String;
    .param p3, "callingPackage"    # Ljava/lang/String;

    .prologue
    .line 21846
    const-string/jumbo v0, "peekService"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 21848
    if-eqz p1, :cond_0

    invoke-virtual {p1}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    .line 21849
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 21852
    :cond_0
    if-nez p3, :cond_1

    .line 21853
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "callingPackage cannot be null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 21856
    :cond_1
    monitor-enter p0

    .line 21857
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->peekServiceLocked(Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 21858
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method pendingAssistExtrasTimedOut(Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;)V
    .locals 4
    .param p1, "pae"    # Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    .prologue
    .line 15962
    monitor-enter p0

    .line 15963
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingAssistExtras:Ljava/util/ArrayList;

    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 15964
    iget-object v0, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->receiver:Lcom/android/internal/os/IResultReceiver;

    .line 15965
    .local v0, "receiver":Lcom/android/internal/os/IResultReceiver;
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15966
    if-eqz v0, :cond_0

    .line 15969
    :try_start_1
    iget-object v1, p1, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->receiver:Lcom/android/internal/os/IResultReceiver;

    const/4 v2, 0x0

    const/4 v3, 0x0

    invoke-interface {v1, v2, v3}, Lcom/android/internal/os/IResultReceiver;->send(ILandroid/os/Bundle;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 15973
    :cond_0
    :goto_0
    return-void

    .line 15965
    .end local v0    # "receiver":Lcom/android/internal/os/IResultReceiver;
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v1

    .line 15970
    .restart local v0    # "receiver":Lcom/android/internal/os/IResultReceiver;
    :catch_0
    move-exception v1

    goto :goto_0
.end method

.method final performAppGcLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 2
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 25561
    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    iput-wide v0, p1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    .line 25562
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v0, :cond_0

    .line 25563
    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z

    if-eqz v0, :cond_1

    .line 25564
    const/4 v0, 0x0

    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z

    .line 25565
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v0}, Landroid/app/IApplicationThread;->scheduleLowMemory()V

    .line 25573
    :cond_0
    :goto_0
    return-void

    .line 25567
    :cond_1
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v0}, Landroid/app/IApplicationThread;->processInBackground()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 25570
    :catch_0
    move-exception v0

    goto :goto_0
.end method

.method final performAppGcsIfAppropriateLocked()V
    .locals 1

    .prologue
    .line 25626
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->canGcNowLocked()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 25627
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->performAppGcsLocked()V

    .line 25632
    :goto_0
    return-void

    .line 25631
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V

    goto :goto_0
.end method

.method final performAppGcsLocked()V
    .locals 6

    .prologue
    .line 25594
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 25595
    .local v0, "N":I
    if-gtz v0, :cond_1

    .line 25620
    :cond_0
    :goto_0
    return-void

    .line 25598
    :cond_1
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->canGcNowLocked()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 25599
    :cond_2
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-lez v2, :cond_5

    .line 25600
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 25601
    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    iget v2, v1, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    const/4 v3, 0x2

    if-gt v2, v3, :cond_3

    iget-boolean v2, v1, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z

    if-eqz v2, :cond_2

    .line 25602
    :cond_3
    iget-wide v2, v1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    const-wide/32 v4, 0xea60

    add-long/2addr v2, v4

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    cmp-long v2, v2, v4

    if-gtz v2, :cond_4

    .line 25606
    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->performAppGcLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 25607
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V

    goto :goto_0

    .line 25612
    :cond_4
    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->addProcessToGcListLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 25618
    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_5
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V

    goto :goto_0
.end method

.method public performIdleMaintenance()V
    .locals 18

    .prologue
    .line 16539
    const-string v2, "android.permission.SET_ACTIVITY_WATCHER"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_0

    .line 16541
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 16545
    :cond_0
    monitor-enter p0

    .line 16546
    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    .line 16547
    .local v6, "now":J
    move-object/from16 v0, p0

    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    sub-long v14, v6, v2

    .line 16548
    .local v14, "timeSinceLastIdle":J
    move-object/from16 v0, p0

    invoke-direct {v0, v6, v7}, Lcom/android/server/am/ActivityManagerService;->getLowRamTimeSinceIdle(J)J

    move-result-wide v10

    .line 16549
    .local v10, "lowRamSinceLastIdle":J
    move-object/from16 v0, p0

    iput-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    .line 16550
    const-wide/16 v2, 0x0

    move-object/from16 v0, p0

    iput-wide v2, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamTimeSinceLastIdle:J

    .line 16551
    move-object/from16 v0, p0

    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    const-wide/16 v4, 0x0

    cmp-long v2, v2, v4

    if-eqz v2, :cond_1

    .line 16552
    move-object/from16 v0, p0

    iput-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    .line 16555
    :cond_1
    new-instance v13, Ljava/lang/StringBuilder;

    const/16 v2, 0x80

    invoke-direct {v13, v2}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 16556
    .local v13, "sb":Ljava/lang/StringBuilder;
    const-string v2, "Idle maintenance over "

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16557
    invoke-static {v14, v15, v13}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 16558
    const-string v2, " low RAM for "

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16559
    invoke-static {v10, v11, v13}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 16560
    const-string v2, "ActivityManager"

    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 16564
    const-wide/16 v2, 0x3

    div-long v2, v14, v2

    cmp-long v2, v10, v2

    if-lez v2, :cond_3

    const/4 v8, 0x1

    .line 16566
    .local v8, "doKilling":Z
    :goto_0
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v9, v2, -0x1

    .local v9, "i":I
    :goto_1
    if-ltz v9, :cond_5

    .line 16567
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/am/ProcessRecord;

    .line 16568
    .local v12, "proc":Lcom/android/server/am/ProcessRecord;
    iget-boolean v2, v12, Lcom/android/server/am/ProcessRecord;->notCachedSinceIdle:Z

    if-eqz v2, :cond_4

    .line 16569
    iget v2, v12, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/4 v3, 0x5

    if-eq v2, v3, :cond_2

    iget v2, v12, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/4 v3, 0x4

    if-lt v2, v3, :cond_2

    iget v2, v12, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v3, 0xa

    if-gt v2, v3, :cond_2

    .line 16572
    if-eqz v8, :cond_2

    iget-wide v2, v12, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    const-wide/16 v4, 0x0

    cmp-long v2, v2, v4

    if-eqz v2, :cond_2

    iget-wide v2, v12, Lcom/android/server/am/ProcessRecord;->lastPss:J

    iget-wide v4, v12, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    const-wide/16 v16, 0x3

    mul-long v4, v4, v16

    const-wide/16 v16, 0x2

    div-long v4, v4, v16

    cmp-long v2, v2, v4

    if-lez v2, :cond_2

    .line 16574
    new-instance v13, Ljava/lang/StringBuilder;

    .end local v13    # "sb":Ljava/lang/StringBuilder;
    const/16 v2, 0x80

    invoke-direct {v13, v2}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 16575
    .restart local v13    # "sb":Ljava/lang/StringBuilder;
    const-string v2, "Kill"

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16576
    iget-object v2, v12, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16577
    const-string v2, " in idle maint: pss="

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16578
    iget-wide v2, v12, Lcom/android/server/am/ProcessRecord;->lastPss:J

    invoke-virtual {v13, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 16579
    const-string v2, ", initialPss="

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16580
    iget-wide v2, v12, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    invoke-virtual {v13, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 16581
    const-string v2, ", period="

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16582
    invoke-static {v14, v15, v13}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 16583
    const-string v2, ", lowRamPeriod="

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16584
    invoke-static {v10, v11, v13}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 16585
    const-string v2, "ActivityManager"

    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->wtfQuiet(Ljava/lang/String;Ljava/lang/String;)V

    .line 16586
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "idle maint (pss "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-wide v4, v12, Lcom/android/server/am/ProcessRecord;->lastPss:J

    invoke-virtual {v2, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " from "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-wide v4, v12, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    invoke-virtual {v2, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ")"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    const/4 v3, 0x1

    invoke-virtual {v12, v2, v3}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 16566
    :cond_2
    :goto_2
    add-int/lit8 v9, v9, -0x1

    goto/16 :goto_1

    .line 16564
    .end local v8    # "doKilling":Z
    .end local v9    # "i":I
    .end local v12    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_3
    const/4 v8, 0x0

    goto/16 :goto_0

    .line 16590
    .restart local v8    # "doKilling":Z
    .restart local v9    # "i":I
    .restart local v12    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_4
    iget v2, v12, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v3, 0xc

    if-ge v2, v3, :cond_2

    .line 16591
    const/4 v2, 0x1

    iput-boolean v2, v12, Lcom/android/server/am/ProcessRecord;->notCachedSinceIdle:Z

    .line 16592
    const-wide/16 v2, 0x0

    iput-wide v2, v12, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    .line 16593
    iget v2, v12, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v3, 0x1

    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->isSleeping()Z

    move-result v5

    invoke-static/range {v2 .. v7}, Lcom/android/server/am/ProcessList;->computeNextPssTime(IZZZJ)J

    move-result-wide v2

    iput-wide v2, v12, Lcom/android/server/am/ProcessRecord;->nextPssTime:J

    goto :goto_2

    .line 16600
    .end local v6    # "now":J
    .end local v8    # "doKilling":Z
    .end local v9    # "i":I
    .end local v10    # "lowRamSinceLastIdle":J
    .end local v12    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v13    # "sb":Ljava/lang/StringBuilder;
    .end local v14    # "timeSinceLastIdle":J
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2

    .line 16598
    .restart local v6    # "now":J
    .restart local v8    # "doKilling":Z
    .restart local v9    # "i":I
    .restart local v10    # "lowRamSinceLastIdle":J
    .restart local v13    # "sb":Ljava/lang/StringBuilder;
    .restart local v14    # "timeSinceLastIdle":J
    :cond_5
    :try_start_1
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0x27

    invoke-virtual {v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 16599
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0x27

    const-wide/32 v4, 0x1d4c0

    invoke-virtual {v2, v3, v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendEmptyMessageDelayed(IJ)Z

    .line 16600
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 16601
    return-void
.end method

.method postFinishBooting(ZZ)V
    .locals 6
    .param p1, "finishBooting"    # Z
    .param p2, "enableScreen"    # Z

    .prologue
    const/4 v0, 0x1

    const/4 v1, 0x0

    .line 9572
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x2d

    if-eqz p1, :cond_0

    move v2, v0

    :goto_0
    if-eqz p2, :cond_1

    :goto_1
    invoke-virtual {v4, v5, v2, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v0

    invoke-virtual {v3, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 9574
    return-void

    :cond_0
    move v2, v1

    .line 9572
    goto :goto_0

    :cond_1
    move v0, v1

    goto :goto_1
.end method

.method printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V
    .locals 4
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "adj"    # I

    .prologue
    const/16 v1, 0x20

    .line 19582
    const-string v0, "    "

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19583
    if-ltz p3, :cond_1

    .line 19584
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 19585
    const/16 v0, 0xa

    if-ge p3, v0, :cond_0

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 19589
    :cond_0
    :goto_0
    invoke-virtual {p1, p3}, Ljava/io/PrintWriter;->print(I)V

    .line 19590
    const-string v0, ": "

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19591
    invoke-virtual {p1, p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19592
    const-string v0, " ("

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19593
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, p3}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v0

    const-wide/16 v2, 0x400

    div-long/2addr v0, v2

    invoke-virtual {p1, v0, v1}, Ljava/io/PrintWriter;->print(J)V

    .line 19594
    const-string v0, " kB)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19595
    return-void

    .line 19587
    :cond_1
    const/16 v0, -0xa

    if-le p3, v0, :cond_0

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(C)V

    goto :goto_0
.end method

.method public profileControl(Ljava/lang/String;IZLandroid/app/ProfilerInfo;I)Z
    .locals 6
    .param p1, "process"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "start"    # Z
    .param p4, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p5, "profileType"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 27114
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 27117
    :try_start_1
    const-string v3, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v3

    if-eqz v3, :cond_1

    .line 27119
    new-instance v3, Ljava/lang/SecurityException;

    const-string v4, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 27162
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    throw v3
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 27163
    :catch_0
    move-exception v0

    .line 27164
    .local v0, "e":Landroid/os/RemoteException;
    :try_start_3
    new-instance v3, Ljava/lang/IllegalStateException;

    const-string v4, "Process disappeared"

    invoke-direct {v3, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 27166
    .end local v0    # "e":Landroid/os/RemoteException;
    :catchall_1
    move-exception v3

    if-eqz p4, :cond_0

    iget-object v4, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    if-eqz v4, :cond_0

    .line 27168
    :try_start_4
    iget-object v4, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v4}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_3

    .line 27170
    :cond_0
    :goto_0
    throw v3

    .line 27123
    :cond_1
    if-eqz p3, :cond_3

    if-eqz p4, :cond_2

    :try_start_5
    iget-object v3, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    if-nez v3, :cond_3

    .line 27124
    :cond_2
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v4, "null profile info or fd"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 27127
    :cond_3
    const/4 v2, 0x0

    .line 27128
    .local v2, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz p1, :cond_4

    .line 27129
    const-string/jumbo v3, "profileControl"

    invoke-direct {p0, p1, p2, v3}, Lcom/android/server/am/ActivityManagerService;->findProcessLocked(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    .line 27132
    :cond_4
    if-eqz p3, :cond_6

    if-eqz v2, :cond_5

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v3, :cond_6

    .line 27133
    :cond_5
    new-instance v3, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Unknown process: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 27136
    :cond_6
    if-eqz p3, :cond_9

    .line 27137
    const/4 v3, 0x0

    const/4 v4, 0x0

    invoke-direct {p0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->stopProfilerLocked(Lcom/android/server/am/ProcessRecord;I)V

    .line 27138
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {p0, v3, v4, p4}, Lcom/android/server/am/ActivityManagerService;->setProfileApp(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Landroid/app/ProfilerInfo;)V

    .line 27139
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    .line 27140
    iput p5, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    .line 27141
    iget-object v1, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 27143
    .local v1, "fd":Landroid/os/ParcelFileDescriptor;
    :try_start_6
    invoke-virtual {v1}, Landroid/os/ParcelFileDescriptor;->dup()Landroid/os/ParcelFileDescriptor;
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_1
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    move-result-object v1

    .line 27147
    :goto_1
    :try_start_7
    iput-object v1, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    .line 27148
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v3, p3, p4, p5}, Landroid/app/IApplicationThread;->profilerControl(ZLandroid/app/ProfilerInfo;I)V

    .line 27149
    const/4 v1, 0x0

    .line 27150
    const/4 v3, 0x0

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    .line 27161
    .end local v1    # "fd":Landroid/os/ParcelFileDescriptor;
    :cond_7
    :goto_2
    const/4 v3, 0x1

    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    .line 27166
    if-eqz p4, :cond_8

    iget-object v4, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    if-eqz v4, :cond_8

    .line 27168
    :try_start_8
    iget-object v4, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v4}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_8
    .catch Ljava/io/IOException; {:try_start_8 .. :try_end_8} :catch_4

    .line 27170
    :cond_8
    :goto_3
    return v3

    .line 27144
    .restart local v1    # "fd":Landroid/os/ParcelFileDescriptor;
    :catch_1
    move-exception v0

    .line 27145
    .local v0, "e":Ljava/io/IOException;
    const/4 v1, 0x0

    goto :goto_1

    .line 27152
    .end local v0    # "e":Ljava/io/IOException;
    .end local v1    # "fd":Landroid/os/ParcelFileDescriptor;
    :cond_9
    :try_start_9
    invoke-direct {p0, v2, p5}, Lcom/android/server/am/ActivityManagerService;->stopProfilerLocked(Lcom/android/server/am/ProcessRecord;I)V

    .line 27153
    if-eqz p4, :cond_7

    iget-object v3, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    if-eqz v3, :cond_7

    .line 27155
    :try_start_a
    iget-object v3, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v3}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_a
    .catch Ljava/io/IOException; {:try_start_a .. :try_end_a} :catch_2
    .catchall {:try_start_a .. :try_end_a} :catchall_0

    goto :goto_2

    .line 27156
    :catch_2
    move-exception v3

    goto :goto_2

    .line 27169
    .end local v2    # "proc":Lcom/android/server/am/ProcessRecord;
    :catch_3
    move-exception v4

    goto/16 :goto_0

    .restart local v2    # "proc":Lcom/android/server/am/ProcessRecord;
    :catch_4
    move-exception v4

    goto :goto_3
.end method

.method public final publishContentProviders(Landroid/app/IApplicationThread;Ljava/util/List;)V
    .locals 17
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/app/IApplicationThread;",
            "Ljava/util/List",
            "<",
            "Landroid/app/IActivityManager$ContentProviderHolder;",
            ">;)V"
        }
    .end annotation

    .prologue
    .line 14798
    .local p2, "providers":Ljava/util/List;, "Ljava/util/List<Landroid/app/IActivityManager$ContentProviderHolder;>;"
    if-nez p2, :cond_0

    .line 14858
    :goto_0
    return-void

    .line 14802
    :cond_0
    const-string/jumbo v14, "publishContentProviders"

    move-object/from16 v0, p0

    invoke-virtual {v0, v14}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 14803
    monitor-enter p0

    .line 14804
    :try_start_0
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v9

    .line 14806
    .local v9, "r":Lcom/android/server/am/ProcessRecord;
    if-nez v9, :cond_1

    .line 14807
    new-instance v14, Ljava/lang/SecurityException;

    new-instance v15, Ljava/lang/StringBuilder;

    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    const-string v16, "Unable to find app for caller "

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    move-object/from16 v0, p1

    invoke-virtual {v15, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string v16, " (pid="

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v16

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string v16, ") when publishing content providers"

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v15

    invoke-direct {v14, v15}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v14

    .line 14857
    .end local v9    # "r":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v14

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v14

    .line 14813
    .restart local v9    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_1
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v10

    .line 14815
    .local v10, "origId":J
    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I

    move-result v2

    .line 14816
    .local v2, "N":I
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_1
    if-ge v5, v2, :cond_8

    .line 14817
    move-object/from16 v0, p2

    invoke-interface {v0, v5}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Landroid/app/IActivityManager$ContentProviderHolder;

    .line 14818
    .local v12, "src":Landroid/app/IActivityManager$ContentProviderHolder;
    if-eqz v12, :cond_2

    iget-object v14, v12, Landroid/app/IActivityManager$ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;

    if-eqz v14, :cond_2

    iget-object v14, v12, Landroid/app/IActivityManager$ContentProviderHolder;->provider:Landroid/content/IContentProvider;

    if-nez v14, :cond_3

    .line 14816
    :cond_2
    :goto_2
    add-int/lit8 v5, v5, 0x1

    goto :goto_1

    .line 14821
    :cond_3
    iget-object v14, v9, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    iget-object v15, v12, Landroid/app/IActivityManager$ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;

    iget-object v15, v15, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v14, v15}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ContentProviderRecord;

    .line 14823
    .local v4, "dst":Lcom/android/server/am/ContentProviderRecord;
    if-eqz v4, :cond_2

    .line 14824
    new-instance v3, Landroid/content/ComponentName;

    iget-object v14, v4, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v14, v14, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    iget-object v15, v4, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v15, v15, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-direct {v3, v14, v15}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 14825
    .local v3, "comp":Landroid/content/ComponentName;
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v14, v3, v4}, Lcom/android/server/am/ProviderMap;->putProviderByClass(Landroid/content/ComponentName;Lcom/android/server/am/ContentProviderRecord;)V

    .line 14826
    iget-object v14, v4, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v14, v14, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    const-string v15, ";"

    invoke-virtual {v14, v15}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v8

    .line 14827
    .local v8, "names":[Ljava/lang/String;
    const/4 v6, 0x0

    .local v6, "j":I
    :goto_3
    array-length v14, v8

    if-ge v6, v14, :cond_4

    .line 14828
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    aget-object v15, v8, v6

    invoke-virtual {v14, v15, v4}, Lcom/android/server/am/ProviderMap;->putProviderByName(Ljava/lang/String;Lcom/android/server/am/ContentProviderRecord;)V

    .line 14827
    add-int/lit8 v6, v6, 0x1

    goto :goto_3

    .line 14831
    :cond_4
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v14}, Ljava/util/ArrayList;->size()I

    move-result v7

    .line 14833
    .local v7, "launchingCount":I
    const/4 v13, 0x0

    .line 14834
    .local v13, "wasInLaunchingProviders":Z
    const/4 v6, 0x0

    :goto_4
    if-ge v6, v7, :cond_6

    .line 14835
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v14, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v14

    if-ne v14, v4, :cond_5

    .line 14836
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v14, v6}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 14837
    const/4 v13, 0x1

    .line 14838
    add-int/lit8 v6, v6, -0x1

    .line 14839
    add-int/lit8 v7, v7, -0x1

    .line 14834
    :cond_5
    add-int/lit8 v6, v6, 0x1

    goto :goto_4

    .line 14842
    :cond_6
    if-eqz v13, :cond_7

    .line 14843
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v15, 0x3b

    invoke-virtual {v14, v15, v9}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V

    .line 14845
    :cond_7
    monitor-enter v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 14846
    :try_start_2
    iget-object v14, v12, Landroid/app/IActivityManager$ContentProviderHolder;->provider:Landroid/content/IContentProvider;

    iput-object v14, v4, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    .line 14847
    iput-object v9, v4, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    .line 14848
    invoke-virtual {v4}, Ljava/lang/Object;->notifyAll()V

    .line 14849
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 14850
    :try_start_3
    move-object/from16 v0, p0

    invoke-virtual {v0, v9}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z

    .line 14851
    iget-object v14, v12, Landroid/app/IActivityManager$ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;

    iget-object v14, v14, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    iget-object v15, v12, Landroid/app/IActivityManager$ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;

    iget-object v15, v15, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    move-object/from16 v0, p0

    invoke-direct {v0, v9, v14, v15}, Lcom/android/server/am/ActivityManagerService;->maybeUpdateProviderUsageStatsLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto/16 :goto_2

    .line 14849
    :catchall_1
    move-exception v14

    :try_start_4
    monitor-exit v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    :try_start_5
    throw v14

    .line 14856
    .end local v3    # "comp":Landroid/content/ComponentName;
    .end local v4    # "dst":Lcom/android/server/am/ContentProviderRecord;
    .end local v6    # "j":I
    .end local v7    # "launchingCount":I
    .end local v8    # "names":[Ljava/lang/String;
    .end local v12    # "src":Landroid/app/IActivityManager$ContentProviderHolder;
    .end local v13    # "wasInLaunchingProviders":Z
    :cond_8
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14857
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    goto/16 :goto_0
.end method

.method public publishService(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/IBinder;)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "service"    # Landroid/os/IBinder;

    .prologue
    .line 22181
    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    .line 22182
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 22185
    :cond_0
    monitor-enter p0

    .line 22186
    :try_start_0
    instance-of v0, p1, Lcom/android/server/am/ServiceRecord;

    if-nez v0, :cond_1

    .line 22187
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Invalid service token"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 22190
    .end local p1    # "token":Landroid/os/IBinder;
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    .line 22189
    .restart local p1    # "token":Landroid/os/IBinder;
    :cond_1
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    check-cast p1, Lcom/android/server/am/ServiceRecord;

    .end local p1    # "token":Landroid/os/IBinder;
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->publishServiceLocked(Lcom/android/server/am/ServiceRecord;Landroid/content/Intent;Landroid/os/IBinder;)V

    .line 22190
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 22191
    return-void
.end method

.method public queryRegisteredReceiverPackages(Landroid/content/Intent;Ljava/lang/String;I)[Ljava/lang/String;
    .locals 21
    .param p1, "intent"    # Landroid/content/Intent;
    .param p2, "resolvedType"    # Ljava/lang/String;
    .param p3, "userId"    # I

    .prologue
    .line 29915
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    .line 29916
    .local v5, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    .line 29917
    .local v6, "callingUid":I
    invoke-static {v6}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v13

    .line 29919
    .local v13, "callingAppId":I
    const/16 v4, 0x3e8

    if-eq v13, v4, :cond_0

    const/16 v4, 0x3e9

    if-eq v13, v4, :cond_0

    const/16 v4, 0x7d0

    if-eq v13, v4, :cond_0

    const/16 v4, 0x3ea

    if-eq v13, v4, :cond_0

    const/16 v4, 0x403

    if-eq v13, v4, :cond_0

    if-nez v6, :cond_1

    .line 29930
    :cond_0
    const/4 v4, 0x0

    new-array v0, v4, [Ljava/lang/String;

    move-object/from16 v19, v0

    .line 29931
    .local v19, "registeredReceiverPackages":[Ljava/lang/String;
    monitor-enter p0

    .line 29932
    :try_start_0
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;

    move-result-object p1

    .line 29933
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v16

    .line 29935
    .local v16, "origId":J
    const/4 v8, 0x1

    const/4 v9, 0x0

    :try_start_1
    const-string/jumbo v10, "queryRegisteredReceiverPackages"

    const/4 v11, 0x0

    move-object/from16 v4, p0

    move/from16 v7, p3

    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p3

    .line 29937
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    const/4 v7, 0x0

    move-object/from16 v0, p1

    move-object/from16 v1, p2

    move/from16 v2, p3

    invoke-virtual {v4, v0, v1, v7, v2}, Lcom/android/server/IntentResolver;->queryIntent(Landroid/content/Intent;Ljava/lang/String;ZI)Ljava/util/List;

    move-result-object v20

    .line 29939
    .local v20, "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    if-eqz v20, :cond_3

    .line 29940
    new-instance v18, Landroid/util/ArraySet;

    invoke-direct/range {v18 .. v18}, Landroid/util/ArraySet;-><init>()V

    .line 29942
    .local v18, "packageNames":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    const/4 v14, 0x0

    .local v14, "i":I
    :goto_0
    invoke-interface/range {v20 .. v20}, Ljava/util/List;->size()I

    move-result v4

    if-ge v14, v4, :cond_2

    .line 29943
    move-object/from16 v0, v20

    invoke-interface {v0, v14}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/am/BroadcastFilter;

    .line 29944
    .local v12, "bf":Lcom/android/server/am/BroadcastFilter;
    iget-object v4, v12, Lcom/android/server/am/BroadcastFilter;->packageName:Ljava/lang/String;

    move-object/from16 v0, v18

    invoke-virtual {v0, v4}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 29942
    add-int/lit8 v14, v14, 0x1

    goto :goto_0

    .line 29924
    .end local v12    # "bf":Lcom/android/server/am/BroadcastFilter;
    .end local v14    # "i":I
    .end local v16    # "origId":J
    .end local v18    # "packageNames":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    .end local v19    # "registeredReceiverPackages":[Ljava/lang/String;
    .end local v20    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    :cond_1
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Permission Denial: not allowed to query registered receiver packages from pid="

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v7, ", uid="

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v15

    .line 29926
    .local v15, "msg":Ljava/lang/String;
    const-string v4, "ActivityManager"

    invoke-static {v4, v15}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 29927
    new-instance v4, Ljava/lang/SecurityException;

    invoke-direct {v4, v15}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 29946
    .end local v15    # "msg":Ljava/lang/String;
    .restart local v14    # "i":I
    .restart local v16    # "origId":J
    .restart local v18    # "packageNames":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    .restart local v19    # "registeredReceiverPackages":[Ljava/lang/String;
    .restart local v20    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    :cond_2
    :try_start_2
    invoke-virtual/range {v18 .. v18}, Landroid/util/ArraySet;->size()I

    move-result v4

    new-array v4, v4, [Ljava/lang/String;

    move-object/from16 v0, v18

    invoke-virtual {v0, v4}, Landroid/util/ArraySet;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v4

    move-object v0, v4

    check-cast v0, [Ljava/lang/String;

    move-object/from16 v19, v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 29949
    .end local v14    # "i":I
    .end local v18    # "packageNames":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    :cond_3
    :try_start_3
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 29951
    monitor-exit p0

    return-object v19

    .line 29949
    .end local v20    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    :catchall_0
    move-exception v4

    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4

    .line 29952
    .end local v16    # "origId":J
    :catchall_1
    move-exception v4

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v4
.end method

.method recordPssSampleLocked(Lcom/android/server/am/ProcessRecord;IJJJ)V
    .locals 17
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "procState"    # I
    .param p3, "pss"    # J
    .param p5, "uss"    # J
    .param p7, "now"    # J

    .prologue
    .line 25407
    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    const-wide/16 v8, 0x400

    mul-long v8, v8, p3

    const-wide/16 v10, 0x400

    mul-long v10, v10, p5

    invoke-static/range {v5 .. v11}, Lcom/android/server/am/EventLogTags;->writeAmPss(IILjava/lang/String;JJ)V

    .line 25408
    move-wide/from16 v0, p7

    move-object/from16 v2, p1

    iput-wide v0, v2, Lcom/android/server/am/ProcessRecord;->lastPssTime:J

    .line 25409
    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    const/4 v10, 0x1

    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-wide/from16 v6, p3

    move-wide/from16 v8, p5

    invoke-virtual/range {v5 .. v11}, Lcom/android/internal/app/ProcessStats$ProcessState;->addPss(JJZLandroid/util/ArrayMap;)V

    .line 25413
    move-object/from16 v0, p1

    iget-wide v6, v0, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    const-wide/16 v8, 0x0

    cmp-long v5, v6, v8

    if-nez v5, :cond_0

    .line 25414
    move-wide/from16 v0, p3

    move-object/from16 v2, p1

    iput-wide v0, v2, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    .line 25416
    :cond_0
    move-wide/from16 v0, p3

    move-object/from16 v2, p1

    iput-wide v0, v2, Lcom/android/server/am/ProcessRecord;->lastPss:J

    .line 25417
    const/16 v5, 0xc

    move/from16 v0, p2

    if-lt v0, v5, :cond_1

    .line 25418
    move-wide/from16 v0, p3

    move-object/from16 v2, p1

    iput-wide v0, v2, Lcom/android/server/am/ProcessRecord;->lastCachedPss:J

    .line 25421
    :cond_1
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v5}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v5

    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v6}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Landroid/util/SparseArray;

    .line 25423
    .local v16, "watchUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;>;"
    const/4 v4, 0x0

    .line 25424
    .local v4, "check":Ljava/lang/Long;
    if-eqz v16, :cond_3

    .line 25425
    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move-object/from16 v0, v16

    invoke-virtual {v0, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Landroid/util/Pair;

    .line 25426
    .local v15, "val":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;"
    if-nez v15, :cond_2

    .line 25427
    const/4 v5, 0x0

    move-object/from16 v0, v16

    invoke-virtual {v0, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v15

    .end local v15    # "val":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;"
    check-cast v15, Landroid/util/Pair;

    .line 25429
    .restart local v15    # "val":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;"
    :cond_2
    if-eqz v15, :cond_3

    .line 25430
    iget-object v4, v15, Landroid/util/Pair;->first:Ljava/lang/Object;

    .end local v4    # "check":Ljava/lang/Long;
    check-cast v4, Ljava/lang/Long;

    .line 25433
    .end local v15    # "val":Landroid/util/Pair;, "Landroid/util/Pair<Ljava/lang/Long;Ljava/lang/String;>;"
    .restart local v4    # "check":Ljava/lang/Long;
    :cond_3
    if-eqz v4, :cond_5

    .line 25434
    const-wide/16 v6, 0x400

    mul-long v6, v6, p3

    invoke-virtual {v4}, Ljava/lang/Long;->longValue()J

    move-result-wide v8

    cmp-long v5, v6, v8

    if-ltz v5, :cond_5

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v5, :cond_5

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpProcName:Ljava/lang/String;

    if-nez v5, :cond_5

    .line 25435
    const-string v5, "1"

    const-string/jumbo v6, "ro.debuggable"

    const-string v7, "0"

    invoke-static {v6, v7}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v13

    .line 25436
    .local v13, "isDebuggable":Z
    if-nez v13, :cond_4

    .line 25437
    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v5, v5, 0x2

    if-eqz v5, :cond_4

    .line 25438
    const/4 v13, 0x1

    .line 25441
    :cond_4
    if-eqz v13, :cond_6

    .line 25442
    const-string v5, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Process "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, p1

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " exceeded pss limit "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, "; reporting"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 25443
    move-object/from16 v14, p1

    .line 25444
    .local v14, "myProc":Lcom/android/server/am/ProcessRecord;
    invoke-static {}, Lcom/android/server/am/DumpHeapProvider;->getJavaFile()Ljava/io/File;

    move-result-object v12

    .line 25445
    .local v12, "heapdumpFile":Ljava/io/File;
    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p0

    iput-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpProcName:Ljava/lang/String;

    .line 25446
    invoke-virtual {v12}, Ljava/io/File;->toString()Ljava/lang/String;

    move-result-object v5

    move-object/from16 v0, p0

    iput-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpFile:Ljava/lang/String;

    .line 25447
    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, p0

    iput v5, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpPid:I

    .line 25448
    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move-object/from16 v0, p0

    iput v5, v0, Lcom/android/server/am/ActivityManagerService;->mMemWatchDumpUid:I

    .line 25449
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v5

    new-instance v6, Lcom/android/server/am/ActivityManagerService$29;

    move-object/from16 v0, p0

    invoke-direct {v6, v0, v12, v14}, Lcom/android/server/am/ActivityManagerService$29;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/io/File;Lcom/android/server/am/ProcessRecord;)V

    invoke-virtual {v5, v6}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 25494
    .end local v12    # "heapdumpFile":Ljava/io/File;
    .end local v13    # "isDebuggable":Z
    .end local v14    # "myProc":Lcom/android/server/am/ProcessRecord;
    :cond_5
    :goto_0
    return-void

    .line 25489
    .restart local v13    # "isDebuggable":Z
    :cond_6
    const-string v5, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Process "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, p1

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " exceeded pss limit "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, ", but debugging not enabled"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0
.end method

.method public refContentProvider(Landroid/os/IBinder;II)Z
    .locals 7
    .param p1, "connection"    # Landroid/os/IBinder;
    .param p2, "stable"    # I
    .param p3, "unstable"    # I

    .prologue
    .line 14863
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/ContentProviderConnection;

    move-object v1, v0
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    .line 14870
    .local v1, "conn":Lcom/android/server/am/ContentProviderConnection;
    if-nez v1, :cond_0

    .line 14871
    new-instance v4, Ljava/lang/NullPointerException;

    const-string v5, "connection is null"

    invoke-direct {v4, v5}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 14864
    .end local v1    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :catch_0
    move-exception v2

    .line 14865
    .local v2, "e":Ljava/lang/ClassCastException;
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "refContentProvider: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " not a ContentProviderConnection"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 14867
    .local v3, "msg":Ljava/lang/String;
    const-string v4, "ActivityManager"

    invoke-static {v4, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14868
    new-instance v4, Ljava/lang/IllegalArgumentException;

    invoke-direct {v4, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 14874
    .end local v2    # "e":Ljava/lang/ClassCastException;
    .end local v3    # "msg":Ljava/lang/String;
    .restart local v1    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :cond_0
    monitor-enter p0

    .line 14875
    if-lez p2, :cond_1

    .line 14876
    :try_start_1
    iget v4, v1, Lcom/android/server/am/ContentProviderConnection;->numStableIncs:I

    add-int/2addr v4, p2

    iput v4, v1, Lcom/android/server/am/ContentProviderConnection;->numStableIncs:I

    .line 14878
    :cond_1
    iget v4, v1, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    add-int/2addr p2, v4

    .line 14879
    if-gez p2, :cond_2

    .line 14880
    new-instance v4, Ljava/lang/IllegalStateException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "stableCount < 0: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 14898
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v4

    .line 14883
    :cond_2
    if-lez p3, :cond_3

    .line 14884
    :try_start_2
    iget v4, v1, Lcom/android/server/am/ContentProviderConnection;->numUnstableIncs:I

    add-int/2addr v4, p3

    iput v4, v1, Lcom/android/server/am/ContentProviderConnection;->numUnstableIncs:I

    .line 14886
    :cond_3
    iget v4, v1, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    add-int/2addr p3, v4

    .line 14887
    if-gez p3, :cond_4

    .line 14888
    new-instance v4, Ljava/lang/IllegalStateException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "unstableCount < 0: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 14891
    :cond_4
    add-int v4, p2, p3

    if-gtz v4, :cond_5

    .line 14892
    new-instance v4, Ljava/lang/IllegalStateException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "ref counts can\'t go to zero here: stable="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " unstable="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 14895
    :cond_5
    iput p2, v1, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    .line 14896
    iput p3, v1, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    .line 14897
    iget-boolean v4, v1, Lcom/android/server/am/ContentProviderConnection;->dead:Z

    if-nez v4, :cond_6

    const/4 v4, 0x1

    :goto_0
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    return v4

    :cond_6
    const/4 v4, 0x0

    goto :goto_0
.end method

.method public registerProcessObserver(Landroid/app/IProcessObserver;)V
    .locals 2
    .param p1, "observer"    # Landroid/app/IProcessObserver;

    .prologue
    .line 16053
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    const-string/jumbo v1, "registerProcessObserver()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 16055
    monitor-enter p0

    .line 16056
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z

    .line 16057
    monitor-exit p0

    .line 16058
    return-void

    .line 16057
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public registerReceiver(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/IIntentReceiver;Landroid/content/IntentFilter;Ljava/lang/String;I)Landroid/content/Intent;
    .locals 47
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callerPackage"    # Ljava/lang/String;
    .param p3, "receiver"    # Landroid/content/IIntentReceiver;
    .param p4, "filter"    # Landroid/content/IntentFilter;
    .param p5, "permission"    # Ljava/lang/String;
    .param p6, "userId"    # I

    .prologue
    .line 22434
    const-string/jumbo v2, "registerReceiver"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 22435
    const/16 v44, 0x0

    .line 22436
    .local v44, "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    const/16 v32, 0x0

    .line 22439
    .local v32, "callerApp":Lcom/android/server/am/ProcessRecord;
    monitor-enter p0

    .line 22440
    if-eqz p1, :cond_3

    .line 22441
    :try_start_0
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v32

    .line 22442
    if-nez v32, :cond_0

    .line 22443
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Unable to find app for caller "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, p1

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " (pid="

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v11

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, ") when registering receiver "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, p3

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-direct {v2, v10}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 22489
    :catchall_0
    move-exception v2

    :goto_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2

    .line 22448
    :cond_0
    :try_start_1
    move-object/from16 v0, v32

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    const/16 v10, 0x3e8

    if-eq v2, v10, :cond_1

    move-object/from16 v0, v32

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p2

    invoke-virtual {v2, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_1

    const-string v2, "android"

    move-object/from16 v0, p2

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_1

    .line 22451
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Given caller package "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, p2

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " is not running in process "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v32

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-direct {v2, v10}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 22454
    :cond_1
    move-object/from16 v0, v32

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 22455
    .local v4, "callingUid":I
    move-object/from16 v0, v32

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 22462
    .local v3, "callingPid":I
    :goto_1
    const/4 v6, 0x1

    const/4 v7, 0x2

    const-string/jumbo v8, "registerReceiver"

    move-object/from16 v2, p0

    move/from16 v5, p6

    move-object/from16 v9, p2

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p6

    .line 22465
    if-eqz p4, :cond_4

    invoke-virtual/range {p4 .. p4}, Landroid/content/IntentFilter;->actionsIterator()Ljava/util/Iterator;

    move-result-object v29

    .line 22466
    .local v29, "actions":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/String;>;"
    :goto_2
    if-nez v29, :cond_2

    .line 22467
    new-instance v39, Ljava/util/ArrayList;

    const/4 v2, 0x1

    move-object/from16 v0, v39

    invoke-direct {v0, v2}, Ljava/util/ArrayList;-><init>(I)V

    .line 22468
    .local v39, "noAction":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/String;>;"
    const/4 v2, 0x0

    move-object/from16 v0, v39

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 22469
    invoke-virtual/range {v39 .. v39}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v29

    .line 22473
    .end local v39    # "noAction":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/String;>;"
    :cond_2
    const/4 v2, 0x2

    new-array v0, v2, [I

    move-object/from16 v46, v0

    const/4 v2, 0x0

    const/4 v10, -0x1

    aput v10, v46, v2

    const/4 v2, 0x1

    invoke-static {v4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v10

    aput v10, v46, v2

    .line 22474
    .local v46, "userIds":[I
    :goto_3
    invoke-interface/range {v29 .. v29}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_6

    .line 22475
    invoke-interface/range {v29 .. v29}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v28

    check-cast v28, Ljava/lang/String;

    .line 22476
    .local v28, "action":Ljava/lang/String;
    move-object/from16 v31, v46

    .local v31, "arr$":[I
    move-object/from16 v0, v31

    array-length v0, v0

    move/from16 v38, v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .local v38, "len$":I
    const/16 v35, 0x0

    .local v35, "i$":I
    move-object/from16 v45, v44

    .end local v44    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .local v45, "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :goto_4
    move/from16 v0, v35

    move/from16 v1, v38

    if-ge v0, v1, :cond_5

    :try_start_2
    aget v36, v31, v35

    .line 22477
    .local v36, "id":I
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, v36

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v41

    check-cast v41, Landroid/util/ArrayMap;

    .line 22478
    .local v41, "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    if-eqz v41, :cond_17

    .line 22479
    move-object/from16 v0, v41

    move-object/from16 v1, v28

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v37

    check-cast v37, Ljava/util/ArrayList;

    .line 22480
    .local v37, "intents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    if-eqz v37, :cond_17

    .line 22481
    if-nez v45, :cond_16

    .line 22482
    new-instance v44, Ljava/util/ArrayList;

    invoke-direct/range {v44 .. v44}, Ljava/util/ArrayList;-><init>()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 22484
    .end local v45    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v44    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :goto_5
    :try_start_3
    move-object/from16 v0, v44

    move-object/from16 v1, v37

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->addAll(Ljava/util/Collection;)Z

    .line 22476
    .end local v37    # "intents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :goto_6
    add-int/lit8 v35, v35, 0x1

    move-object/from16 v45, v44

    .end local v44    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v45    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    goto :goto_4

    .line 22457
    .end local v3    # "callingPid":I
    .end local v4    # "callingUid":I
    .end local v28    # "action":Ljava/lang/String;
    .end local v29    # "actions":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/String;>;"
    .end local v31    # "arr$":[I
    .end local v35    # "i$":I
    .end local v36    # "id":I
    .end local v38    # "len$":I
    .end local v41    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    .end local v45    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v46    # "userIds":[I
    .restart local v44    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :cond_3
    const/16 p2, 0x0

    .line 22458
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 22459
    .restart local v4    # "callingUid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    .restart local v3    # "callingPid":I
    goto/16 :goto_1

    .line 22465
    :cond_4
    const/16 v29, 0x0

    goto :goto_2

    .end local v44    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v28    # "action":Ljava/lang/String;
    .restart local v29    # "actions":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/String;>;"
    .restart local v31    # "arr$":[I
    .restart local v35    # "i$":I
    .restart local v38    # "len$":I
    .restart local v45    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v46    # "userIds":[I
    :cond_5
    move-object/from16 v44, v45

    .line 22488
    .end local v45    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v44    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    goto :goto_3

    .line 22489
    .end local v28    # "action":Ljava/lang/String;
    .end local v31    # "arr$":[I
    .end local v35    # "i$":I
    .end local v38    # "len$":I
    :cond_6
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 22491
    const/16 v30, 0x0

    .line 22492
    .local v30, "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    if-eqz v44, :cond_9

    .line 22493
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v40

    .line 22495
    .local v40, "resolver":Landroid/content/ContentResolver;
    const/16 v34, 0x0

    .local v34, "i":I
    invoke-virtual/range {v44 .. v44}, Ljava/util/ArrayList;->size()I

    move-result v27

    .local v27, "N":I
    :goto_7
    move/from16 v0, v34

    move/from16 v1, v27

    if-ge v0, v1, :cond_9

    .line 22496
    move-object/from16 v0, v44

    move/from16 v1, v34

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Landroid/content/Intent;

    .line 22501
    .local v9, "intent":Landroid/content/Intent;
    const/4 v2, 0x1

    const-string v10, "ActivityManager"

    move-object/from16 v0, p4

    move-object/from16 v1, v40

    invoke-virtual {v0, v1, v9, v2, v10}, Landroid/content/IntentFilter;->match(Landroid/content/ContentResolver;Landroid/content/Intent;ZLjava/lang/String;)I

    move-result v2

    if-ltz v2, :cond_8

    .line 22502
    if-nez v30, :cond_7

    .line 22503
    new-instance v30, Ljava/util/ArrayList;

    .end local v30    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    invoke-direct/range {v30 .. v30}, Ljava/util/ArrayList;-><init>()V

    .line 22505
    .restart local v30    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :cond_7
    move-object/from16 v0, v30

    invoke-virtual {v0, v9}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 22495
    :cond_8
    add-int/lit8 v34, v34, 0x1

    goto :goto_7

    .line 22511
    .end local v9    # "intent":Landroid/content/Intent;
    .end local v27    # "N":I
    .end local v34    # "i":I
    .end local v40    # "resolver":Landroid/content/ContentResolver;
    :cond_9
    if-eqz v30, :cond_a

    const/4 v2, 0x0

    move-object/from16 v0, v30

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/Intent;

    move-object/from16 v42, v2

    .line 22513
    .local v42, "sticky":Landroid/content/Intent;
    :goto_8
    if-nez p3, :cond_b

    .line 22581
    .end local v42    # "sticky":Landroid/content/Intent;
    :goto_9
    return-object v42

    .line 22511
    :cond_a
    const/16 v42, 0x0

    goto :goto_8

    .line 22517
    .restart local v42    # "sticky":Landroid/content/Intent;
    :cond_b
    monitor-enter p0

    .line 22518
    if-eqz v32, :cond_d

    :try_start_4
    move-object/from16 v0, v32

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_c

    move-object/from16 v0, v32

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v2}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-interface/range {p1 .. p1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v10

    if-eq v2, v10, :cond_d

    .line 22521
    :cond_c
    const/16 v42, 0x0

    monitor-exit p0

    goto :goto_9

    .line 22582
    .end local v42    # "sticky":Landroid/content/Intent;
    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v2

    .line 22523
    .restart local v42    # "sticky":Landroid/content/Intent;
    :cond_d
    :try_start_5
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-interface/range {p3 .. p3}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v10

    invoke-virtual {v2, v10}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ReceiverList;

    .line 22524
    .local v5, "rl":Lcom/android/server/am/ReceiverList;
    if-nez v5, :cond_11

    .line 22525
    new-instance v5, Lcom/android/server/am/ReceiverList;

    .end local v5    # "rl":Lcom/android/server/am/ReceiverList;
    move-object/from16 v6, p0

    move-object/from16 v7, v32

    move v8, v3

    move v9, v4

    move/from16 v10, p6

    move-object/from16 v11, p3

    invoke-direct/range {v5 .. v11}, Lcom/android/server/am/ReceiverList;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;IIILandroid/content/IIntentReceiver;)V

    .line 22527
    .restart local v5    # "rl":Lcom/android/server/am/ReceiverList;
    iget-object v2, v5, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_10

    .line 22528
    iget-object v2, v5, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->receivers:Landroid/util/ArraySet;

    invoke-virtual {v2, v5}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 22537
    :goto_a
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-interface/range {p3 .. p3}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v10

    invoke-virtual {v2, v10, v5}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 22551
    :cond_e
    new-instance v6, Lcom/android/server/am/BroadcastFilter;

    move-object/from16 v7, p4

    move-object v8, v5

    move-object/from16 v9, p2

    move-object/from16 v10, p5

    move v11, v4

    move/from16 v12, p6

    invoke-direct/range {v6 .. v12}, Lcom/android/server/am/BroadcastFilter;-><init>(Landroid/content/IntentFilter;Lcom/android/server/am/ReceiverList;Ljava/lang/String;Ljava/lang/String;II)V

    .line 22553
    .local v6, "bf":Lcom/android/server/am/BroadcastFilter;
    invoke-virtual {v5, v6}, Lcom/android/server/am/ReceiverList;->add(Ljava/lang/Object;)Z

    .line 22554
    invoke-virtual {v6}, Lcom/android/server/am/BroadcastFilter;->debugCheck()Z

    move-result v2

    if-nez v2, :cond_f

    .line 22555
    const-string v2, "ActivityManager"

    const-string v10, "==> For Dynamic broadcast"

    invoke-static {v2, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22557
    :cond_f
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    invoke-virtual {v2, v6}, Lcom/android/server/IntentResolver;->addFilter(Landroid/content/IntentFilter;)V

    .line 22561
    if-eqz v30, :cond_14

    .line 22562
    new-instance v18, Ljava/util/ArrayList;

    invoke-direct/range {v18 .. v18}, Ljava/util/ArrayList;-><init>()V

    .line 22563
    .local v18, "receivers":Ljava/util/ArrayList;
    move-object/from16 v0, v18

    invoke-virtual {v0, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 22565
    invoke-virtual/range {v30 .. v30}, Ljava/util/ArrayList;->size()I

    move-result v43

    .line 22566
    .local v43, "stickyCount":I
    const/16 v34, 0x0

    .restart local v34    # "i":I
    :goto_b
    move/from16 v0, v34

    move/from16 v1, v43

    if-ge v0, v1, :cond_14

    .line 22567
    move-object/from16 v0, v30

    move/from16 v1, v34

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Landroid/content/Intent;

    .line 22568
    .restart local v9    # "intent":Landroid/content/Intent;
    move-object/from16 v0, p0

    invoke-virtual {v0, v9}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v8

    .line 22569
    .local v8, "queue":Lcom/android/server/am/BroadcastQueue;
    new-instance v7, Lcom/android/server/am/BroadcastRecord;

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, -0x1

    const/4 v13, -0x1

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, -0x1

    const/16 v17, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    const/16 v21, 0x0

    const/16 v22, 0x0

    const/16 v23, 0x0

    const/16 v24, 0x1

    const/16 v25, 0x1

    const/16 v26, -0x1

    invoke-direct/range {v7 .. v26}, Lcom/android/server/am/BroadcastRecord;-><init>(Lcom/android/server/am/BroadcastQueue;Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IILjava/lang/String;[Ljava/lang/String;ILandroid/app/BroadcastOptions;Ljava/util/List;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZI)V

    .line 22572
    .local v7, "r":Lcom/android/server/am/BroadcastRecord;
    invoke-virtual {v8, v7}, Lcom/android/server/am/BroadcastQueue;->enqueueParallelBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 22573
    invoke-virtual {v8}, Lcom/android/server/am/BroadcastQueue;->scheduleBroadcastsLocked()V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 22566
    add-int/lit8 v34, v34, 0x1

    goto :goto_b

    .line 22531
    .end local v6    # "bf":Lcom/android/server/am/BroadcastFilter;
    .end local v7    # "r":Lcom/android/server/am/BroadcastRecord;
    .end local v8    # "queue":Lcom/android/server/am/BroadcastQueue;
    .end local v9    # "intent":Landroid/content/Intent;
    .end local v18    # "receivers":Ljava/util/ArrayList;
    .end local v34    # "i":I
    .end local v43    # "stickyCount":I
    :cond_10
    :try_start_6
    invoke-interface/range {p3 .. p3}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    const/4 v10, 0x0

    invoke-interface {v2, v5, v10}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_0
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 22535
    const/4 v2, 0x1

    :try_start_7
    iput-boolean v2, v5, Lcom/android/server/am/ReceiverList;->linkedToDeath:Z

    goto/16 :goto_a

    .line 22532
    :catch_0
    move-exception v33

    .line 22533
    .local v33, "e":Landroid/os/RemoteException;
    monitor-exit p0

    goto/16 :goto_9

    .line 22538
    .end local v33    # "e":Landroid/os/RemoteException;
    :cond_11
    iget v2, v5, Lcom/android/server/am/ReceiverList;->uid:I

    if-eq v2, v4, :cond_12

    .line 22539
    new-instance v2, Ljava/lang/IllegalArgumentException;

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Receiver requested to register for uid "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " was previously registered for uid "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget v11, v5, Lcom/android/server/am/ReceiverList;->uid:I

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-direct {v2, v10}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 22542
    :cond_12
    iget v2, v5, Lcom/android/server/am/ReceiverList;->pid:I

    if-eq v2, v3, :cond_13

    .line 22543
    new-instance v2, Ljava/lang/IllegalArgumentException;

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Receiver requested to register for pid "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " was previously registered for pid "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget v11, v5, Lcom/android/server/am/ReceiverList;->pid:I

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-direct {v2, v10}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 22546
    :cond_13
    iget v2, v5, Lcom/android/server/am/ReceiverList;->userId:I

    move/from16 v0, p6

    if-eq v2, v0, :cond_e

    .line 22547
    new-instance v2, Ljava/lang/IllegalArgumentException;

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Receiver requested to register for user "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move/from16 v0, p6

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " was previously registered for user "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget v11, v5, Lcom/android/server/am/ReceiverList;->userId:I

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-direct {v2, v10}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 22577
    .restart local v6    # "bf":Lcom/android/server/am/BroadcastFilter;
    :cond_14
    if-eqz p4, :cond_15

    const-string v2, "android.intent.action.PROXY_CHANGE"

    move-object/from16 v0, p4

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->matchAction(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_15

    .line 22578
    move-object/from16 v0, p0

    invoke-direct {v0, v4}, Lcom/android/server/am/ActivityManagerService;->requestKnoxVpnToSendProxyBroadcast(I)V

    .line 22581
    :cond_15
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    goto/16 :goto_9

    .line 22489
    .end local v5    # "rl":Lcom/android/server/am/ReceiverList;
    .end local v6    # "bf":Lcom/android/server/am/BroadcastFilter;
    .end local v30    # "allSticky":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v42    # "sticky":Landroid/content/Intent;
    .end local v44    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v28    # "action":Ljava/lang/String;
    .restart local v31    # "arr$":[I
    .restart local v35    # "i$":I
    .restart local v38    # "len$":I
    .restart local v45    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :catchall_2
    move-exception v2

    move-object/from16 v44, v45

    .end local v45    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v44    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    goto/16 :goto_0

    .end local v44    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v36    # "id":I
    .restart local v37    # "intents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v41    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    .restart local v45    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :cond_16
    move-object/from16 v44, v45

    .end local v45    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v44    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    goto/16 :goto_5

    .end local v37    # "intents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v44    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v45    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :cond_17
    move-object/from16 v44, v45

    .end local v45    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v44    # "stickyIntents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    goto/16 :goto_6
.end method

.method public registerTaskStackListener(Landroid/app/ITaskStackListener;)V
    .locals 1
    .param p1, "listener"    # Landroid/app/ITaskStackListener;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 4510
    monitor-enter p0

    .line 4511
    if-eqz p1, :cond_0

    .line 4512
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskStackListeners:Landroid/os/RemoteCallbackList;

    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z

    .line 4514
    :cond_0
    monitor-exit p0

    .line 4515
    return-void

    .line 4514
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public registerUidObserver(Landroid/app/IUidObserver;)V
    .locals 2
    .param p1, "observer"    # Landroid/app/IUidObserver;

    .prologue
    .line 16068
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    const-string/jumbo v1, "registerUidObserver()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 16070
    monitor-enter p0

    .line 16071
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z

    .line 16072
    monitor-exit p0

    .line 16073
    return-void

    .line 16072
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public registerUserSwitchObserver(Landroid/app/IUserSwitchObserver;)V
    .locals 3
    .param p1, "observer"    # Landroid/app/IUserSwitchObserver;

    .prologue
    .line 28306
    const-string v1, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    .line 28308
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: registerUserSwitchObserver() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 28312
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 28313
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 28316
    .end local v0    # "msg":Ljava/lang/String;
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v1, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z

    .line 28317
    return-void
.end method

.method public releaseActivityInstance(Landroid/os/IBinder;)Z
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 7243
    monitor-enter p0

    .line 7244
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-wide v0

    .line 7246
    .local v0, "origId":J
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    move-result-object v2

    .line 7247
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v2, :cond_0

    .line 7248
    const/4 v3, 0x0

    .line 7252
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :goto_0
    return v3

    .line 7250
    :cond_0
    :try_start_3
    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v3, v3, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    const-string v4, "app-req"

    invoke-virtual {v3, v2, v4}, Lcom/android/server/am/ActivityStack;->safelyDestroyActivityLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    move-result v3

    .line 7252
    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0

    goto :goto_0

    .line 7254
    .end local v0    # "origId":J
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    throw v3

    .line 7252
    .restart local v0    # "origId":J
    :catchall_1
    move-exception v3

    :try_start_5
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0
.end method

.method public releasePersistableUriPermission(Landroid/net/Uri;II)V
    .locals 7
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "modeFlags"    # I
    .param p3, "userId"    # I

    .prologue
    .line 12298
    const-string/jumbo v4, "releasePersistableUriPermission"

    invoke-virtual {p0, v4}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 12300
    const/4 v4, 0x3

    invoke-static {p2, v4}, Lcom/android/internal/util/Preconditions;->checkFlagsArgument(II)V

    .line 12303
    monitor-enter p0

    .line 12304
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 12305
    .local v0, "callingUid":I
    const/4 v2, 0x0

    .line 12307
    .local v2, "persistChanged":Z
    new-instance v4, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v5, 0x0

    invoke-direct {v4, p3, p1, v5}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-direct {p0, v0, v4}, Lcom/android/server/am/ActivityManagerService;->findUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object v1

    .line 12309
    .local v1, "exactPerm":Lcom/android/server/am/UriPermission;
    new-instance v4, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v5, 0x1

    invoke-direct {v4, p3, p1, v5}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-direct {p0, v0, v4}, Lcom/android/server/am/ActivityManagerService;->findUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object v3

    .line 12311
    .local v3, "prefixPerm":Lcom/android/server/am/UriPermission;
    if-nez v1, :cond_0

    if-nez v3, :cond_0

    .line 12312
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "No permission grants found for UID "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " and Uri "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {p1}, Landroid/net/Uri;->toSafeString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 12328
    .end local v0    # "callingUid":I
    .end local v1    # "exactPerm":Lcom/android/server/am/UriPermission;
    .end local v2    # "persistChanged":Z
    .end local v3    # "prefixPerm":Lcom/android/server/am/UriPermission;
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v4

    .line 12316
    .restart local v0    # "callingUid":I
    .restart local v1    # "exactPerm":Lcom/android/server/am/UriPermission;
    .restart local v2    # "persistChanged":Z
    .restart local v3    # "prefixPerm":Lcom/android/server/am/UriPermission;
    :cond_0
    if-eqz v1, :cond_1

    .line 12317
    :try_start_1
    invoke-virtual {v1, p2}, Lcom/android/server/am/UriPermission;->releasePersistableModes(I)Z

    move-result v4

    or-int/2addr v2, v4

    .line 12318
    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionIfNeededLocked(Lcom/android/server/am/UriPermission;)V

    .line 12320
    :cond_1
    if-eqz v3, :cond_2

    .line 12321
    invoke-virtual {v3, p2}, Lcom/android/server/am/UriPermission;->releasePersistableModes(I)Z

    move-result v4

    or-int/2addr v2, v4

    .line 12322
    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionIfNeededLocked(Lcom/android/server/am/UriPermission;)V

    .line 12325
    :cond_2
    if-eqz v2, :cond_3

    .line 12326
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->schedulePersistUriGrants()V

    .line 12328
    :cond_3
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 12329
    return-void
.end method

.method public releaseSomeActivities(Landroid/app/IApplicationThread;)V
    .locals 5
    .param p1, "appInt"    # Landroid/app/IApplicationThread;

    .prologue
    .line 7259
    monitor-enter p0

    .line 7260
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v2

    .line 7262
    .local v2, "origId":J
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 7263
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-string/jumbo v4, "low-mem"

    invoke-virtual {v1, v0, v4}, Lcom/android/server/am/ActivityStackSupervisor;->releaseSomeActivitiesLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 7265
    :try_start_2
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7267
    monitor-exit p0

    .line 7268
    return-void

    .line 7265
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v1

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v1

    .line 7267
    .end local v2    # "origId":J
    :catchall_1
    move-exception v1

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v1
.end method

.method public removeContentProvider(Landroid/os/IBinder;Z)V
    .locals 9
    .param p1, "connection"    # Landroid/os/IBinder;
    .param p2, "stable"    # Z

    .prologue
    .line 14732
    const-string/jumbo v7, "removeContentProvider"

    invoke-virtual {p0, v7}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 14733
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 14735
    .local v4, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 14738
    :try_start_1
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/ContentProviderConnection;

    move-object v2, v0
    :try_end_1
    .catch Ljava/lang/ClassCastException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 14745
    .local v2, "conn":Lcom/android/server/am/ContentProviderConnection;
    if-nez v2, :cond_0

    .line 14746
    :try_start_2
    new-instance v7, Ljava/lang/NullPointerException;

    const-string v8, "connection is null"

    invoke-direct {v7, v8}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 14751
    .end local v2    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :catchall_0
    move-exception v7

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v7
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 14753
    :catchall_1
    move-exception v7

    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v7

    .line 14739
    :catch_0
    move-exception v3

    .line 14740
    .local v3, "e":Ljava/lang/ClassCastException;
    :try_start_4
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "removeContentProvider: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " not a ContentProviderConnection"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 14742
    .local v6, "msg":Ljava/lang/String;
    const-string v7, "ActivityManager"

    invoke-static {v7, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14743
    new-instance v7, Ljava/lang/IllegalArgumentException;

    invoke-direct {v7, v6}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 14748
    .end local v3    # "e":Ljava/lang/ClassCastException;
    .end local v6    # "msg":Ljava/lang/String;
    .restart local v2    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :cond_0
    const/4 v7, 0x0

    const/4 v8, 0x0

    invoke-virtual {p0, v2, v7, v8, p2}, Lcom/android/server/am/ActivityManagerService;->decProviderCountLocked(Lcom/android/server/am/ContentProviderConnection;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Z

    move-result v7

    if-eqz v7, :cond_1

    .line 14749
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 14751
    :cond_1
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 14753
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14755
    return-void
.end method

.method public removeContentProviderExternal(Ljava/lang/String;Landroid/os/IBinder;)V
    .locals 5
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "token"    # Landroid/os/IBinder;

    .prologue
    .line 14758
    const-string v3, "android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY"

    const-string v4, "Do not have permission in call removeContentProviderExternal()"

    invoke-virtual {p0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 14760
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v2

    .line 14761
    .local v2, "userId":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 14763
    .local v0, "ident":J
    :try_start_0
    invoke-direct {p0, p1, p2, v2}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 14765
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14767
    return-void

    .line 14765
    :catchall_0
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method public removeDeletedPkgsFromLru(Ljava/lang/String;)V
    .locals 3
    .param p1, "pkgName"    # Ljava/lang/String;

    .prologue
    .line 5641
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "removeDeletedPkgsFromLruStats called in AMS..."

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 5642
    sget-boolean v0, Lcom/android/server/am/ActivityManagerService;->SNN_PRIORITY_ENABLED:Z

    if-eqz v0, :cond_0

    .line 5643
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPrioritiseProcess:Lcom/android/server/am/PrioritizeLRUProcess;

    invoke-virtual {v0, p1}, Lcom/android/server/am/PrioritizeLRUProcess;->removeDeletedAppPackage(Ljava/lang/String;)V

    .line 5644
    :cond_0
    return-void
.end method

.method final removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 5
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 4627
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    monitor-enter v2

    .line 4628
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->lastIndexOf(Ljava/lang/Object;)I

    move-result v0

    .line 4629
    .local v0, "lrui":I
    if-ltz v0, :cond_3

    .line 4630
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->killed:Z

    if-nez v1, :cond_0

    .line 4631
    const-string v1, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Removing process that hasn\'t been killed: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->wtfStack(Ljava/lang/String;Ljava/lang/String;)I

    .line 4632
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v1}, Landroid/os/Process;->killProcessQuiet(I)V

    .line 4633
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v1, v3}, Lcom/android/server/am/ActivityManagerService;->killProcessGroup(II)V

    .line 4635
    :cond_0
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    if-gt v0, v1, :cond_1

    .line 4636
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    add-int/lit8 v1, v1, -0x1

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    .line 4638
    :cond_1
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    if-gt v0, v1, :cond_2

    .line 4639
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    add-int/lit8 v1, v1, -0x1

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    .line 4641
    :cond_2
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 4643
    :cond_3
    monitor-exit v2

    .line 4644
    return-void

    .line 4643
    .end local v0    # "lrui":I
    :catchall_0
    move-exception v1

    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method removeReceiverLocked(Lcom/android/server/am/ReceiverList;)V
    .locals 3
    .param p1, "rl"    # Lcom/android/server/am/ReceiverList;

    .prologue
    .line 22630
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    iget-object v2, p1, Lcom/android/server/am/ReceiverList;->receiver:Landroid/content/IIntentReceiver;

    invoke-interface {v2}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 22631
    invoke-virtual {p1}, Lcom/android/server/am/ReceiverList;->size()I

    move-result v1

    add-int/lit8 v0, v1, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_0

    .line 22632
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    invoke-virtual {p1, v0}, Lcom/android/server/am/ReceiverList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/IntentFilter;

    invoke-virtual {v2, v1}, Lcom/android/server/IntentResolver;->removeFilter(Landroid/content/IntentFilter;)V

    .line 22631
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 22634
    :cond_0
    return-void
.end method

.method public removeTask(I)Z
    .locals 4
    .param p1, "taskId"    # I

    .prologue
    .line 13187
    monitor-enter p0

    .line 13188
    :try_start_0
    const-string v2, "android.permission.REMOVE_TASKS"

    const-string/jumbo v3, "removeTask()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13190
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v0

    .line 13192
    .local v0, "ident":J
    const/4 v2, 0x1

    :try_start_1
    invoke-direct {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZ)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v2

    .line 13194
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0

    return v2

    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .line 13196
    .end local v0    # "ident":J
    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v2
.end method

.method public removeTask(II)Z
    .locals 5
    .param p1, "taskId"    # I
    .param p2, "flags"    # I

    .prologue
    .line 13202
    monitor-enter p0

    .line 13203
    :try_start_0
    const-string v2, "android.permission.REMOVE_TASKS"

    const-string/jumbo v3, "removeTask()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13206
    and-int/lit8 v2, p2, 0x8

    if-nez v2, :cond_0

    and-int/lit8 v2, p2, 0x20

    if-eqz v2, :cond_1

    .line 13208
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v3, Landroid/content/Intent;

    const-string v4, "com.samsung.android.intent.action.REMOVE_ALL_TASKS"

    invoke-direct {v3, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    invoke-virtual {v2, v3}, Landroid/content/Context;->sendBroadcast(Landroid/content/Intent;)V

    .line 13209
    invoke-direct {p0, p2}, Lcom/android/server/am/ActivityManagerService;->removeAllRecentTasksLocked(I)Z

    move-result v2

    monitor-exit p0

    .line 13220
    :goto_0
    return v2

    .line 13211
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-wide v0

    .line 13213
    .local v0, "ident":J
    const/4 v2, 0x1

    :try_start_1
    invoke-direct {p0, p1, v2, p2}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZI)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    move-result v2

    .line 13216
    and-int/lit8 v3, p2, 0x4

    if-eqz v3, :cond_2

    .line 13217
    :try_start_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->scheduleIdleLocked()V

    .line 13220
    :cond_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0

    goto :goto_0

    .line 13222
    .end local v0    # "ident":J
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v2

    .line 13216
    .restart local v0    # "ident":J
    :catchall_1
    move-exception v2

    and-int/lit8 v3, p2, 0x4

    if-eqz v3, :cond_3

    .line 13217
    :try_start_3
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->scheduleIdleLocked()V

    .line 13220
    :cond_3
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0
.end method

.method removeUriPermissionIfNeededLocked(Lcom/android/server/am/UriPermission;)V
    .locals 3
    .param p1, "perm"    # Lcom/android/server/am/UriPermission;

    .prologue
    .line 11874
    iget v1, p1, Lcom/android/server/am/UriPermission;->modeFlags:I

    if-nez v1, :cond_0

    .line 11875
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    iget v2, p1, Lcom/android/server/am/UriPermission;->targetUid:I

    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/ArrayMap;

    .line 11877
    .local v0, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-eqz v0, :cond_0

    .line 11881
    iget-object v1, p1, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 11882
    invoke-virtual {v0}, Landroid/util/ArrayMap;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 11883
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    iget v2, p1, Lcom/android/server/am/UriPermission;->targetUid:I

    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->remove(I)V

    .line 11887
    .end local v0    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    :cond_0
    return-void
.end method

.method public removeVirtualScreen(I)V
    .locals 1
    .param p1, "displayId"    # I

    .prologue
    .line 12491
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStackSupervisor;->removeVirtualScreen(I)V

    .line 12492
    return-void
.end method

.method public reportActivityFullyDrawn(Landroid/os/IBinder;)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6886
    monitor-enter p0

    .line 6887
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 6888
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 6889
    monitor-exit p0

    .line 6893
    :goto_0
    return-void

    .line 6891
    :cond_0
    invoke-virtual {v0}, Lcom/android/server/am/ActivityRecord;->reportFullyDrawnLocked()V

    .line 6892
    monitor-exit p0

    goto :goto_0

    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public reportAssistContextExtras(Landroid/os/IBinder;Landroid/os/Bundle;Landroid/app/assist/AssistStructure;Landroid/app/assist/AssistContent;Landroid/net/Uri;)V
    .locals 14
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "extras"    # Landroid/os/Bundle;
    .param p3, "structure"    # Landroid/app/assist/AssistStructure;
    .param p4, "content"    # Landroid/app/assist/AssistContent;
    .param p5, "referrer"    # Landroid/net/Uri;

    .prologue
    .line 15986
    move-object v6, p1

    check-cast v6, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    .line 15987
    .local v6, "pae":Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;
    monitor-enter v6

    .line 15988
    :try_start_0
    move-object/from16 v0, p2

    iput-object v0, v6, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->result:Landroid/os/Bundle;

    .line 15989
    move-object/from16 v0, p3

    iput-object v0, v6, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->structure:Landroid/app/assist/AssistStructure;

    .line 15990
    move-object/from16 v0, p4

    iput-object v0, v6, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->content:Landroid/app/assist/AssistContent;

    .line 15991
    if-eqz p5, :cond_0

    .line 15992
    iget-object v10, v6, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->extras:Landroid/os/Bundle;

    const-string v11, "android.intent.extra.REFERRER"

    move-object/from16 v0, p5

    invoke-virtual {v10, v11, v0}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V

    .line 15994
    :cond_0
    const/4 v10, 0x1

    iput-boolean v10, v6, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->haveResult:Z

    .line 15995
    invoke-virtual {v6}, Ljava/lang/Object;->notifyAll()V

    .line 15996
    iget-object v10, v6, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->intent:Landroid/content/Intent;

    if-nez v10, :cond_1

    iget-object v10, v6, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->receiver:Lcom/android/internal/os/IResultReceiver;

    if-nez v10, :cond_1

    .line 15998
    monitor-exit v6

    .line 16044
    :goto_0
    return-void

    .line 16000
    :cond_1
    monitor-exit v6
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 16003
    const/4 v9, 0x0

    .line 16004
    .local v9, "sendReceiver":Lcom/android/internal/os/IResultReceiver;
    const/4 v7, 0x0

    .line 16005
    .local v7, "sendBundle":Landroid/os/Bundle;
    monitor-enter p0

    .line 16006
    :try_start_1
    move-object/from16 v0, p2

    invoke-direct {p0, v6, v0}, Lcom/android/server/am/ActivityManagerService;->buildAssistBundleLocked(Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;Landroid/os/Bundle;)V

    .line 16007
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mPendingAssistExtras:Ljava/util/ArrayList;

    invoke-virtual {v10, v6}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    move-result v3

    .line 16008
    .local v3, "exists":Z
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    invoke-virtual {v10, v6}, Lcom/android/server/am/ActivityManagerService$UiHandler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 16009
    if-nez v3, :cond_2

    .line 16011
    monitor-exit p0

    goto :goto_0

    .line 16020
    .end local v3    # "exists":Z
    :catchall_0
    move-exception v10

    :goto_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v10

    .line 16000
    .end local v7    # "sendBundle":Landroid/os/Bundle;
    .end local v9    # "sendReceiver":Lcom/android/internal/os/IResultReceiver;
    :catchall_1
    move-exception v10

    :try_start_2
    monitor-exit v6
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v10

    .line 16013
    .restart local v3    # "exists":Z
    .restart local v7    # "sendBundle":Landroid/os/Bundle;
    .restart local v9    # "sendReceiver":Lcom/android/internal/os/IResultReceiver;
    :cond_2
    :try_start_3
    iget-object v9, v6, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->receiver:Lcom/android/internal/os/IResultReceiver;

    if-eqz v9, :cond_3

    .line 16015
    new-instance v8, Landroid/os/Bundle;

    invoke-direct {v8}, Landroid/os/Bundle;-><init>()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 16016
    .end local v7    # "sendBundle":Landroid/os/Bundle;
    .local v8, "sendBundle":Landroid/os/Bundle;
    :try_start_4
    const-string/jumbo v10, "data"

    iget-object v11, v6, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->extras:Landroid/os/Bundle;

    invoke-virtual {v8, v10, v11}, Landroid/os/Bundle;->putBundle(Ljava/lang/String;Landroid/os/Bundle;)V

    .line 16017
    const-string/jumbo v10, "structure"

    iget-object v11, v6, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->structure:Landroid/app/assist/AssistStructure;

    invoke-virtual {v8, v10, v11}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V

    .line 16018
    const-string v10, "content"

    iget-object v11, v6, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->content:Landroid/app/assist/AssistContent;

    invoke-virtual {v8, v10, v11}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_3

    move-object v7, v8

    .line 16020
    .end local v8    # "sendBundle":Landroid/os/Bundle;
    .restart local v7    # "sendBundle":Landroid/os/Bundle;
    :cond_3
    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 16021
    if-eqz v9, :cond_4

    .line 16023
    const/4 v10, 0x0

    :try_start_6
    invoke-interface {v9, v10, v7}, Lcom/android/internal/os/IResultReceiver;->send(ILandroid/os/Bundle;)V
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_0

    goto :goto_0

    .line 16024
    :catch_0
    move-exception v10

    goto :goto_0

    .line 16029
    :cond_4
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 16031
    .local v4, "ident":J
    :try_start_7
    iget-object v10, v6, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->intent:Landroid/content/Intent;

    iget-object v11, v6, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->extras:Landroid/os/Bundle;

    invoke-virtual {v10, v11}, Landroid/content/Intent;->replaceExtras(Landroid/os/Bundle;)Landroid/content/Intent;

    .line 16032
    iget-object v10, v6, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->intent:Landroid/content/Intent;

    const/high16 v11, 0x34000000

    invoke-virtual {v10, v11}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 16035
    const-string v10, "assist"

    invoke-virtual {p0, v10}, Lcom/android/server/am/ActivityManagerService;->closeSystemDialogs(Ljava/lang/String;)V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    .line 16037
    :try_start_8
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    iget-object v11, v6, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->intent:Landroid/content/Intent;

    new-instance v12, Landroid/os/UserHandle;

    iget v13, v6, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->userHandle:I

    invoke-direct {v12, v13}, Landroid/os/UserHandle;-><init>(I)V

    invoke-virtual {v10, v11, v12}, Landroid/content/Context;->startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_8
    .catch Landroid/content/ActivityNotFoundException; {:try_start_8 .. :try_end_8} :catch_1
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    .line 16042
    :goto_2
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 16038
    :catch_1
    move-exception v2

    .line 16039
    .local v2, "e":Landroid/content/ActivityNotFoundException;
    :try_start_9
    const-string v10, "ActivityManager"

    const-string v11, "No activity to handle assist action."

    invoke-static {v10, v11, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    goto :goto_2

    .line 16042
    .end local v2    # "e":Landroid/content/ActivityNotFoundException;
    :catchall_2
    move-exception v10

    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v10

    .line 16020
    .end local v4    # "ident":J
    .end local v7    # "sendBundle":Landroid/os/Bundle;
    .restart local v8    # "sendBundle":Landroid/os/Bundle;
    :catchall_3
    move-exception v10

    move-object v7, v8

    .end local v8    # "sendBundle":Landroid/os/Bundle;
    .restart local v7    # "sendBundle":Landroid/os/Bundle;
    goto :goto_1
.end method

.method reportMemUsage(Ljava/util/ArrayList;)V
    .locals 56
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessMemInfo;",
            ">;)V"
        }
    .end annotation

    .prologue
    .line 21070
    .local p1, "memInfos":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessMemInfo;>;"
    new-instance v37, Landroid/util/SparseArray;

    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v5

    move-object/from16 v0, v37

    invoke-direct {v0, v5}, Landroid/util/SparseArray;-><init>(I)V

    .line 21071
    .local v37, "infoMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessMemInfo;>;"
    const/16 v36, 0x0

    .local v36, "i":I
    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v28

    .local v28, "N":I
    :goto_0
    move/from16 v0, v36

    move/from16 v1, v28

    if-ge v0, v1, :cond_0

    .line 21072
    move-object/from16 v0, p1

    move/from16 v1, v36

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessMemInfo;

    .line 21073
    .local v4, "mi":Lcom/android/server/am/ProcessMemInfo;
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->pid:I

    move-object/from16 v0, v37

    invoke-virtual {v0, v5, v4}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 21071
    add-int/lit8 v36, v36, 0x1

    goto :goto_0

    .line 21075
    .end local v4    # "mi":Lcom/android/server/am/ProcessMemInfo;
    :cond_0
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 21076
    const/4 v5, 0x1

    new-array v0, v5, [J

    move-object/from16 v44, v0

    .line 21077
    .local v44, "memtrackTmp":[J
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    monitor-enter v14

    .line 21078
    :try_start_0
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v5}, Lcom/android/internal/os/ProcessCpuTracker;->countStats()I

    move-result v28

    .line 21079
    const/16 v36, 0x0

    :goto_1
    move/from16 v0, v36

    move/from16 v1, v28

    if-ge v0, v1, :cond_2

    .line 21080
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move/from16 v0, v36

    invoke-virtual {v5, v0}, Lcom/android/internal/os/ProcessCpuTracker;->getStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v45

    .line 21081
    .local v45, "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    move-object/from16 v0, v45

    iget-wide v8, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->vsize:J

    const-wide/16 v18, 0x0

    cmp-long v5, v8, v18

    if-lez v5, :cond_1

    .line 21082
    move-object/from16 v0, v45

    iget v5, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    const/4 v6, 0x0

    move-object/from16 v0, v44

    invoke-static {v5, v6, v0}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v48

    .line 21083
    .local v48, "pss":J
    const-wide/16 v8, 0x0

    cmp-long v5, v48, v8

    if-lez v5, :cond_1

    .line 21084
    move-object/from16 v0, v45

    iget v5, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move-object/from16 v0, v37

    invoke-virtual {v0, v5}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v5

    if-gez v5, :cond_1

    .line 21085
    new-instance v4, Lcom/android/server/am/ProcessMemInfo;

    move-object/from16 v0, v45

    iget-object v5, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    move-object/from16 v0, v45

    iget v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    const/16 v7, -0x11

    const/4 v8, -0x1

    const-string/jumbo v9, "native"

    const/4 v10, 0x0

    invoke-direct/range {v4 .. v10}, Lcom/android/server/am/ProcessMemInfo;-><init>(Ljava/lang/String;IIILjava/lang/String;Ljava/lang/String;)V

    .line 21087
    .restart local v4    # "mi":Lcom/android/server/am/ProcessMemInfo;
    move-wide/from16 v0, v48

    iput-wide v0, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    .line 21088
    const/4 v5, 0x0

    aget-wide v8, v44, v5

    iput-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    .line 21089
    move-object/from16 v0, p1

    invoke-virtual {v0, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 21079
    .end local v4    # "mi":Lcom/android/server/am/ProcessMemInfo;
    .end local v48    # "pss":J
    :cond_1
    add-int/lit8 v36, v36, 0x1

    goto :goto_1

    .line 21094
    .end local v45    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :cond_2
    monitor-exit v14
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 21096
    const-wide/16 v54, 0x0

    .line 21097
    .local v54, "totalPss":J
    const-wide/16 v52, 0x0

    .line 21098
    .local v52, "totalMemtrack":J
    const/16 v36, 0x0

    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v28

    :goto_2
    move/from16 v0, v36

    move/from16 v1, v28

    if-ge v0, v1, :cond_4

    .line 21099
    move-object/from16 v0, p1

    move/from16 v1, v36

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessMemInfo;

    .line 21100
    .restart local v4    # "mi":Lcom/android/server/am/ProcessMemInfo;
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    const-wide/16 v14, 0x0

    cmp-long v5, v8, v14

    if-nez v5, :cond_3

    .line 21101
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->pid:I

    const/4 v6, 0x0

    move-object/from16 v0, v44

    invoke-static {v5, v6, v0}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v8

    iput-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    .line 21102
    const/4 v5, 0x0

    aget-wide v8, v44, v5

    iput-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    .line 21104
    :cond_3
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    add-long v54, v54, v8

    .line 21105
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    add-long v52, v52, v8

    .line 21098
    add-int/lit8 v36, v36, 0x1

    goto :goto_2

    .line 21094
    .end local v4    # "mi":Lcom/android/server/am/ProcessMemInfo;
    .end local v52    # "totalMemtrack":J
    .end local v54    # "totalPss":J
    :catchall_0
    move-exception v5

    :try_start_1
    monitor-exit v14
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v5

    .line 21107
    .restart local v52    # "totalMemtrack":J
    .restart local v54    # "totalPss":J
    :cond_4
    new-instance v5, Lcom/android/server/am/ActivityManagerService$28;

    move-object/from16 v0, p0

    invoke-direct {v5, v0}, Lcom/android/server/am/ActivityManagerService$28;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    move-object/from16 v0, p1

    invoke-static {v0, v5}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 21119
    new-instance v51, Ljava/lang/StringBuilder;

    const/16 v5, 0x80

    move-object/from16 v0, v51

    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 21120
    .local v51, "tag":Ljava/lang/StringBuilder;
    new-instance v50, Ljava/lang/StringBuilder;

    const/16 v5, 0x80

    move-object/from16 v0, v50

    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 21121
    .local v50, "stack":Ljava/lang/StringBuilder;
    const-string v5, "Low on memory -- "

    move-object/from16 v0, v51

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21122
    const-string/jumbo v5, "total"

    const/4 v6, 0x0

    move-object/from16 v0, v51

    move-wide/from16 v1, v54

    invoke-static {v0, v1, v2, v5, v6}, Lcom/android/server/am/ActivityManagerService;->appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V

    .line 21123
    const-string/jumbo v5, "total"

    const/4 v6, 0x1

    move-object/from16 v0, v50

    move-wide/from16 v1, v54

    invoke-static {v0, v1, v2, v5, v6}, Lcom/android/server/am/ActivityManagerService;->appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V

    .line 21125
    new-instance v35, Ljava/lang/StringBuilder;

    const/16 v5, 0x400

    move-object/from16 v0, v35

    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 21126
    .local v35, "fullNativeBuilder":Ljava/lang/StringBuilder;
    new-instance v7, Ljava/lang/StringBuilder;

    const/16 v5, 0x400

    invoke-direct {v7, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 21127
    .local v7, "shortNativeBuilder":Ljava/lang/StringBuilder;
    new-instance v34, Ljava/lang/StringBuilder;

    const/16 v5, 0x400

    move-object/from16 v0, v34

    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 21129
    .local v34, "fullJavaBuilder":Ljava/lang/StringBuilder;
    const/16 v33, 0x1

    .line 21130
    .local v33, "firstLine":Z
    const/high16 v41, -0x80000000

    .line 21131
    .local v41, "lastOomAdj":I
    const-wide/16 v10, 0x0

    .line 21132
    .local v10, "extraNativeRam":J
    const-wide/16 v12, 0x0

    .line 21133
    .local v12, "extraNativeMemtrack":J
    const-wide/16 v30, 0x0

    .line 21134
    .local v30, "cachedPss":J
    const/16 v36, 0x0

    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v28

    :goto_3
    move/from16 v0, v36

    move/from16 v1, v28

    if-ge v0, v1, :cond_13

    .line 21135
    move-object/from16 v0, p1

    move/from16 v1, v36

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessMemInfo;

    .line 21137
    .restart local v4    # "mi":Lcom/android/server/am/ProcessMemInfo;
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/16 v6, 0x9

    if-lt v5, v6, :cond_5

    .line 21138
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    add-long v30, v30, v8

    .line 21141
    :cond_5
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/16 v6, -0x11

    if-eq v5, v6, :cond_f

    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/4 v6, 0x5

    if-lt v5, v6, :cond_6

    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/4 v6, 0x6

    if-eq v5, v6, :cond_6

    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/4 v6, 0x7

    if-ne v5, v6, :cond_f

    .line 21145
    :cond_6
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    move/from16 v0, v41

    if-eq v0, v5, :cond_d

    .line 21146
    iget v0, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    move/from16 v41, v0

    .line 21147
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-gtz v5, :cond_7

    .line 21148
    const-string v5, " / "

    move-object/from16 v0, v51

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21150
    :cond_7
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-ltz v5, :cond_c

    .line 21151
    if-eqz v33, :cond_8

    .line 21152
    const-string v5, ":"

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21153
    const/16 v33, 0x0

    .line 21155
    :cond_8
    const-string v5, "\n\t at "

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21163
    :goto_4
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-gtz v5, :cond_9

    .line 21164
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    iget-object v5, v4, Lcom/android/server/am/ProcessMemInfo;->name:Ljava/lang/String;

    const/4 v6, 0x0

    move-object/from16 v0, v51

    invoke-static {v0, v8, v9, v5, v6}, Lcom/android/server/am/ActivityManagerService;->appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V

    .line 21166
    :cond_9
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    iget-object v5, v4, Lcom/android/server/am/ProcessMemInfo;->name:Ljava/lang/String;

    const/4 v6, 0x1

    move-object/from16 v0, v50

    invoke-static {v0, v8, v9, v5, v6}, Lcom/android/server/am/ActivityManagerService;->appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V

    .line 21167
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-ltz v5, :cond_f

    add-int/lit8 v5, v36, 0x1

    move/from16 v0, v28

    if-ge v5, v0, :cond_a

    add-int/lit8 v5, v36, 0x1

    move-object/from16 v0, p1

    invoke-virtual {v0, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ProcessMemInfo;

    iget v5, v5, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    move/from16 v0, v41

    if-eq v5, v0, :cond_f

    .line 21169
    :cond_a
    const-string v5, "("

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21170
    const/16 v39, 0x0

    .local v39, "k":I
    :goto_5
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    array-length v5, v5

    move/from16 v0, v39

    if-ge v0, v5, :cond_e

    .line 21171
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v5, v5, v39

    iget v6, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-ne v5, v6, :cond_b

    .line 21172
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    aget-object v5, v5, v39

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21173
    const-string v5, ":"

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21174
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v5, v5, v39

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 21170
    :cond_b
    add-int/lit8 v39, v39, 0x1

    goto :goto_5

    .line 21157
    .end local v39    # "k":I
    :cond_c
    const-string v5, "$"

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_4

    .line 21160
    :cond_d
    const-string v5, " "

    move-object/from16 v0, v51

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21161
    const-string v5, "$"

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_4

    .line 21177
    .restart local v39    # "k":I
    :cond_e
    const-string v5, ")"

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21181
    .end local v39    # "k":I
    :cond_f
    move-object/from16 v0, p0

    move-object/from16 v1, v35

    invoke-direct {v0, v1, v4}, Lcom/android/server/am/ActivityManagerService;->appendMemInfo(Ljava/lang/StringBuilder;Lcom/android/server/am/ProcessMemInfo;)V

    .line 21182
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/16 v6, -0x11

    if-ne v5, v6, :cond_11

    .line 21184
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    const-wide/16 v14, 0x200

    cmp-long v5, v8, v14

    if-ltz v5, :cond_10

    .line 21185
    move-object/from16 v0, p0

    invoke-direct {v0, v7, v4}, Lcom/android/server/am/ActivityManagerService;->appendMemInfo(Ljava/lang/StringBuilder;Lcom/android/server/am/ProcessMemInfo;)V

    .line 21134
    :goto_6
    add-int/lit8 v36, v36, 0x1

    goto/16 :goto_3

    .line 21187
    :cond_10
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    add-long/2addr v10, v8

    .line 21188
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    add-long/2addr v12, v8

    goto :goto_6

    .line 21193
    :cond_11
    const-wide/16 v8, 0x0

    cmp-long v5, v10, v8

    if-lez v5, :cond_12

    .line 21194
    const/16 v8, -0x11

    const/4 v9, -0x1

    const-string v14, "(Other native)"

    move-object/from16 v6, p0

    invoke-direct/range {v6 .. v14}, Lcom/android/server/am/ActivityManagerService;->appendBasicMemEntry(Ljava/lang/StringBuilder;IIJJLjava/lang/String;)V

    .line 21196
    const/16 v5, 0xa

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 21197
    const-wide/16 v10, 0x0

    .line 21199
    :cond_12
    move-object/from16 v0, p0

    move-object/from16 v1, v34

    invoke-direct {v0, v1, v4}, Lcom/android/server/am/ActivityManagerService;->appendMemInfo(Ljava/lang/StringBuilder;Lcom/android/server/am/ProcessMemInfo;)V

    goto :goto_6

    .line 21203
    .end local v4    # "mi":Lcom/android/server/am/ProcessMemInfo;
    :cond_13
    const-string v5, "           "

    move-object/from16 v0, v34

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21204
    move-object/from16 v0, v34

    move-wide/from16 v1, v54

    invoke-static {v0, v1, v2}, Lcom/android/server/am/ProcessList;->appendRamKb(Ljava/lang/StringBuilder;J)V

    .line 21205
    const-string v5, " kB: TOTAL"

    move-object/from16 v0, v34

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21206
    const-wide/16 v8, 0x0

    cmp-long v5, v52, v8

    if-lez v5, :cond_14

    .line 21207
    const-string v5, " ("

    move-object/from16 v0, v34

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21208
    move-object/from16 v0, v34

    move-wide/from16 v1, v52

    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 21209
    const-string v5, " kB memtrack)"

    move-object/from16 v0, v34

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21212
    :cond_14
    const-string v5, "\n"

    move-object/from16 v0, v34

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21214
    new-instance v42, Lcom/android/internal/util/MemInfoReader;

    invoke-direct/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;-><init>()V

    .line 21215
    .local v42, "memInfo":Lcom/android/internal/util/MemInfoReader;
    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->readMemInfo()V

    .line 21216
    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getRawInfo()[J

    move-result-object v38

    .line 21218
    .local v38, "infos":[J
    new-instance v43, Ljava/lang/StringBuilder;

    const/16 v5, 0x400

    move-object/from16 v0, v43

    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 21219
    .local v43, "memInfoBuilder":Ljava/lang/StringBuilder;
    invoke-static/range {v38 .. v38}, Landroid/os/Debug;->getMemInfo([J)V

    .line 21220
    const-string v5, "  MemInfo: "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21221
    const/4 v5, 0x5

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " kB slab, "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21222
    const/4 v5, 0x4

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " kB shmem, "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21223
    const/16 v5, 0xa

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " kB vm alloc, "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21224
    const/16 v5, 0xb

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " kB page tables "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21225
    const/16 v5, 0xc

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " kB kernel stack\n"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21226
    const-string v5, "           "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21227
    const/4 v5, 0x2

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " kB buffers, "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21228
    const/4 v5, 0x3

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " kB cached, "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21229
    const/16 v5, 0x9

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " kB mapped, "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21230
    const/4 v5, 0x1

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " kB free\n"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21231
    const/16 v5, 0x8

    aget-wide v8, v38, v5

    const-wide/16 v14, 0x0

    cmp-long v5, v8, v14

    if-eqz v5, :cond_15

    .line 21232
    const-string v5, "  ZRAM: "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21233
    const/16 v5, 0x8

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 21234
    const-string v5, " kB RAM, "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21235
    const/4 v5, 0x6

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 21236
    const-string v5, " kB swap total, "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21237
    const/4 v5, 0x7

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 21238
    const-string v5, " kB swap free\n"

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21240
    :cond_15
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getKsmInfo()[J

    move-result-object v40

    .line 21241
    .local v40, "ksm":[J
    const/4 v5, 0x1

    aget-wide v8, v40, v5

    const-wide/16 v14, 0x0

    cmp-long v5, v8, v14

    if-nez v5, :cond_16

    const/4 v5, 0x0

    aget-wide v8, v40, v5

    const-wide/16 v14, 0x0

    cmp-long v5, v8, v14

    if-nez v5, :cond_16

    const/4 v5, 0x2

    aget-wide v8, v40, v5

    const-wide/16 v14, 0x0

    cmp-long v5, v8, v14

    if-nez v5, :cond_16

    const/4 v5, 0x3

    aget-wide v8, v40, v5

    const-wide/16 v14, 0x0

    cmp-long v5, v8, v14

    if-eqz v5, :cond_17

    .line 21243
    :cond_16
    const-string v5, "  KSM: "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v5, 0x1

    aget-wide v8, v40, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 21244
    const-string v5, " kB saved from shared "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21245
    const/4 v5, 0x0

    aget-wide v8, v40, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v5, " kB\n"

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21246
    const-string v5, "       "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v5, 0x2

    aget-wide v8, v40, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 21247
    const-string v5, " kB unshared; "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21248
    const/4 v5, 0x3

    aget-wide v8, v40, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v5, " kB volatile\n"

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21250
    :cond_17
    const-string v5, "  Free RAM: "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21251
    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v8

    add-long v8, v8, v30

    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v14

    add-long/2addr v8, v14

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 21253
    const-string v5, " kB\n"

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21254
    const-string v5, "  Used RAM: "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21255
    sub-long v8, v54, v30

    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v14

    add-long/2addr v8, v14

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 21256
    const-string v5, " kB\n"

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21257
    const-string v5, "  Lost RAM: "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21258
    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v8

    sub-long v8, v8, v54

    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v14

    sub-long/2addr v8, v14

    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v14

    sub-long/2addr v8, v14

    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v14

    sub-long/2addr v8, v14

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 21261
    const-string v5, " kB\n"

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21262
    const-string v5, "ActivityManager"

    const-string v6, "Low on memory:"

    invoke-static {v5, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 21263
    const-string v5, "ActivityManager"

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 21264
    const-string v5, "ActivityManager"

    invoke-virtual/range {v34 .. v34}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 21265
    const-string v5, "ActivityManager"

    invoke-virtual/range {v43 .. v43}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 21267
    new-instance v32, Ljava/lang/StringBuilder;

    const/16 v5, 0x400

    move-object/from16 v0, v32

    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 21278
    .local v32, "dropBuilder":Ljava/lang/StringBuilder;
    const-string v5, "Low on memory:"

    move-object/from16 v0, v32

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21279
    move-object/from16 v0, v32

    move-object/from16 v1, v50

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    .line 21280
    const/16 v5, 0xa

    move-object/from16 v0, v32

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 21281
    move-object/from16 v0, v32

    move-object/from16 v1, v35

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    .line 21282
    move-object/from16 v0, v32

    move-object/from16 v1, v34

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    .line 21283
    const/16 v5, 0xa

    move-object/from16 v0, v32

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 21284
    move-object/from16 v0, v32

    move-object/from16 v1, v43

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    .line 21285
    const/16 v5, 0xa

    move-object/from16 v0, v32

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 21290
    new-instance v29, Ljava/io/StringWriter;

    invoke-direct/range {v29 .. v29}, Ljava/io/StringWriter;-><init>()V

    .line 21291
    .local v29, "catSw":Ljava/io/StringWriter;
    monitor-enter p0

    .line 21292
    :try_start_2
    new-instance v16, Lcom/android/internal/util/FastPrintWriter;

    const/4 v5, 0x0

    const/16 v6, 0x100

    move-object/from16 v0, v16

    move-object/from16 v1, v29

    invoke-direct {v0, v1, v5, v6}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;ZI)V

    .line 21293
    .local v16, "catPw":Ljava/io/PrintWriter;
    const/4 v5, 0x0

    new-array v0, v5, [Ljava/lang/String;

    move-object/from16 v17, v0

    .line 21294
    .local v17, "emptyArgs":[Ljava/lang/String;
    invoke-virtual/range {v16 .. v16}, Ljava/io/PrintWriter;->println()V

    .line 21295
    const/4 v15, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    move-object/from16 v14, p0

    invoke-virtual/range {v14 .. v20}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 21296
    invoke-virtual/range {v16 .. v16}, Ljava/io/PrintWriter;->println()V

    .line 21297
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v15, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    const/16 v21, 0x0

    invoke-virtual/range {v14 .. v21}, Lcom/android/server/am/ActiveServices;->dumpServicesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 21299
    invoke-virtual/range {v16 .. v16}, Ljava/io/PrintWriter;->println()V

    .line 21300
    const/4 v15, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    const/16 v21, 0x0

    move-object/from16 v14, p0

    invoke-virtual/range {v14 .. v21}, Lcom/android/server/am/ActivityManagerService;->dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 21301
    invoke-virtual/range {v16 .. v16}, Ljava/io/PrintWriter;->flush()V

    .line 21302
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 21303
    invoke-virtual/range {v29 .. v29}, Ljava/io/StringWriter;->toString()Ljava/lang/String;

    move-result-object v5

    move-object/from16 v0, v32

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21304
    const-string/jumbo v19, "lowmem"

    const/16 v20, 0x0

    const-string/jumbo v21, "system_server"

    const/16 v22, 0x0

    const/16 v23, 0x0

    invoke-virtual/range {v51 .. v51}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-virtual/range {v32 .. v32}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v25

    const/16 v26, 0x0

    const/16 v27, 0x0

    move-object/from16 v18, p0

    invoke-virtual/range {v18 .. v27}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 21308
    monitor-enter p0

    .line 21309
    :try_start_3
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v46

    .line 21310
    .local v46, "now":J
    move-object/from16 v0, p0

    iget-wide v8, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J

    cmp-long v5, v8, v46

    if-gez v5, :cond_18

    .line 21311
    move-wide/from16 v0, v46

    move-object/from16 v2, p0

    iput-wide v0, v2, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J

    .line 21313
    :cond_18
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    .line 21314
    return-void

    .line 21302
    .end local v16    # "catPw":Ljava/io/PrintWriter;
    .end local v17    # "emptyArgs":[Ljava/lang/String;
    .end local v46    # "now":J
    :catchall_1
    move-exception v5

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v5

    .line 21313
    .restart local v16    # "catPw":Ljava/io/PrintWriter;
    .restart local v17    # "emptyArgs":[Ljava/lang/String;
    :catchall_2
    move-exception v5

    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    throw v5
.end method

.method reportVRApplicationCrashLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;Z)V
    .locals 8
    .param p1, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "timeMillis"    # J
    .param p4, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;
    .param p5, "notify"    # Z

    .prologue
    const/4 v5, 0x1

    .line 18269
    move-object v0, p0

    move-object v1, p1

    move-wide v2, p2

    move-object v4, p4

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->createAppErrorReportLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;Z)Landroid/app/ApplicationErrorReport;

    move-result-object v7

    .line 18271
    .local v7, "report":Landroid/app/ApplicationErrorReport;
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v6

    .line 18272
    .local v6, "msg":Landroid/os/Message;
    const/16 v0, 0x3d

    iput v0, v6, Landroid/os/Message;->what:I

    .line 18273
    iput-object v7, v6, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 18274
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    iput v0, v6, Landroid/os/Message;->arg1:I

    .line 18275
    if-eqz p5, :cond_0

    :goto_0
    iput v5, v6, Landroid/os/Message;->arg2:I

    .line 18276
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v0, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 18277
    return-void

    .line 18275
    :cond_0
    const/4 v5, 0x0

    goto :goto_0
.end method

.method public requestAssistContextExtras(ILcom/android/internal/os/IResultReceiver;Landroid/os/IBinder;)Z
    .locals 10
    .param p1, "requestType"    # I
    .param p2, "receiver"    # Lcom/android/internal/os/IResultReceiver;
    .param p3, "activityToken"    # Landroid/os/IBinder;

    .prologue
    const/4 v2, 0x0

    .line 15912
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v6

    const-wide/16 v8, 0x7d0

    move-object v0, p0

    move v1, p1

    move-object v3, v2

    move-object v4, p2

    move-object v5, p3

    move-object v7, v2

    invoke-direct/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;Lcom/android/internal/os/IResultReceiver;Landroid/os/IBinder;ILandroid/os/Bundle;J)Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    move-result-object v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public requestBugReport()V
    .locals 2

    .prologue
    .line 15740
    const-string v0, "android.permission.DUMP"

    const-string/jumbo v1, "requestBugReport"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 15741
    const-string/jumbo v0, "ctl.start"

    const-string v1, "bugreport"

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 15742
    return-void
.end method

.method requestPssAllProcsLocked(JZZ)V
    .locals 9
    .param p1, "now"    # J
    .param p3, "always"    # Z
    .param p4, "memLowered"    # Z

    .prologue
    const/4 v1, 0x1

    .line 25515
    if-nez p3, :cond_1

    .line 25516
    iget-wide v2, p0, Lcom/android/server/am/ActivityManagerService;->mLastFullPssTime:J

    if-eqz p4, :cond_0

    const v0, 0x1d4c0

    :goto_0
    int-to-long v4, v0

    add-long/2addr v2, v4

    cmp-long v0, p1, v2

    if-gez v0, :cond_1

    .line 25543
    :goto_1
    return-void

    .line 25516
    :cond_0
    const v0, 0x927c0

    goto :goto_0

    .line 25522
    :cond_1
    iput-wide p1, p0, Lcom/android/server/am/ActivityManagerService;->mLastFullPssTime:J

    .line 25523
    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mFullPssPending:Z

    .line 25524
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->ensureCapacity(I)V

    .line 25525
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    .line 25526
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v7, v0, -0x1

    .local v7, "i":I
    :goto_2
    if-ltz v7, :cond_6

    .line 25527
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ProcessRecord;

    .line 25528
    .local v6, "app":Lcom/android/server/am/ProcessRecord;
    iget-object v0, v6, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v0, :cond_2

    iget v0, v6, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v2, -0x1

    if-ne v0, v2, :cond_3

    .line 25526
    :cond_2
    :goto_3
    add-int/lit8 v7, v7, -0x1

    goto :goto_2

    .line 25532
    :cond_3
    if-nez p4, :cond_4

    iget-wide v2, v6, Lcom/android/server/am/ProcessRecord;->lastStateTime:J

    const-wide/32 v4, 0x927c0

    add-long/2addr v2, v4

    cmp-long v0, p1, v2

    if-lez v0, :cond_2

    .line 25533
    :cond_4
    iget v0, v6, Lcom/android/server/am/ProcessRecord;->curProcState:I

    if-gez v0, :cond_5

    .line 25534
    const-string v0, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "curProcState is lower than PROCESS_STATE_PERSISTENT : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 25536
    :cond_5
    iget v0, v6, Lcom/android/server/am/ProcessRecord;->setProcState:I

    iput v0, v6, Lcom/android/server/am/ProcessRecord;->pssProcState:I

    .line 25537
    iget v0, v6, Lcom/android/server/am/ProcessRecord;->curProcState:I

    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->isSleeping()Z

    move-result v3

    move-wide v4, p1

    invoke-static/range {v0 .. v5}, Lcom/android/server/am/ProcessList;->computeNextPssTime(IZZZJ)J

    move-result-wide v2

    iput-wide v2, v6, Lcom/android/server/am/ProcessRecord;->nextPssTime:J

    .line 25539
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_3

    .line 25542
    .end local v6    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_6
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    goto :goto_1
.end method

.method requestPssLocked(Lcom/android/server/am/ProcessRecord;I)V
    .locals 2
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "procState"    # I

    .prologue
    .line 25500
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 25509
    :goto_0
    return-void

    .line 25503
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-nez v0, :cond_1

    .line 25504
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgHandler:Landroid/os/Handler;

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 25507
    :cond_1
    iput p2, p1, Lcom/android/server/am/ProcessRecord;->pssProcState:I

    .line 25508
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_0
.end method

.method public requestVisibleBehind(Landroid/os/IBinder;Z)Z
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "visible"    # Z

    .prologue
    .line 16142
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 16144
    .local v0, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 16145
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 16146
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v2, :cond_0

    .line 16147
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3, v2, p2}, Lcom/android/server/am/ActivityStackSupervisor;->requestVisibleBehindLocked(Lcom/android/server/am/ActivityRecord;Z)Z

    move-result v3

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 16152
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    :goto_0
    return v3

    .line 16149
    :cond_0
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 16150
    const/4 v3, 0x0

    .line 16152
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 16149
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 16152
    :catchall_1
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method public resizeStack(ILandroid/graphics/Rect;)V
    .locals 1
    .param p1, "stackId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    .prologue
    .line 13472
    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->resizeStack(ILandroid/graphics/Rect;Z)V

    .line 13473
    return-void
.end method

.method public resizeStack(ILandroid/graphics/Rect;Z)V
    .locals 4
    .param p1, "stackId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;
    .param p3, "forceToResize"    # Z

    .prologue
    .line 13477
    const-string v2, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v3, "resizeStack()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13479
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 13481
    .local v0, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 13482
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1, p2, p3}, Lcom/android/server/am/ActivityStackSupervisor;->resizeStackLocked(ILandroid/graphics/Rect;Z)V

    .line 13486
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStackSupervisor;->notifyResizeStack()V

    .line 13489
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13491
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13493
    return-void

    .line 13489
    :catchall_0
    move-exception v2

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 13491
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
.end method

.method public resizeTask(ILandroid/graphics/Rect;)V
    .locals 6
    .param p1, "taskId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    .prologue
    .line 12901
    const-string v3, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v4, "resizeTask()"

    invoke-virtual {p0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 12903
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 12905
    .local v0, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 12906
    :try_start_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3, p1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v2

    .line 12907
    .local v2, "task":Lcom/android/server/am/TaskRecord;
    if-nez v2, :cond_0

    .line 12908
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "resizeTask: taskId="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " not found"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12909
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 12914
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12916
    :goto_0
    return-void

    .line 12911
    :cond_0
    :try_start_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3, v2, p2}, Lcom/android/server/am/ActivityStackSupervisor;->resizeTaskLocked(Lcom/android/server/am/TaskRecord;Landroid/graphics/Rect;)V

    .line 12912
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 12914
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 12912
    .end local v2    # "task":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v3

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 12914
    :catchall_1
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method public restart()V
    .locals 4

    .prologue
    .line 16503
    const-string v2, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_0

    .line 16505
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 16509
    :cond_0
    const-string v2, "ActivityManager"

    const-string v3, "Sending shutdown broadcast..."

    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 16511
    new-instance v0, Lcom/android/server/am/ActivityManagerService$17;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$17;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 16523
    .local v0, "br":Landroid/content/BroadcastReceiver;
    new-instance v1, Landroid/content/Intent;

    const-string v2, "android.intent.action.ACTION_SHUTDOWN"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 16524
    .local v1, "intent":Landroid/content/Intent;
    const/high16 v2, 0x10000000

    invoke-virtual {v1, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 16525
    const-string v2, "android.intent.extra.SHUTDOWN_USERSPACE_ONLY"

    const/4 v3, 0x1

    invoke-virtual {v1, v2, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 16530
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0, v2, v1}, Landroid/content/BroadcastReceiver;->onReceive(Landroid/content/Context;Landroid/content/Intent;)V

    .line 16531
    return-void
.end method

.method public resumeAppSwitches()V
    .locals 2

    .prologue
    .line 15556
    const-string v0, "android.permission.STOP_APP_SWITCHES"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_0

    .line 15558
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.STOP_APP_SWITCHES"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 15562
    :cond_0
    monitor-enter p0

    .line 15566
    const-wide/16 v0, 0x0

    :try_start_0
    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppSwitchesAllowedTime:J

    .line 15567
    monitor-exit p0

    .line 15568
    return-void

    .line 15567
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method protected final resumedAppForMARsLocked()Lcom/android/server/am/ActivityRecord;
    .locals 1

    .prologue
    .line 29800
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->resumedAppLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    return-object v0
.end method

.method public revokeUriPermission(Landroid/app/IApplicationThread;Landroid/net/Uri;II)V
    .locals 6
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "uri"    # Landroid/net/Uri;
    .param p3, "modeFlags"    # I
    .param p4, "userId"    # I

    .prologue
    .line 11974
    const-string/jumbo v3, "revokeUriPermission"

    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 11975
    monitor-enter p0

    .line 11976
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    .line 11977
    .local v2, "r":Lcom/android/server/am/ProcessRecord;
    if-nez v2, :cond_0

    .line 11978
    new-instance v3, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Unable to find app for caller "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " when revoking permission to uri "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 12000
    .end local v2    # "r":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v3

    .line 11982
    .restart local v2    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_0
    if-nez p2, :cond_1

    .line 11983
    :try_start_1
    const-string v3, "ActivityManager"

    const-string/jumbo v4, "revokeUriPermission: null uri"

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11984
    monitor-exit p0

    .line 12001
    :goto_0
    return-void

    .line 11987
    :cond_1
    invoke-static {p3}, Landroid/content/Intent;->isAccessUriMode(I)Z

    move-result v3

    if-nez v3, :cond_2

    .line 11988
    monitor-exit p0

    goto :goto_0

    .line 11991
    :cond_2
    invoke-virtual {p2}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v0

    .line 11992
    .local v0, "authority":Ljava/lang/String;
    invoke-direct {p0, v0, p4}, Lcom/android/server/am/ActivityManagerService;->getProviderInfoLocked(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;

    move-result-object v1

    .line 11993
    .local v1, "pi":Landroid/content/pm/ProviderInfo;
    if-nez v1, :cond_3

    .line 11994
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "No content provider found for permission revoke: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {p2}, Landroid/net/Uri;->toSafeString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11996
    monitor-exit p0

    goto :goto_0

    .line 11999
    :cond_3
    iget v3, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    new-instance v4, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v5, 0x0

    invoke-direct {v4, p4, p2, v5}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-direct {p0, v3, v4, p3}, Lcom/android/server/am/ActivityManagerService;->revokeUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;I)V

    .line 12000
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0
.end method

.method public revokeUriPermissionFromOwner(Landroid/os/IBinder;Landroid/net/Uri;II)V
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "uri"    # Landroid/net/Uri;
    .param p3, "mode"    # I
    .param p4, "userId"    # I

    .prologue
    .line 12108
    monitor-enter p0

    .line 12109
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/UriPermissionOwner;->fromExternalToken(Landroid/os/IBinder;)Lcom/android/server/am/UriPermissionOwner;

    move-result-object v0

    .line 12110
    .local v0, "owner":Lcom/android/server/am/UriPermissionOwner;
    if-nez v0, :cond_0

    .line 12111
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unknown owner: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 12119
    .end local v0    # "owner":Lcom/android/server/am/UriPermissionOwner;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 12114
    .restart local v0    # "owner":Lcom/android/server/am/UriPermissionOwner;
    :cond_0
    if-nez p2, :cond_1

    .line 12115
    :try_start_1
    invoke-virtual {v0, p3}, Lcom/android/server/am/UriPermissionOwner;->removeUriPermissionsLocked(I)V

    .line 12119
    :goto_0
    monitor-exit p0

    .line 12120
    return-void

    .line 12117
    :cond_1
    new-instance v1, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v2, 0x0

    invoke-direct {v1, p4, p2, v2}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-virtual {v0, v1, p3}, Lcom/android/server/am/UriPermissionOwner;->removeUriPermissionLocked(Lcom/android/server/am/ActivityManagerService$GrantUri;I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0
.end method

.method final scheduleAppGcLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 6
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 25689
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    .line 25690
    .local v0, "now":J
    iget-wide v2, p1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    const-wide/32 v4, 0xea60

    add-long/2addr v2, v4

    cmp-long v2, v2, v0

    if-lez v2, :cond_1

    .line 25697
    :cond_0
    :goto_0
    return-void

    .line 25693
    :cond_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v2, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_0

    .line 25694
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->addProcessToGcListLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 25695
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V

    goto :goto_0
.end method

.method final scheduleAppGcsLocked()V
    .locals 10

    .prologue
    const/4 v8, 0x5

    .line 25638
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v6, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 25640
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v6

    if-lez v6, :cond_1

    .line 25642
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    const/4 v7, 0x0

    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 25643
    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v6, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    .line 25645
    .local v0, "msg":Landroid/os/Message;
    iget-wide v6, v1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    const-wide/32 v8, 0xea60

    add-long v4, v6, v8

    .line 25646
    .local v4, "when":J
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    .line 25647
    .local v2, "now":J
    sget v6, Lcom/android/server/am/ActivityManagerService;->GC_TIMEOUT:I

    int-to-long v6, v6

    add-long/2addr v6, v2

    cmp-long v6, v4, v6

    if-gez v6, :cond_0

    .line 25648
    sget v6, Lcom/android/server/am/ActivityManagerService;->GC_TIMEOUT:I

    int-to-long v6, v6

    add-long v4, v2, v6

    .line 25650
    :cond_0
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v6, v0, v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageAtTime(Landroid/os/Message;J)Z

    .line 25652
    .end local v0    # "msg":Landroid/os/Message;
    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v2    # "now":J
    .end local v4    # "when":J
    :cond_1
    return-void
.end method

.method final scheduleSetMultiWindowStyle(Lcom/android/server/am/ActivityRecord;Lcom/samsung/android/multiwindow/MultiWindowStyle;)V
    .locals 4
    .param p1, "r"    # Lcom/android/server/am/ActivityRecord;
    .param p2, "style"    # Lcom/samsung/android/multiwindow/MultiWindowStyle;

    .prologue
    .line 25656
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0x2bc

    invoke-virtual {v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    .line 25657
    .local v0, "msg":Landroid/os/Message;
    new-instance v1, Landroid/util/Pair;

    invoke-direct {v1, p1, p2}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    .line 25658
    .local v1, "obj":Landroid/util/Pair;, "Landroid/util/Pair<Lcom/android/server/am/ActivityRecord;Lcom/samsung/android/multiwindow/MultiWindowStyle;>;"
    iput-object v1, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 25659
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v2, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 25660
    return-void
.end method

.method scheduleStartProfilesLocked()V
    .locals 4

    .prologue
    const/16 v2, 0x28

    .line 27884
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->hasMessages(I)Z

    move-result v0

    if-nez v0, :cond_0

    .line 27885
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v1

    const-wide/16 v2, 0x3e8

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 27888
    :cond_0
    return-void
.end method

.method sendContinueUserSwitchLocked(Lcom/android/server/am/UserState;II)V
    .locals 3
    .param p1, "uss"    # Lcom/android/server/am/UserState;
    .param p2, "oldUserId"    # I
    .param p3, "newUserId"    # I

    .prologue
    .line 27791
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurUserSwitchCallback:Ljava/lang/Object;

    .line 27792
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x24

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 27793
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v2, 0x23

    invoke-virtual {v1, v2, p2, p3, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 27795
    return-void
.end method

.method sendPendingBroadcastsLocked(Lcom/android/server/am/ProcessRecord;)Z
    .locals 6
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 22425
    const/4 v1, 0x0

    .line 22426
    .local v1, "didSomething":Z
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .local v0, "arr$":[Lcom/android/server/am/BroadcastQueue;
    array-length v3, v0

    .local v3, "len$":I
    const/4 v2, 0x0

    .local v2, "i$":I
    :goto_0
    if-ge v2, v3, :cond_0

    aget-object v4, v0, v2

    .line 22427
    .local v4, "queue":Lcom/android/server/am/BroadcastQueue;
    invoke-virtual {v4, p1}, Lcom/android/server/am/BroadcastQueue;->sendPendingBroadcastsLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v5

    or-int/2addr v1, v5

    .line 22426
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 22429
    .end local v4    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_0
    return v1
.end method

.method sendUserSwitchBroadcastsLocked(II)V
    .locals 41
    .param p1, "oldUserId"    # I
    .param p2, "newUserId"    # I

    .prologue
    .line 27693
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v38

    .line 27696
    .local v38, "ident":J
    if-ltz p1, :cond_0

    .line 27698
    :try_start_0
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    const/4 v3, 0x0

    move/from16 v0, p1

    invoke-virtual {v2, v0, v3}, Lcom/android/server/pm/UserManagerService;->getProfiles(IZ)Ljava/util/List;

    move-result-object v40

    .line 27699
    .local v40, "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-interface/range {v40 .. v40}, Ljava/util/List;->size()I

    move-result v36

    .line 27700
    .local v36, "count":I
    const/16 v37, 0x0

    .local v37, "i":I
    :goto_0
    move/from16 v0, v37

    move/from16 v1, v36

    if-ge v0, v1, :cond_0

    .line 27701
    move-object/from16 v0, v40

    move/from16 v1, v37

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/UserInfo;

    iget v0, v2, Landroid/content/pm/UserInfo;->id:I

    move/from16 v18, v0

    .line 27702
    .local v18, "profileUserId":I
    new-instance v5, Landroid/content/Intent;

    const-string v2, "android.intent.action.USER_BACKGROUND"

    invoke-direct {v5, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 27703
    .local v5, "intent":Landroid/content/Intent;
    const/high16 v2, 0x50000000

    invoke-virtual {v5, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 27705
    const-string v2, "android.intent.extra.user_handle"

    move/from16 v0, v18

    invoke-virtual {v5, v2, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 27706
    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, -0x1

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    sget v16, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v17, 0x3e8

    move-object/from16 v2, p0

    invoke-direct/range {v2 .. v18}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 27700
    add-int/lit8 v37, v37, 0x1

    goto :goto_0

    .line 27711
    .end local v5    # "intent":Landroid/content/Intent;
    .end local v18    # "profileUserId":I
    .end local v36    # "count":I
    .end local v37    # "i":I
    .end local v40    # "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    :cond_0
    if-ltz p2, :cond_2

    .line 27713
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    const/4 v3, 0x0

    move/from16 v0, p2

    invoke-virtual {v2, v0, v3}, Lcom/android/server/pm/UserManagerService;->getProfiles(IZ)Ljava/util/List;

    move-result-object v40

    .line 27714
    .restart local v40    # "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-interface/range {v40 .. v40}, Ljava/util/List;->size()I

    move-result v36

    .line 27715
    .restart local v36    # "count":I
    const/16 v37, 0x0

    .restart local v37    # "i":I
    :goto_1
    move/from16 v0, v37

    move/from16 v1, v36

    if-ge v0, v1, :cond_1

    .line 27716
    move-object/from16 v0, v40

    move/from16 v1, v37

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/UserInfo;

    iget v0, v2, Landroid/content/pm/UserInfo;->id:I

    move/from16 v18, v0

    .line 27717
    .restart local v18    # "profileUserId":I
    new-instance v5, Landroid/content/Intent;

    const-string v2, "android.intent.action.USER_FOREGROUND"

    invoke-direct {v5, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 27718
    .restart local v5    # "intent":Landroid/content/Intent;
    const/high16 v2, 0x50000000

    invoke-virtual {v5, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 27720
    const-string v2, "android.intent.extra.user_handle"

    move/from16 v0, v18

    invoke-virtual {v5, v2, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 27721
    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, -0x1

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    sget v16, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v17, 0x3e8

    move-object/from16 v2, p0

    invoke-direct/range {v2 .. v18}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 27715
    add-int/lit8 v37, v37, 0x1

    goto :goto_1

    .line 27725
    .end local v5    # "intent":Landroid/content/Intent;
    .end local v18    # "profileUserId":I
    :cond_1
    new-instance v5, Landroid/content/Intent;

    const-string v2, "android.intent.action.USER_SWITCHED"

    invoke-direct {v5, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 27726
    .restart local v5    # "intent":Landroid/content/Intent;
    const/high16 v2, 0x50000000

    invoke-virtual {v5, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 27728
    const-string v2, "android.intent.extra.user_handle"

    move/from16 v0, p2

    invoke-virtual {v5, v2, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 27729
    const/16 v20, 0x0

    const/16 v21, 0x0

    const/16 v23, 0x0

    const/16 v24, 0x0

    const/16 v25, 0x0

    const/16 v26, 0x0

    const/16 v27, 0x0

    const/4 v2, 0x1

    new-array v0, v2, [Ljava/lang/String;

    move-object/from16 v28, v0

    const/4 v2, 0x0

    const-string v3, "android.permission.MANAGE_USERS"

    aput-object v3, v28, v2

    const/16 v29, -0x1

    const/16 v30, 0x0

    const/16 v31, 0x0

    const/16 v32, 0x0

    sget v33, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v34, 0x3e8

    const/16 v35, -0x1

    move-object/from16 v19, p0

    move-object/from16 v22, v5

    invoke-direct/range {v19 .. v35}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 27734
    const/4 v2, -0x1

    move/from16 v0, p1

    if-eq v0, v2, :cond_2

    .line 27735
    new-instance v5, Landroid/content/Intent;

    .end local v5    # "intent":Landroid/content/Intent;
    const-string v2, "com.samsung.USER_FOREGROUND_MEDIASCAN_LAUNCH"

    invoke-direct {v5, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 27736
    .restart local v5    # "intent":Landroid/content/Intent;
    const/16 v20, 0x0

    const/16 v21, 0x0

    const/16 v23, 0x0

    const/16 v24, 0x0

    const/16 v25, 0x0

    const/16 v26, 0x0

    const/16 v27, 0x0

    const/16 v28, 0x0

    const/16 v29, -0x1

    const/16 v30, 0x0

    const/16 v31, 0x0

    const/16 v32, 0x0

    sget v33, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v34, 0x3e8

    move-object/from16 v19, p0

    move-object/from16 v22, v5

    move/from16 v35, p2

    invoke-direct/range {v19 .. v35}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 27742
    .end local v5    # "intent":Landroid/content/Intent;
    .end local v36    # "count":I
    .end local v37    # "i":I
    .end local v40    # "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    :cond_2
    invoke-static/range {v38 .. v39}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 27744
    return-void

    .line 27742
    :catchall_0
    move-exception v2

    invoke-static/range {v38 .. v39}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
.end method

.method public serviceDoneExecuting(Landroid/os/IBinder;III)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "type"    # I
    .param p3, "startId"    # I
    .param p4, "res"    # I

    .prologue
    .line 22205
    monitor-enter p0

    .line 22206
    :try_start_0
    instance-of v0, p1, Lcom/android/server/am/ServiceRecord;

    if-nez v0, :cond_0

    .line 22207
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "serviceDoneExecuting: Invalid service token="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 22208
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Invalid service token"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 22211
    .end local p1    # "token":Landroid/os/IBinder;
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    .line 22210
    .restart local p1    # "token":Landroid/os/IBinder;
    :cond_0
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    check-cast p1, Lcom/android/server/am/ServiceRecord;

    .end local p1    # "token":Landroid/os/IBinder;
    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/am/ActiveServices;->serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;III)V

    .line 22211
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 22212
    return-void
.end method

.method public setActivityController(Landroid/app/IActivityController;)V
    .locals 2
    .param p1, "controller"    # Landroid/app/IActivityController;

    .prologue
    .line 15705
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    const-string/jumbo v1, "setActivityController()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 15707
    monitor-enter p0

    .line 15708
    :try_start_0
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 15709
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v0

    invoke-virtual {v0, p1}, Lcom/android/server/Watchdog;->setActivityController(Landroid/app/IActivityController;)V

    .line 15710
    monitor-exit p0

    .line 15711
    return-void

    .line 15710
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public setActivitySwitchBooster(ZZZLjava/lang/String;)V
    .locals 9
    .param p1, "bFroce"    # Z
    .param p2, "bSet"    # Z
    .param p3, "ishomeActivity"    # Z
    .param p4, "pkgName"    # Ljava/lang/String;

    .prologue
    const-wide/16 v4, 0x0

    .line 28377
    const-string v0, "com.android.server.telecom"

    invoke-virtual {v0, p4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_0

    const-string v0, "com.sec.android.app.camera"

    invoke-virtual {v0, p4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 28378
    :cond_0
    const-string v0, "EXEC_ACTIVITY"

    invoke-static {v0, p4}, Landroid/os/DVFSHelper;->sendCommandToSsrm(Ljava/lang/String;Ljava/lang/String;)V

    .line 28381
    :cond_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelper:Landroid/os/DVFSHelper;

    if-nez v0, :cond_2

    .line 28382
    new-instance v0, Landroid/os/DVFSHelper;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string v2, "ACTIVITY_RESUME_BOOSTER"

    const/16 v3, 0xc

    invoke-direct/range {v0 .. v5}, Landroid/os/DVFSHelper;-><init>(Landroid/content/Context;Ljava/lang/String;IJ)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelper:Landroid/os/DVFSHelper;

    .line 28383
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelper:Landroid/os/DVFSHelper;

    const-string v1, "ActivityManager_resume"

    invoke-virtual {v0, v1}, Landroid/os/DVFSHelper;->addExtraOptionsByDefaultPolicy(Ljava/lang/String;)V

    .line 28386
    :cond_2
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperForGPU:Landroid/os/DVFSHelper;

    if-nez v0, :cond_3

    .line 28387
    new-instance v0, Landroid/os/DVFSHelper;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string v2, "ACTIVITY_RESUME_BOOSTER"

    const/16 v3, 0x10

    invoke-direct/range {v0 .. v5}, Landroid/os/DVFSHelper;-><init>(Landroid/content/Context;Ljava/lang/String;IJ)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperForGPU:Landroid/os/DVFSHelper;

    .line 28388
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperForGPU:Landroid/os/DVFSHelper;

    const-string v1, "ActivityManager_resume"

    invoke-virtual {v0, v1}, Landroid/os/DVFSHelper;->addExtraOptionsByDefaultPolicy(Ljava/lang/String;)V

    .line 28391
    :cond_3
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperForBUS:Landroid/os/DVFSHelper;

    if-nez v0, :cond_4

    .line 28392
    new-instance v0, Landroid/os/DVFSHelper;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string v2, "ACTIVITY_RESUME_BOOSTER"

    const/16 v3, 0x13

    invoke-direct/range {v0 .. v5}, Landroid/os/DVFSHelper;-><init>(Landroid/content/Context;Ljava/lang/String;IJ)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperForBUS:Landroid/os/DVFSHelper;

    .line 28393
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperForBUS:Landroid/os/DVFSHelper;

    const-string v1, "ActivityManager_resume"

    invoke-virtual {v0, v1}, Landroid/os/DVFSHelper;->addExtraOptionsByDefaultPolicy(Ljava/lang/String;)V

    .line 28396
    :cond_4
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperForCore:Landroid/os/DVFSHelper;

    if-nez v0, :cond_5

    .line 28397
    new-instance v0, Landroid/os/DVFSHelper;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string v2, "ACTIVITY_RESUME_BOOSTER"

    const/16 v3, 0xe

    invoke-direct/range {v0 .. v5}, Landroid/os/DVFSHelper;-><init>(Landroid/content/Context;Ljava/lang/String;IJ)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperForCore:Landroid/os/DVFSHelper;

    .line 28398
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperForCore:Landroid/os/DVFSHelper;

    const-string v1, "ActivityManager_resume"

    invoke-virtual {v0, v1}, Landroid/os/DVFSHelper;->addExtraOptionsByDefaultPolicy(Ljava/lang/String;)V

    .line 28401
    :cond_5
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelper:Landroid/os/DVFSHelper;

    invoke-virtual {v0}, Landroid/os/DVFSHelper;->getSupportedCPUFrequency()[I

    move-result-object v0

    if-nez v0, :cond_7

    .line 28465
    :cond_6
    :goto_0
    return-void

    .line 28406
    :cond_7
    sget v6, Lcom/android/server/am/ActivityManagerService;->ACTIVITY_RESUME_BOOSTER_TIMEOUT:I

    .line 28416
    .local v6, "dvfsDisableTime":I
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mIsCommingFromLockScreenPath:Z

    if-eqz v0, :cond_8

    .line 28417
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mIsCommingFromLockScreenPath:Z

    goto :goto_0

    .line 28421
    :cond_8
    if-nez p1, :cond_9

    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->bActivityBoosterOn:Z

    if-eq v0, p2, :cond_6

    .line 28422
    :cond_9
    iput-boolean p2, p0, Lcom/android/server/am/ActivityManagerService;->bActivityBoosterOn:Z

    .line 28428
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x3e7

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 28429
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->bActivityBoosterOn:Z

    if-eqz v0, :cond_b

    .line 28430
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x3e7

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v8

    .line 28431
    .local v8, "nmsg":Landroid/os/Message;
    if-eqz p3, :cond_a

    .line 28432
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-wide/16 v2, 0x1f4

    invoke-virtual {v0, v8, v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 28436
    :goto_1
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-eqz v0, :cond_6

    .line 28437
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mDvfsHelperLock:Ljava/lang/Object;

    monitor-enter v1
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 28438
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelper:Landroid/os/DVFSHelper;

    invoke-virtual {v0}, Landroid/os/DVFSHelper;->acquire()V

    .line 28439
    const/4 v0, 0x1

    sput v0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperTailRun:I

    .line 28440
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperForGPU:Landroid/os/DVFSHelper;

    invoke-virtual {v0}, Landroid/os/DVFSHelper;->acquire()V

    .line 28441
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperForBUS:Landroid/os/DVFSHelper;

    invoke-virtual {v0}, Landroid/os/DVFSHelper;->acquire()V

    .line 28442
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperForCore:Landroid/os/DVFSHelper;

    invoke-virtual {v0}, Landroid/os/DVFSHelper;->acquire()V

    .line 28443
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 28444
    :try_start_2
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelper:Landroid/os/DVFSHelper;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string v2, "AMS_RESUME_BOOST_CSTATE"

    const/4 v3, 0x1

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/DVFSHelper;->onActivityResumeEvent(Landroid/content/Context;Ljava/lang/String;I)V

    .line 28445
    const-string v0, "ActivityManager"

    const-string/jumbo v1, "mDVFSHelper.acquire()"

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 28462
    .end local v8    # "nmsg":Landroid/os/Message;
    :catch_0
    move-exception v0

    goto :goto_0

    .line 28434
    .restart local v8    # "nmsg":Landroid/os/Message;
    :cond_a
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    int-to-long v2, v6

    invoke-virtual {v0, v8, v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    goto :goto_1

    .line 28443
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v0

    .line 28449
    .end local v8    # "nmsg":Landroid/os/Message;
    :cond_b
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x3c

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 28450
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x3c

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v7

    .line 28451
    .local v7, "msg":Landroid/os/Message;
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v0, v7}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 28453
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mDvfsHelperLock:Ljava/lang/Object;

    monitor-enter v1
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0

    .line 28454
    :try_start_5
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelper:Landroid/os/DVFSHelper;

    invoke-virtual {v0}, Landroid/os/DVFSHelper;->release()V

    .line 28455
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperForGPU:Landroid/os/DVFSHelper;

    invoke-virtual {v0}, Landroid/os/DVFSHelper;->release()V

    .line 28456
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperForBUS:Landroid/os/DVFSHelper;

    invoke-virtual {v0}, Landroid/os/DVFSHelper;->release()V

    .line 28457
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelperForCore:Landroid/os/DVFSHelper;

    invoke-virtual {v0}, Landroid/os/DVFSHelper;->release()V

    .line 28458
    monitor-exit v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 28459
    :try_start_6
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDVFSHelper:Landroid/os/DVFSHelper;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string v2, "AMS_RESUME_BOOST_CSTATE"

    const/4 v3, 0x2

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/DVFSHelper;->onActivityResumeEvent(Landroid/content/Context;Ljava/lang/String;I)V

    .line 28460
    const-string v0, "ActivityManager"

    const-string/jumbo v1, "mDVFSHelper.release()"

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_0

    goto/16 :goto_0

    .line 28458
    :catchall_1
    move-exception v0

    :try_start_7
    monitor-exit v1
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    :try_start_8
    throw v0
    :try_end_8
    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_8} :catch_0
.end method

.method public setAlwaysFinish(Z)V
    .locals 3
    .param p1, "enabled"    # Z

    .prologue
    .line 15686
    if-eqz p1, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRestrictionPolicy:Landroid/app/enterprise/RestrictionPolicy;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRestrictionPolicy:Landroid/app/enterprise/RestrictionPolicy;

    invoke-virtual {v0}, Landroid/app/enterprise/RestrictionPolicy;->isKillingActivitiesOnLeaveAllowed()Z

    move-result v0

    if-nez v0, :cond_0

    .line 15701
    :goto_0
    return-void

    .line 15691
    :cond_0
    const-string v0, "android.permission.SET_ALWAYS_FINISH"

    const-string/jumbo v1, "setAlwaysFinish()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 15694
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string v2, "always_finish_activities"

    if-eqz p1, :cond_1

    const/4 v0, 0x1

    :goto_1
    invoke-static {v1, v2, v0}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 15698
    monitor-enter p0

    .line 15699
    :try_start_0
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    .line 15700
    monitor-exit p0

    goto :goto_0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    .line 15694
    :cond_1
    const/4 v0, 0x0

    goto :goto_1
.end method

.method public setAppLockedUnLockPackage(Ljava/lang/String;)V
    .locals 4
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    .line 29814
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 29815
    .local v0, "callerUid":I
    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->isSystemUid(I)Z

    move-result v1

    if-nez v1, :cond_0

    .line 29816
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " cannot call setAppLockedUnLockPackage("

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ")"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 29818
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

    if-eqz v1, :cond_1

    .line 29819
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

    invoke-virtual {v1, p1}, Lcom/android/internal/app/AppLockPolicy;->setAppLockedUnLockPackage(Ljava/lang/String;)V

    .line 29821
    :cond_1
    return-void
.end method

.method public setAppLockedVerifying(Ljava/lang/String;Z)V
    .locals 4
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "verifying"    # Z

    .prologue
    .line 29864
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 29865
    .local v0, "callerUid":I
    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->isSystemUid(I)Z

    move-result v1

    if-nez v1, :cond_0

    invoke-direct {p0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->isCallerSetSelf(ILjava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_0

    .line 29866
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " is not system uid or the packageNmae is not itself\'s"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 29868
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

    if-eqz v1, :cond_1

    .line 29869
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppLockPolicy:Lcom/android/internal/app/AppLockPolicy;

    invoke-virtual {v1, p1, p2}, Lcom/android/internal/app/AppLockPolicy;->setAppLockedVerifying(Ljava/lang/String;Z)V

    .line 29871
    :cond_1
    return-void
.end method

.method public setBackWindowShown(Z)V
    .locals 0
    .param p1, "show"    # Z

    .prologue
    .line 15404
    return-void
.end method

.method setBackWindowShownLocked(ZI)V
    .locals 1
    .param p1, "show"    # Z
    .param p2, "displayId"    # I

    .prologue
    .line 15407
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mIsBackWindowShown:Z

    if-eq v0, p1, :cond_0

    .line 15408
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mIsBackWindowShown:Z

    .line 15409
    iput p2, p0, Lcom/android/server/am/ActivityManagerService;->mBackWindowDisplayId:I

    .line 15411
    :cond_0
    return-void
.end method

.method public setCustomImage(Landroid/os/IBinder;Landroid/os/ParcelFileDescriptor;I)Z
    .locals 8
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "fd"    # Landroid/os/ParcelFileDescriptor;
    .param p3, "rotation"    # I

    .prologue
    .line 29958
    const/4 v1, 0x0

    .line 29959
    .local v1, "r":Lcom/android/server/am/ActivityRecord;
    const/4 v2, 0x0

    .line 29960
    .local v2, "result":Z
    monitor-enter p0

    .line 29961
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v1

    .line 29962
    monitor-exit p0

    .line 29964
    if-nez v1, :cond_0

    move v3, v2

    .line 29977
    .end local v2    # "result":Z
    .local v3, "result":I
    :goto_0
    return v3

    .line 29962
    .end local v3    # "result":I
    .restart local v2    # "result":Z
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v4

    .line 29969
    :cond_0
    :try_start_1
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-object v6, v1, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget v7, v1, Lcom/android/server/am/ActivityRecord;->userId:I

    if-eqz p2, :cond_2

    invoke-virtual {p2}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;

    move-result-object v4

    :goto_1
    invoke-virtual {v5, v6, v7, v4, p3}, Lcom/android/server/wm/WindowManagerService;->setCustomImage(Landroid/content/pm/ActivityInfo;ILjava/io/FileDescriptor;I)Z

    move-result v2

    .line 29970
    if-eqz p2, :cond_1

    .line 29971
    invoke-virtual {p2}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0

    :cond_1
    :goto_2
    move v3, v2

    .line 29977
    .restart local v3    # "result":I
    goto :goto_0

    .line 29969
    .end local v3    # "result":I
    :cond_2
    const/4 v4, 0x0

    goto :goto_1

    .line 29973
    :catch_0
    move-exception v0

    .line 29974
    .local v0, "e":Ljava/io/IOException;
    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_2
.end method

.method public setCustomImageForPackage(Landroid/content/ComponentName;ILandroid/os/ParcelFileDescriptor;I)Z
    .locals 7
    .param p1, "component"    # Landroid/content/ComponentName;
    .param p2, "taskUserId"    # I
    .param p3, "fd"    # Landroid/os/ParcelFileDescriptor;
    .param p4, "rotation"    # I

    .prologue
    .line 29981
    const/4 v2, 0x0

    .line 29983
    .local v2, "result":Z
    const/4 v1, 0x0

    .line 29986
    .local v1, "info":Landroid/content/pm/ActivityInfo;
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    const/16 v5, 0x80

    const/4 v6, 0x0

    invoke-interface {v4, p1, v5, v6}, Landroid/content/pm/IPackageManager;->getActivityInfo(Landroid/content/ComponentName;II)Landroid/content/pm/ActivityInfo;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    .line 29991
    if-nez v1, :cond_0

    move v3, v2

    .line 30004
    .end local v2    # "result":Z
    .local v3, "result":I
    :goto_0
    return v3

    .line 29987
    .end local v3    # "result":I
    .restart local v2    # "result":Z
    :catch_0
    move-exception v0

    .local v0, "e":Landroid/os/RemoteException;
    move v3, v2

    .line 29988
    .restart local v3    # "result":I
    goto :goto_0

    .line 29996
    .end local v0    # "e":Landroid/os/RemoteException;
    .end local v3    # "result":I
    :cond_0
    :try_start_1
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz p3, :cond_2

    invoke-virtual {p3}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;

    move-result-object v4

    :goto_1
    invoke-virtual {v5, v1, p2, v4, p4}, Lcom/android/server/wm/WindowManagerService;->setCustomImage(Landroid/content/pm/ActivityInfo;ILjava/io/FileDescriptor;I)Z

    move-result v2

    .line 29997
    if-eqz p3, :cond_1

    .line 29998
    invoke-virtual {p3}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_1

    :cond_1
    :goto_2
    move v3, v2

    .line 30004
    .restart local v3    # "result":I
    goto :goto_0

    .line 29996
    .end local v3    # "result":I
    :cond_2
    const/4 v4, 0x0

    goto :goto_1

    .line 30000
    :catch_1
    move-exception v0

    .line 30001
    .local v0, "e":Ljava/io/IOException;
    invoke-virtual {v0}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_2
.end method

.method public setDebugApp(Ljava/lang/String;ZZ)V
    .locals 13
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "waitForDebugger"    # Z
    .param p3, "persistent"    # Z

    .prologue
    .line 15610
    const-string v0, "android.permission.SET_DEBUG_APP"

    const-string/jumbo v1, "setDebugApp()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 15613
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v10

    .line 15618
    .local v10, "ident":J
    if-eqz p3, :cond_0

    .line 15619
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v12

    .line 15620
    .local v12, "resolver":Landroid/content/ContentResolver;
    const-string/jumbo v0, "debug_app"

    invoke-static {v12, v0, p1}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    .line 15623
    const-string/jumbo v1, "wait_for_debugger"

    if-eqz p2, :cond_3

    const/4 v0, 0x1

    :goto_0
    invoke-static {v12, v1, v0}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 15628
    .end local v12    # "resolver":Landroid/content/ContentResolver;
    :cond_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 15629
    if-nez p3, :cond_1

    .line 15630
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    .line 15631
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    .line 15633
    :cond_1
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 15634
    iput-boolean p2, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 15635
    if-nez p3, :cond_4

    const/4 v0, 0x1

    :goto_1
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    .line 15636
    if-eqz p1, :cond_2

    .line 15637
    const/4 v2, -0x1

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x1

    const/4 v6, 0x1

    const/4 v7, 0x0

    const/4 v8, -0x1

    const-string/jumbo v9, "set debug app"

    move-object v0, p0

    move-object v1, p1

    invoke-direct/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 15640
    :cond_2
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 15642
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 15644
    return-void

    .line 15623
    .restart local v12    # "resolver":Landroid/content/ContentResolver;
    :cond_3
    const/4 v0, 0x0

    goto :goto_0

    .line 15635
    .end local v12    # "resolver":Landroid/content/ContentResolver;
    :cond_4
    const/4 v0, 0x0

    goto :goto_1

    .line 15640
    :catchall_0
    move-exception v0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 15642
    :catchall_1
    move-exception v0

    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0
.end method

.method public setDumpHeapDebugLimit(Ljava/lang/String;IJLjava/lang/String;)V
    .locals 5
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .param p3, "maxMemSize"    # J
    .param p5, "reportPackage"    # Ljava/lang/String;

    .prologue
    .line 27256
    if-eqz p1, :cond_0

    .line 27257
    const-string v1, "android.permission.SET_DEBUG_APP"

    const-string/jumbo v2, "setDumpHeapDebugLimit()"

    invoke-virtual {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 27278
    :goto_0
    monitor-enter p0

    .line 27279
    const-wide/16 v2, 0x0

    cmp-long v1, p3, v2

    if-lez v1, :cond_4

    .line 27280
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    new-instance v2, Landroid/util/Pair;

    invoke-static {p3, p4}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v3

    invoke-direct {v2, v3, p5}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    invoke-virtual {v1, p1, p2, v2}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    .line 27288
    :goto_1
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 27289
    return-void

    .line 27260
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v2

    .line 27261
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-virtual {v1, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 27262
    .local v0, "proc":Lcom/android/server/am/ProcessRecord;
    if-nez v0, :cond_1

    .line 27263
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "No process found for calling pid "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v1, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 27276
    .end local v0    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v1

    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v1

    .line 27266
    .restart local v0    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_1
    :try_start_2
    sget-boolean v1, Landroid/os/Build;->IS_DEBUGGABLE:Z

    if-nez v1, :cond_2

    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_2

    .line 27268
    new-instance v1, Ljava/lang/SecurityException;

    const-string v3, "Not running a debuggable build"

    invoke-direct {v1, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 27270
    :cond_2
    iget-object p1, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 27271
    iget p2, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 27272
    if-eqz p5, :cond_3

    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v1, p5}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_3

    .line 27273
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Package "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " is not running in "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v1, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 27276
    :cond_3
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto/16 :goto_0

    .line 27282
    .end local v0    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_4
    if-eqz p2, :cond_5

    .line 27283
    :try_start_3
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v1, p1, p2}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)Ljava/lang/Object;

    goto/16 :goto_1

    .line 27288
    :catchall_1
    move-exception v1

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v1

    .line 27285
    :cond_5
    :try_start_4
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMemWatchProcesses:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v1}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v1

    invoke-virtual {v1, p1}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    goto/16 :goto_1
.end method

.method final setFocusedActivityLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)V
    .locals 1
    .param p1, "r"    # Lcom/android/server/am/ActivityRecord;
    .param p2, "reason"    # Ljava/lang/String;

    .prologue
    .line 4159
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0, p2}, Lcom/android/server/am/ActivityManagerService;->setFocusedActivityLocked(Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;)V

    .line 4160
    return-void
.end method

.method final setFocusedActivityLocked(Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;)V
    .locals 29
    .param p1, "r"    # Lcom/android/server/am/ActivityRecord;
    .param p2, "forceUpdate"    # Z
    .param p3, "reason"    # Ljava/lang/String;

    .prologue
    .line 4164
    if-eqz p1, :cond_0

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    move-object/from16 v1, p1

    if-ne v0, v1, :cond_1

    if-nez p2, :cond_1

    .line 4373
    :cond_0
    :goto_0
    const/16 v25, 0x755b

    const/16 v24, 0x2

    move/from16 v0, v24

    new-array v0, v0, [Ljava/lang/Object;

    move-object/from16 v26, v0

    const/16 v27, 0x0

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v24, v0

    if-nez v24, :cond_23

    const/16 v24, -0x1

    :goto_1
    invoke-static/range {v24 .. v24}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v24

    aput-object v24, v26, v27

    const/16 v27, 0x1

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v24, v0

    if-nez v24, :cond_24

    const-string v24, "NULL"

    :goto_2
    aput-object v24, v26, v27

    invoke-static/range {v25 .. v26}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 4376
    :goto_3
    return-void

    .line 4167
    :cond_1
    move-object/from16 v0, p0

    iget-object v12, v0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    .line 4170
    .local v12, "last":Lcom/android/server/am/ActivityRecord;
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mApplicationPolicy:Landroid/app/enterprise/ApplicationPolicy;

    move-object/from16 v24, v0

    if-eqz v24, :cond_3

    .line 4171
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v24, v0

    if-eqz v24, :cond_2

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mApplicationPolicy:Landroid/app/enterprise/ApplicationPolicy;

    move-object/from16 v24, v0

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    move-object/from16 v25, v0

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    iget v0, v0, Lcom/android/server/am/ActivityRecord;->userId:I

    move/from16 v26, v0

    invoke-virtual/range {v24 .. v26}, Landroid/app/enterprise/ApplicationPolicy;->isApplicationFocusMonitoredAsUser(Ljava/lang/String;I)Z

    move-result v24

    if-eqz v24, :cond_2

    .line 4172
    new-instance v9, Landroid/content/Intent;

    const-string v24, "com.samsung.edm.intent.action.APPLICATION_FOCUS_CHANGE"

    move-object/from16 v0, v24

    invoke-direct {v9, v0}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 4173
    .local v9, "intent2":Landroid/content/Intent;
    const-string v24, "application_focus_component_name"

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    move-object/from16 v25, v0

    invoke-virtual/range {v25 .. v25}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v25

    invoke-virtual/range {v25 .. v25}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v25

    move-object/from16 v0, v24

    move-object/from16 v1, v25

    invoke-virtual {v9, v0, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 4175
    const-string v24, "application_focus_status"

    const-string/jumbo v25, "lost"

    move-object/from16 v0, v24

    move-object/from16 v1, v25

    invoke-virtual {v9, v0, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 4177
    const-string/jumbo v24, "user_id"

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget v0, v0, Lcom/android/server/am/ActivityRecord;->userId:I

    move/from16 v25, v0

    move-object/from16 v0, v24

    move/from16 v1, v25

    invoke-virtual {v9, v0, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 4178
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v16

    .line 4179
    .local v16, "origId":J
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    move-object/from16 v24, v0

    sget-object v25, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    const-string v26, "android.permission.sec.MDM_APP_MGMT"

    move-object/from16 v0, v24

    move-object/from16 v1, v25

    move-object/from16 v2, v26

    invoke-virtual {v0, v9, v1, v2}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;)V

    .line 4181
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4183
    .end local v9    # "intent2":Landroid/content/Intent;
    .end local v16    # "origId":J
    :cond_2
    if-eqz p1, :cond_3

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mApplicationPolicy:Landroid/app/enterprise/ApplicationPolicy;

    move-object/from16 v24, v0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    move-object/from16 v25, v0

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ActivityRecord;->userId:I

    move/from16 v26, v0

    invoke-virtual/range {v24 .. v26}, Landroid/app/enterprise/ApplicationPolicy;->isApplicationFocusMonitoredAsUser(Ljava/lang/String;I)Z

    move-result v24

    if-eqz v24, :cond_3

    .line 4184
    new-instance v8, Landroid/content/Intent;

    const-string v24, "com.samsung.edm.intent.action.APPLICATION_FOCUS_CHANGE"

    move-object/from16 v0, v24

    invoke-direct {v8, v0}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 4185
    .local v8, "intent1":Landroid/content/Intent;
    const-string v24, "application_focus_component_name"

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    move-object/from16 v25, v0

    invoke-virtual/range {v25 .. v25}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v25

    invoke-virtual/range {v25 .. v25}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v25

    move-object/from16 v0, v24

    move-object/from16 v1, v25

    invoke-virtual {v8, v0, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 4187
    const-string v24, "application_focus_status"

    const-string/jumbo v25, "gained"

    move-object/from16 v0, v24

    move-object/from16 v1, v25

    invoke-virtual {v8, v0, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 4189
    const-string/jumbo v24, "user_id"

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ActivityRecord;->userId:I

    move/from16 v25, v0

    move-object/from16 v0, v24

    move/from16 v1, v25

    invoke-virtual {v8, v0, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 4190
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v16

    .line 4191
    .restart local v16    # "origId":J
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    move-object/from16 v24, v0

    sget-object v25, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    const-string v26, "android.permission.sec.MDM_APP_MGMT"

    move-object/from16 v0, v24

    move-object/from16 v1, v25

    move-object/from16 v2, v26

    invoke-virtual {v0, v8, v1, v2}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;)V

    .line 4193
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4200
    .end local v8    # "intent1":Landroid/content/Intent;
    .end local v16    # "origId":J
    :cond_3
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v24, v0

    if-eqz v24, :cond_4

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v24, v0

    invoke-virtual/range {v24 .. v24}, Lcom/android/server/am/ActivityRecord;->isVRActivity()Z

    move-result v24

    if-eqz v24, :cond_4

    if-eqz p1, :cond_4

    move-object/from16 v0, p1

    iget-boolean v0, v0, Lcom/android/server/am/ActivityRecord;->launchedBehindVRApp:Z

    move/from16 v24, v0

    if-eqz v24, :cond_4

    .line 4202
    const-string v24, "ActivityManager"

    new-instance v25, Ljava/lang/StringBuilder;

    invoke-direct/range {v25 .. v25}, Ljava/lang/StringBuilder;-><init>()V

    const-string v26, "Keep focus to VR activity "

    invoke-virtual/range {v25 .. v26}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v25

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v26, v0

    invoke-virtual/range {v25 .. v26}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v25

    invoke-virtual/range {v25 .. v25}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v25

    invoke-static/range {v24 .. v25}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_3

    .line 4210
    :cond_4
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v24, v0

    if-eqz v24, :cond_a

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v24, v0

    if-eqz v24, :cond_a

    if-eqz p1, :cond_a

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v24, v0

    if-eqz v24, :cond_a

    .line 4212
    const/4 v14, 0x1

    .line 4213
    .local v14, "notifyReason":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    move-object/from16 v24, v0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    move-object/from16 v25, v0

    move-object/from16 v0, v24

    move-object/from16 v1, v25

    if-ne v0, v1, :cond_5

    if-eqz p2, :cond_6

    .line 4214
    :cond_5
    or-int/lit8 v14, v14, 0x2

    .line 4216
    :cond_6
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v24, v0

    invoke-virtual/range {v24 .. v24}, Lcom/android/server/am/ActivityStackSupervisor;->getStacks()Ljava/util/ArrayList;

    move-result-object v21

    .line 4217
    .local v21, "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityStack;>;"
    invoke-virtual/range {v21 .. v21}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v7

    .local v7, "i$":Ljava/util/Iterator;
    :cond_7
    :goto_4
    invoke-interface {v7}, Ljava/util/Iterator;->hasNext()Z

    move-result v24

    if-eqz v24, :cond_9

    invoke-interface {v7}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v20

    check-cast v20, Lcom/android/server/am/ActivityStack;

    .line 4218
    .local v20, "stack":Lcom/android/server/am/ActivityStack;
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    move-object/from16 v1, v20

    if-eq v0, v1, :cond_7

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    move-object/from16 v1, v20

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityStackSupervisor;->isFrontStack(Lcom/android/server/am/ActivityStack;)Z

    move-result v24

    if-eqz v24, :cond_7

    .line 4219
    const/16 v24, 0x0

    move-object/from16 v0, v20

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Lcom/android/server/am/ActivityRecord;)Lcom/android/server/am/ActivityRecord;

    move-result-object v22

    .line 4220
    .local v22, "target":Lcom/android/server/am/ActivityRecord;
    if-eqz v22, :cond_8

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v25, v0

    move-object/from16 v0, v24

    move-object/from16 v1, v25

    if-ne v0, v1, :cond_8

    .line 4221
    const/16 v24, 0x0

    const/16 v25, 0x1

    move-object/from16 v0, v20

    move-object/from16 v1, v22

    move/from16 v2, v24

    move/from16 v3, v25

    invoke-virtual {v0, v1, v14, v2, v3}, Lcom/android/server/am/ActivityStack;->notifyMultiWindowFocusChangedLocked(Lcom/android/server/am/ActivityRecord;IZZ)V

    goto :goto_4

    .line 4223
    :cond_8
    const/16 v24, 0x0

    move-object/from16 v0, v20

    move-object/from16 v1, v22

    move/from16 v2, v24

    invoke-virtual {v0, v1, v14, v2}, Lcom/android/server/am/ActivityStack;->notifyMultiWindowFocusChangedLocked(Lcom/android/server/am/ActivityRecord;IZ)V

    goto :goto_4

    .line 4227
    .end local v20    # "stack":Lcom/android/server/am/ActivityStack;
    .end local v22    # "target":Lcom/android/server/am/ActivityRecord;
    :cond_9
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    move-object/from16 v24, v0

    const/16 v25, 0x1

    move-object/from16 v0, v24

    move-object/from16 v1, p1

    move/from16 v2, v25

    invoke-virtual {v0, v1, v14, v2}, Lcom/android/server/am/ActivityStack;->notifyMultiWindowFocusChangedLocked(Lcom/android/server/am/ActivityRecord;IZ)V

    .line 4230
    .end local v7    # "i$":Ljava/util/Iterator;
    .end local v14    # "notifyReason":I
    .end local v21    # "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityStack;>;"
    :cond_a
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v24, v0

    invoke-virtual/range {v24 .. v24}, Lcom/android/server/am/ActivityStackSupervisor;->topRunningActivityLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v15

    .line 4233
    .local v15, "prevTop":Lcom/android/server/am/ActivityRecord;
    move-object/from16 v0, p1

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    .line 4234
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v24, v0

    if-eqz v24, :cond_12

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/server/am/TaskRecord;->taskType:I

    move/from16 v24, v0

    const/16 v25, 0x1

    move/from16 v0, v24

    move/from16 v1, v25

    if-eq v0, v1, :cond_12

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/server/am/TaskRecord;->taskType:I

    move/from16 v24, v0

    const/16 v25, 0x2

    move/from16 v0, v24

    move/from16 v1, v25

    if-eq v0, v1, :cond_12

    .line 4236
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    move-object/from16 v24, v0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->appTimeTracker:Lcom/android/server/am/AppTimeTracker;

    move-object/from16 v25, v0

    move-object/from16 v0, v24

    move-object/from16 v1, v25

    if-eq v0, v1, :cond_11

    .line 4238
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    move-object/from16 v24, v0

    if-eqz v24, :cond_b

    .line 4239
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    move-object/from16 v24, v0

    invoke-virtual/range {v24 .. v24}, Lcom/android/server/am/AppTimeTracker;->stop()V

    .line 4240
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v24, v0

    const/16 v25, 0x37

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    move-object/from16 v26, v0

    invoke-virtual/range {v24 .. v26}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Landroid/os/Message;->sendToTarget()V

    .line 4242
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v24, v0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->appTimeTracker:Lcom/android/server/am/AppTimeTracker;

    move-object/from16 v25, v0

    invoke-virtual/range {v24 .. v25}, Lcom/android/server/am/ActivityStackSupervisor;->clearOtherAppTimeTrackers(Lcom/android/server/am/AppTimeTracker;)V

    .line 4243
    const/16 v24, 0x0

    move-object/from16 v0, v24

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    .line 4245
    :cond_b
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->appTimeTracker:Lcom/android/server/am/AppTimeTracker;

    move-object/from16 v24, v0

    if-eqz v24, :cond_c

    .line 4246
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->appTimeTracker:Lcom/android/server/am/AppTimeTracker;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    .line 4247
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->startTimeTrackingFocusedActivityLocked()V

    .line 4260
    :cond_c
    :goto_5
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v24, v0

    if-eqz v24, :cond_13

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->voiceInteractor:Lcom/android/internal/app/IVoiceInteractor;

    move-object/from16 v24, v0

    if-eqz v24, :cond_13

    .line 4261
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->voiceSession:Landroid/service/voice/IVoiceInteractionSession;

    move-object/from16 v24, v0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v25, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v24

    move/from16 v2, v25

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->startRunningVoiceLocked(Landroid/service/voice/IVoiceInteractionSession;I)V

    .line 4272
    :cond_d
    :goto_6
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v24, v0

    new-instance v25, Ljava/lang/StringBuilder;

    invoke-direct/range {v25 .. v25}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v25

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v25

    const-string v26, " setFocusedActivity"

    invoke-virtual/range {v25 .. v26}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v25

    invoke-virtual/range {v25 .. v25}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v25

    move-object/from16 v0, v24

    move-object/from16 v1, p1

    move-object/from16 v2, v25

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ActivityStackSupervisor;->setFocusedStack(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)Z

    move-result v24

    if-eqz v24, :cond_e

    .line 4273
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    move-object/from16 v24, v0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    move-object/from16 v25, v0

    const/16 v26, 0x1

    invoke-virtual/range {v24 .. v26}, Lcom/android/server/wm/WindowManagerService;->setFocusedApp(Landroid/os/IBinder;Z)V

    .line 4275
    :cond_e
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->applyUpdateLockStateLocked(Lcom/android/server/am/ActivityRecord;)V

    .line 4276
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/server/am/ActivityRecord;->userId:I

    move/from16 v24, v0

    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastFocusedUserId:I

    move/from16 v25, v0

    move/from16 v0, v24

    move/from16 v1, v25

    if-eq v0, v1, :cond_f

    .line 4277
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v24, v0

    const/16 v25, 0x35

    invoke-virtual/range {v24 .. v25}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 4278
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v24, v0

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v25, v0

    const/16 v26, 0x35

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget v0, v0, Lcom/android/server/am/ActivityRecord;->userId:I

    move/from16 v27, v0

    const/16 v28, 0x0

    invoke-virtual/range {v25 .. v28}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v25

    invoke-virtual/range {v24 .. v25}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 4280
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/server/am/ActivityRecord;->userId:I

    move/from16 v24, v0

    move/from16 v0, v24

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/server/am/ActivityManagerService;->mLastFocusedUserId:I

    .line 4284
    :cond_f
    if-eqz p1, :cond_0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v24, v0

    if-eqz v24, :cond_0

    .line 4285
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    move-object/from16 v24, v0

    invoke-virtual/range {v24 .. v24}, Lcom/android/server/am/ActivityStack;->getGlobalTaskHistoryLocked()Ljava/util/ArrayList;

    move-result-object v5

    .line 4286
    .local v5, "globalTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/TaskRecord;>;"
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v4

    .line 4287
    .local v4, "N":I
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v24, v0

    invoke-virtual/range {v24 .. v24}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isSplit()Z

    move-result v24

    if-eqz v24, :cond_1f

    .line 4288
    const/4 v13, -0x1

    .line 4289
    .local v13, "normalIndex":I
    const/4 v11, -0x1

    .line 4290
    .local v11, "isolatedIndex":I
    const/4 v10, 0x0

    .line 4291
    .local v10, "isForground":Z
    add-int/lit8 v6, v4, -0x1

    .local v6, "i":I
    :goto_7
    if-ltz v6, :cond_15

    .line 4292
    invoke-virtual {v5, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v23

    check-cast v23, Lcom/android/server/am/TaskRecord;

    .line 4293
    .local v23, "tr":Lcom/android/server/am/TaskRecord;
    invoke-virtual/range {v23 .. v23}, Lcom/android/server/am/TaskRecord;->getTopActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v24

    if-nez v24, :cond_14

    .line 4291
    :cond_10
    add-int/lit8 v6, v6, -0x1

    goto :goto_7

    .line 4250
    .end local v4    # "N":I
    .end local v5    # "globalTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/TaskRecord;>;"
    .end local v6    # "i":I
    .end local v10    # "isForground":Z
    .end local v11    # "isolatedIndex":I
    .end local v13    # "normalIndex":I
    .end local v23    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_11
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->startTimeTrackingFocusedActivityLocked()V

    goto/16 :goto_5

    .line 4253
    :cond_12
    const/16 v24, 0x0

    move-object/from16 v0, v24

    move-object/from16 v1, p1

    iput-object v0, v1, Lcom/android/server/am/ActivityRecord;->appTimeTracker:Lcom/android/server/am/AppTimeTracker;

    goto/16 :goto_5

    .line 4263
    :cond_13
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->finishRunningVoiceLocked()V

    .line 4264
    if-eqz v12, :cond_d

    iget-object v0, v12, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->voiceSession:Landroid/service/voice/IVoiceInteractionSession;

    move-object/from16 v24, v0

    if-eqz v24, :cond_d

    .line 4269
    iget-object v0, v12, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->voiceSession:Landroid/service/voice/IVoiceInteractionSession;

    move-object/from16 v24, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V

    goto/16 :goto_6

    .line 4296
    .restart local v4    # "N":I
    .restart local v5    # "globalTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/TaskRecord;>;"
    .restart local v6    # "i":I
    .restart local v10    # "isForground":Z
    .restart local v11    # "isolatedIndex":I
    .restart local v13    # "normalIndex":I
    .restart local v23    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_14
    invoke-virtual/range {v23 .. v23}, Lcom/android/server/am/TaskRecord;->getTopActivityMultiWindowStyle()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isNormal()Z

    move-result v24

    if-eqz v24, :cond_10

    .line 4297
    move v13, v6

    .line 4302
    .end local v23    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_15
    const/4 v6, 0x0

    :goto_8
    if-ge v6, v4, :cond_18

    .line 4303
    invoke-virtual {v5, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v23

    check-cast v23, Lcom/android/server/am/TaskRecord;

    .line 4304
    .restart local v23    # "tr":Lcom/android/server/am/TaskRecord;
    if-nez v10, :cond_16

    .line 4305
    invoke-virtual/range {v23 .. v23}, Lcom/android/server/am/TaskRecord;->isHomeTask()Z

    move-result v10

    .line 4307
    :cond_16
    if-eqz v10, :cond_1b

    invoke-virtual/range {v23 .. v23}, Lcom/android/server/am/TaskRecord;->getTopActivityMultiWindowStyle()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v24

    const/16 v25, 0x1000

    invoke-virtual/range {v24 .. v25}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v24

    if-nez v24, :cond_17

    move-object/from16 v0, v23

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->mActivities:Ljava/util/ArrayList;

    move-object/from16 v24, v0

    invoke-virtual/range {v24 .. v24}, Ljava/util/ArrayList;->size()I

    move-result v24

    if-lez v24, :cond_1b

    move-object/from16 v0, v23

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->mActivities:Ljava/util/ArrayList;

    move-object/from16 v24, v0

    const/16 v25, 0x0

    invoke-virtual/range {v24 .. v25}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v24

    check-cast v24, Lcom/android/server/am/ActivityRecord;

    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/server/am/ActivityRecord;->isolatedBaseCouple:I

    move/from16 v24, v0

    sget v25, Lcom/android/server/am/ActivityRecord;->ISOLATED_BASE:I

    move/from16 v0, v24

    move/from16 v1, v25

    if-ne v0, v1, :cond_1b

    .line 4310
    :cond_17
    move v11, v6

    .line 4315
    .end local v23    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_18
    const/16 v24, -0x1

    move/from16 v0, v24

    if-eq v11, v0, :cond_19

    .line 4316
    move v13, v11

    .line 4319
    :cond_19
    if-ltz v13, :cond_1e

    .line 4320
    new-instance v19, Ljava/util/ArrayList;

    invoke-direct/range {v19 .. v19}, Ljava/util/ArrayList;-><init>()V

    .line 4321
    .local v19, "sameZoneTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/TaskRecord;>;"
    move v6, v13

    :goto_9
    if-ge v6, v4, :cond_1c

    .line 4322
    invoke-virtual {v5, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v23

    check-cast v23, Lcom/android/server/am/TaskRecord;

    .line 4323
    .restart local v23    # "tr":Lcom/android/server/am/TaskRecord;
    invoke-virtual/range {v23 .. v23}, Lcom/android/server/am/TaskRecord;->getTopActivityMultiWindowStyle()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getZone()I

    move-result v24

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v25, v0

    invoke-virtual/range {v25 .. v25}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getZone()I

    move-result v25

    move/from16 v0, v24

    move/from16 v1, v25

    if-ne v0, v1, :cond_1a

    .line 4324
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    move-object/from16 v24, v0

    move-object/from16 v0, v23

    iget v0, v0, Lcom/android/server/am/TaskRecord;->taskId:I

    move/from16 v25, v0

    const/16 v26, 0x1

    invoke-virtual/range {v24 .. v26}, Lcom/android/server/wm/WindowManagerService;->moveTaskToTop(IZ)V

    .line 4325
    move-object/from16 v0, v19

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 4321
    :cond_1a
    add-int/lit8 v6, v6, 0x1

    goto :goto_9

    .line 4302
    .end local v19    # "sameZoneTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/TaskRecord;>;"
    :cond_1b
    add-int/lit8 v6, v6, 0x1

    goto/16 :goto_8

    .line 4328
    .end local v23    # "tr":Lcom/android/server/am/TaskRecord;
    .restart local v19    # "sameZoneTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/TaskRecord;>;"
    :cond_1c
    move-object/from16 v0, v19

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->removeAll(Ljava/util/Collection;)Z

    .line 4329
    invoke-virtual/range {v19 .. v19}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v7

    .restart local v7    # "i$":Ljava/util/Iterator;
    :goto_a
    invoke-interface {v7}, Ljava/util/Iterator;->hasNext()Z

    move-result v24

    if-eqz v24, :cond_1d

    invoke-interface {v7}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v23

    check-cast v23, Lcom/android/server/am/TaskRecord;

    .line 4330
    .restart local v23    # "tr":Lcom/android/server/am/TaskRecord;
    move-object/from16 v0, v23

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/am/ActivityStack;->mActivityContainer:Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;->insertGlobalTaskAtTop(Lcom/android/server/am/TaskRecord;)V

    .line 4331
    invoke-virtual/range {v23 .. v23}, Lcom/android/server/am/TaskRecord;->touchActiveTime()V

    goto :goto_a

    .line 4334
    .end local v23    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_1d
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    move-object/from16 v24, v0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v25, v0

    invoke-virtual/range {v24 .. v25}, Lcom/android/server/am/RecentTasks;->addLocked(Lcom/android/server/am/TaskRecord;)V

    .line 4335
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v24, v0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget v0, v0, Lcom/android/server/am/ActivityStack;->mDisplayId:I

    move/from16 v25, v0

    invoke-virtual/range {v24 .. v25}, Lcom/android/server/am/ActivityStackSupervisor;->arrangeTaskToReturnTo(I)V

    .line 4369
    .end local v6    # "i":I
    .end local v7    # "i$":Ljava/util/Iterator;
    .end local v10    # "isForground":Z
    .end local v11    # "isolatedIndex":I
    .end local v13    # "normalIndex":I
    .end local v19    # "sameZoneTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/TaskRecord;>;"
    :cond_1e
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v24, v0

    const/16 v25, 0x0

    invoke-virtual/range {v24 .. v25}, Lcom/android/server/am/ActivityStackSupervisor;->updateCascadeHiddenFlag(Z)V

    goto/16 :goto_0

    .line 4337
    :cond_1f
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v24, v0

    invoke-virtual/range {v24 .. v24}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v24

    if-eqz v24, :cond_1e

    .line 4338
    if-eqz v15, :cond_20

    iget-object v0, v15, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v25, v0

    move-object/from16 v0, v24

    move-object/from16 v1, v25

    if-eq v0, v1, :cond_20

    .line 4339
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    move-object/from16 v24, v0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget v0, v0, Lcom/android/server/am/TaskRecord;->taskId:I

    move/from16 v25, v0

    const/16 v26, 0x1

    invoke-virtual/range {v24 .. v26}, Lcom/android/server/wm/WindowManagerService;->moveTaskToTop(IZ)V

    .line 4340
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/am/ActivityStack;->mActivityContainer:Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;

    move-object/from16 v24, v0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v25, v0

    invoke-virtual/range {v24 .. v25}, Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;->moveGlobalTaskToTop(Lcom/android/server/am/TaskRecord;)V

    .line 4341
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v24, v0

    invoke-virtual/range {v24 .. v24}, Lcom/android/server/am/TaskRecord;->touchActiveTime()V

    .line 4346
    :cond_20
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    move-object/from16 v24, v0

    if-eqz v24, :cond_1e

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    move-object/from16 v24, v0

    invoke-virtual/range {v24 .. v24}, Lcom/android/server/am/ActivityStack;->getAllTasks()Ljava/util/ArrayList;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/util/ArrayList;->size()I

    move-result v24

    const/16 v25, 0x1

    move/from16 v0, v24

    move/from16 v1, v25

    if-le v0, v1, :cond_1e

    .line 4347
    new-instance v18, Ljava/util/ArrayList;

    invoke-direct/range {v18 .. v18}, Ljava/util/ArrayList;-><init>()V

    .line 4348
    .local v18, "sameStackTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/TaskRecord;>;"
    const/4 v6, 0x0

    .restart local v6    # "i":I
    :goto_b
    if-ge v6, v4, :cond_22

    .line 4349
    invoke-virtual {v5, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v23

    check-cast v23, Lcom/android/server/am/TaskRecord;

    .line 4350
    .restart local v23    # "tr":Lcom/android/server/am/TaskRecord;
    move-object/from16 v0, v23

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    move-object/from16 v24, v0

    invoke-virtual/range {v24 .. v24}, Lcom/android/server/am/ActivityStack;->getStackId()I

    move-result v24

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    move-object/from16 v25, v0

    invoke-virtual/range {v25 .. v25}, Lcom/android/server/am/ActivityStack;->getStackId()I

    move-result v25

    move/from16 v0, v24

    move/from16 v1, v25

    if-ne v0, v1, :cond_21

    .line 4351
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    move-object/from16 v24, v0

    move-object/from16 v0, v23

    iget v0, v0, Lcom/android/server/am/TaskRecord;->taskId:I

    move/from16 v25, v0

    const/16 v26, 0x1

    invoke-virtual/range {v24 .. v26}, Lcom/android/server/wm/WindowManagerService;->moveTaskToTop(IZ)V

    .line 4352
    move-object/from16 v0, v18

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 4348
    :cond_21
    add-int/lit8 v6, v6, 0x1

    goto :goto_b

    .line 4355
    .end local v23    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_22
    move-object/from16 v0, v18

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->removeAll(Ljava/util/Collection;)Z

    .line 4356
    invoke-virtual/range {v18 .. v18}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v7

    .restart local v7    # "i$":Ljava/util/Iterator;
    :goto_c
    invoke-interface {v7}, Ljava/util/Iterator;->hasNext()Z

    move-result v24

    if-eqz v24, :cond_1e

    invoke-interface {v7}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v23

    check-cast v23, Lcom/android/server/am/TaskRecord;

    .line 4357
    .restart local v23    # "tr":Lcom/android/server/am/TaskRecord;
    move-object/from16 v0, v23

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/am/ActivityStack;->mActivityContainer:Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;->insertGlobalTaskAtTop(Lcom/android/server/am/TaskRecord;)V

    .line 4358
    invoke-virtual/range {v23 .. v23}, Lcom/android/server/am/TaskRecord;->touchActiveTime()V

    goto :goto_c

    .line 4373
    .end local v4    # "N":I
    .end local v5    # "globalTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/TaskRecord;>;"
    .end local v6    # "i":I
    .end local v7    # "i$":Ljava/util/Iterator;
    .end local v12    # "last":Lcom/android/server/am/ActivityRecord;
    .end local v15    # "prevTop":Lcom/android/server/am/ActivityRecord;
    .end local v18    # "sameStackTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/TaskRecord;>;"
    .end local v23    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_23
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/server/am/ActivityRecord;->userId:I

    move/from16 v24, v0

    goto/16 :goto_1

    :cond_24
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    move-object/from16 v24, v0

    goto/16 :goto_2
.end method

.method public setFocusedStack(I)V
    .locals 1
    .param p1, "stackId"    # I

    .prologue
    .line 4406
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->setFocusedStack(IZ)V

    .line 4407
    return-void
.end method

.method public setFocusedStack(IZ)V
    .locals 7
    .param p1, "stackId"    # I
    .param p2, "tapOutSide"    # Z

    .prologue
    const/4 v6, 0x2

    .line 4413
    monitor-enter p0

    .line 4414
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4, p1}, Lcom/android/server/am/ActivityStackSupervisor;->getStack(I)Lcom/android/server/am/ActivityStack;

    move-result-object v3

    .line 4415
    .local v3, "stack":Lcom/android/server/am/ActivityStack;
    const/4 v1, 0x0

    .line 4418
    .local v1, "needMoveTaskToFront":Z
    if-eqz v3, :cond_3

    .line 4428
    const/4 v4, 0x0

    const/4 v5, 0x1

    invoke-virtual {v3, v4, v5}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Lcom/android/server/am/ActivityRecord;Z)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 4429
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz p2, :cond_1

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4, v3}, Lcom/android/server/am/ActivityStackSupervisor;->isFrontStack(Lcom/android/server/am/ActivityStack;)Z

    move-result v4

    if-nez v4, :cond_1

    .line 4430
    if-eqz v2, :cond_0

    iget-object v4, v2, Lcom/android/server/am/ActivityRecord;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    const/4 v5, 0x4

    invoke-virtual {v4, v5}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 4431
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-object v5, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget v5, v5, Lcom/android/server/am/TaskRecord;->taskId:I

    invoke-virtual {v4, v5, p2}, Lcom/android/server/wm/WindowManagerService;->moveTaskToTop(IZ)V

    .line 4432
    iget-object v4, v3, Lcom/android/server/am/ActivityStack;->mActivityContainer:Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;

    iget-object v5, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;->moveGlobalTaskToTop(Lcom/android/server/am/TaskRecord;)V

    .line 4433
    monitor-exit p0

    .line 4504
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :goto_0
    return-void

    .line 4437
    .restart local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .line 4446
    .local v0, "focusedStack":Lcom/android/server/am/ActivityStack;
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4}, Lcom/android/server/am/ActivityStackSupervisor;->getNonFloatingFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v3

    .line 4448
    if-ne v0, v3, :cond_1

    .line 4449
    monitor-exit p0

    goto :goto_0

    .line 4503
    .end local v0    # "focusedStack":Lcom/android/server/am/ActivityStack;
    .end local v1    # "needMoveTaskToFront":Z
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v3    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v4

    .line 4454
    .restart local v1    # "needMoveTaskToFront":Z
    .restart local v2    # "r":Lcom/android/server/am/ActivityRecord;
    .restart local v3    # "stack":Lcom/android/server/am/ActivityStack;
    :cond_1
    if-eqz p2, :cond_3

    :try_start_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    if-eqz v4, :cond_3

    if-eqz v2, :cond_3

    iget-object v4, v2, Lcom/android/server/am/ActivityRecord;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    invoke-virtual {v4}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v4

    if-eqz v4, :cond_3

    .line 4455
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    iget-object v4, v4, Lcom/android/server/am/ActivityRecord;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    const/high16 v5, 0x4000000

    invoke-virtual {v4, v5}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v4

    if-nez v4, :cond_2

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    invoke-virtual {v4}, Lcom/android/server/am/ActivityRecord;->isRecentsActivity()Z

    move-result v4

    if-eqz v4, :cond_3

    .line 4457
    :cond_2
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "skip setting focus of activity because of recents: r ="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 4458
    monitor-exit p0

    goto :goto_0

    .line 4473
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_3
    if-eqz v3, :cond_6

    .line 4474
    const/4 v4, 0x0

    invoke-virtual {v3, v4}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Lcom/android/server/am/ActivityRecord;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 4475
    .restart local v2    # "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v2, :cond_7

    .line 4478
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    if-ne v4, v2, :cond_4

    .line 4479
    monitor-exit p0

    goto :goto_0

    .line 4482
    :cond_4
    if-eqz p2, :cond_5

    .line 4483
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    iget-object v5, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    invoke-virtual {v4, v5}, Lcom/android/server/am/RecentTasks;->addLocked(Lcom/android/server/am/TaskRecord;)V

    .line 4484
    iget-object v4, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    invoke-virtual {v4}, Lcom/android/server/am/TaskRecord;->touchActiveTime()V

    .line 4488
    :cond_5
    const-string/jumbo v4, "setFocusedStack"

    invoke-virtual {p0, v2, v4}, Lcom/android/server/am/ActivityManagerService;->setFocusedActivityLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)V

    .line 4489
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v5, 0x0

    const/4 v6, 0x0

    invoke-virtual {v4, v3, v5, v6}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked(Lcom/android/server/am/ActivityStack;Lcom/android/server/am/ActivityRecord;Landroid/os/Bundle;)Z

    .line 4503
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_6
    :goto_1
    monitor-exit p0

    goto :goto_0

    .line 4493
    .restart local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_7
    invoke-virtual {v3}, Lcom/android/server/am/ActivityStack;->topActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 4494
    if-eqz v2, :cond_6

    iget-object v4, v2, Lcom/android/server/am/ActivityRecord;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    invoke-virtual {v4}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v4

    if-ne v4, v6, :cond_6

    iget-object v4, v2, Lcom/android/server/am/ActivityRecord;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    const/4 v5, 0x2

    invoke-virtual {v4, v5}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v4

    if-eqz v4, :cond_6

    iget-object v4, v2, Lcom/android/server/am/ActivityRecord;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    const/4 v5, 0x4

    invoke-virtual {v4, v5}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v4

    if-eqz v4, :cond_6

    .line 4498
    const-string/jumbo v4, "setFocusedStack"

    invoke-virtual {p0, v2, v4}, Lcom/android/server/am/ActivityManagerService;->setFocusedActivityLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_1
.end method

.method public setFrontActivityScreenCompatMode(I)V
    .locals 2
    .param p1, "mode"    # I

    .prologue
    .line 5856
    const-string v0, "android.permission.SET_SCREEN_COMPATIBILITY"

    const-string/jumbo v1, "setFrontActivityScreenCompatMode"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 5858
    monitor-enter p0

    .line 5859
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1}, Lcom/android/server/am/CompatModePackages;->setFrontActivityScreenCompatModeLocked(I)V

    .line 5860
    monitor-exit p0

    .line 5861
    return-void

    .line 5860
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public setImmersive(Landroid/os/IBinder;Z)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "immersive"    # Z

    .prologue
    .line 16192
    monitor-enter p0

    .line 16193
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 16194
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 16195
    new-instance v1, Ljava/lang/IllegalArgumentException;

    invoke-direct {v1}, Ljava/lang/IllegalArgumentException;-><init>()V

    throw v1

    .line 16204
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 16197
    .restart local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    :try_start_1
    iput-boolean p2, v0, Lcom/android/server/am/ActivityRecord;->immersive:Z

    .line 16200
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    if-ne v0, v1, :cond_1

    .line 16202
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->applyUpdateLockStateLocked(Lcom/android/server/am/ActivityRecord;)V

    .line 16204
    :cond_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 16205
    return-void
.end method

.method public setInstaller(Lcom/android/server/pm/Installer;)V
    .locals 0
    .param p1, "installer"    # Lcom/android/server/pm/Installer;

    .prologue
    .line 3601
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mInstaller:Lcom/android/server/pm/Installer;

    .line 3602
    return-void
.end method

.method public setLockScreenShown(Z)V
    .locals 4
    .param p1, "shown"    # Z

    .prologue
    const/4 v2, 0x0

    .line 15514
    const-string v3, "android.permission.DEVICE_POWER"

    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v3

    if-eqz v3, :cond_0

    .line 15516
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires permission android.permission.DEVICE_POWER"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 15520
    :cond_0
    monitor-enter p0

    .line 15521
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v0

    .line 15525
    .local v0, "ident":J
    :try_start_1
    iget-boolean v3, p0, Lcom/android/server/am/ActivityManagerService;->mKeyguardGoingAway:Z

    if-eqz v3, :cond_1

    if-eqz p1, :cond_1

    .line 15526
    const/4 v3, 0x0

    iput-boolean v3, p0, Lcom/android/server/am/ActivityManagerService;->mKeyguardGoingAway:Z

    .line 15529
    :cond_1
    if-eqz p1, :cond_2

    const/4 v2, 0x2

    :cond_2
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    .line 15530
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateSleepIfNeededLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 15532
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 15534
    monitor-exit p0

    .line 15535
    return-void

    .line 15532
    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .line 15534
    .end local v0    # "ident":J
    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v2
.end method

.method setOpenGlTraceApp(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;)V
    .locals 4
    .param p1, "app"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "processName"    # Ljava/lang/String;

    .prologue
    .line 15647
    monitor-enter p0

    .line 15648
    :try_start_0
    const-string v1, "1"

    const-string/jumbo v2, "ro.debuggable"

    const-string v3, "0"

    invoke-static {v2, v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    .line 15649
    .local v0, "isDebuggable":Z
    if-nez v0, :cond_0

    .line 15650
    iget v1, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_0

    .line 15651
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Process not debuggable: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 15656
    .end local v0    # "isDebuggable":Z
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 15655
    .restart local v0    # "isDebuggable":Z
    :cond_0
    :try_start_1
    iput-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    .line 15656
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 15657
    return-void
.end method

.method public setPackageAskScreenCompat(Ljava/lang/String;Z)V
    .locals 2
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "ask"    # Z

    .prologue
    .line 5890
    const-string v0, "android.permission.SET_SCREEN_COMPATIBILITY"

    const-string/jumbo v1, "setPackageAskScreenCompat"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 5892
    monitor-enter p0

    .line 5893
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/CompatModePackages;->setPackageAskCompatModeLocked(Ljava/lang/String;Z)V

    .line 5894
    monitor-exit p0

    .line 5895
    return-void

    .line 5894
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public setPackageScreenCompatMode(Ljava/lang/String;I)V
    .locals 2
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "mode"    # I

    .prologue
    .line 5873
    const-string v0, "android.permission.SET_SCREEN_COMPATIBILITY"

    const-string/jumbo v1, "setPackageScreenCompatMode"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 5875
    monitor-enter p0

    .line 5876
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/CompatModePackages;->setPackageScreenCompatModeLocked(Ljava/lang/String;I)V

    .line 5877
    monitor-exit p0

    .line 5878
    return-void

    .line 5877
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public setProcessForeground(Landroid/os/IBinder;IZ)V
    .locals 1
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "pid"    # I
    .param p3, "isForeground"    # Z

    .prologue
    .line 10716
    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, p3, v0}, Lcom/android/server/am/ActivityManagerService;->setProcessForeground(Landroid/os/IBinder;IZZ)V

    .line 10717
    return-void
.end method

.method public setProcessForeground(Landroid/os/IBinder;IZZ)V
    .locals 11
    .param p1, "appToken"    # Landroid/os/IBinder;
    .param p2, "pid"    # I
    .param p3, "isForeground"    # Z
    .param p4, "isCalledByNotificationManagerService"    # Z

    .prologue
    .line 10614
    const-string v7, "android.permission.SET_PROCESS_LIMIT"

    const-string/jumbo v8, "setProcessForeground()"

    invoke-virtual {p0, v7, v8}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 10616
    monitor-enter p0

    .line 10617
    const/4 v0, 0x0

    .line 10619
    .local v0, "changed":Z
    :try_start_0
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v8
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10620
    :try_start_1
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v7, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ProcessRecord;

    .line 10621
    .local v6, "pr":Lcom/android/server/am/ProcessRecord;
    if-nez v6, :cond_0

    if-eqz p3, :cond_0

    .line 10622
    const-string v7, "ActivityManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v10, "setProcessForeground called on unknown pid: "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v7, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10623
    monitor-exit v8
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 10713
    :goto_0
    return-void

    .line 10625
    :cond_0
    :try_start_3
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    invoke-virtual {v7, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActivityManagerService$ForegroundToken;

    .line 10626
    .local v3, "oldToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    if-eqz v3, :cond_3

    .line 10627
    if-eqz p4, :cond_6

    .line 10628
    iget-object v7, v3, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->toastToken:Landroid/os/IBinder;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    if-eqz v7, :cond_1

    .line 10630
    :try_start_4
    iget-object v7, v3, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->toastToken:Landroid/os/IBinder;

    const/4 v9, 0x0

    invoke-interface {v7, v3, v9}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z
    :try_end_4
    .catch Ljava/util/NoSuchElementException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 10635
    :goto_1
    const/4 v7, 0x0

    :try_start_5
    iput-object v7, v3, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->toastToken:Landroid/os/IBinder;

    .line 10648
    :cond_1
    :goto_2
    iget-object v7, v3, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->token:Landroid/os/IBinder;

    if-nez v7, :cond_3

    iget-object v7, v3, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->toastToken:Landroid/os/IBinder;

    if-nez v7, :cond_3

    .line 10649
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    invoke-virtual {v7, p2}, Landroid/util/SparseArray;->remove(I)V

    .line 10650
    if-eqz v6, :cond_2

    .line 10651
    const/4 v7, 0x0

    iput-object v7, v6, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;

    .line 10653
    :cond_2
    const/4 v0, 0x1

    .line 10654
    const/4 v3, 0x0

    .line 10658
    :cond_3
    if-eqz p3, :cond_4

    if-eqz p1, :cond_4

    .line 10659
    const/4 v2, 0x0

    .line 10661
    .local v2, "newToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    if-nez v3, :cond_8

    .line 10662
    new-instance v2, Lcom/android/server/am/ActivityManagerService$14;

    .end local v2    # "newToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    invoke-direct {v2, p0}, Lcom/android/server/am/ActivityManagerService$14;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 10669
    .restart local v2    # "newToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    iput p2, v2, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->pid:I

    .line 10671
    if-eqz p4, :cond_7

    .line 10672
    iput-object p1, v2, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->toastToken:Landroid/os/IBinder;
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 10678
    :goto_3
    const/4 v7, 0x0

    :try_start_6
    invoke-interface {p1, v2, v7}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_3
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 10684
    :goto_4
    :try_start_7
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    invoke-virtual {v7, p2, v2}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 10685
    iput-object p1, v6, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;

    .line 10686
    const/4 v0, 0x1

    .line 10702
    .end local v2    # "newToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    :cond_4
    :goto_5
    monitor-exit v8
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    .line 10704
    if-eqz v0, :cond_5

    .line 10705
    :try_start_8
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    move-result-wide v4

    .line 10707
    .local v4, "origId":J
    :try_start_9
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    .line 10709
    :try_start_a
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10712
    .end local v4    # "origId":J
    :cond_5
    monitor-exit p0

    goto :goto_0

    .end local v3    # "oldToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    .end local v6    # "pr":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v7

    monitor-exit p0
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_0

    throw v7

    .line 10631
    .restart local v3    # "oldToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    .restart local v6    # "pr":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v1

    .line 10633
    .local v1, "e":Ljava/util/NoSuchElementException;
    :try_start_b
    const-string v7, "ActivityManager"

    const-string v9, "Fail unlinkToDeath(S_S)"

    invoke-static {v7, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 10702
    .end local v1    # "e":Ljava/util/NoSuchElementException;
    .end local v3    # "oldToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    .end local v6    # "pr":Lcom/android/server/am/ProcessRecord;
    :catchall_1
    move-exception v7

    monitor-exit v8
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_1

    :try_start_c
    throw v7
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_0

    .line 10638
    .restart local v3    # "oldToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    .restart local v6    # "pr":Lcom/android/server/am/ProcessRecord;
    :cond_6
    :try_start_d
    iget-object v7, v3, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->token:Landroid/os/IBinder;
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_1

    if-eqz v7, :cond_1

    .line 10640
    :try_start_e
    iget-object v7, v3, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->token:Landroid/os/IBinder;

    const/4 v9, 0x0

    invoke-interface {v7, v3, v9}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z
    :try_end_e
    .catch Ljava/util/NoSuchElementException; {:try_start_e .. :try_end_e} :catch_1
    .catchall {:try_start_e .. :try_end_e} :catchall_1

    .line 10644
    :goto_6
    const/4 v7, 0x0

    :try_start_f
    iput-object v7, v3, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->token:Landroid/os/IBinder;

    goto :goto_2

    .line 10641
    :catch_1
    move-exception v1

    .line 10642
    .restart local v1    # "e":Ljava/util/NoSuchElementException;
    const-string v7, "ActivityManager"

    const-string v9, "Fail unlinkToDeath(App)"

    invoke-static {v7, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_6

    .line 10674
    .end local v1    # "e":Ljava/util/NoSuchElementException;
    .restart local v2    # "newToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    :cond_7
    iput-object p1, v2, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->token:Landroid/os/IBinder;

    goto :goto_3

    .line 10688
    :cond_8
    if-eqz p4, :cond_9

    .line 10689
    iput-object p1, v3, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->toastToken:Landroid/os/IBinder;
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_1

    .line 10695
    :goto_7
    const/4 v7, 0x0

    :try_start_10
    invoke-interface {p1, v3, v7}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_10
    .catch Landroid/os/RemoteException; {:try_start_10 .. :try_end_10} :catch_2
    .catchall {:try_start_10 .. :try_end_10} :catchall_1

    goto :goto_5

    .line 10696
    :catch_2
    move-exception v7

    goto :goto_5

    .line 10691
    :cond_9
    :try_start_11
    iput-object p1, v3, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->token:Landroid/os/IBinder;
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_1

    goto :goto_7

    .line 10709
    .end local v2    # "newToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    .restart local v4    # "origId":J
    :catchall_2
    move-exception v7

    :try_start_12
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v7
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_0

    .line 10679
    .end local v4    # "origId":J
    .restart local v2    # "newToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    :catch_3
    move-exception v7

    goto :goto_4
.end method

.method public setProcessLimit(I)V
    .locals 2
    .param p1, "max"    # I

    .prologue
    .line 10566
    if-ltz p1, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRestrictionPolicy:Landroid/app/enterprise/RestrictionPolicy;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRestrictionPolicy:Landroid/app/enterprise/RestrictionPolicy;

    invoke-virtual {v0}, Landroid/app/enterprise/RestrictionPolicy;->isBackgroundProcessLimitAllowed()Z

    move-result v0

    if-nez v0, :cond_0

    .line 10583
    :goto_0
    return-void

    .line 10571
    :cond_0
    const-string v0, "android.permission.SET_PROCESS_LIMIT"

    const-string/jumbo v1, "setProcessLimit()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 10573
    monitor-enter p0

    .line 10574
    if-gez p1, :cond_2

    :try_start_0
    sget v0, Lcom/android/server/am/ProcessList;->MAX_EMPTY_APPS:I

    :goto_1
    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    .line 10575
    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessLimitOverride:I

    .line 10576
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10578
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mSmartAdjustManager:Lcom/android/server/am/SmartAdjustManager;

    if-eqz v0, :cond_1

    .line 10579
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mSmartAdjustManager:Lcom/android/server/am/SmartAdjustManager;

    invoke-virtual {v0}, Lcom/android/server/am/SmartAdjustManager;->updateProperty()V

    .line 10582
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->trimApplications()V

    goto :goto_0

    :cond_2
    move v0, p1

    .line 10574
    goto :goto_1

    .line 10576
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0
.end method

.method public setProcessMemoryTrimLevel(Ljava/lang/String;II)Z
    .locals 4
    .param p1, "process"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "level"    # I

    .prologue
    const/4 v1, 0x0

    .line 5943
    monitor-enter p0

    .line 5944
    :try_start_0
    const-string/jumbo v2, "setProcessMemoryTrimLevel"

    invoke-direct {p0, p1, p2, v2}, Lcom/android/server/am/ActivityManagerService;->findProcessLocked(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 5945
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    if-nez v0, :cond_0

    .line 5946
    monitor-exit p0

    .line 5960
    :goto_0
    return v1

    .line 5948
    :cond_0
    iget v2, v0, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    if-ge v2, p3, :cond_2

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_2

    const/16 v2, 0x14

    if-lt p3, v2, :cond_1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    const/4 v3, 0x7

    if-lt v2, v3, :cond_2

    .line 5952
    :cond_1
    :try_start_1
    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v2, p3}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V

    .line 5953
    iput p3, v0, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 5954
    const/4 v1, 0x1

    :try_start_2
    monitor-exit p0

    goto :goto_0

    .line 5959
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v1

    .line 5955
    .restart local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v2

    .line 5959
    :cond_2
    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_0
.end method

.method setProfileApp(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Landroid/app/ProfilerInfo;)V
    .locals 4
    .param p1, "app"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "processName"    # Ljava/lang/String;
    .param p3, "profilerInfo"    # Landroid/app/ProfilerInfo;

    .prologue
    .line 15660
    monitor-enter p0

    .line 15661
    :try_start_0
    const-string v1, "1"

    const-string/jumbo v2, "ro.debuggable"

    const-string v3, "0"

    invoke-static {v2, v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    .line 15662
    .local v0, "isDebuggable":Z
    if-nez v0, :cond_0

    .line 15663
    iget v1, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_0

    .line 15664
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Process not debuggable: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 15680
    .end local v0    # "isDebuggable":Z
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 15667
    .restart local v0    # "isDebuggable":Z
    :cond_0
    :try_start_1
    iput-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    .line 15668
    iget-object v1, p3, Landroid/app/ProfilerInfo;->profileFile:Ljava/lang/String;

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFile:Ljava/lang/String;

    .line 15669
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    if-eqz v1, :cond_1

    .line 15671
    :try_start_2
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v1}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 15674
    :goto_0
    const/4 v1, 0x0

    :try_start_3
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    .line 15676
    :cond_1
    iget-object v1, p3, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    .line 15677
    iget v1, p3, Landroid/app/ProfilerInfo;->samplingInterval:I

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mSamplingInterval:I

    .line 15678
    iget-boolean v1, p3, Landroid/app/ProfilerInfo;->autoStopProfiler:Z

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mAutoStopProfiler:Z

    .line 15679
    const/4 v1, 0x0

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    .line 15680
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 15681
    return-void

    .line 15672
    :catch_0
    move-exception v1

    goto :goto_0
.end method

.method public setRequestedOrientation(Landroid/os/IBinder;I)V
    .locals 7
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "requestedOrientation"    # I

    .prologue
    .line 6897
    monitor-enter p0

    .line 6898
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v1

    .line 6899
    .local v1, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v1, :cond_0

    .line 6900
    monitor-exit p0

    .line 6965
    :goto_0
    return-void

    .line 6902
    :cond_0
    iget-object v4, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    if-eqz v4, :cond_1

    iget-object v4, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-boolean v4, v4, Lcom/android/server/am/TaskRecord;->mResizeable:Z

    if-eqz v4, :cond_1

    .line 6904
    monitor-exit p0

    goto :goto_0

    .line 6964
    .end local v1    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v4

    .line 6906
    .restart local v1    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_1
    :try_start_1
    sget-boolean v4, Lcom/android/server/am/ActivityManagerDebugConfig;->SAFE_DEBUG:Z

    if-eqz v4, :cond_2

    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " request change orientation to "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 6908
    :cond_2
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 6909
    .local v2, "origId":J
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-object v5, v1, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    invoke-virtual {v4, v5, p2}, Lcom/android/server/wm/WindowManagerService;->setAppOrientation(Landroid/view/IApplicationToken;I)V

    .line 6912
    sget-boolean v4, Lcom/samsung/android/multiwindow/MultiWindowFeatures;->SELECTIVE1ORIENTATION_ENABLED:Z

    if-eqz v4, :cond_3

    .line 6914
    iget-object v4, v1, Lcom/android/server/am/ActivityRecord;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    const/4 v5, 0x1

    invoke-virtual {v4, p2, v5}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->setAppRequestOrientation(IZ)V

    .line 6915
    iget-object v4, v1, Lcom/android/server/am/ActivityRecord;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    invoke-virtual {v4}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v4

    if-eqz v4, :cond_3

    iget-object v4, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    if-eqz v4, :cond_3

    .line 6916
    iget-object v4, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v4, v4, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    const/4 v5, 0x2

    const/4 v6, 0x0

    invoke-virtual {v4, v1, v5, v6}, Lcom/android/server/am/ActivityStack;->notifyMultiWindowStyleChangedLocked(Lcom/android/server/am/ActivityRecord;IZ)V

    .line 6948
    :cond_3
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    iget-object v4, v1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v1, v4}, Lcom/android/server/am/ActivityRecord;->mayFreezeScreenLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v4

    if-eqz v4, :cond_6

    iget-object v4, v1, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    :goto_1
    invoke-virtual {v5, v6, v4}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokens(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;

    move-result-object v0

    .line 6951
    .local v0, "config":Landroid/content/res/Configuration;
    sget-boolean v4, Lcom/samsung/android/multiwindow/MultiWindowFeatures;->SELECTIVE1ORIENTATION_ENABLED:Z

    if-eqz v4, :cond_4

    if-nez v0, :cond_4

    iget-object v4, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    if-eqz v4, :cond_4

    iget-object v4, v1, Lcom/android/server/am/ActivityRecord;->multiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    invoke-virtual {v4}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v4

    if-eqz v4, :cond_4

    .line 6953
    iget-object v4, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v4, v4, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    const/4 v5, 0x0

    invoke-virtual {v4, v1, v5}, Lcom/android/server/am/ActivityStack;->ensureActivityConfigurationLocked(Lcom/android/server/am/ActivityRecord;I)Z

    .line 6956
    :cond_4
    if-eqz v0, :cond_5

    .line 6957
    const/4 v4, 0x1

    iput-boolean v4, v1, Lcom/android/server/am/ActivityRecord;->frozenBeforeDestroy:Z

    .line 6958
    const/4 v4, 0x0

    const/4 v5, 0x0

    invoke-virtual {p0, v0, v1, v4, v5}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z

    move-result v4

    if-nez v4, :cond_5

    .line 6959
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    .line 6963
    :cond_5
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6964
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto/16 :goto_0

    .line 6948
    .end local v0    # "config":Landroid/content/res/Configuration;
    :cond_6
    const/4 v4, 0x0

    goto :goto_1
.end method

.method public setSNNEnable(Z)V
    .locals 0
    .param p1, "enableSNN"    # Z

    .prologue
    .line 3626
    sput-boolean p1, Lcom/android/server/am/ActivityManagerService;->DEFERRED_Q_ENABLED:Z

    .line 3627
    return-void
.end method

.method protected setSamsungHomeComponentName(Landroid/content/ComponentName;)V
    .locals 1
    .param p1, "cn"    # Landroid/content/ComponentName;

    .prologue
    .line 29518
    monitor-enter p0

    .line 29519
    :try_start_0
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mSamsungHomeComponentName:Landroid/content/ComponentName;

    .line 29520
    monitor-exit p0

    .line 29521
    return-void

    .line 29520
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public setServiceForeground(Landroid/content/ComponentName;Landroid/os/IBinder;ILandroid/app/Notification;Z)V
    .locals 6
    .param p1, "className"    # Landroid/content/ComponentName;
    .param p2, "token"    # Landroid/os/IBinder;
    .param p3, "id"    # I
    .param p4, "notification"    # Landroid/app/Notification;
    .param p5, "removeNotification"    # Z

    .prologue
    .line 21872
    monitor-enter p0

    .line 21873
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move-object v4, p4

    move v5, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActiveServices;->setServiceForegroundLocked(Landroid/content/ComponentName;Landroid/os/IBinder;ILandroid/app/Notification;Z)V

    .line 21875
    monitor-exit p0

    .line 21876
    return-void

    .line 21875
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public setSystemProcess()V
    .locals 6

    .prologue
    .line 3210
    :try_start_0
    const-string v3, "activity"

    const/4 v4, 0x1

    invoke-static {v3, p0, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;Z)V

    .line 3211
    const-string/jumbo v3, "procstats"

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-static {v3, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 3212
    const-string/jumbo v3, "meminfo"

    new-instance v4, Lcom/android/server/am/ActivityManagerService$MemBinder;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$MemBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v3, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 3213
    const-string/jumbo v3, "gfxinfo"

    new-instance v4, Lcom/android/server/am/ActivityManagerService$GraphicsBinder;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$GraphicsBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v3, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 3214
    const-string/jumbo v3, "dbinfo"

    new-instance v4, Lcom/android/server/am/ActivityManagerService$DbBinder;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$DbBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v3, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 3222
    const-string/jumbo v3, "virtualscreen"

    new-instance v4, Lcom/android/server/am/VirtualScreenManagerService;

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v4, v5, p0}, Lcom/android/server/am/VirtualScreenManagerService;-><init>(Landroid/content/Context;Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v3, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 3226
    const-string/jumbo v3, "cpuinfo"

    new-instance v4, Lcom/android/server/am/ActivityManagerService$CpuBinder;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$CpuBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v3, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 3228
    const-string/jumbo v3, "permission"

    new-instance v4, Lcom/android/server/am/ActivityManagerService$PermissionController;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$PermissionController;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v3, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 3229
    const-string/jumbo v3, "processinfo"

    new-instance v4, Lcom/android/server/am/ActivityManagerService$ProcessInfoService;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$ProcessInfoService;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v3, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    .line 3231
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v3}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v3

    const-string v4, "android"

    const/16 v5, 0x400

    invoke-virtual {v3, v4, v5}, Landroid/content/pm/PackageManager;->getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v2

    .line 3233
    .local v2, "info":Landroid/content/pm/ApplicationInfo;
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/Class;->getClassLoader()Ljava/lang/ClassLoader;

    move-result-object v4

    invoke-virtual {v3, v2, v4}, Landroid/app/ActivityThread;->installSystemApplicationInfo(Landroid/content/pm/ApplicationInfo;Ljava/lang/ClassLoader;)V

    .line 3235
    monitor-enter p0
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    .line 3236
    :try_start_1
    iget-object v3, v2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    const/4 v4, 0x0

    const/4 v5, 0x0

    invoke-virtual {p0, v2, v3, v4, v5}, Lcom/android/server/am/ActivityManagerService;->newProcessRecordLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZI)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 3237
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    const/4 v3, 0x1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    .line 3238
    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 3239
    const/16 v3, -0x10

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    .line 3240
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    invoke-virtual {v3}, Landroid/app/ActivityThread;->getApplicationThread()Landroid/app/ActivityThread$ApplicationThread;

    move-result-object v3

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v0, v3, v4}, Lcom/android/server/am/ProcessRecord;->makeActive(Landroid/app/IApplicationThread;Lcom/android/server/am/ProcessStatsService;)V

    .line 3241
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 3242
    :try_start_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v3, v5, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 3243
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 3244
    const/4 v3, 0x0

    const/4 v4, 0x0

    :try_start_3
    invoke-virtual {p0, v0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    .line 3245
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 3246
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 3251
    return-void

    .line 3243
    :catchall_0
    move-exception v3

    :try_start_4
    monitor-exit v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    throw v3

    .line 3246
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :catchall_1
    move-exception v3

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :try_start_6
    throw v3
    :try_end_6
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_6 .. :try_end_6} :catch_0

    .line 3247
    .end local v2    # "info":Landroid/content/pm/ApplicationInfo;
    :catch_0
    move-exception v1

    .line 3248
    .local v1, "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    new-instance v3, Ljava/lang/RuntimeException;

    const-string v4, "Unable to find android system package"

    invoke-direct {v3, v4, v1}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v3
.end method

.method public setSystemServiceManager(Lcom/android/server/SystemServiceManager;)V
    .locals 0
    .param p1, "mgr"    # Lcom/android/server/SystemServiceManager;

    .prologue
    .line 3597
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    .line 3598
    return-void
.end method

.method public setTaskDescription(Landroid/os/IBinder;Landroid/app/ActivityManager$TaskDescription;)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "td"    # Landroid/app/ActivityManager$TaskDescription;

    .prologue
    .line 12874
    monitor-enter p0

    .line 12875
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 12876
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    .line 12877
    invoke-virtual {v0, p2}, Lcom/android/server/am/ActivityRecord;->setTaskDescription(Landroid/app/ActivityManager$TaskDescription;)V

    .line 12878
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    invoke-virtual {v1}, Lcom/android/server/am/TaskRecord;->updateTaskDescription()V

    .line 12880
    :cond_0
    monitor-exit p0

    .line 12881
    return-void

    .line 12880
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public setTaskResizeable(IZ)V
    .locals 4
    .param p1, "taskId"    # I
    .param p2, "resizeable"    # Z

    .prologue
    .line 12885
    monitor-enter p0

    .line 12886
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v2, 0x0

    invoke-virtual {v1, p1, v2}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(IZ)Lcom/android/server/am/TaskRecord;

    move-result-object v0

    .line 12887
    .local v0, "task":Lcom/android/server/am/TaskRecord;
    if-nez v0, :cond_0

    .line 12888
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "setTaskResizeable: taskId="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " not found"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12889
    monitor-exit p0

    .line 12897
    :goto_0
    return-void

    .line 12891
    :cond_0
    iget-boolean v1, v0, Lcom/android/server/am/TaskRecord;->mResizeable:Z

    if-eq v1, p2, :cond_1

    .line 12892
    iput-boolean p2, v0, Lcom/android/server/am/TaskRecord;->mResizeable:Z

    .line 12893
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v2, 0x0

    const/4 v3, 0x0

    invoke-virtual {v1, v2, v3}, Lcom/android/server/am/ActivityStackSupervisor;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;I)V

    .line 12894
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    .line 12896
    :cond_1
    monitor-exit p0

    goto :goto_0

    .end local v0    # "task":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public setTestPssMode(Z)V
    .locals 4
    .param p1, "enabled"    # Z

    .prologue
    .line 25546
    monitor-enter p0

    .line 25547
    :try_start_0
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    .line 25548
    if-eqz p1, :cond_0

    .line 25551
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    const/4 v2, 0x1

    const/4 v3, 0x1

    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->requestPssAllProcsLocked(JZZ)V

    .line 25553
    :cond_0
    monitor-exit p0

    .line 25554
    return-void

    .line 25553
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public setUsageStatsManager(Landroid/app/usage/UsageStatsManagerInternal;)V
    .locals 0
    .param p1, "usageStatsManager"    # Landroid/app/usage/UsageStatsManagerInternal;

    .prologue
    .line 3270
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    .line 3271
    return-void
.end method

.method public setUserIsMonkey(Z)V
    .locals 6
    .param p1, "userIsMonkey"    # Z

    .prologue
    .line 15715
    monitor-enter p0

    .line 15716
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 15717
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 15718
    .local v0, "callingPid":I
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 15719
    .local v1, "precessRecord":Lcom/android/server/am/ProcessRecord;
    if-nez v1, :cond_0

    .line 15720
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Unknown process: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v2, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 15726
    .end local v0    # "callingPid":I
    .end local v1    # "precessRecord":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v2

    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    throw v2

    .line 15728
    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v2

    .line 15722
    .restart local v0    # "callingPid":I
    .restart local v1    # "precessRecord":Lcom/android/server/am/ProcessRecord;
    :cond_0
    :try_start_3
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->instrumentationUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    if-nez v2, :cond_1

    .line 15723
    new-instance v2, Ljava/lang/SecurityException;

    const-string v4, "Only an instrumentation process with a UiAutomation can call setUserIsMonkey"

    invoke-direct {v2, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 15726
    :cond_1
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 15727
    :try_start_4
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mUserIsMonkey:Z

    .line 15728
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 15729
    return-void
.end method

.method public setVoiceKeepAwake(Landroid/service/voice/IVoiceInteractionSession;Z)V
    .locals 2
    .param p1, "session"    # Landroid/service/voice/IVoiceInteractionSession;
    .param p2, "keepAwake"    # Z

    .prologue
    .line 6639
    monitor-enter p0

    .line 6640
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    invoke-interface {v0}, Landroid/service/voice/IVoiceInteractionSession;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    invoke-interface {p1}, Landroid/service/voice/IVoiceInteractionSession;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    if-ne v0, v1, :cond_0

    .line 6641
    if-eqz p2, :cond_1

    .line 6642
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->acquire()V

    .line 6647
    :cond_0
    :goto_0
    monitor-exit p0

    .line 6648
    return-void

    .line 6644
    :cond_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->release()V

    goto :goto_0

    .line 6647
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public setWindowManager(Lcom/android/server/wm/WindowManagerService;)V
    .locals 1
    .param p1, "wm"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    .line 3254
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    .line 3255
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStackSupervisor;->setWindowManager(Lcom/android/server/wm/WindowManagerService;)V

    .line 3264
    invoke-static {}, Lcom/android/server/am/VirtualScreenManagerService;->self()Lcom/android/server/am/VirtualScreenManagerService;

    move-result-object v0

    invoke-virtual {v0, p1}, Lcom/android/server/am/VirtualScreenManagerService;->setWindowManager(Lcom/android/server/wm/WindowManagerService;)V

    .line 3267
    return-void
.end method

.method setupKEAOverridePath(Landroid/content/pm/ActivityInfo;)V
    .locals 6
    .param p1, "aInfo"    # Landroid/content/pm/ActivityInfo;

    .prologue
    .line 30026
    monitor-enter p0

    .line 30027
    if-eqz p1, :cond_0

    :try_start_0
    iget-object v3, p1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    if-eqz v3, :cond_0

    iget-object v3, p1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;

    if-eqz v3, :cond_0

    iget-object v3, p1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v3

    invoke-static {v3}, Landroid/os/PersonaManager;->isBBCContainer(I)Z

    move-result v3

    if-eqz v3, :cond_0

    iget-object v3, p1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v3}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    const/16 v4, 0x2710

    if-lt v3, v4, :cond_0

    .line 30032
    iget-object v3, p1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v3, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;

    .line 30034
    .local v2, "metaInfo":Landroid/os/Bundle;
    iget-object v3, p1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v3}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    .line 30036
    .local v0, "bbc_app_uid":I
    const-string v3, "com.samsung.android.knoxenabled.override_path"

    invoke-virtual {v2, v3}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 30038
    .local v1, "kea_override_path":Ljava/lang/String;
    if-eqz v1, :cond_3

    .line 30039
    invoke-virtual {v1}, Ljava/lang/String;->length()I

    move-result v3

    const/16 v4, 0x5c

    if-le v3, v4, :cond_1

    .line 30040
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "kea_override_path invalid : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 30055
    .end local v0    # "bbc_app_uid":I
    .end local v1    # "kea_override_path":Ljava/lang/String;
    .end local v2    # "metaInfo":Landroid/os/Bundle;
    :cond_0
    :goto_0
    monitor-exit p0

    .line 30056
    return-void

    .line 30042
    .restart local v0    # "bbc_app_uid":I
    .restart local v1    # "kea_override_path":Ljava/lang/String;
    .restart local v2    # "metaInfo":Landroid/os/Bundle;
    :cond_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBBCOverridePath:Ljava/util/HashMap;

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_2

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBBCOverridePath:Ljava/util/HashMap;

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    invoke-virtual {v1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_0

    .line 30043
    :cond_2
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "kea_override_path : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 30044
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBBCOverridePath:Ljava/util/HashMap;

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-virtual {v3, v4, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_0

    .line 30055
    .end local v0    # "bbc_app_uid":I
    .end local v1    # "kea_override_path":Ljava/lang/String;
    .end local v2    # "metaInfo":Landroid/os/Bundle;
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v3

    .line 30048
    .restart local v0    # "bbc_app_uid":I
    .restart local v1    # "kea_override_path":Ljava/lang/String;
    .restart local v2    # "metaInfo":Landroid/os/Bundle;
    :cond_3
    :try_start_1
    const-string v3, "ActivityManager"

    const-string/jumbo v4, "kea_override_path not exist"

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 30049
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBBCOverridePath:Ljava/util/HashMap;

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v3

    const/4 v4, 0x1

    if-ne v3, v4, :cond_0

    .line 30050
    const-string v3, "ActivityManager"

    const-string/jumbo v4, "kea_override_path removing"

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 30051
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBBCOverridePath:Ljava/util/HashMap;

    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0
.end method

.method public shouldUpRecreateTask(Landroid/os/IBinder;Ljava/lang/String;)Z
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "destAffinity"    # Ljava/lang/String;

    .prologue
    .line 24616
    monitor-enter p0

    .line 24617
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 24618
    .local v0, "srec":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    .line 24619
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v1, v1, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v1, v0, p2}, Lcom/android/server/am/ActivityStack;->shouldUpRecreateTaskLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)Z

    move-result v1

    monitor-exit p0

    .line 24622
    :goto_0
    return v1

    .line 24621
    :cond_0
    monitor-exit p0

    .line 24622
    const/4 v1, 0x0

    goto :goto_0

    .line 24621
    .end local v0    # "srec":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method final showAskCompatModeDialogLocked(Lcom/android/server/am/ActivityRecord;)V
    .locals 2
    .param p1, "r"    # Lcom/android/server/am/ActivityRecord;

    .prologue
    .line 4566
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v0

    .line 4567
    .local v0, "msg":Landroid/os/Message;
    const/16 v1, 0x1e

    iput v1, v0, Landroid/os/Message;->what:I

    .line 4568
    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-boolean v1, v1, Lcom/android/server/am/TaskRecord;->askedCompatMode:Z

    if-eqz v1, :cond_0

    const/4 p1, 0x0

    .end local p1    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    iput-object p1, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 4569
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService$UiHandler;->sendMessage(Landroid/os/Message;)Z

    .line 4570
    return-void
.end method

.method public showAssistFromActivity(Landroid/os/IBinder;Landroid/os/Bundle;)Z
    .locals 9
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "args"    # Landroid/os/Bundle;

    .prologue
    const/4 v5, 0x0

    .line 15885
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 15887
    .local v2, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 15888
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 15889
    .local v0, "caller":Lcom/android/server/am/ActivityRecord;
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v6

    invoke-virtual {v6}, Lcom/android/server/am/ActivityStack;->topActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v1

    .line 15890
    .local v1, "top":Lcom/android/server/am/ActivityRecord;
    if-eq v1, v0, :cond_0

    .line 15891
    const-string v6, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "showAssistFromActivity failed: caller "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " is not current top "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15893
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 15905
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    :goto_0
    return v5

    .line 15895
    :cond_0
    :try_start_2
    iget-boolean v6, v1, Lcom/android/server/am/ActivityRecord;->nowVisible:Z

    if-nez v6, :cond_1

    .line 15896
    const-string v6, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "showAssistFromActivity failed: caller "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " is not visible"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15898
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 15905
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 15900
    :cond_1
    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 15901
    :try_start_4
    new-instance v4, Lcom/android/internal/app/AssistUtils;

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v4, v5}, Lcom/android/internal/app/AssistUtils;-><init>(Landroid/content/Context;)V

    .line 15902
    .local v4, "utils":Lcom/android/internal/app/AssistUtils;
    const/16 v5, 0x8

    const/4 v6, 0x0

    invoke-virtual {v4, p2, v5, v6, p1}, Lcom/android/internal/app/AssistUtils;->showSessionForActiveService(Landroid/os/Bundle;ILcom/android/internal/app/IVoiceInteractionSessionShowCallback;Landroid/os/IBinder;)Z
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    move-result v5

    .line 15905
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 15900
    .end local v0    # "caller":Lcom/android/server/am/ActivityRecord;
    .end local v1    # "top":Lcom/android/server/am/ActivityRecord;
    .end local v4    # "utils":Lcom/android/internal/app/AssistUtils;
    :catchall_0
    move-exception v5

    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    throw v5
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 15905
    :catchall_1
    move-exception v5

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v5
.end method

.method public showBootMessage(Ljava/lang/CharSequence;Z)V
    .locals 2
    .param p1, "msg"    # Ljava/lang/CharSequence;
    .param p2, "always"    # Z

    .prologue
    .line 9586
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-static {}, Landroid/os/Process;->myUid()I

    move-result v1

    if-eq v0, v1, :cond_0

    .line 9590
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->showBootMessage(Ljava/lang/CharSequence;Z)V

    .line 9591
    return-void
.end method

.method final showLaunchWarningLocked(Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;)V
    .locals 2
    .param p1, "cur"    # Lcom/android/server/am/ActivityRecord;
    .param p2, "next"    # Lcom/android/server/am/ActivityRecord;

    .prologue
    .line 8079
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchWarningShown:Z

    if-nez v0, :cond_0

    .line 8080
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchWarningShown:Z

    .line 8081
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$7;

    invoke-direct {v1, p0, p1, p2}, Lcom/android/server/am/ActivityManagerService$7;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;)V

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$UiHandler;->post(Ljava/lang/Runnable;)Z

    .line 8100
    :cond_0
    return-void
.end method

.method public showLockTaskEscapeMessage(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 13788
    monitor-enter p0

    .line 13789
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 13790
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 13791
    monitor-exit p0

    .line 13795
    :goto_0
    return-void

    .line 13793
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityStackSupervisor;->showLockTaskEscapeMessageLocked(Lcom/android/server/am/TaskRecord;)V

    .line 13794
    monitor-exit p0

    goto :goto_0

    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public final showSafeModeOverlay()V
    .locals 6

    .prologue
    const/4 v5, -0x2

    .line 16253
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v2}, Landroid/view/LayoutInflater;->from(Landroid/content/Context;)Landroid/view/LayoutInflater;

    move-result-object v2

    const v3, 0x10900e3

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Landroid/view/LayoutInflater;->inflate(ILandroid/view/ViewGroup;)Landroid/view/View;

    move-result-object v1

    .line 16255
    .local v1, "v":Landroid/view/View;
    new-instance v0, Landroid/view/WindowManager$LayoutParams;

    invoke-direct {v0}, Landroid/view/WindowManager$LayoutParams;-><init>()V

    .line 16256
    .local v0, "lp":Landroid/view/WindowManager$LayoutParams;
    const/16 v2, 0x7df

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    .line 16257
    iput v5, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    .line 16258
    iput v5, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    .line 16259
    const v2, 0x800053

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->gravity:I

    .line 16260
    invoke-virtual {v1}, Landroid/view/View;->getBackground()Landroid/graphics/drawable/Drawable;

    move-result-object v2

    invoke-virtual {v2}, Landroid/graphics/drawable/Drawable;->getOpacity()I

    move-result v2

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->format:I

    .line 16261
    const/16 v2, 0x18

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 16263
    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    or-int/lit8 v2, v2, 0x10

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    .line 16264
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v3, "window"

    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/view/WindowManager;

    invoke-interface {v2, v1, v0}, Landroid/view/WindowManager;->addView(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V

    .line 16266
    return-void
.end method

.method public showWaitingForDebugger(Landroid/app/IApplicationThread;Z)V
    .locals 3
    .param p1, "who"    # Landroid/app/IApplicationThread;
    .param p2, "waiting"    # Z

    .prologue
    .line 12416
    monitor-enter p0

    .line 12417
    if-eqz p1, :cond_0

    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 12419
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    :goto_0
    if-nez v0, :cond_1

    monitor-exit p0

    .line 12427
    :goto_1
    return-void

    .line 12417
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_0
    const/4 v0, 0x0

    goto :goto_0

    .line 12421
    .restart local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_1
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v1

    .line 12422
    .local v1, "msg":Landroid/os/Message;
    const/4 v2, 0x6

    iput v2, v1, Landroid/os/Message;->what:I

    .line 12423
    iput-object v0, v1, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 12424
    if-eqz p2, :cond_2

    const/4 v2, 0x1

    :goto_2
    iput v2, v1, Landroid/os/Message;->arg1:I

    .line 12425
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    invoke-virtual {v2, v1}, Lcom/android/server/am/ActivityManagerService$UiHandler;->sendMessage(Landroid/os/Message;)Z

    .line 12426
    monitor-exit p0

    goto :goto_1

    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v1    # "msg":Landroid/os/Message;
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2

    .line 12424
    .restart local v0    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v1    # "msg":Landroid/os/Message;
    :cond_2
    const/4 v2, 0x0

    goto :goto_2
.end method

.method public shutdown(I)Z
    .locals 3
    .param p1, "timeout"    # I

    .prologue
    .line 15437
    const-string v1, "android.permission.SHUTDOWN"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    .line 15439
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Requires permission android.permission.SHUTDOWN"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 15443
    :cond_0
    const/4 v0, 0x0

    .line 15445
    .local v0, "timedout":Z
    monitor-enter p0

    .line 15446
    const/4 v1, 0x1

    :try_start_0
    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    .line 15447
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->updateEventDispatchingLocked()V

    .line 15448
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityStackSupervisor;->shutdownLocked(I)Z

    move-result v0

    .line 15449
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15452
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v1

    const-string v2, "CscFeature_Common_SupportDeviceReporting"

    invoke-virtual {v1, v2}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 15453
    invoke-static {}, Lcom/android/server/am/AppStateBroadcaster;->disableIntentBroadcast()V

    .line 15456
    :cond_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    invoke-virtual {v1}, Lcom/android/server/AppOpsService;->shutdown()V

    .line 15457
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v1}, Lcom/android/server/am/BatteryStatsService;->shutdown()V

    .line 15458
    monitor-enter p0

    .line 15459
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v1}, Lcom/android/server/am/ProcessStatsService;->shutdownLocked()V

    .line 15460
    const/4 v1, 0x0

    const/4 v2, 0x1

    invoke-virtual {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->notifyTaskPersisterLocked(Lcom/android/server/am/TaskRecord;Z)V

    .line 15461
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 15463
    return v0

    .line 15449
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v1

    .line 15461
    :catchall_1
    move-exception v1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v1
.end method

.method public signalPersistentProcesses(I)V
    .locals 4
    .param p1, "sig"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 27059
    const/16 v2, 0xa

    if-eq p1, v2, :cond_0

    .line 27060
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Only SIGNAL_USR1 is allowed"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 27063
    :cond_0
    monitor-enter p0

    .line 27064
    :try_start_0
    const-string v2, "android.permission.SIGNAL_PERSISTENT_PROCESSES"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_1

    .line 27066
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires permission android.permission.SIGNAL_PERSISTENT_PROCESSES"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 27076
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2

    .line 27070
    :cond_1
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v0, v2, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_3

    .line 27071
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 27072
    .local v1, "r":Lcom/android/server/am/ProcessRecord;
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_2

    iget-boolean v2, v1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v2, :cond_2

    .line 27073
    iget v2, v1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v2, p1}, Landroid/os/Process;->sendSignal(II)V

    .line 27070
    :cond_2
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 27076
    .end local v1    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_3
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 27077
    return-void
.end method

.method skipCurrentReceiverLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 4
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 17563
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .local v0, "arr$":[Lcom/android/server/am/BroadcastQueue;
    array-length v2, v0

    .local v2, "len$":I
    const/4 v1, 0x0

    .local v1, "i$":I
    :goto_0
    if-ge v1, v2, :cond_0

    aget-object v3, v0, v1

    .line 17564
    .local v3, "queue":Lcom/android/server/am/BroadcastQueue;
    invoke-virtual {v3, p1}, Lcom/android/server/am/BroadcastQueue;->skipCurrentReceiverLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 17563
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 17566
    .end local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_0
    return-void
.end method

.method skipPendingBroadcastLocked(I)V
    .locals 6
    .param p1, "pid"    # I

    .prologue
    .line 22417
    const-string v4, "ActivityManager"

    const-string v5, "Unattached app died before broadcast acknowledged, skipping"

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22418
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .local v0, "arr$":[Lcom/android/server/am/BroadcastQueue;
    array-length v2, v0

    .local v2, "len$":I
    const/4 v1, 0x0

    .local v1, "i$":I
    :goto_0
    if-ge v1, v2, :cond_0

    aget-object v3, v0, v1

    .line 22419
    .local v3, "queue":Lcom/android/server/am/BroadcastQueue;
    invoke-virtual {v3, p1}, Lcom/android/server/am/BroadcastQueue;->skipPendingBroadcastLocked(I)V

    .line 22418
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 22421
    .end local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_0
    return-void
.end method

.method public final startActivities(Landroid/app/IApplicationThread;Ljava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I
    .locals 11
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intents"    # [Landroid/content/Intent;
    .param p4, "resolvedTypes"    # [Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "options"    # Landroid/os/Bundle;
    .param p7, "userId"    # I

    .prologue
    .line 6859
    const-string/jumbo v1, "startActivities"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 6860
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    const/4 v5, 0x0

    const/4 v6, 0x2

    const-string/jumbo v7, "startActivity"

    const/4 v8, 0x0

    move-object v1, p0

    move/from16 v4, p7

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p7

    .line 6863
    move-object/from16 v0, p6

    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->addEdmPreventStartVerificationTag(Landroid/os/Bundle;)V

    .line 6866
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v3, -0x1

    move-object v2, p1

    move-object v4, p2

    move-object v5, p3

    move-object v6, p4

    move-object/from16 v7, p5

    move-object/from16 v8, p6

    move/from16 v9, p7

    invoke-virtual/range {v1 .. v9}, Lcom/android/server/am/ActivityStackSupervisor;->startActivities(Landroid/app/IApplicationThread;ILjava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I

    move-result v10

    .line 6868
    .local v10, "ret":I
    return v10
.end method

.method final startActivitiesInPackage(ILjava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I
    .locals 10
    .param p1, "uid"    # I
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intents"    # [Landroid/content/Intent;
    .param p4, "resolvedTypes"    # [Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "options"    # Landroid/os/Bundle;
    .param p7, "userId"    # I

    .prologue
    .line 6875
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v4, 0x0

    const/4 v5, 0x2

    const-string/jumbo v6, "startActivityInPackage"

    const/4 v7, 0x0

    move-object v0, p0

    move/from16 v3, p7

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p7

    .line 6878
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v1, 0x0

    move v2, p1

    move-object v3, p2

    move-object v4, p3

    move-object v5, p4

    move-object v6, p5

    move-object/from16 v7, p6

    move/from16 v8, p7

    invoke-virtual/range {v0 .. v8}, Lcom/android/server/am/ActivityStackSupervisor;->startActivities(Landroid/app/IApplicationThread;ILjava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I

    move-result v9

    .line 6880
    .local v9, "ret":I
    return v9
.end method

.method public final startActivity(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;)I
    .locals 13
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "startFlags"    # I
    .param p9, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p10, "options"    # Landroid/os/Bundle;

    .prologue
    .line 6097
    const-wide/16 v0, 0x40

    const-string/jumbo v2, "startActivity"

    invoke-static {v0, v1, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 6098
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v11

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object/from16 v3, p3

    move-object/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    move-object/from16 v9, p9

    move-object/from16 v10, p10

    invoke-virtual/range {v0 .. v11}, Lcom/android/server/am/ActivityManagerService;->startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I

    move-result v12

    .line 6101
    .local v12, "s":I
    const-wide/16 v0, 0x40

    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 6102
    return v12
.end method

.method public final startActivityAndWait(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)Landroid/app/IActivityManager$WaitResult;
    .locals 21
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "startFlags"    # I
    .param p9, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p10, "options"    # Landroid/os/Bundle;
    .param p11, "userId"    # I

    .prologue
    .line 6555
    const-string/jumbo v1, "startActivityAndWait"

    move-object/from16 v0, p0

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 6556
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    const/4 v5, 0x0

    const/4 v6, 0x2

    const-string/jumbo v7, "startActivityAndWait"

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move/from16 v4, p11

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p11

    .line 6558
    new-instance v14, Landroid/app/IActivityManager$WaitResult;

    invoke-direct {v14}, Landroid/app/IActivityManager$WaitResult;-><init>()V

    .line 6560
    .local v14, "res":Landroid/app/IActivityManager$WaitResult;
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v3, -0x1

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v15, 0x0

    const/16 v17, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    move-object/from16 v2, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v9, p5

    move-object/from16 v10, p6

    move/from16 v11, p7

    move/from16 v12, p8

    move-object/from16 v13, p9

    move-object/from16 v16, p10

    move/from16 v18, p11

    invoke-virtual/range {v1 .. v20}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityMayWait(Landroid/app/IApplicationThread;ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;Landroid/os/Bundle;ZILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I

    .line 6563
    return-object v14
.end method

.method public final startActivityAsCaller(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;ZI)I
    .locals 25
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "startFlags"    # I
    .param p9, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p10, "options"    # Landroid/os/Bundle;
    .param p11, "ignoreTargetSecurity"    # Z
    .param p12, "userId"    # I

    .prologue
    .line 6338
    monitor-enter p0

    .line 6339
    if-nez p5, :cond_0

    .line 6340
    :try_start_0
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Must be called from an activity"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6382
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 6342
    :cond_0
    :try_start_1
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, p5

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityStackSupervisor;->isInAnyStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v24

    .line 6343
    .local v24, "sourceRecord":Lcom/android/server/am/ActivityRecord;
    if-nez v24, :cond_1

    .line 6344
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Called with bad activity token: "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p5

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6347
    :cond_1
    const/16 v22, 0x0

    .line 6349
    .local v22, "isBBCAgent":Z
    move-object/from16 v0, v24

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v1, :cond_2

    move-object/from16 v0, v24

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1

    const/16 v2, 0x3e8

    if-ne v1, v2, :cond_2

    const-string v1, "com.samsung.android.bbc.bbcagent"

    move-object/from16 v0, v24

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_2

    const/16 v22, 0x1

    .line 6353
    :goto_0
    move-object/from16 v0, v24

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    const-string v2, "android"

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_3

    if-nez v22, :cond_3

    .line 6354
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Must be called from an activity that is declared in the android package"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6349
    :cond_2
    const/16 v22, 0x0

    goto :goto_0

    .line 6357
    :cond_3
    move-object/from16 v0, v24

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-nez v1, :cond_4

    .line 6358
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Called without a process attached to activity"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6360
    :cond_4
    move-object/from16 v0, v24

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1

    const/16 v2, 0x3e8

    if-eq v1, v2, :cond_5

    .line 6363
    move-object/from16 v0, v24

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    move-object/from16 v0, v24

    iget v2, v0, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    if-eq v1, v2, :cond_5

    .line 6364
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Calling activity in uid "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, v24

    iget-object v5, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v5, v5, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v5, " must be system uid or original calling uid "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, v24

    iget v5, v0, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6370
    :cond_5
    if-eqz p11, :cond_7

    .line 6371
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    if-nez v1, :cond_6

    .line 6372
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Component must be specified with ignoreTargetSecurity"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6375
    :cond_6
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getSelector()Landroid/content/Intent;

    move-result-object v1

    if-eqz v1, :cond_7

    .line 6376
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Selector not allowed with ignoreTargetSecurity"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6380
    :cond_7
    move-object/from16 v0, v24

    iget v3, v0, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    .line 6381
    .local v3, "targetUid":I
    move-object/from16 v0, v24

    iget-object v4, v0, Lcom/android/server/am/ActivityRecord;->launchedFromPackage:Ljava/lang/String;

    .line 6382
    .local v4, "targetPackage":Ljava/lang/String;
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 6384
    const/16 v1, -0x2710

    move/from16 v0, p12

    if-ne v0, v1, :cond_8

    .line 6385
    move-object/from16 v0, v24

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result p12

    .line 6390
    :cond_8
    :try_start_2
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v2, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v9, p5

    move-object/from16 v10, p6

    move/from16 v11, p7

    move/from16 v12, p8

    move-object/from16 v16, p10

    move/from16 v17, p11

    move/from16 v18, p12

    invoke-virtual/range {v1 .. v20}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityMayWait(Landroid/app/IApplicationThread;ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;Landroid/os/Bundle;ZILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I
    :try_end_2
    .catch Ljava/lang/SecurityException; {:try_start_2 .. :try_end_2} :catch_0

    move-result v23

    .line 6393
    .local v23, "ret":I
    return v23

    .line 6394
    .end local v23    # "ret":I
    :catch_0
    move-exception v21

    .line 6406
    .local v21, "e":Ljava/lang/SecurityException;
    throw v21
.end method

.method public final startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I
    .locals 36
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "startFlags"    # I
    .param p9, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p10, "options"    # Landroid/os/Bundle;
    .param p11, "userId"    # I

    .prologue
    .line 6197
    const-string/jumbo v4, "startActivity"

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 6198
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    const/4 v8, 0x0

    const/4 v9, 0x2

    const-string/jumbo v10, "startActivity"

    const/4 v11, 0x0

    move-object/from16 v4, p0

    move/from16 v7, p11

    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p11

    .line 6202
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mSIOPLevel:I

    const/4 v5, 0x6

    if-ge v4, v5, :cond_0

    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryOverheatLevel:I

    if-lez v4, :cond_1

    :cond_0
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService;->isPossibleToStart(Landroid/content/Intent;)Z

    move-result v4

    if-nez v4, :cond_1

    .line 6203
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x1f4

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v29

    .line 6204
    .local v29, "msg":Landroid/os/Message;
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, v29

    invoke-virtual {v4, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 6205
    const/16 v4, -0x9

    .line 6320
    .end local v29    # "msg":Landroid/os/Message;
    :goto_0
    return v4

    .line 6207
    :cond_1
    if-eqz p3, :cond_4

    const-string v4, "android.intent.action.CALL"

    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_2

    const-string v4, "android.intent.action.CALL_PRIVILEGED"

    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_4

    .line 6209
    :cond_2
    const-string v4, "ActivityManager"

    const-string v5, "SSRM:: ACTION_CALL or ACTION_CALL_PRIVILEGED is coming."

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 6211
    :try_start_0
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mCfmsService:Landroid/os/ICustomFrequencyManager;

    if-nez v4, :cond_3

    .line 6212
    const-string v4, "CustomFrequencyManagerService"

    invoke-static {v4}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v24

    .line 6213
    .local v24, "b":Landroid/os/IBinder;
    if-eqz v24, :cond_3

    .line 6214
    invoke-static/range {v24 .. v24}, Landroid/os/ICustomFrequencyManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/ICustomFrequencyManager;

    move-result-object v4

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mCfmsService:Landroid/os/ICustomFrequencyManager;

    .line 6217
    .end local v24    # "b":Landroid/os/IBinder;
    :cond_3
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mCfmsService:Landroid/os/ICustomFrequencyManager;

    if-eqz v4, :cond_4

    .line 6218
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mCfmsService:Landroid/os/ICustomFrequencyManager;

    const-string v5, "LAUNCH_APPSTART"

    const-string v6, "Contacts"

    invoke-interface {v4, v5, v6}, Landroid/os/ICustomFrequencyManager;->sendCommandToSSRM(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 6227
    :cond_4
    :goto_1
    move-object/from16 v0, p0

    move-object/from16 v1, p10

    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addEdmPreventStartVerificationTag(Landroid/os/Bundle;)V

    .line 6231
    if-eqz p3, :cond_5

    move-object/from16 v0, p0

    move-object/from16 v1, p3

    move-object/from16 v2, p4

    move/from16 v3, p11

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->changeIntentforSharedDevice(Landroid/content/Intent;Ljava/lang/String;I)Z

    move-result v4

    if-eqz v4, :cond_5

    .line 6232
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x259

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v29

    .line 6233
    .restart local v29    # "msg":Landroid/os/Message;
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, v29

    invoke-virtual {v4, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 6234
    const/4 v4, -0x4

    goto :goto_0

    .line 6220
    .end local v29    # "msg":Landroid/os/Message;
    :catch_0
    move-exception v26

    .line 6221
    .local v26, "e":Landroid/os/RemoteException;
    invoke-virtual/range {v26 .. v26}, Landroid/os/RemoteException;->printStackTrace()V

    goto :goto_1

    .line 6239
    .end local v26    # "e":Landroid/os/RemoteException;
    :cond_5
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    move-object/from16 v2, p4

    move/from16 v3, p11

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->changeIntentforKiosk(Landroid/content/Intent;Ljava/lang/String;I)Z

    move-result v4

    if-eqz v4, :cond_6

    .line 6240
    new-instance v25, Landroid/content/ComponentName;

    const-string v4, "com.sec.knox.knoxsetupwizardclient"

    const-string v5, "com.sec.knox.knoxsetupwizardclient.EmptyKioskActivity"

    move-object/from16 v0, v25

    invoke-direct {v0, v4, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 6242
    .local v25, "bridgecomp":Landroid/content/ComponentName;
    new-instance v30, Landroid/content/Intent;

    move-object/from16 v0, v30

    move-object/from16 v1, p3

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    .line 6243
    .local v30, "newIntent":Landroid/content/Intent;
    move-object/from16 v0, v30

    move-object/from16 v1, v25

    invoke-virtual {v0, v1}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 6245
    move-object/from16 p3, v30

    .line 6247
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    const/16 v5, 0x64

    if-ge v4, v5, :cond_6

    .line 6248
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x259

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v29

    .line 6249
    .restart local v29    # "msg":Landroid/os/Message;
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, v29

    invoke-virtual {v4, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 6252
    .end local v25    # "bridgecomp":Landroid/content/ComponentName;
    .end local v29    # "msg":Landroid/os/Message;
    .end local v30    # "newIntent":Landroid/content/Intent;
    :cond_6
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move/from16 v0, p11

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v34

    check-cast v34, Lcom/android/server/am/UserState;

    .line 6253
    .local v34, "userStartedState":Lcom/android/server/am/UserState;
    if-eqz v34, :cond_8

    move-object/from16 v0, v34

    iget v4, v0, Lcom/android/server/am/UserState;->mContainerState:I

    const/4 v5, 0x4

    if-ne v4, v5, :cond_8

    .line 6254
    new-instance v25, Landroid/content/ComponentName;

    const-string v4, "com.sec.knox.knoxsetupwizardclient"

    const-string v5, "com.sec.knox.knoxsetupwizardclient.EmptyKioskActivity"

    move-object/from16 v0, v25

    invoke-direct {v0, v4, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 6256
    .restart local v25    # "bridgecomp":Landroid/content/ComponentName;
    new-instance v28, Landroid/content/Intent;

    move-object/from16 v0, v28

    move-object/from16 v1, p3

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    .line 6257
    .end local p3    # "intent":Landroid/content/Intent;
    .local v28, "intent":Landroid/content/Intent;
    move-object/from16 v0, v28

    move-object/from16 v1, v25

    invoke-virtual {v0, v1}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 6259
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    const/16 v5, 0x64

    if-ge v4, v5, :cond_7

    .line 6260
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x259

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v29

    .line 6261
    .restart local v29    # "msg":Landroid/os/Message;
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, v29

    invoke-virtual {v4, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 6263
    .end local v29    # "msg":Landroid/os/Message;
    :cond_7
    const/4 v4, -0x4

    move-object/from16 p3, v28

    .end local v28    # "intent":Landroid/content/Intent;
    .restart local p3    # "intent":Landroid/content/Intent;
    goto/16 :goto_0

    .line 6267
    .end local v25    # "bridgecomp":Landroid/content/ComponentName;
    :cond_8
    const-string v4, "2.0"

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->knoxVersionInfo:Landroid/os/Bundle;

    const-string/jumbo v6, "version"

    invoke-virtual {v5, v6}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_a

    .line 6268
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v4

    if-eqz v4, :cond_a

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v4

    sget-object v5, Landroid/content/pm/PersonaState;->LOCKED:Landroid/content/pm/PersonaState;

    move/from16 v0, p11

    invoke-virtual {v4, v5, v0}, Lcom/android/server/pm/PersonaManagerService;->inState(Landroid/content/pm/PersonaState;I)Z

    move-result v4

    if-eqz v4, :cond_a

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v4

    move/from16 v0, p11

    invoke-virtual {v4, v0}, Lcom/android/server/pm/PersonaManagerService;->getKeyguardShowState(I)Z

    move-result v4

    if-nez v4, :cond_a

    const-string v4, "com.samsung.knox.kss"

    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_a

    const-string v4, "com.sec.knox.shortcutsms"

    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_a

    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v4

    if-eqz v4, :cond_9

    const-string v4, "com.sec.knox.shortcutsms"

    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v5

    invoke-virtual {v5}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_a

    .line 6273
    :cond_9
    const-string v4, "ActivityManager"

    const-string v5, " start freezing screen for locked container"

    invoke-static {v4, v5}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 6274
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v32

    .line 6275
    .local v32, "origId":J
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const/4 v5, 0x0

    const/4 v6, 0x0

    invoke-virtual {v4, v5, v6}, Lcom/android/server/wm/WindowManagerService;->startFreezingScreen(II)V

    .line 6276
    invoke-static/range {v32 .. v33}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6285
    .end local v32    # "origId":J
    :cond_a
    if-eqz p3, :cond_c

    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    if-eqz v4, :cond_c

    .line 6286
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    const-string v5, "android.intent.action.REBOOT"

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_b

    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    const-string v5, "android.intent.action.ACTION_REQUEST_SHUTDOWN"

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_c

    .line 6288
    :cond_b
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v31

    .line 6289
    .local v31, "shutdownCallerApp":Lcom/android/server/am/ProcessRecord;
    new-instance v27, Ljava/lang/Exception;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "shutdown intent called!! caller: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, v31

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " intent action: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, v27

    invoke-direct {v0, v4}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V

    .line 6291
    .local v27, "ex":Ljava/lang/Exception;
    invoke-static/range {v27 .. v27}, Lcom/android/server/power/ShutdownThread;->saveReasonforshutdown(Ljava/lang/Exception;)V

    .line 6305
    .end local v27    # "ex":Ljava/lang/Exception;
    .end local v31    # "shutdownCallerApp":Lcom/android/server/am/ProcessRecord;
    :cond_c
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v4

    const-string v5, "CscFeature_Common_SupportHuxWiFiPromptDataOveruse"

    invoke-virtual {v4, v5}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_d

    .line 6306
    if-eqz p3, :cond_d

    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v4

    if-eqz v4, :cond_d

    const-string v4, "android.intent.action.MAIN"

    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_d

    .line 6307
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v5, "wifioffload"

    invoke-virtual {v4, v5}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v35

    check-cast v35, Landroid/net/wifi/WifiOffloadManager;

    .line 6308
    .local v35, "wifiOffloadManager":Landroid/net/wifi/WifiOffloadManager;
    if-eqz v35, :cond_d

    .line 6309
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v4

    invoke-virtual {v4}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, v35

    invoke-virtual {v0, v4}, Landroid/net/wifi/WifiOffloadManager;->checkAppForWiFiOffloading(Ljava/lang/String;)V

    .line 6316
    .end local v35    # "wifiOffloadManager":Landroid/net/wifi/WifiOffloadManager;
    :cond_d
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService;->sendInternetPermissionBroadcast(Landroid/content/Intent;)V

    .line 6320
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v6, -0x1

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/16 v17, 0x0

    const/16 v18, 0x0

    const/16 v20, 0x0

    const/16 v22, 0x0

    const/16 v23, 0x0

    move-object/from16 v5, p1

    move-object/from16 v7, p2

    move-object/from16 v8, p3

    move-object/from16 v9, p4

    move-object/from16 v12, p5

    move-object/from16 v13, p6

    move/from16 v14, p7

    move/from16 v15, p8

    move-object/from16 v16, p9

    move-object/from16 v19, p10

    move/from16 v21, p11

    invoke-virtual/range {v4 .. v23}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityMayWait(Landroid/app/IApplicationThread;ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;Landroid/os/Bundle;ZILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I

    move-result v4

    goto/16 :goto_0
.end method

.method public final startActivityFromRecents(ILandroid/os/Bundle;)I
    .locals 2
    .param p1, "taskId"    # I
    .param p2, "options"    # Landroid/os/Bundle;

    .prologue
    .line 6758
    const-string v1, "android.permission.START_TASKS_FROM_RECENTS"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    .line 6759
    const-string v0, "Permission Denial: startActivityFromRecents called without android.permission.START_TASKS_FROM_RECENTS"

    .line 6761
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6762
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6764
    .end local v0    # "msg":Ljava/lang/String;
    :cond_0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->startActivityFromRecentsInner(ILandroid/os/Bundle;)I

    move-result v1

    return v1
.end method

.method public final startActivityFromRecents(ILandroid/os/Bundle;Lcom/samsung/android/multiwindow/MultiWindowStyle;)I
    .locals 2
    .param p1, "taskId"    # I
    .param p2, "options"    # Landroid/os/Bundle;
    .param p3, "style"    # Lcom/samsung/android/multiwindow/MultiWindowStyle;

    .prologue
    .line 6769
    const-string v1, "android.permission.START_TASKS_FROM_RECENTS"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    .line 6770
    const-string v0, "Permission Denial: startActivityFromRecents called without android.permission.START_TASKS_FROM_RECENTS"

    .line 6772
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6773
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6775
    .end local v0    # "msg":Ljava/lang/String;
    :cond_0
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->startActivityFromRecentsInner(ILandroid/os/Bundle;Lcom/samsung/android/multiwindow/MultiWindowStyle;)I

    move-result v1

    return v1
.end method

.method final startActivityFromRecentsInner(ILandroid/os/Bundle;)I
    .locals 1
    .param p1, "taskId"    # I
    .param p2, "options"    # Landroid/os/Bundle;

    .prologue
    .line 6779
    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->startActivityFromRecentsInner(ILandroid/os/Bundle;Lcom/samsung/android/multiwindow/MultiWindowStyle;)I

    move-result v0

    return v0
.end method

.method final startActivityFromRecentsInner(ILandroid/os/Bundle;Lcom/samsung/android/multiwindow/MultiWindowStyle;)I
    .locals 15
    .param p1, "taskId"    # I
    .param p2, "options"    # Landroid/os/Bundle;
    .param p3, "mwStyle"    # Lcom/samsung/android/multiwindow/MultiWindowStyle;

    .prologue
    .line 6789
    monitor-enter p0

    .line 6790
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move/from16 v0, p1

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v13

    .line 6791
    .local v13, "task":Lcom/android/server/am/TaskRecord;
    if-nez v13, :cond_0

    .line 6792
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Task "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, p1

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " not found."

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v1, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6835
    .end local v13    # "task":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 6794
    .restart local v13    # "task":Lcom/android/server/am/TaskRecord;
    :cond_0
    :try_start_1
    invoke-virtual {v13}, Lcom/android/server/am/TaskRecord;->getRootActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v1

    if-eqz v1, :cond_1

    .line 6795
    iget v1, v13, Lcom/android/server/am/TaskRecord;->taskId:I

    const/4 v5, 0x0

    const/4 v6, 0x0

    invoke-virtual {p0, v1, v5, v6}, Lcom/android/server/am/ActivityManagerService;->moveTaskToFrontLocked(IILandroid/os/Bundle;)V

    .line 6796
    const/4 v1, 0x2

    monitor-exit p0

    .line 6836
    :goto_0
    return v1

    .line 6798
    :cond_1
    iget v2, v13, Lcom/android/server/am/TaskRecord;->mCallingUid:I

    .line 6799
    .local v2, "callingUid":I
    iget-object v3, v13, Lcom/android/server/am/TaskRecord;->mCallingPackage:Ljava/lang/String;

    .line 6800
    .local v3, "callingPackage":Ljava/lang/String;
    iget-object v4, v13, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    .line 6803
    .local v4, "intent":Landroid/content/Intent;
    const v1, 0x104000

    invoke-virtual {v4, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 6805
    invoke-virtual {v4}, Landroid/content/Intent;->getMultiWindowStyle()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v14

    .line 6806
    .local v14, "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    if-nez p3, :cond_4

    .line 6807
    if-eqz v14, :cond_3

    .line 6808
    const/4 v1, 0x0

    invoke-virtual {v14, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->setType(I)V

    .line 6823
    :cond_2
    :goto_1
    iget v11, v13, Lcom/android/server/am/TaskRecord;->userId:I

    .line 6835
    .local v11, "userId":I
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 6836
    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v12, 0x0

    move-object v1, p0

    move-object/from16 v10, p2

    invoke-virtual/range {v1 .. v13}, Lcom/android/server/am/ActivityManagerService;->startActivityInPackage(ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/os/Bundle;ILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I

    move-result v1

    goto :goto_0

    .line 6809
    .end local v11    # "userId":I
    :cond_3
    :try_start_2
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRecentsProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v1, :cond_2

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRecentsProcess:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    if-ne v1, v5, :cond_2

    .line 6810
    new-instance v1, Lcom/samsung/android/multiwindow/MultiWindowStyle;

    const/4 v5, 0x0

    invoke-direct {v1, v5}, Lcom/samsung/android/multiwindow/MultiWindowStyle;-><init>(I)V

    invoke-virtual {v4, v1}, Landroid/content/Intent;->setMultiWindowStyle(Lcom/samsung/android/multiwindow/MultiWindowStyle;)V

    goto :goto_1

    .line 6813
    :cond_4
    if-eqz v14, :cond_5

    .line 6814
    const/4 v1, 0x1

    move-object/from16 v0, p3

    invoke-virtual {v14, v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->setTo(Lcom/samsung/android/multiwindow/MultiWindowStyle;Z)V

    goto :goto_1

    .line 6816
    :cond_5
    new-instance v1, Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v0, p3

    invoke-direct {v1, v0}, Lcom/samsung/android/multiwindow/MultiWindowStyle;-><init>(Lcom/samsung/android/multiwindow/MultiWindowStyle;)V

    invoke-virtual {v4, v1}, Landroid/content/Intent;->setMultiWindowStyle(Lcom/samsung/android/multiwindow/MultiWindowStyle;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_1
.end method

.method final startActivityInPackage(ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/os/Bundle;ILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I
    .locals 22
    .param p1, "uid"    # I
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "startFlags"    # I
    .param p9, "options"    # Landroid/os/Bundle;
    .param p10, "userId"    # I
    .param p11, "container"    # Landroid/app/IActivityContainer;
    .param p12, "inTask"    # Lcom/android/server/am/TaskRecord;

    .prologue
    .line 6845
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    const/4 v5, 0x0

    const/4 v6, 0x2

    const-string/jumbo v7, "startActivityInPackage"

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move/from16 v4, p10

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p10

    .line 6849
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v2, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v17, 0x0

    move/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v9, p5

    move-object/from16 v10, p6

    move/from16 v11, p7

    move/from16 v12, p8

    move-object/from16 v16, p9

    move/from16 v18, p10

    move-object/from16 v19, p11

    move-object/from16 v20, p12

    invoke-virtual/range {v1 .. v20}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityMayWait(Landroid/app/IApplicationThread;ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;Landroid/os/Bundle;ZILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I

    move-result v21

    .line 6852
    .local v21, "ret":I
    return v21
.end method

.method public startActivityIntentSender(Landroid/app/IApplicationThread;Landroid/content/IntentSender;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I
    .locals 19
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "intent"    # Landroid/content/IntentSender;
    .param p3, "fillInIntent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "flagsMask"    # I
    .param p9, "flagsValues"    # I
    .param p10, "options"    # Landroid/os/Bundle;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/TransactionTooLargeException;
        }
    .end annotation

    .prologue
    .line 6585
    const-string/jumbo v3, "startActivityIntentSender"

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 6587
    if-eqz p3, :cond_0

    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v3

    if-eqz v3, :cond_0

    .line 6588
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string v4, "File descriptors passed in Intent"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 6591
    :cond_0
    invoke-virtual/range {p2 .. p2}, Landroid/content/IntentSender;->getTarget()Landroid/content/IIntentSender;

    move-result-object v17

    .line 6592
    .local v17, "sender":Landroid/content/IIntentSender;
    move-object/from16 v0, v17

    instance-of v3, v0, Lcom/android/server/am/PendingIntentRecord;

    if-nez v3, :cond_1

    .line 6593
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string v4, "Bad PendingIntent object"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    :cond_1
    move-object/from16 v2, v17

    .line 6596
    check-cast v2, Lcom/android/server/am/PendingIntentRecord;

    .line 6598
    .local v2, "pir":Lcom/android/server/am/PendingIntentRecord;
    monitor-enter p0

    .line 6601
    :try_start_0
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v18

    .line 6602
    .local v18, "stack":Lcom/android/server/am/ActivityStack;
    move-object/from16 v0, v18

    iget-object v3, v0, Lcom/android/server/am/ActivityStack;->mResumedActivity:Lcom/android/server/am/ActivityRecord;

    if-eqz v3, :cond_2

    move-object/from16 v0, v18

    iget-object v3, v0, Lcom/android/server/am/ActivityStack;->mResumedActivity:Lcom/android/server/am/ActivityRecord;

    iget-object v3, v3, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    if-ne v3, v4, :cond_2

    .line 6604
    const-wide/16 v4, 0x0

    move-object/from16 v0, p0

    iput-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mAppSwitchesAllowedTime:J

    .line 6606
    :cond_2
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6607
    const/4 v3, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v14, 0x0

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move-object/from16 v8, p5

    move-object/from16 v9, p6

    move/from16 v10, p7

    move/from16 v11, p8

    move/from16 v12, p9

    move-object/from16 v13, p10

    move-object/from16 v15, p1

    invoke-virtual/range {v2 .. v15}, Lcom/android/server/am/PendingIntentRecord;->sendInner(ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;Landroid/app/IActivityContainer;Landroid/app/IApplicationThread;)I

    move-result v16

    .line 6609
    .local v16, "ret":I
    return v16

    .line 6606
    .end local v16    # "ret":I
    .end local v18    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v3

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v3
.end method

.method public final startActivityWithConfig(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/content/res/Configuration;Landroid/os/Bundle;I)I
    .locals 22
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "startFlags"    # I
    .param p9, "config"    # Landroid/content/res/Configuration;
    .param p10, "options"    # Landroid/os/Bundle;
    .param p11, "userId"    # I

    .prologue
    .line 6570
    const-string/jumbo v1, "startActivityWithConfig"

    move-object/from16 v0, p0

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 6571
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    const/4 v5, 0x0

    const/4 v6, 0x2

    const-string/jumbo v7, "startActivityWithConfig"

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move/from16 v4, p11

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p11

    .line 6574
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v3, -0x1

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/16 v17, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    move-object/from16 v2, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v9, p5

    move-object/from16 v10, p6

    move/from16 v11, p7

    move/from16 v12, p8

    move-object/from16 v15, p9

    move-object/from16 v16, p10

    move/from16 v18, p11

    invoke-virtual/range {v1 .. v20}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityMayWait(Landroid/app/IApplicationThread;ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;Landroid/os/Bundle;ZILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I

    move-result v21

    .line 6577
    .local v21, "ret":I
    return v21
.end method

.method startAlarmActivityLocked()V
    .locals 3

    .prologue
    .line 5742
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v1, "org.codeaurora.alarm.action.POWER_OFF_ALARM"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 5743
    .local v0, "intent":Landroid/content/Intent;
    const/high16 v1, 0x10000000

    invoke-virtual {v0, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 5744
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    sget-object v2, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    invoke-virtual {v1, v0, v2}, Landroid/content/Context;->startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    .line 5745
    return-void
.end method

.method startAppProblemLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 7
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 17551
    const/4 v4, 0x0

    iput-object v4, p1, Lcom/android/server/am/ProcessRecord;->errorReportReceiver:Landroid/content/ComponentName;

    .line 17553
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    .local v0, "arr$":[I
    array-length v2, v0

    .local v2, "len$":I
    const/4 v1, 0x0

    .local v1, "i$":I
    :goto_0
    if-ge v1, v2, :cond_1

    aget v3, v0, v1

    .line 17554
    .local v3, "userId":I
    iget v4, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    if-ne v4, v3, :cond_0

    .line 17555
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->flags:I

    invoke-static {v4, v5, v6}, Landroid/app/ApplicationErrorReport;->getErrorReportReceiver(Landroid/content/Context;Ljava/lang/String;I)Landroid/content/ComponentName;

    move-result-object v4

    iput-object v4, p1, Lcom/android/server/am/ProcessRecord;->errorReportReceiver:Landroid/content/ComponentName;

    .line 17553
    :cond_0
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 17559
    .end local v3    # "userId":I
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->skipCurrentReceiverLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 17560
    return-void
.end method

.method startAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;Ljava/lang/String;)Lcom/android/server/am/ActivityManagerService$Association;
    .locals 9
    .param p1, "sourceUid"    # I
    .param p2, "sourceProcess"    # Ljava/lang/String;
    .param p3, "targetUid"    # I
    .param p4, "targetComponent"    # Landroid/content/ComponentName;
    .param p5, "targetProcess"    # Ljava/lang/String;

    .prologue
    .line 24687
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    if-nez v1, :cond_1

    .line 24688
    const/4 v0, 0x0

    .line 24717
    :cond_0
    :goto_0
    return-object v0

    .line 24690
    :cond_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v1, p3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/util/ArrayMap;

    .line 24692
    .local v6, "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    if-nez v6, :cond_2

    .line 24693
    new-instance v6, Landroid/util/ArrayMap;

    .end local v6    # "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    invoke-direct {v6}, Landroid/util/ArrayMap;-><init>()V

    .line 24694
    .restart local v6    # "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v1, p3, v6}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 24696
    :cond_2
    invoke-virtual {v6, p4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Landroid/util/SparseArray;

    .line 24697
    .local v8, "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    if-nez v8, :cond_3

    .line 24698
    new-instance v8, Landroid/util/SparseArray;

    .end local v8    # "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    invoke-direct {v8}, Landroid/util/SparseArray;-><init>()V

    .line 24699
    .restart local v8    # "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    invoke-virtual {v6, p4, v8}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 24701
    :cond_3
    invoke-virtual {v8, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/util/ArrayMap;

    .line 24702
    .local v7, "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    if-nez v7, :cond_4

    .line 24703
    new-instance v7, Landroid/util/ArrayMap;

    .end local v7    # "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    invoke-direct {v7}, Landroid/util/ArrayMap;-><init>()V

    .line 24704
    .restart local v7    # "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    invoke-virtual {v8, p1, v7}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 24706
    :cond_4
    invoke-virtual {v7, p2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$Association;

    .line 24707
    .local v0, "ass":Lcom/android/server/am/ActivityManagerService$Association;
    if-nez v0, :cond_5

    .line 24708
    new-instance v0, Lcom/android/server/am/ActivityManagerService$Association;

    .end local v0    # "ass":Lcom/android/server/am/ActivityManagerService$Association;
    move v1, p1

    move-object v2, p2

    move v3, p3

    move-object v4, p4

    move-object v5, p5

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService$Association;-><init>(ILjava/lang/String;ILandroid/content/ComponentName;Ljava/lang/String;)V

    .line 24710
    .restart local v0    # "ass":Lcom/android/server/am/ActivityManagerService$Association;
    invoke-virtual {v7, p2, v0}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 24712
    :cond_5
    iget v1, v0, Lcom/android/server/am/ActivityManagerService$Association;->mCount:I

    add-int/lit8 v1, v1, 0x1

    iput v1, v0, Lcom/android/server/am/ActivityManagerService$Association;->mCount:I

    .line 24713
    iget v1, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    add-int/lit8 v1, v1, 0x1

    iput v1, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    .line 24714
    iget v1, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    const/4 v2, 0x1

    if-ne v1, v2, :cond_0

    .line 24715
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    iput-wide v2, v0, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    goto :goto_0
.end method

.method startHomeActivityLocked(ILjava/lang/String;)Z
    .locals 1
    .param p1, "userId"    # I
    .param p2, "reason"    # Ljava/lang/String;

    .prologue
    .line 5685
    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/am/ActivityManagerService;->startHomeActivityLocked(ILjava/lang/String;I)Z

    move-result v0

    return v0
.end method

.method startHomeActivityLocked(ILjava/lang/String;I)Z
    .locals 8
    .param p1, "userId"    # I
    .param p2, "reason"    # Ljava/lang/String;
    .param p3, "displayId"    # I

    .prologue
    const/4 v4, 0x1

    .line 5694
    iget v5, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    if-ne v5, v4, :cond_1

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;

    if-nez v5, :cond_1

    .line 5699
    const/4 v4, 0x0

    .line 5735
    :cond_0
    :goto_0
    return v4

    .line 5715
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getHomeIntent()Landroid/content/Intent;

    move-result-object v3

    .line 5718
    .local v3, "intent":Landroid/content/Intent;
    const/16 v5, 0x400

    invoke-direct {p0, v3, v5, p1}, Lcom/android/server/am/ActivityManagerService;->resolveActivityInfo(Landroid/content/Intent;II)Landroid/content/pm/ActivityInfo;

    move-result-object v0

    .line 5720
    .local v0, "aInfo":Landroid/content/pm/ActivityInfo;
    if-eqz v0, :cond_0

    .line 5721
    new-instance v5, Landroid/content/ComponentName;

    iget-object v6, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v7, v0, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v5, v6, v7}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v3, v5}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 5725
    new-instance v1, Landroid/content/pm/ActivityInfo;

    invoke-direct {v1, v0}, Landroid/content/pm/ActivityInfo;-><init>(Landroid/content/pm/ActivityInfo;)V

    .line 5726
    .end local v0    # "aInfo":Landroid/content/pm/ActivityInfo;
    .local v1, "aInfo":Landroid/content/pm/ActivityInfo;
    iget-object v5, v1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {p0, v5, p1}, Lcom/android/server/am/ActivityManagerService;->getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v5

    iput-object v5, v1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 5727
    iget-object v5, v1, Landroid/content/pm/ActivityInfo;->processName:Ljava/lang/String;

    iget-object v6, v1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p0, v5, v6, v4}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    .line 5729
    .local v2, "app":Lcom/android/server/am/ProcessRecord;
    if-eqz v2, :cond_2

    iget-object v5, v2, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-nez v5, :cond_3

    .line 5730
    :cond_2
    invoke-virtual {v3}, Landroid/content/Intent;->getFlags()I

    move-result v5

    const/high16 v6, 0x10000000

    or-int/2addr v5, v6

    invoke-virtual {v3, v5}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 5731
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v5, v3, v1, p2, p3}, Lcom/android/server/am/ActivityStackSupervisor;->startHomeActivity(Landroid/content/Intent;Landroid/content/pm/ActivityInfo;Ljava/lang/String;I)V

    :cond_3
    move-object v0, v1

    .end local v1    # "aInfo":Landroid/content/pm/ActivityInfo;
    .restart local v0    # "aInfo":Landroid/content/pm/ActivityInfo;
    goto :goto_0
.end method

.method public startInPlaceAnimationOnFrontMostApplication(Landroid/app/ActivityOptions;)V
    .locals 3
    .param p1, "opts"    # Landroid/app/ActivityOptions;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 12930
    if-eqz p1, :cond_0

    invoke-virtual {p1}, Landroid/app/ActivityOptions;->getAnimationType()I

    move-result v0

    const/16 v1, 0xa

    if-ne v0, v1, :cond_0

    invoke-virtual {p1}, Landroid/app/ActivityOptions;->getCustomInPlaceResId()I

    move-result v0

    if-nez v0, :cond_1

    .line 12932
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Expected in-place ActivityOption with valid animation"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 12935
    :cond_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const/16 v1, 0x11

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->prepareAppTransition(IZ)V

    .line 12936
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {p1}, Landroid/app/ActivityOptions;->getPackageName()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1}, Landroid/app/ActivityOptions;->getCustomInPlaceResId()I

    move-result v2

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->overridePendingAppTransitionInPlace(Ljava/lang/String;I)V

    .line 12938
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowManagerService;->executeAppTransition()V

    .line 12939
    return-void
.end method

.method public startInstrumentation(Landroid/content/ComponentName;Ljava/lang/String;ILandroid/os/Bundle;Landroid/app/IInstrumentationWatcher;Landroid/app/IUiAutomationConnection;ILjava/lang/String;)Z
    .locals 22
    .param p1, "className"    # Landroid/content/ComponentName;
    .param p2, "profileFile"    # Ljava/lang/String;
    .param p3, "flags"    # I
    .param p4, "arguments"    # Landroid/os/Bundle;
    .param p5, "watcher"    # Landroid/app/IInstrumentationWatcher;
    .param p6, "uiAutomationConnection"    # Landroid/app/IUiAutomationConnection;
    .param p7, "userId"    # I
    .param p8, "abiOverride"    # Ljava/lang/String;

    .prologue
    .line 23798
    const-string/jumbo v4, "startInstrumentation"

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 23799
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    const/4 v8, 0x0

    const/4 v9, 0x2

    const-string/jumbo v10, "startInstrumentation"

    const/4 v11, 0x0

    move-object/from16 v4, p0

    move/from16 v7, p7

    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p7

    .line 23802
    if-eqz p4, :cond_0

    invoke-virtual/range {p4 .. p4}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v4

    if-eqz v4, :cond_0

    .line 23803
    new-instance v4, Ljava/lang/IllegalArgumentException;

    const-string v5, "File descriptors passed in Bundle"

    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 23806
    :cond_0
    monitor-enter p0

    .line 23807
    const/16 v16, 0x0

    .line 23808
    .local v16, "ii":Landroid/content/pm/InstrumentationInfo;
    const/4 v14, 0x0

    .line 23810
    .local v14, "ai":Landroid/content/pm/ApplicationInfo;
    :try_start_0
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v4

    const/16 v5, 0x400

    move-object/from16 v0, p1

    invoke-virtual {v4, v0, v5}, Landroid/content/pm/PackageManager;->getInstrumentationInfo(Landroid/content/ComponentName;I)Landroid/content/pm/InstrumentationInfo;

    move-result-object v16

    .line 23812
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    move-object/from16 v0, v16

    iget-object v5, v0, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    const/16 v6, 0x400

    move/from16 v0, p7

    invoke-interface {v4, v5, v6, v0}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v14

    .line 23817
    :goto_0
    if-nez v16, :cond_1

    .line 23818
    :try_start_1
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Unable to find instrumentation info for: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p0

    move-object/from16 v1, p5

    move-object/from16 v2, p1

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailure(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    .line 23820
    const/4 v4, 0x0

    monitor-exit p0

    .line 23857
    :goto_1
    return v4

    .line 23822
    :cond_1
    if-nez v14, :cond_2

    .line 23823
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Unable to find instrumentation target package: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, v16

    iget-object v5, v0, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p0

    move-object/from16 v1, p5

    move-object/from16 v2, p1

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailure(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    .line 23825
    const/4 v4, 0x0

    monitor-exit p0

    goto :goto_1

    .line 23855
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v4

    .line 23828
    :cond_2
    :try_start_2
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v4

    move-object/from16 v0, v16

    iget-object v5, v0, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    move-object/from16 v0, v16

    iget-object v6, v0, Landroid/content/pm/InstrumentationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v4, v5, v6}, Landroid/content/pm/PackageManager;->checkSignatures(Ljava/lang/String;Ljava/lang/String;)I

    move-result v17

    .line 23830
    .local v17, "match":I
    if-gez v17, :cond_3

    const/4 v4, -0x1

    move/from16 v0, v17

    if-eq v0, v4, :cond_3

    .line 23831
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Permission Denial: starting instrumentation "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " from pid="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", uid="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " not allowed because package "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, v16

    iget-object v5, v0, Landroid/content/pm/InstrumentationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " does not have a signature matching the target "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, v16

    iget-object v5, v0, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v18

    .line 23838
    .local v18, "msg":Ljava/lang/String;
    move-object/from16 v0, p0

    move-object/from16 v1, p5

    move-object/from16 v2, p1

    move-object/from16 v3, v18

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailure(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    .line 23839
    new-instance v4, Ljava/lang/SecurityException;

    move-object/from16 v0, v18

    invoke-direct {v4, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 23842
    .end local v18    # "msg":Ljava/lang/String;
    :cond_3
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v20

    .line 23844
    .local v20, "origId":J
    move-object/from16 v0, v16

    iget-object v5, v0, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    const/4 v6, -0x1

    const/4 v7, 0x1

    const/4 v8, 0x0

    const/4 v9, 0x1

    const/4 v10, 0x1

    const/4 v11, 0x0

    const-string/jumbo v13, "start instr"

    move-object/from16 v4, p0

    move/from16 v12, p7

    invoke-direct/range {v4 .. v13}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 23846
    const/4 v4, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, p8

    invoke-virtual {v0, v14, v4, v1}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;ZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v15

    .line 23847
    .local v15, "app":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, p1

    iput-object v0, v15, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    .line 23848
    iput-object v14, v15, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;

    .line 23849
    move-object/from16 v0, p2

    iput-object v0, v15, Lcom/android/server/am/ProcessRecord;->instrumentationProfileFile:Ljava/lang/String;

    .line 23850
    move-object/from16 v0, p4

    iput-object v0, v15, Lcom/android/server/am/ProcessRecord;->instrumentationArguments:Landroid/os/Bundle;

    .line 23851
    move-object/from16 v0, p5

    iput-object v0, v15, Lcom/android/server/am/ProcessRecord;->instrumentationWatcher:Landroid/app/IInstrumentationWatcher;

    .line 23852
    move-object/from16 v0, p6

    iput-object v0, v15, Lcom/android/server/am/ProcessRecord;->instrumentationUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    .line 23853
    move-object/from16 v0, p1

    iput-object v0, v15, Lcom/android/server/am/ProcessRecord;->instrumentationResultClass:Landroid/content/ComponentName;

    .line 23854
    invoke-static/range {v20 .. v21}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 23855
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 23857
    const/4 v4, 0x1

    goto/16 :goto_1

    .line 23815
    .end local v15    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v17    # "match":I
    .end local v20    # "origId":J
    :catch_0
    move-exception v4

    goto/16 :goto_0

    .line 23814
    :catch_1
    move-exception v4

    goto/16 :goto_0
.end method

.method startIsolatedProcess(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Runnable;)I
    .locals 18
    .param p1, "entryPoint"    # Ljava/lang/String;
    .param p2, "entryPointArgs"    # [Ljava/lang/String;
    .param p3, "processName"    # Ljava/lang/String;
    .param p4, "abiOverride"    # Ljava/lang/String;
    .param p5, "uid"    # I
    .param p6, "crashHandler"    # Ljava/lang/Runnable;

    .prologue
    .line 4961
    monitor-enter p0

    .line 4962
    :try_start_0
    new-instance v3, Landroid/content/pm/ApplicationInfo;

    invoke-direct {v3}, Landroid/content/pm/ApplicationInfo;-><init>()V

    .line 4971
    .local v3, "info":Landroid/content/pm/ApplicationInfo;
    const/16 v1, 0x3e8

    iput v1, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 4972
    move-object/from16 v0, p3

    iput-object v0, v3, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    .line 4973
    move-object/from16 v0, p1

    iput-object v0, v3, Landroid/content/pm/ApplicationInfo;->className:Ljava/lang/String;

    .line 4974
    const-string v1, "android"

    iput-object v1, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 4975
    const/4 v4, 0x0

    const/4 v5, 0x0

    const-string v6, ""

    const/4 v7, 0x0

    const/4 v8, 0x1

    const/4 v9, 0x1

    const/4 v11, 0x1

    const/16 v16, 0x0

    move-object/from16 v1, p0

    move-object/from16 v2, p3

    move/from16 v10, p5

    move-object/from16 v12, p4

    move-object/from16 v13, p1

    move-object/from16 v14, p2

    move-object/from16 v15, p6

    invoke-virtual/range {v1 .. v16}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZIZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v17

    .line 4980
    .local v17, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v17, :cond_0

    move-object/from16 v0, v17

    iget v1, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    :goto_0
    monitor-exit p0

    return v1

    :cond_0
    const/4 v1, 0x0

    goto :goto_0

    .line 4981
    .end local v3    # "info":Landroid/content/pm/ApplicationInfo;
    .end local v17    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public startLockTaskMode(I)V
    .locals 2
    .param p1, "taskId"    # I

    .prologue
    .line 13640
    monitor-enter p0

    .line 13641
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v0

    .line 13642
    .local v0, "task":Lcom/android/server/am/TaskRecord;
    if-eqz v0, :cond_0

    .line 13643
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->startLockTaskModeLocked(Lcom/android/server/am/TaskRecord;)V

    .line 13645
    :cond_0
    monitor-exit p0

    .line 13646
    return-void

    .line 13645
    .end local v0    # "task":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public startLockTaskMode(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 13650
    monitor-enter p0

    .line 13651
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 13652
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 13653
    monitor-exit p0

    .line 13660
    :goto_0
    return-void

    .line 13655
    :cond_0
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    .line 13656
    .local v1, "task":Lcom/android/server/am/TaskRecord;
    if-eqz v1, :cond_1

    .line 13657
    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->startLockTaskModeLocked(Lcom/android/server/am/TaskRecord;)V

    .line 13659
    :cond_1
    monitor-exit p0

    goto :goto_0

    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v1    # "task":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method startLockTaskModeLocked(Lcom/android/server/am/TaskRecord;)V
    .locals 10
    .param p1, "task"    # Lcom/android/server/am/TaskRecord;

    .prologue
    const/4 v6, 0x1

    .line 13589
    iget v7, p1, Lcom/android/server/am/TaskRecord;->mLockTaskAuth:I

    if-nez v7, :cond_1

    .line 13636
    :cond_0
    :goto_0
    return-void

    .line 13593
    :cond_1
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->isScreenPinningAllowed()Z

    move-result v7

    if-eqz v7, :cond_0

    .line 13601
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 13602
    .local v0, "callingUid":I
    const/16 v7, 0x3e8

    if-ne v0, v7, :cond_3

    move v1, v6

    .line 13603
    .local v1, "isSystemInitiated":Z
    :goto_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 13605
    .local v2, "ident":J
    :try_start_0
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v7}, Lcom/android/server/am/ActivityStackSupervisor;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v4

    .line 13609
    .local v4, "stack":Lcom/android/server/am/ActivityStack;
    if-nez v1, :cond_6

    iget-boolean v7, p0, Lcom/android/server/am/ActivityManagerService;->mIsSupportManualScreenPinning:Z

    if-eqz v7, :cond_6

    .line 13611
    iput v0, p1, Lcom/android/server/am/TaskRecord;->mLockTaskUid:I

    .line 13612
    iget v7, p1, Lcom/android/server/am/TaskRecord;->mLockTaskAuth:I

    if-ne v7, v6, :cond_4

    .line 13615
    const-class v6, Lcom/android/server/statusbar/StatusBarManagerInternal;

    invoke-static {v6}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/statusbar/StatusBarManagerInternal;

    .line 13617
    .local v5, "statusBarManager":Lcom/android/server/statusbar/StatusBarManagerInternal;
    if-eqz v5, :cond_2

    .line 13618
    invoke-interface {v5}, Lcom/android/server/statusbar/StatusBarManagerInternal;->showScreenPinningRequest()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 13634
    :cond_2
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 13602
    .end local v1    # "isSystemInitiated":Z
    .end local v2    # "ident":J
    .end local v4    # "stack":Lcom/android/server/am/ActivityStack;
    .end local v5    # "statusBarManager":Lcom/android/server/statusbar/StatusBarManagerInternal;
    :cond_3
    const/4 v1, 0x0

    goto :goto_1

    .line 13623
    .restart local v1    # "isSystemInitiated":Z
    .restart local v2    # "ident":J
    .restart local v4    # "stack":Lcom/android/server/am/ActivityStack;
    :cond_4
    if-eqz v4, :cond_5

    :try_start_1
    invoke-virtual {v4}, Lcom/android/server/am/ActivityStack;->topTask()Lcom/android/server/am/TaskRecord;

    move-result-object v7

    if-eq p1, v7, :cond_6

    .line 13624
    :cond_5
    new-instance v6, Ljava/lang/IllegalArgumentException;

    const-string v7, "Invalid task, not in foreground"

    invoke-direct {v6, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v6
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13634
    .end local v4    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v6

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v6

    .line 13629
    .restart local v4    # "stack":Lcom/android/server/am/ActivityStack;
    :cond_6
    :try_start_2
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    if-eqz v1, :cond_7

    const/4 v6, 0x2

    :cond_7
    const-string/jumbo v8, "startLockTask"

    const/4 v9, 0x1

    invoke-virtual {v7, p1, v6, v8, v9}, Lcom/android/server/am/ActivityStackSupervisor;->setLockTaskModeLocked(Lcom/android/server/am/TaskRecord;ILjava/lang/String;Z)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 13634
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0
.end method

.method public startLockTaskModeOnCurrent()V
    .locals 5
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 13664
    const-string v3, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v4, "startLockTaskModeOnCurrent"

    invoke-virtual {p0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13666
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 13668
    .local v0, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 13669
    :try_start_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->topRunningActivityLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 13670
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v2, :cond_0

    .line 13671
    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->startLockTaskModeLocked(Lcom/android/server/am/TaskRecord;)V

    .line 13673
    :cond_0
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13675
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13677
    return-void

    .line 13673
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 13675
    :catchall_1
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method public startNextMatchingActivity(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/Bundle;)Z
    .locals 35
    .param p1, "callingActivity"    # Landroid/os/IBinder;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "options"    # Landroid/os/Bundle;

    .prologue
    .line 6654
    if-eqz p2, :cond_0

    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v2

    const/4 v3, 0x1

    if-ne v2, v3, :cond_0

    .line 6655
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "File descriptors passed in Intent"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 6658
    :cond_0
    monitor-enter p0

    .line 6659
    :try_start_0
    invoke-static/range {p1 .. p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v27

    .line 6660
    .local v27, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v27, :cond_1

    .line 6661
    invoke-static/range {p3 .. p3}, Landroid/app/ActivityOptions;->abort(Landroid/os/Bundle;)V

    .line 6662
    const/4 v2, 0x0

    monitor-exit p0

    .line 6752
    :goto_0
    return v2

    .line 6664
    :cond_1
    move-object/from16 v0, v27

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_2

    move-object/from16 v0, v27

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v2, :cond_3

    .line 6666
    :cond_2
    invoke-static/range {p3 .. p3}, Landroid/app/ActivityOptions;->abort(Landroid/os/Bundle;)V

    .line 6667
    const/4 v2, 0x0

    monitor-exit p0

    goto :goto_0

    .line 6753
    .end local v27    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v2

    :goto_1
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2

    .line 6669
    .restart local v27    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_3
    :try_start_1
    new-instance v4, Landroid/content/Intent;

    move-object/from16 v0, p2

    invoke-direct {v4, v0}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 6671
    .end local p2    # "intent":Landroid/content/Intent;
    .local v4, "intent":Landroid/content/Intent;
    :try_start_2
    move-object/from16 v0, v27

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v2}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v2

    move-object/from16 v0, v27

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v3}, Landroid/content/Intent;->getType()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v4, v2, v3}, Landroid/content/Intent;->setDataAndType(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent;

    .line 6673
    const/4 v2, 0x0

    invoke-virtual {v4, v2}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 6675
    invoke-virtual {v4}, Landroid/content/Intent;->getFlags()I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    move-result v2

    and-int/lit8 v2, v2, 0x8

    if-eqz v2, :cond_7

    const/16 v25, 0x1

    .line 6677
    .local v25, "debug":Z
    :goto_2
    const/4 v6, 0x0

    .line 6679
    .local v6, "aInfo":Landroid/content/pm/ActivityInfo;
    :try_start_3
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    move-object/from16 v0, v27

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->resolvedType:Ljava/lang/String;

    const v5, 0x10400

    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v7

    invoke-interface {v2, v4, v3, v5, v7}, Landroid/content/pm/IPackageManager;->queryIntentActivities(Landroid/content/Intent;Ljava/lang/String;II)Ljava/util/List;

    move-result-object v32

    .line 6686
    .local v32, "resolves":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    if-eqz v32, :cond_8

    invoke-interface/range {v32 .. v32}, Ljava/util/List;->size()I

    move-result v24

    .line 6687
    .local v24, "N":I
    :goto_3
    const/16 v26, 0x0

    .local v26, "i":I
    :goto_4
    move/from16 v0, v26

    move/from16 v1, v24

    if-ge v0, v1, :cond_5

    .line 6688
    move-object/from16 v0, v32

    move/from16 v1, v26

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v30

    check-cast v30, Landroid/content/pm/ResolveInfo;

    .line 6689
    .local v30, "rInfo":Landroid/content/pm/ResolveInfo;
    move-object/from16 v0, v30

    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v27

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_9

    move-object/from16 v0, v30

    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    move-object/from16 v0, v27

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_9

    .line 6693
    add-int/lit8 v26, v26, 0x1

    .line 6694
    move/from16 v0, v26

    move/from16 v1, v24

    if-ge v0, v1, :cond_4

    .line 6695
    move-object/from16 v0, v32

    move/from16 v1, v26

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/ResolveInfo;

    iget-object v6, v2, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    .line 6697
    :cond_4
    if-eqz v25, :cond_5

    .line 6698
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Next matching activity: found current "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, v27

    iget-object v5, v0, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v5, "/"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, v27

    iget-object v5, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v5, v5, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 6700
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Next matching activity: next is "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget-object v5, v6, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v5, "/"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget-object v5, v6, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 6709
    .end local v24    # "N":I
    .end local v26    # "i":I
    .end local v30    # "rInfo":Landroid/content/pm/ResolveInfo;
    .end local v32    # "resolves":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :cond_5
    :goto_5
    if-nez v6, :cond_a

    .line 6711
    :try_start_4
    invoke-static/range {p3 .. p3}, Landroid/app/ActivityOptions;->abort(Landroid/os/Bundle;)V

    .line 6712
    if-eqz v25, :cond_6

    const-string v2, "ActivityManager"

    const-string v3, "Next matching activity: nothing found"

    invoke-static {v2, v3}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 6713
    :cond_6
    const/4 v2, 0x0

    monitor-exit p0

    move-object/from16 p2, v4

    .end local v4    # "intent":Landroid/content/Intent;
    .restart local p2    # "intent":Landroid/content/Intent;
    goto/16 :goto_0

    .line 6675
    .end local v6    # "aInfo":Landroid/content/pm/ActivityInfo;
    .end local v25    # "debug":Z
    .end local p2    # "intent":Landroid/content/Intent;
    .restart local v4    # "intent":Landroid/content/Intent;
    :cond_7
    const/16 v25, 0x0

    goto/16 :goto_2

    .line 6686
    .restart local v6    # "aInfo":Landroid/content/pm/ActivityInfo;
    .restart local v25    # "debug":Z
    .restart local v32    # "resolves":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :cond_8
    const/16 v24, 0x0

    goto/16 :goto_3

    .line 6687
    .restart local v24    # "N":I
    .restart local v26    # "i":I
    .restart local v30    # "rInfo":Landroid/content/pm/ResolveInfo;
    :cond_9
    add-int/lit8 v26, v26, 0x1

    goto/16 :goto_4

    .line 6716
    .end local v24    # "N":I
    .end local v26    # "i":I
    .end local v30    # "rInfo":Landroid/content/pm/ResolveInfo;
    .end local v32    # "resolves":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :cond_a
    new-instance v2, Landroid/content/ComponentName;

    iget-object v3, v6, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v5, v6, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v2, v3, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v4, v2}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 6718
    invoke-virtual {v4}, Landroid/content/Intent;->getFlags()I

    move-result v2

    const v3, -0x1e000001

    and-int/2addr v2, v3

    invoke-virtual {v4, v2}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 6729
    move-object/from16 v0, v27

    iget-boolean v0, v0, Lcom/android/server/am/ActivityRecord;->finishing:Z

    move/from16 v34, v0

    .line 6730
    .local v34, "wasFinishing":Z
    const/4 v2, 0x1

    move-object/from16 v0, v27

    iput-boolean v2, v0, Lcom/android/server/am/ActivityRecord;->finishing:Z

    .line 6733
    move-object/from16 v0, v27

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->resultTo:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v33, v0

    .line 6734
    .local v33, "resultTo":Lcom/android/server/am/ActivityRecord;
    move-object/from16 v0, v27

    iget-object v10, v0, Lcom/android/server/am/ActivityRecord;->resultWho:Ljava/lang/String;

    .line 6735
    .local v10, "resultWho":Ljava/lang/String;
    move-object/from16 v0, v27

    iget v11, v0, Lcom/android/server/am/ActivityRecord;->requestCode:I

    .line 6736
    .local v11, "requestCode":I
    const/4 v2, 0x0

    move-object/from16 v0, v27

    iput-object v2, v0, Lcom/android/server/am/ActivityRecord;->resultTo:Lcom/android/server/am/ActivityRecord;

    .line 6737
    if-eqz v33, :cond_b

    .line 6738
    move-object/from16 v0, v33

    move-object/from16 v1, v27

    invoke-virtual {v0, v1, v10, v11}, Lcom/android/server/am/ActivityRecord;->removeResultsLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;I)V

    .line 6741
    :cond_b
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v28

    .line 6742
    .local v28, "origId":J
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, v27

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move-object/from16 v0, v27

    iget-object v5, v0, Lcom/android/server/am/ActivityRecord;->resolvedType:Ljava/lang/String;

    const/4 v7, 0x0

    const/4 v8, 0x0

    if-eqz v33, :cond_c

    move-object/from16 v0, v33

    iget-object v9, v0, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    :goto_6
    const/4 v12, -0x1

    move-object/from16 v0, v27

    iget v13, v0, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    move-object/from16 v0, v27

    iget-object v14, v0, Lcom/android/server/am/ActivityRecord;->launchedFromPackage:Ljava/lang/String;

    const/4 v15, -0x1

    move-object/from16 v0, v27

    iget v0, v0, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    move/from16 v16, v0

    const/16 v17, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    const/16 v21, 0x0

    const/16 v22, 0x0

    const/16 v23, 0x0

    move-object/from16 v18, p3

    invoke-virtual/range {v2 .. v23}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/content/pm/ActivityInfo;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IIILjava/lang/String;IIILandroid/os/Bundle;ZZ[Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;Lcom/android/server/am/TaskRecord;)I

    move-result v31

    .line 6746
    .local v31, "res":I
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6748
    move/from16 v0, v34

    move-object/from16 v1, v27

    iput-boolean v0, v1, Lcom/android/server/am/ActivityRecord;->finishing:Z

    .line 6749
    if-eqz v31, :cond_d

    .line 6750
    const/4 v2, 0x0

    monitor-exit p0

    move-object/from16 p2, v4

    .end local v4    # "intent":Landroid/content/Intent;
    .restart local p2    # "intent":Landroid/content/Intent;
    goto/16 :goto_0

    .line 6742
    .end local v31    # "res":I
    .end local p2    # "intent":Landroid/content/Intent;
    .restart local v4    # "intent":Landroid/content/Intent;
    :cond_c
    const/4 v9, 0x0

    goto :goto_6

    .line 6752
    .restart local v31    # "res":I
    :cond_d
    const/4 v2, 0x1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    move-object/from16 p2, v4

    .end local v4    # "intent":Landroid/content/Intent;
    .restart local p2    # "intent":Landroid/content/Intent;
    goto/16 :goto_0

    .line 6753
    .end local v6    # "aInfo":Landroid/content/pm/ActivityInfo;
    .end local v10    # "resultWho":Ljava/lang/String;
    .end local v11    # "requestCode":I
    .end local v25    # "debug":Z
    .end local v28    # "origId":J
    .end local v31    # "res":I
    .end local v33    # "resultTo":Lcom/android/server/am/ActivityRecord;
    .end local v34    # "wasFinishing":Z
    .end local p2    # "intent":Landroid/content/Intent;
    .restart local v4    # "intent":Landroid/content/Intent;
    :catchall_1
    move-exception v2

    move-object/from16 p2, v4

    .end local v4    # "intent":Landroid/content/Intent;
    .restart local p2    # "intent":Landroid/content/Intent;
    goto/16 :goto_1

    .line 6706
    .end local p2    # "intent":Landroid/content/Intent;
    .restart local v4    # "intent":Landroid/content/Intent;
    .restart local v6    # "aInfo":Landroid/content/pm/ActivityInfo;
    .restart local v25    # "debug":Z
    :catch_0
    move-exception v2

    goto/16 :goto_5
.end method

.method public startObservingNativeCrashes()V
    .locals 1

    .prologue
    .line 3274
    new-instance v0, Lcom/android/server/am/NativeCrashListener;

    invoke-direct {v0, p0}, Lcom/android/server/am/NativeCrashListener;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 3275
    .local v0, "ncl":Lcom/android/server/am/NativeCrashListener;
    invoke-virtual {v0}, Lcom/android/server/am/NativeCrashListener;->start()V

    .line 3276
    return-void
.end method

.method final startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZIZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;I)Lcom/android/server/am/ProcessRecord;
    .locals 18
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p3, "knownToBeDead"    # Z
    .param p4, "intentFlags"    # I
    .param p5, "hostingType"    # Ljava/lang/String;
    .param p6, "hostingName"    # Landroid/content/ComponentName;
    .param p7, "allowWhileBooting"    # Z
    .param p8, "isolated"    # Z
    .param p9, "isolatedUid"    # I
    .param p10, "keepIfLarge"    # Z
    .param p11, "abiOverride"    # Ljava/lang/String;
    .param p12, "entryPoint"    # Ljava/lang/String;
    .param p13, "entryPointArgs"    # [Ljava/lang/String;
    .param p14, "crashHandler"    # Ljava/lang/Runnable;
    .param p15, "displayId"    # I

    .prologue
    .line 5037
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v16

    .line 5039
    .local v16, "startTime":J
    if-nez p8, :cond_3

    .line 5040
    move-object/from16 v0, p2

    iget v6, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, p10

    invoke-virtual {v0, v1, v6, v2}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v7

    .line 5041
    .local v7, "app":Lcom/android/server/am/ProcessRecord;
    const-string/jumbo v6, "startProcess: after getProcessRecord"

    move-object/from16 v0, p0

    move-wide/from16 v1, v16

    invoke-direct {v0, v1, v2, v6}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5043
    and-int/lit8 v6, p4, 0x4

    if-eqz v6, :cond_0

    .line 5046
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, p2

    iget-object v8, v0, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    move-object/from16 v0, p2

    iget v10, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v6, v8, v10}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v6

    if-eqz v6, :cond_1

    .line 5049
    const/4 v6, 0x0

    .line 5191
    :goto_0
    return-object v6

    .line 5058
    :cond_0
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, p2

    iget-object v8, v0, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    move-object/from16 v0, p2

    iget v10, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v6, v8, v10}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)Ljava/lang/Object;

    .line 5059
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, p2

    iget-object v8, v0, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    move-object/from16 v0, p2

    iget v10, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v6, v8, v10}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v6

    if-eqz v6, :cond_1

    .line 5060
    const/16 v6, 0x7540

    const/4 v8, 0x3

    new-array v8, v8, [Ljava/lang/Object;

    const/4 v10, 0x0

    move-object/from16 v0, p2

    iget v11, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v11}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v11

    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v11

    aput-object v11, v8, v10

    const/4 v10, 0x1

    move-object/from16 v0, p2

    iget v11, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v11

    aput-object v11, v8, v10

    const/4 v10, 0x2

    move-object/from16 v0, p2

    iget-object v11, v0, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    aput-object v11, v8, v10

    invoke-static {v6, v8}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 5063
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, p2

    iget-object v8, v0, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    move-object/from16 v0, p2

    iget v10, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v6, v8, v10}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)Ljava/lang/Object;

    .line 5064
    if-eqz v7, :cond_1

    .line 5065
    const/4 v6, 0x0

    iput-boolean v6, v7, Lcom/android/server/am/ProcessRecord;->bad:Z

    .line 5076
    :cond_1
    :goto_1
    monitor-enter p0

    .line 5077
    :try_start_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->nativeMigrateToBoost()I

    .line 5078
    const/4 v6, 0x1

    move-object/from16 v0, p0

    iput-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mIsBoosted:Z

    .line 5079
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v10

    move-object/from16 v0, p0

    iput-wide v10, v0, Lcom/android/server/am/ActivityManagerService;->mBoostStartTime:J

    .line 5080
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v8, 0x3a

    invoke-virtual {v6, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v14

    .line 5081
    .local v14, "msg":Landroid/os/Message;
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-wide/16 v10, 0xbb8

    invoke-virtual {v6, v14, v10, v11}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 5082
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 5094
    if-eqz v7, :cond_5

    iget v6, v7, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v6, :cond_5

    .line 5095
    if-eqz p3, :cond_2

    iget-object v6, v7, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v6, :cond_4

    .line 5100
    :cond_2
    move-object/from16 v0, p2

    iget-object v6, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p2

    iget v8, v0, Landroid/content/pm/ApplicationInfo;->versionCode:I

    move-object/from16 v0, p0

    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v7, v6, v8, v10}, Lcom/android/server/am/ProcessRecord;->addPackage(Ljava/lang/String;ILcom/android/server/am/ProcessStatsService;)Z

    .line 5101
    const-string/jumbo v6, "startProcess: done, added package to proc"

    move-object/from16 v0, p0

    move-wide/from16 v1, v16

    invoke-direct {v0, v1, v2, v6}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    move-object v6, v7

    .line 5102
    goto/16 :goto_0

    .line 5071
    .end local v7    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v14    # "msg":Landroid/os/Message;
    :cond_3
    const/4 v7, 0x0

    .restart local v7    # "app":Lcom/android/server/am/ProcessRecord;
    goto :goto_1

    .line 5082
    :catchall_0
    move-exception v6

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v6

    .line 5108
    .restart local v14    # "msg":Landroid/os/Message;
    :cond_4
    const-string/jumbo v6, "startProcess: bad proc running, killing"

    move-object/from16 v0, p0

    move-wide/from16 v1, v16

    invoke-direct {v0, v1, v2, v6}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5109
    iget v6, v7, Lcom/android/server/am/ProcessRecord;->uid:I

    iget v8, v7, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v6, v8}, Lcom/android/server/am/ActivityManagerService;->killProcessGroup(II)V

    .line 5110
    const/4 v6, 0x1

    const/4 v8, 0x1

    move-object/from16 v0, p0

    invoke-direct {v0, v7, v6, v8}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 5111
    const-string/jumbo v6, "startProcess: done killing old proc"

    move-object/from16 v0, p0

    move-wide/from16 v1, v16

    invoke-direct {v0, v1, v2, v6}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5114
    :cond_5
    if-eqz p6, :cond_6

    invoke-virtual/range {p6 .. p6}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v9

    .line 5117
    .local v9, "hostingNameStr":Ljava/lang/String;
    :goto_2
    if-nez v7, :cond_d

    .line 5118
    const-string/jumbo v6, "startProcess: creating new process record"

    move-object/from16 v0, p0

    move-wide/from16 v1, v16

    invoke-direct {v0, v1, v2, v6}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5121
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mReplacedPackages:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v6

    if-nez v6, :cond_8

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mReplacedPackages:Ljava/util/ArrayList;

    move-object/from16 v0, p2

    iget-object v8, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v6, v8}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_8

    .line 5122
    const-string v6, "broadcast"

    move-object/from16 v0, p5

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_8

    move-object/from16 v0, p2

    iget v6, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v6, v6, 0x1

    if-nez v6, :cond_8

    .line 5124
    new-instance v13, Ljava/io/File;

    move-object/from16 v0, p2

    iget-object v6, v0, Landroid/content/pm/ApplicationInfo;->sourceDir:Ljava/lang/String;

    invoke-direct {v13, v6}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 5125
    .local v13, "apkFile":Ljava/io/File;
    invoke-virtual {v13}, Ljava/io/File;->exists()Z

    move-result v6

    if-nez v6, :cond_7

    .line 5126
    const-string v6, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, p2

    iget-object v10, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v10, "\'s sourceDir has been changed. Discard old broadcast request."

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v6, v8}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 5127
    const/4 v6, 0x0

    goto/16 :goto_0

    .line 5114
    .end local v9    # "hostingNameStr":Ljava/lang/String;
    .end local v13    # "apkFile":Ljava/io/File;
    :cond_6
    const/4 v9, 0x0

    goto :goto_2

    .line 5129
    .restart local v9    # "hostingNameStr":Ljava/lang/String;
    .restart local v13    # "apkFile":Ljava/io/File;
    :cond_7
    const/high16 v6, 0x10000000

    and-int v6, v6, p4

    if-nez v6, :cond_8

    .line 5130
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mReplacedPackages:Ljava/util/ArrayList;

    move-object/from16 v0, p2

    iget-object v8, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v6, v8}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 5135
    .end local v13    # "apkFile":Ljava/io/File;
    :cond_8
    move-object/from16 v0, p0

    move-object/from16 v1, p2

    move-object/from16 v2, p1

    move/from16 v3, p8

    move/from16 v4, p9

    invoke-virtual {v0, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->newProcessRecordLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZI)Lcom/android/server/am/ProcessRecord;

    move-result-object v7

    .line 5136
    if-nez v7, :cond_9

    .line 5137
    const-string v6, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Failed making new process record for "

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, p1

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v10, "/"

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move-object/from16 v0, p2

    iget v10, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v10, " isolated="

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move/from16 v0, p8

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v6, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5139
    const/4 v6, 0x0

    goto/16 :goto_0

    .line 5141
    :cond_9
    move-object/from16 v0, p14

    iput-object v0, v7, Lcom/android/server/am/ProcessRecord;->crashHandler:Ljava/lang/Runnable;

    .line 5143
    iget-object v6, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p0

    invoke-direct {v0, v6}, Lcom/android/server/am/ActivityManagerService;->isImsProcess(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_a

    .line 5144
    iget-object v6, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v6, v6, 0x9

    const/16 v8, 0x9

    if-ne v6, v8, :cond_a

    .line 5145
    const/4 v6, 0x1

    iput-boolean v6, v7, Lcom/android/server/am/ProcessRecord;->persistent:Z

    .line 5146
    const/16 v6, -0xc

    iput v6, v7, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    .line 5148
    const-string v6, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "[IMS-AM] startProcessLocked () Set ["

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    iget-object v10, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v10, v10, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v10, ":"

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    iget-object v10, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v10, v10, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v10, "] as persistent"

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v6, v8}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 5154
    :cond_a
    const-string v6, ""

    if-eqz v6, :cond_b

    const-string v6, ""

    invoke-virtual {v6}, Ljava/lang/String;->isEmpty()Z

    move-result v6

    if-nez v6, :cond_b

    .line 5156
    iget-object v6, v7, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    const-string/jumbo v8, "diagandroid.iqd"

    invoke-virtual {v6, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_b

    .line 5157
    const/16 v6, -0xc

    iput v6, v7, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    .line 5162
    :cond_b
    const-string/jumbo v6, "startProcess: done creating new process record"

    move-object/from16 v0, p0

    move-wide/from16 v1, v16

    invoke-direct {v0, v1, v2, v6}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5170
    :goto_3
    move/from16 v0, p15

    iput v0, v7, Lcom/android/server/am/ProcessRecord;->displayId:I

    .line 5175
    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v6, :cond_e

    move-object/from16 v0, p0

    move-object/from16 v1, p2

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z

    move-result v6

    if-nez v6, :cond_e

    if-nez p7, :cond_e

    .line 5178
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_c

    .line 5179
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 5183
    :cond_c
    const-string/jumbo v6, "startProcess: returning with proc on hold"

    move-object/from16 v0, p0

    move-wide/from16 v1, v16

    invoke-direct {v0, v1, v2, v6}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    move-object v6, v7

    .line 5184
    goto/16 :goto_0

    .line 5165
    :cond_d
    move-object/from16 v0, p2

    iget-object v6, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p2

    iget v8, v0, Landroid/content/pm/ApplicationInfo;->versionCode:I

    move-object/from16 v0, p0

    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v7, v6, v8, v10}, Lcom/android/server/am/ProcessRecord;->addPackage(Ljava/lang/String;ILcom/android/server/am/ProcessStatsService;)Z

    .line 5166
    const-string/jumbo v6, "startProcess: added package to existing proc"

    move-object/from16 v0, p0

    move-wide/from16 v1, v16

    invoke-direct {v0, v1, v2, v6}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    goto :goto_3

    .line 5187
    :cond_e
    const-string/jumbo v6, "startProcess: stepping in to startProcess"

    move-object/from16 v0, p0

    move-wide/from16 v1, v16

    invoke-direct {v0, v1, v2, v6}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    move-object/from16 v6, p0

    move-object/from16 v8, p5

    move-object/from16 v10, p11

    move-object/from16 v11, p12

    move-object/from16 v12, p13

    .line 5188
    invoke-direct/range {v6 .. v12}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V

    .line 5190
    const-string/jumbo v6, "startProcess: done starting proc!"

    move-object/from16 v0, p0

    move-wide/from16 v1, v16

    invoke-direct {v0, v1, v2, v6}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 5191
    iget v6, v7, Lcom/android/server/am/ProcessRecord;->pid:I

    if-eqz v6, :cond_f

    move-object v6, v7

    goto/16 :goto_0

    :cond_f
    const/4 v6, 0x0

    goto/16 :goto_0
.end method

.method final startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZZ)Lcom/android/server/am/ProcessRecord;
    .locals 11
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p3, "knownToBeDead"    # Z
    .param p4, "intentFlags"    # I
    .param p5, "hostingType"    # Ljava/lang/String;
    .param p6, "hostingName"    # Landroid/content/ComponentName;
    .param p7, "allowWhileBooting"    # Z
    .param p8, "isolated"    # Z
    .param p9, "keepIfLarge"    # Z

    .prologue
    .line 5007
    if-eqz p6, :cond_0

    invoke-virtual/range {p6 .. p6}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_0

    .line 5008
    invoke-virtual/range {p6 .. p6}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v0

    iget v1, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    invoke-direct {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->needToBlockImsRequest(Ljava/lang/String;I)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 5009
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "[IMS-AM] startProcessLocked(0) Block ["

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual/range {p6 .. p6}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "] of non-active user ["

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget v2, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "]"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 5011
    const/4 v0, 0x0

    .line 5017
    :goto_0
    return-object v0

    :cond_0
    const/4 v10, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    move/from16 v9, p9

    invoke-virtual/range {v0 .. v10}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZZI)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    goto :goto_0
.end method

.method final startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZZI)Lcom/android/server/am/ProcessRecord;
    .locals 16
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p3, "knownToBeDead"    # Z
    .param p4, "intentFlags"    # I
    .param p5, "hostingType"    # Ljava/lang/String;
    .param p6, "hostingName"    # Landroid/content/ComponentName;
    .param p7, "allowWhileBooting"    # Z
    .param p8, "isolated"    # Z
    .param p9, "keepIfLarge"    # Z
    .param p10, "displayId"    # I

    .prologue
    .line 5026
    const/4 v9, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move/from16 v3, p3

    move/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    move/from16 v10, p9

    move/from16 v15, p10

    invoke-virtual/range {v0 .. v15}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZIZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;I)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    return-object v0
.end method

.method startProfilesLocked()V
    .locals 10

    .prologue
    .line 27892
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v7

    iget v8, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    const/4 v9, 0x0

    invoke-virtual {v7, v8, v9}, Lcom/android/server/pm/UserManagerService;->getProfiles(IZ)Ljava/util/List;

    move-result-object v3

    .line 27894
    .local v3, "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    new-instance v4, Ljava/util/ArrayList;

    invoke-interface {v3}, Ljava/util/List;->size()I

    move-result v7

    invoke-direct {v4, v7}, Ljava/util/ArrayList;-><init>(I)V

    .line 27897
    .local v4, "toStart":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-static {}, Landroid/os/PersonaManager;->getKnoxInfo()Landroid/os/Bundle;

    move-result-object v6

    .line 27898
    .local v6, "versionInfo":Landroid/os/Bundle;
    const-string v7, "2.0"

    const-string/jumbo v8, "version"

    invoke-virtual {v6, v8}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_0

    .line 27899
    invoke-direct {p0, v3}, Lcom/android/server/am/ActivityManagerService;->pruneDeletedContainerProfilesLocked(Ljava/util/List;)Ljava/util/List;

    move-result-object v3

    .line 27903
    :cond_0
    invoke-interface {v3}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .local v1, "i$":Ljava/util/Iterator;
    :cond_1
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_2

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/content/pm/UserInfo;

    .line 27904
    .local v5, "user":Landroid/content/pm/UserInfo;
    iget v7, v5, Landroid/content/pm/UserInfo;->flags:I

    and-int/lit8 v7, v7, 0x10

    const/16 v8, 0x10

    if-ne v7, v8, :cond_1

    iget v7, v5, Landroid/content/pm/UserInfo;->id:I

    iget v8, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    if-eq v7, v8, :cond_1

    .line 27906
    invoke-interface {v4, v5}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_0

    .line 27909
    .end local v5    # "user":Landroid/content/pm/UserInfo;
    :cond_2
    invoke-interface {v4}, Ljava/util/List;->size()I

    move-result v2

    .line 27910
    .local v2, "n":I
    const/4 v0, 0x0

    .line 27911
    .local v0, "i":I
    :goto_1
    if-ge v0, v2, :cond_3

    const/4 v7, 0x2

    if-ge v0, v7, :cond_3

    .line 27912
    invoke-interface {v4, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/content/pm/UserInfo;

    iget v7, v7, Landroid/content/pm/UserInfo;->id:I

    invoke-virtual {p0, v7}, Lcom/android/server/am/ActivityManagerService;->startUserInBackground(I)Z

    .line 27911
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 27914
    :cond_3
    if-ge v0, v2, :cond_4

    .line 27915
    const-string v7, "ActivityManager_MU"

    const-string v8, "More profiles than MAX_RUNNING_USERS"

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 27917
    :cond_4
    return-void
.end method

.method startRunningVoiceLocked(Landroid/service/voice/IVoiceInteractionSession;I)V
    .locals 3
    .param p1, "session"    # Landroid/service/voice/IVoiceInteractionSession;
    .param p2, "targetUid"    # I

    .prologue
    .line 15498
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    new-instance v2, Landroid/os/WorkSource;

    invoke-direct {v2, p2}, Landroid/os/WorkSource;-><init>(I)V

    invoke-virtual {v1, v2}, Landroid/os/PowerManager$WakeLock;->setWorkSource(Landroid/os/WorkSource;)V

    .line 15499
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz v1, :cond_0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    invoke-interface {v1}, Landroid/service/voice/IVoiceInteractionSession;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-interface {p1}, Landroid/service/voice/IVoiceInteractionSession;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    if-eq v1, v2, :cond_1

    .line 15500
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz v1, :cond_2

    const/4 v0, 0x1

    .line 15501
    .local v0, "wasRunningVoice":Z
    :goto_0
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    .line 15502
    if-nez v0, :cond_1

    .line 15503
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mVoiceWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v1}, Landroid/os/PowerManager$WakeLock;->acquire()V

    .line 15504
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateSleepIfNeededLocked()V

    .line 15507
    .end local v0    # "wasRunningVoice":Z
    :cond_1
    return-void

    .line 15500
    :cond_2
    const/4 v0, 0x0

    goto :goto_0
.end method

.method startSamsungPinnedHomeActivityLocked(ILjava/lang/String;I)Z
    .locals 26
    .param p1, "userId"    # I
    .param p2, "reason"    # Ljava/lang/String;
    .param p3, "displayId"    # I

    .prologue
    .line 29495
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getSamsungPinnedHomeIntent()Landroid/content/Intent;

    move-result-object v4

    .line 29496
    .local v4, "intent":Landroid/content/Intent;
    const/16 v2, 0x400

    move-object/from16 v0, p0

    move/from16 v1, p1

    invoke-direct {v0, v4, v2, v1}, Lcom/android/server/am/ActivityManagerService;->resolveActivityInfo(Landroid/content/Intent;II)Landroid/content/pm/ActivityInfo;

    move-result-object v24

    .line 29499
    .local v24, "aInfo":Landroid/content/pm/ActivityInfo;
    if-eqz v24, :cond_2

    .line 29500
    new-instance v2, Landroid/content/ComponentName;

    move-object/from16 v0, v24

    iget-object v3, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v24

    iget-object v5, v0, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v2, v3, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v4, v2}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 29504
    new-instance v6, Landroid/content/pm/ActivityInfo;

    move-object/from16 v0, v24

    invoke-direct {v6, v0}, Landroid/content/pm/ActivityInfo;-><init>(Landroid/content/pm/ActivityInfo;)V

    .line 29505
    .end local v24    # "aInfo":Landroid/content/pm/ActivityInfo;
    .local v6, "aInfo":Landroid/content/pm/ActivityInfo;
    iget-object v2, v6, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v0, p0

    move/from16 v1, p1

    invoke-virtual {v0, v2, v1}, Lcom/android/server/am/ActivityManagerService;->getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v2

    iput-object v2, v6, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 29506
    iget-object v2, v6, Landroid/content/pm/ActivityInfo;->processName:Ljava/lang/String;

    iget-object v3, v6, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    const/4 v5, 0x1

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v3, v5}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v25

    .line 29508
    .local v25, "app":Lcom/android/server/am/ProcessRecord;
    if-eqz v25, :cond_0

    move-object/from16 v0, v25

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-nez v2, :cond_1

    .line 29509
    :cond_0
    invoke-virtual {v4}, Landroid/content/Intent;->getFlags()I

    move-result v2

    const/high16 v3, 0x10000000

    or-int/2addr v2, v3

    invoke-virtual {v4, v2}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 29510
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    const/16 v21, 0x0

    const/16 v22, 0x0

    const/16 v23, 0x0

    invoke-virtual/range {v2 .. v23}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/content/pm/ActivityInfo;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IIILjava/lang/String;IIILandroid/os/Bundle;ZZ[Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;Lcom/android/server/am/TaskRecord;)I

    .line 29514
    .end local v25    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_1
    :goto_0
    const/4 v2, 0x1

    return v2

    .end local v6    # "aInfo":Landroid/content/pm/ActivityInfo;
    .restart local v24    # "aInfo":Landroid/content/pm/ActivityInfo;
    :cond_2
    move-object/from16 v6, v24

    .end local v24    # "aInfo":Landroid/content/pm/ActivityInfo;
    .restart local v6    # "aInfo":Landroid/content/pm/ActivityInfo;
    goto :goto_0
.end method

.method startSamsungPinnedHomeIfNeeded(Ljava/lang/String;)Z
    .locals 6
    .param p1, "reason"    # Ljava/lang/String;

    .prologue
    .line 29480
    const/4 v2, 0x1

    .line 29481
    .local v2, "targetDisplay":I
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v5, v2}, Lcom/android/server/am/ActivityStackSupervisor;->getHomeStack(I)Lcom/android/server/am/ActivityStack;

    move-result-object v1

    .line 29482
    .local v1, "samsungHomeStack":Lcom/android/server/am/ActivityStack;
    if-eqz v1, :cond_1

    .line 29483
    invoke-virtual {v1}, Lcom/android/server/am/ActivityStack;->getAllTasks()Ljava/util/ArrayList;

    move-result-object v3

    .line 29484
    .local v3, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/TaskRecord;>;"
    invoke-virtual {v3}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v0

    .local v0, "i$":Ljava/util/Iterator;
    :cond_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_1

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/TaskRecord;

    .line 29485
    .local v4, "tr":Lcom/android/server/am/TaskRecord;
    invoke-virtual {v4}, Lcom/android/server/am/TaskRecord;->isSamsungPinnedHomeTask()Z

    move-result v5

    if-eqz v5, :cond_0

    .line 29486
    const/4 v5, 0x0

    .line 29491
    .end local v0    # "i$":Ljava/util/Iterator;
    .end local v3    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/TaskRecord;>;"
    .end local v4    # "tr":Lcom/android/server/am/TaskRecord;
    :goto_0
    return v5

    .line 29490
    :cond_1
    iget v5, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-virtual {p0, v5, p1, v2}, Lcom/android/server/am/ActivityManagerService;->startSamsungPinnedHomeActivityLocked(ILjava/lang/String;I)Z

    .line 29491
    const/4 v5, 0x1

    goto :goto_0
.end method

.method public startService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;I)Landroid/content/ComponentName;
    .locals 8
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "service"    # Landroid/content/Intent;
    .param p3, "resolvedType"    # Ljava/lang/String;
    .param p4, "callingPackage"    # Ljava/lang/String;
    .param p5, "userId"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/TransactionTooLargeException;
        }
    .end annotation

    .prologue
    .line 21703
    const/4 v6, 0x0

    const/4 v7, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v4, p4

    move v5, p5

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->startService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;ILandroid/os/IBinder;I)Landroid/content/ComponentName;

    move-result-object v0

    return-object v0
.end method

.method public startService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;ILandroid/os/IBinder;I)Landroid/content/ComponentName;
    .locals 18
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "service"    # Landroid/content/Intent;
    .param p3, "resolvedType"    # Ljava/lang/String;
    .param p4, "callingPackage"    # Ljava/lang/String;
    .param p5, "userId"    # I
    .param p6, "callerActivityToken"    # Landroid/os/IBinder;
    .param p7, "displayId"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/TransactionTooLargeException;
        }
    .end annotation

    .prologue
    .line 21709
    const-string/jumbo v2, "startService"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 21711
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v2

    const/4 v3, 0x1

    if-ne v2, v3, :cond_0

    .line 21712
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "File descriptors passed in Intent"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 21715
    :cond_0
    if-nez p4, :cond_1

    .line 21716
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "callingPackage cannot be null"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 21721
    :cond_1
    monitor-enter p0

    .line 21758
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v6

    .line 21759
    .local v6, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    .line 21760
    .local v7, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v16

    .line 21761
    .local v16, "origId":J
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move-object/from16 v8, p4

    move/from16 v9, p5

    move-object/from16 v10, p6

    move/from16 v11, p7

    invoke-virtual/range {v2 .. v11}, Lcom/android/server/am/ActiveServices;->startServiceLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;IILjava/lang/String;ILandroid/os/IBinder;I)Landroid/content/ComponentName;

    move-result-object v15

    .line 21764
    .local v15, "res":Landroid/content/ComponentName;
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 21768
    invoke-static {}, Landroid/os/StrictMode;->getThreadPolicy()Landroid/os/StrictMode$ThreadPolicy;

    move-result-object v14

    .line 21769
    .local v14, "oldPolicy":Landroid/os/StrictMode$ThreadPolicy;
    new-instance v2, Landroid/os/StrictMode$ThreadPolicy$Builder;

    invoke-direct {v2, v14}, Landroid/os/StrictMode$ThreadPolicy$Builder;-><init>(Landroid/os/StrictMode$ThreadPolicy;)V

    invoke-virtual {v2}, Landroid/os/StrictMode$ThreadPolicy$Builder;->permitDiskReads()Landroid/os/StrictMode$ThreadPolicy$Builder;

    move-result-object v2

    invoke-virtual {v2}, Landroid/os/StrictMode$ThreadPolicy$Builder;->permitDiskWrites()Landroid/os/StrictMode$ThreadPolicy$Builder;

    move-result-object v2

    invoke-virtual {v2}, Landroid/os/StrictMode$ThreadPolicy$Builder;->build()Landroid/os/StrictMode$ThreadPolicy;

    move-result-object v2

    invoke-static {v2}, Landroid/os/StrictMode;->setThreadPolicy(Landroid/os/StrictMode$ThreadPolicy;)V

    .line 21771
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v2, :cond_2

    .line 21773
    :try_start_1
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move/from16 v0, p5

    invoke-virtual {v2, v15, v0}, Lcom/android/server/am/ActiveServices;->getServiceByName(Landroid/content/ComponentName;I)Lcom/android/server/am/ServiceRecord;

    move-result-object v13

    .line 21774
    .local v13, "lServiceRecord":Lcom/android/server/am/ServiceRecord;
    if-eqz v13, :cond_2

    .line 21775
    new-instance v2, Lcom/android/server/enterprise/application/ApplicationUsage;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v2, v3}, Lcom/android/server/enterprise/application/ApplicationUsage;-><init>(Landroid/content/Context;)V

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v3, v13}, Lcom/android/server/am/ActiveServices;->makeRunningServiceInfoLocked(Lcom/android/server/am/ServiceRecord;)Landroid/app/ActivityManager$RunningServiceInfo;

    move-result-object v3

    invoke-virtual {v2, v3}, Lcom/android/server/enterprise/application/ApplicationUsage;->appServiceStartTime(Landroid/app/ActivityManager$RunningServiceInfo;)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 21783
    .end local v13    # "lServiceRecord":Lcom/android/server/am/ServiceRecord;
    :cond_2
    :goto_0
    :try_start_2
    invoke-static {v14}, Landroid/os/StrictMode;->setThreadPolicy(Landroid/os/StrictMode$ThreadPolicy;)V

    .line 21786
    monitor-exit p0

    return-object v15

    .line 21779
    :catch_0
    move-exception v12

    .line 21780
    .local v12, "e":Ljava/lang/Exception;
    invoke-virtual {v12}, Ljava/lang/Exception;->printStackTrace()V

    goto :goto_0

    .line 21787
    .end local v6    # "callingPid":I
    .end local v7    # "callingUid":I
    .end local v12    # "e":Ljava/lang/Exception;
    .end local v14    # "oldPolicy":Landroid/os/StrictMode$ThreadPolicy;
    .end local v15    # "res":Landroid/content/ComponentName;
    .end local v16    # "origId":J
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v2
.end method

.method startServiceInPackage(ILandroid/content/Intent;Ljava/lang/String;Ljava/lang/String;I)Landroid/content/ComponentName;
    .locals 7
    .param p1, "uid"    # I
    .param p2, "service"    # Landroid/content/Intent;
    .param p3, "resolvedType"    # Ljava/lang/String;
    .param p4, "callingPackage"    # Ljava/lang/String;
    .param p5, "userId"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/TransactionTooLargeException;
        }
    .end annotation

    .prologue
    .line 21792
    const/4 v1, 0x0

    move-object v0, p0

    move v2, p1

    move-object v3, p2

    move-object v4, p3

    move-object v5, p4

    move v6, p5

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->startServiceInPackage(Landroid/app/IApplicationThread;ILandroid/content/Intent;Ljava/lang/String;Ljava/lang/String;I)Landroid/content/ComponentName;

    move-result-object v0

    return-object v0
.end method

.method startServiceInPackage(Landroid/app/IApplicationThread;ILandroid/content/Intent;Ljava/lang/String;Ljava/lang/String;I)Landroid/content/ComponentName;
    .locals 11
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "uid"    # I
    .param p3, "service"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "callingPackage"    # Ljava/lang/String;
    .param p6, "userId"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/TransactionTooLargeException;
        }
    .end annotation

    .prologue
    .line 21800
    monitor-enter p0

    .line 21804
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v8

    .line 21805
    .local v8, "origId":J
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v4, -0x1

    move-object v1, p1

    move-object v2, p3

    move-object v3, p4

    move v5, p2

    move-object/from16 v6, p5

    move/from16 v7, p6

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActiveServices;->startServiceLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;IILjava/lang/String;I)Landroid/content/ComponentName;

    move-result-object v10

    .line 21807
    .local v10, "res":Landroid/content/ComponentName;
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 21808
    monitor-exit p0

    return-object v10

    .line 21809
    .end local v8    # "origId":J
    .end local v10    # "res":Landroid/content/ComponentName;
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method startSetupActivityLocked()V
    .locals 30

    .prologue
    .line 5776
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mCheckedForSetup:Z

    if-eqz v2, :cond_1

    .line 5824
    :cond_0
    :goto_0
    return-void

    .line 5783
    :cond_1
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v26

    .line 5784
    .local v26, "resolver":Landroid/content/ContentResolver;
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v3, 0x1

    if-eq v2, v3, :cond_0

    const-string/jumbo v2, "device_provisioned"

    const/4 v3, 0x0

    move-object/from16 v0, v26

    invoke-static {v0, v2, v3}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v2

    if-eqz v2, :cond_0

    .line 5787
    const/4 v2, 0x1

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mCheckedForSetup:Z

    .line 5790
    new-instance v4, Landroid/content/Intent;

    const-string v2, "android.intent.action.UPGRADE_SETUP"

    invoke-direct {v4, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 5791
    .local v4, "intent":Landroid/content/Intent;
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v2

    const/16 v3, 0x80

    invoke-virtual {v2, v4, v3}, Landroid/content/pm/PackageManager;->queryIntentActivities(Landroid/content/Intent;I)Ljava/util/List;

    move-result-object v28

    .line 5795
    .local v28, "ris":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    const/16 v27, 0x0

    .line 5796
    .local v27, "ri":Landroid/content/pm/ResolveInfo;
    const/16 v24, 0x0

    .local v24, "i":I
    :goto_1
    if-eqz v28, :cond_2

    invoke-interface/range {v28 .. v28}, Ljava/util/List;->size()I

    move-result v2

    move/from16 v0, v24

    if-ge v0, v2, :cond_2

    .line 5797
    move-object/from16 v0, v28

    move/from16 v1, v24

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/ResolveInfo;

    iget-object v2, v2, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v2, v2, 0x1

    if-eqz v2, :cond_4

    .line 5799
    move-object/from16 v0, v28

    move/from16 v1, v24

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v27

    .end local v27    # "ri":Landroid/content/pm/ResolveInfo;
    check-cast v27, Landroid/content/pm/ResolveInfo;

    .line 5804
    .restart local v27    # "ri":Landroid/content/pm/ResolveInfo;
    :cond_2
    if-eqz v27, :cond_0

    .line 5805
    move-object/from16 v0, v27

    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;

    if-eqz v2, :cond_5

    move-object/from16 v0, v27

    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;

    const-string v3, "android.SETUP_VERSION"

    invoke-virtual {v2, v3}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v29

    .line 5808
    .local v29, "vers":Ljava/lang/String;
    :goto_2
    if-nez v29, :cond_3

    move-object/from16 v0, v27

    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;

    if-eqz v2, :cond_3

    .line 5809
    move-object/from16 v0, v27

    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;

    const-string v3, "android.SETUP_VERSION"

    invoke-virtual {v2, v3}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v29

    .line 5812
    :cond_3
    const-string/jumbo v2, "last_setup_shown"

    move-object/from16 v0, v26

    invoke-static {v0, v2}, Landroid/provider/Settings$Secure;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v25

    .line 5814
    .local v25, "lastVers":Ljava/lang/String;
    if-eqz v29, :cond_0

    move-object/from16 v0, v29

    move-object/from16 v1, v25

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_0

    .line 5815
    const/high16 v2, 0x10000000

    invoke-virtual {v4, v2}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 5816
    new-instance v2, Landroid/content/ComponentName;

    move-object/from16 v0, v27

    iget-object v3, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v27

    iget-object v5, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v5, v5, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v2, v3, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v4, v2}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 5818
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v3, 0x0

    const/4 v5, 0x0

    move-object/from16 v0, v27

    iget-object v6, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    const/16 v21, 0x0

    const/16 v22, 0x0

    const/16 v23, 0x0

    invoke-virtual/range {v2 .. v23}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/content/pm/ActivityInfo;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IIILjava/lang/String;IIILandroid/os/Bundle;ZZ[Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;Lcom/android/server/am/TaskRecord;)I

    goto/16 :goto_0

    .line 5796
    .end local v25    # "lastVers":Ljava/lang/String;
    .end local v29    # "vers":Ljava/lang/String;
    :cond_4
    add-int/lit8 v24, v24, 0x1

    goto/16 :goto_1

    .line 5805
    :cond_5
    const/16 v29, 0x0

    goto :goto_2
.end method

.method startTimeTrackingFocusedActivityLocked()V
    .locals 2

    .prologue
    .line 15281
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    if-nez v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    if-eqz v0, :cond_0

    .line 15282
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    iget-object v1, v1, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-virtual {v0, v1}, Lcom/android/server/am/AppTimeTracker;->start(Ljava/lang/String;)V

    .line 15284
    :cond_0
    return-void
.end method

.method public startUserInBackground(I)Z
    .locals 1
    .param p1, "userId"    # I

    .prologue
    .line 27334
    const/4 v0, 0x0

    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->startUser(IZ)Z

    move-result v0

    return v0
.end method

.method startUserInForeground(ILandroid/app/Dialog;)Z
    .locals 2
    .param p1, "userId"    # I
    .param p2, "dlg"    # Landroid/app/Dialog;

    .prologue
    .line 27341
    const/4 v1, 0x1

    invoke-direct {p0, p1, v1}, Lcom/android/server/am/ActivityManagerService;->startUser(IZ)Z

    move-result v0

    .line 27342
    .local v0, "result":Z
    invoke-virtual {p2}, Landroid/app/Dialog;->dismiss()V

    .line 27343
    return v0
.end method

.method public startVoiceActivity(Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;ILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I
    .locals 22
    .param p1, "callingPackage"    # Ljava/lang/String;
    .param p2, "callingPid"    # I
    .param p3, "callingUid"    # I
    .param p4, "intent"    # Landroid/content/Intent;
    .param p5, "resolvedType"    # Ljava/lang/String;
    .param p6, "session"    # Landroid/service/voice/IVoiceInteractionSession;
    .param p7, "interactor"    # Lcom/android/internal/app/IVoiceInteractor;
    .param p8, "startFlags"    # I
    .param p9, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p10, "options"    # Landroid/os/Bundle;
    .param p11, "userId"    # I

    .prologue
    .line 6617
    const-string v1, "android.permission.BIND_VOICE_INTERACTION"

    move-object/from16 v0, p0

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    .line 6619
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: startVoiceActivity() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "android.permission.BIND_VOICE_INTERACTION"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v21

    .line 6623
    .local v21, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    move-object/from16 v0, v21

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6624
    new-instance v1, Ljava/lang/SecurityException;

    move-object/from16 v0, v21

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6626
    .end local v21    # "msg":Ljava/lang/String;
    :cond_0
    if-eqz p6, :cond_1

    if-nez p7, :cond_2

    .line 6627
    :cond_1
    new-instance v1, Ljava/lang/NullPointerException;

    const-string/jumbo v2, "null session or interactor"

    invoke-direct {v1, v2}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6629
    :cond_2
    const/4 v5, 0x0

    const/4 v6, 0x2

    const-string/jumbo v7, "startVoiceActivity"

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move/from16 v2, p2

    move/from16 v3, p3

    move/from16 v4, p11

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p11

    .line 6632
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v2, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v17, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    move/from16 v3, p3

    move-object/from16 v4, p1

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move-object/from16 v7, p6

    move-object/from16 v8, p7

    move/from16 v12, p8

    move-object/from16 v13, p9

    move-object/from16 v16, p10

    move/from16 v18, p11

    invoke-virtual/range {v1 .. v20}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityMayWait(Landroid/app/IApplicationThread;ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;Landroid/os/Bundle;ZILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I

    move-result v1

    return v1
.end method

.method public stopAppSwitches()V
    .locals 6

    .prologue
    const-wide/16 v4, 0x1388

    .line 15539
    const-string v1, "android.permission.STOP_APP_SWITCHES"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    .line 15541
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Requires permission android.permission.STOP_APP_SWITCHES"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 15545
    :cond_0
    monitor-enter p0

    .line 15546
    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    add-long/2addr v2, v4

    iput-wide v2, p0, Lcom/android/server/am/ActivityManagerService;->mAppSwitchesAllowedTime:J

    .line 15548
    const/4 v1, 0x0

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mDidAppSwitch:Z

    .line 15549
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v2, 0x15

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 15550
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v2, 0x15

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    .line 15551
    .local v0, "msg":Landroid/os/Message;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-wide/16 v2, 0x1388

    invoke-virtual {v1, v0, v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 15552
    monitor-exit p0

    .line 15553
    return-void

    .line 15552
    .end local v0    # "msg":Landroid/os/Message;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method stopAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;)V
    .locals 10
    .param p1, "sourceUid"    # I
    .param p2, "sourceProcess"    # Ljava/lang/String;
    .param p3, "targetUid"    # I
    .param p4, "targetComponent"    # Landroid/content/ComponentName;

    .prologue
    .line 24722
    iget-boolean v4, p0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    if-nez v4, :cond_1

    .line 24746
    :cond_0
    :goto_0
    return-void

    .line 24725
    :cond_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v4, p3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/util/ArrayMap;

    .line 24727
    .local v1, "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    if-eqz v1, :cond_0

    .line 24730
    invoke-virtual {v1, p4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/util/SparseArray;

    .line 24731
    .local v3, "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    if-eqz v3, :cond_0

    .line 24734
    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/util/ArrayMap;

    .line 24735
    .local v2, "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    if-eqz v2, :cond_0

    .line 24738
    invoke-virtual {v2, p2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$Association;

    .line 24739
    .local v0, "ass":Lcom/android/server/am/ActivityManagerService$Association;
    if-eqz v0, :cond_0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    if-lez v4, :cond_0

    .line 24742
    iget v4, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    .line 24743
    iget v4, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    if-nez v4, :cond_0

    .line 24744
    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService$Association;->mTime:J

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    iget-wide v8, v0, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    sub-long/2addr v6, v8

    add-long/2addr v4, v6

    iput-wide v4, v0, Lcom/android/server/am/ActivityManagerService$Association;->mTime:J

    goto :goto_0
.end method

.method public stopLockTaskMode()V
    .locals 10

    .prologue
    const/4 v6, 0x1

    .line 13681
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v5}, Lcom/android/server/am/ActivityStackSupervisor;->getLockedTaskLocked()Lcom/android/server/am/TaskRecord;

    move-result-object v1

    .line 13682
    .local v1, "lockTask":Lcom/android/server/am/TaskRecord;
    if-nez v1, :cond_0

    .line 13760
    :goto_0
    return-void

    .line 13687
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 13688
    .local v0, "callingUid":I
    iget v4, v1, Lcom/android/server/am/TaskRecord;->mLockTaskUid:I

    .line 13694
    .local v4, "lockTaskUid":I
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getLockTaskModeState()I

    move-result v5

    if-ne v5, v6, :cond_2

    if-eq v0, v4, :cond_2

    if-nez v4, :cond_1

    if-nez v4, :cond_2

    iget v5, v1, Lcom/android/server/am/TaskRecord;->effectiveUid:I

    if-eq v0, v5, :cond_2

    .line 13698
    :cond_1
    new-instance v5, Ljava/lang/SecurityException;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Invalid uid, expected "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " callingUid="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " effectiveUid="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget v7, v1, Lcom/android/server/am/TaskRecord;->effectiveUid:I

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {v5, v6}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 13702
    :cond_2
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 13704
    .local v2, "ident":J
    :try_start_0
    const-string v5, "ActivityManager"

    const-string/jumbo v6, "stopLockTaskMode"

    invoke-static {v5, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 13706
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 13707
    :try_start_1
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v6, 0x0

    const/4 v7, 0x0

    const-string/jumbo v8, "stopLockTask"

    const/4 v9, 0x1

    invoke-virtual {v5, v6, v7, v8, v9}, Lcom/android/server/am/ActivityStackSupervisor;->setLockTaskModeLocked(Lcom/android/server/am/TaskRecord;ILjava/lang/String;Z)V

    .line 13709
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13711
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 13709
    :catchall_0
    move-exception v5

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v5
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 13711
    :catchall_1
    move-exception v5

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v5
.end method

.method public stopLockTaskModeOnCurrent()V
    .locals 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 13764
    const-string v2, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string/jumbo v3, "stopLockTaskModeOnCurrent"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 13766
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 13768
    .local v0, "ident":J
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->stopLockTaskMode()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 13770
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13772
    return-void

    .line 13770
    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
.end method

.method public stopService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;I)I
    .locals 4
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "service"    # Landroid/content/Intent;
    .param p3, "resolvedType"    # Ljava/lang/String;
    .param p4, "userId"    # I

    .prologue
    .line 21817
    invoke-static {}, Landroid/os/StrictMode;->getThreadPolicy()Landroid/os/StrictMode$ThreadPolicy;

    move-result-object v1

    .line 21818
    .local v1, "oldPolicy":Landroid/os/StrictMode$ThreadPolicy;
    new-instance v2, Landroid/os/StrictMode$ThreadPolicy$Builder;

    invoke-direct {v2, v1}, Landroid/os/StrictMode$ThreadPolicy$Builder;-><init>(Landroid/os/StrictMode$ThreadPolicy;)V

    invoke-virtual {v2}, Landroid/os/StrictMode$ThreadPolicy$Builder;->permitDiskReads()Landroid/os/StrictMode$ThreadPolicy$Builder;

    move-result-object v2

    invoke-virtual {v2}, Landroid/os/StrictMode$ThreadPolicy$Builder;->permitDiskWrites()Landroid/os/StrictMode$ThreadPolicy$Builder;

    move-result-object v2

    invoke-virtual {v2}, Landroid/os/StrictMode$ThreadPolicy$Builder;->build()Landroid/os/StrictMode$ThreadPolicy;

    move-result-object v2

    invoke-static {v2}, Landroid/os/StrictMode;->setThreadPolicy(Landroid/os/StrictMode$ThreadPolicy;)V

    .line 21823
    if-eqz p2, :cond_0

    :try_start_0
    invoke-virtual {p2}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v2

    if-eqz v2, :cond_0

    .line 21824
    new-instance v2, Lcom/android/server/enterprise/application/ApplicationUsage;

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v2, v3}, Lcom/android/server/enterprise/application/ApplicationUsage;-><init>(Landroid/content/Context;)V

    invoke-virtual {p2}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v3

    invoke-virtual {v3}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3, p4}, Lcom/android/server/enterprise/application/ApplicationUsage;->appServiceStopTime(Ljava/lang/String;I)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 21830
    :cond_0
    :goto_0
    invoke-static {v1}, Landroid/os/StrictMode;->setThreadPolicy(Landroid/os/StrictMode$ThreadPolicy;)V

    .line 21833
    const-string/jumbo v2, "stopService"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 21835
    if-eqz p2, :cond_1

    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v2

    const/4 v3, 0x1

    if-ne v2, v3, :cond_1

    .line 21836
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "File descriptors passed in Intent"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 21827
    :catch_0
    move-exception v0

    .line 21828
    .local v0, "e":Ljava/lang/Exception;
    const-string v2, "ActivityManager"

    const-string v3, ""

    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_0

    .line 21839
    .end local v0    # "e":Ljava/lang/Exception;
    :cond_1
    monitor-enter p0

    .line 21840
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v2, p1, p2, p3, p4}, Lcom/android/server/am/ActiveServices;->stopServiceLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;I)I

    move-result v2

    monitor-exit p0

    return v2

    .line 21841
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v2
.end method

.method public stopServiceToken(Landroid/content/ComponentName;Landroid/os/IBinder;I)Z
    .locals 1
    .param p1, "className"    # Landroid/content/ComponentName;
    .param p2, "token"    # Landroid/os/IBinder;
    .param p3, "startId"    # I

    .prologue
    .line 21864
    monitor-enter p0

    .line 21865
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->stopServiceTokenLocked(Landroid/content/ComponentName;Landroid/os/IBinder;I)Z

    move-result v0

    monitor-exit p0

    return v0

    .line 21866
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public stopUser(ILandroid/app/IStopUserCallback;)I
    .locals 8
    .param p1, "userId"    # I
    .param p2, "callback"    # Landroid/app/IStopUserCallback;

    .prologue
    .line 28014
    const-string v5, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {p0, v5}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v5

    if-eqz v5, :cond_0

    .line 28016
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Permission Denial: switchUser() from pid="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", uid="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " requires "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 28020
    .local v1, "msg":Ljava/lang/String;
    const-string v5, "ActivityManager"

    invoke-static {v5, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 28021
    new-instance v5, Ljava/lang/SecurityException;

    invoke-direct {v5, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 28023
    .end local v1    # "msg":Ljava/lang/String;
    :cond_0
    if-ltz p1, :cond_1

    if-nez p1, :cond_2

    .line 28024
    :cond_1
    new-instance v5, Ljava/lang/IllegalArgumentException;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Can\'t stop primary user "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {v5, v6}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 28026
    :cond_2
    const-string/jumbo v5, "no_debugging_features"

    invoke-virtual {p0, v5, p1}, Lcom/android/server/am/ActivityManagerService;->enforceShellRestriction(Ljava/lang/String;I)V

    .line 28027
    monitor-enter p0

    .line 28028
    :try_start_0
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->stopUserLocked(ILandroid/app/IStopUserCallback;)I

    move-result v2

    .line 28030
    .local v2, "stopUserLockedInt":I
    const/16 v5, 0x64

    if-lt p1, v5, :cond_6

    const/16 v5, 0xc8

    if-gt p1, v5, :cond_6

    .line 28031
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    .line 28032
    .local v3, "tempList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    array-length v5, v5

    if-ge v0, v5, :cond_4

    .line 28033
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    aget v5, v5, v0

    if-eq v5, p1, :cond_3

    .line 28034
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    aget v5, v5, v0

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 28032
    :goto_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 28036
    :cond_3
    const-string v5, "ActivityManager"

    const-string/jumbo v6, "stopUser() removing profile from mCurrentProfileIds"

    invoke-static {v5, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 28047
    .end local v0    # "i":I
    .end local v2    # "stopUserLockedInt":I
    .end local v3    # "tempList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    :catchall_0
    move-exception v5

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v5

    .line 28039
    .restart local v0    # "i":I
    .restart local v2    # "stopUserLockedInt":I
    .restart local v3    # "tempList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    :cond_4
    :try_start_1
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v5

    new-array v4, v5, [I

    .line 28040
    .local v4, "values":[I
    const/4 v0, 0x0

    :goto_2
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-ge v0, v5, :cond_5

    .line 28041
    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/Integer;

    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I

    move-result v5

    aput v5, v4, v0

    .line 28040
    add-int/lit8 v0, v0, 0x1

    goto :goto_2

    .line 28043
    :cond_5
    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    .line 28046
    .end local v0    # "i":I
    .end local v3    # "tempList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    .end local v4    # "values":[I
    :cond_6
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    return v2
.end method

.method public switchUser(I)Z
    .locals 8
    .param p1, "userId"    # I

    .prologue
    const/16 v7, 0x2e

    const/4 v4, 0x1

    const/4 v3, 0x0

    .line 27420
    const-string/jumbo v5, "no_debugging_features"

    invoke-virtual {p0, v5, p1}, Lcom/android/server/am/ActivityManagerService;->enforceShellRestriction(Ljava/lang/String;I)V

    .line 27425
    invoke-static {}, Lcom/android/server/DeviceManager3LMService;->getInstance()Lcom/android/server/DeviceManager3LMService;

    move-result-object v0

    .line 27427
    .local v0, "dm":Lcom/android/server/DeviceManager3LMService;
    if-eqz v0, :cond_0

    invoke-virtual {v0}, Lcom/android/server/DeviceManager3LMService;->getMultiUserEnabled()Z

    move-result v5

    if-nez v5, :cond_0

    if-eqz p1, :cond_0

    .line 27428
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "User switch to "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " disabled by policy"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 27463
    :goto_0
    return v3

    .line 27433
    :cond_0
    monitor-enter p0

    .line 27435
    :try_start_0
    invoke-static {}, Landroid/os/UserManager;->getMaxSupportedUsers()I

    move-result v5

    if-le v5, v4, :cond_1

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v5}, Landroid/app/enterprise/multiuser/MultiUserManager;->getInstance(Landroid/content/Context;)Landroid/app/enterprise/multiuser/MultiUserManager;

    move-result-object v5

    const/4 v6, 0x1

    invoke-virtual {v5, v6}, Landroid/app/enterprise/multiuser/MultiUserManager;->multipleUsersAllowed(Z)Z

    move-result v5

    if-nez v5, :cond_1

    .line 27437
    const-string v4, "ActivityManager"

    const-string v5, "MDM blocks multiuser mode"

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 27438
    monitor-exit p0

    goto :goto_0

    .line 27459
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v3

    .line 27441
    :cond_1
    :try_start_1
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v5

    invoke-virtual {v5, p1}, Lcom/android/server/pm/UserManagerService;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v1

    .line 27442
    .local v1, "userInfo":Landroid/content/pm/UserInfo;
    if-nez v1, :cond_2

    .line 27443
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "No user info for user #"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 27444
    monitor-exit p0

    goto :goto_0

    .line 27446
    :cond_2
    invoke-virtual {v1}, Landroid/content/pm/UserInfo;->isManagedProfile()Z

    move-result v5

    if-eqz v5, :cond_3

    .line 27447
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Cannot switch to User #"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ": not a full user"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 27448
    monitor-exit p0

    goto :goto_0

    .line 27452
    :cond_3
    invoke-virtual {v1}, Landroid/content/pm/UserInfo;->isGuest()Z

    move-result v5

    if-eqz v5, :cond_4

    .line 27453
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v5}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v5

    const v6, 0x1040a58

    invoke-virtual {v5, v6}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    move-result-object v2

    .line 27458
    .local v2, "userName":Ljava/lang/String;
    :goto_1
    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    .line 27459
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 27461
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    invoke-virtual {v5, v7}, Lcom/android/server/am/ActivityManagerService$UiHandler;->removeMessages(I)V

    .line 27462
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    invoke-virtual {v6, v7, p1, v3, v2}, Lcom/android/server/am/ActivityManagerService$UiHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v3

    invoke-virtual {v5, v3}, Lcom/android/server/am/ActivityManagerService$UiHandler;->sendMessage(Landroid/os/Message;)Z

    move v3, v4

    .line 27463
    goto/16 :goto_0

    .line 27456
    .end local v2    # "userName":Ljava/lang/String;
    :cond_4
    :try_start_2
    iget-object v2, v1, Landroid/content/pm/UserInfo;->name:Ljava/lang/String;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .restart local v2    # "userName":Ljava/lang/String;
    goto :goto_1
.end method

.method public systemReady(Ljava/lang/Runnable;)V
    .locals 51
    .param p1, "goingCallback"    # Ljava/lang/Runnable;

    .prologue
    .line 16939
    monitor-enter p0

    .line 16940
    :try_start_0
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    if-eqz v4, :cond_1

    .line 16943
    if-eqz p1, :cond_0

    .line 16944
    invoke-interface/range {p1 .. p1}, Ljava/lang/Runnable;->run()V

    .line 16946
    :cond_0
    monitor-exit p0

    .line 17323
    :goto_0
    return-void

    .line 16949
    :cond_1
    const-class v4, Lcom/android/server/DeviceIdleController$LocalService;

    invoke-static {v4}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/DeviceIdleController$LocalService;

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLocalDeviceIdleController:Lcom/android/server/DeviceIdleController$LocalService;

    .line 16954
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCurrentProfileIdsLocked()V

    .line 16956
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    invoke-virtual {v4}, Lcom/android/server/am/RecentTasks;->clear()V

    .line 16957
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    invoke-virtual {v5}, Lcom/android/server/am/TaskPersister;->restoreTasksLocked()Ljava/util/ArrayList;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/android/server/am/RecentTasks;->addAll(Ljava/util/Collection;)Z

    .line 16958
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Lcom/android/server/am/RecentTasks;

    const/4 v5, -0x1

    invoke-virtual {v4, v5}, Lcom/android/server/am/RecentTasks;->cleanupLocked(I)V

    .line 16959
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    invoke-virtual {v4}, Lcom/android/server/am/TaskPersister;->startPersisting()V

    .line 16962
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mDidUpdate:Z

    if-nez v4, :cond_4

    .line 16963
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mWaitingUpdate:Z

    if-eqz v4, :cond_2

    .line 16964
    monitor-exit p0

    goto :goto_0

    .line 16988
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v4

    .line 16966
    :cond_2
    :try_start_1
    new-instance v30, Ljava/util/ArrayList;

    invoke-direct/range {v30 .. v30}, Ljava/util/ArrayList;-><init>()V

    .line 16967
    .local v30, "doneReceivers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    new-instance v4, Lcom/android/server/am/ActivityManagerService$18;

    move-object/from16 v0, p0

    move-object/from16 v1, v30

    move-object/from16 v2, p1

    invoke-direct {v4, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService$18;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/util/ArrayList;Ljava/lang/Runnable;)V

    const/4 v5, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v30

    invoke-direct {v0, v4, v1, v5}, Lcom/android/server/am/ActivityManagerService;->deliverPreBootCompleted(Ljava/lang/Runnable;Ljava/util/ArrayList;I)Z

    move-result v4

    move-object/from16 v0, p0

    iput-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mWaitingUpdate:Z

    .line 16980
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mWaitingUpdate:Z

    if-eqz v4, :cond_3

    .line 16981
    monitor-exit p0

    goto :goto_0

    .line 16983
    :cond_3
    const/4 v4, 0x1

    move-object/from16 v0, p0

    iput-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mDidUpdate:Z

    .line 16986
    .end local v30    # "doneReceivers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    :cond_4
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    invoke-virtual {v4}, Lcom/android/server/AppOpsService;->systemReady()V

    .line 16987
    const/4 v4, 0x1

    move-object/from16 v0, p0

    iput-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    .line 16988
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 16990
    const/16 v46, 0x0

    .line 16991
    .local v46, "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v5

    .line 16992
    :try_start_2
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    move-result v4

    add-int/lit8 v34, v4, -0x1

    .local v34, "i":I
    move-object/from16 v47, v46

    .end local v46    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .local v47, "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :goto_1
    if-ltz v34, :cond_5

    .line 16993
    :try_start_3
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move/from16 v0, v34

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v45

    check-cast v45, Lcom/android/server/am/ProcessRecord;

    .line 16994
    .local v45, "proc":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, v45

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityManagerService;->isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z

    move-result v4

    if-nez v4, :cond_1b

    .line 16995
    if-nez v47, :cond_1a

    .line 16996
    new-instance v46, Ljava/util/ArrayList;

    invoke-direct/range {v46 .. v46}, Ljava/util/ArrayList;-><init>()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_7

    .line 16998
    .end local v47    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v46    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :goto_2
    :try_start_4
    move-object/from16 v0, v46

    move-object/from16 v1, v45

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 16992
    :goto_3
    add-int/lit8 v34, v34, -0x1

    move-object/from16 v47, v46

    .end local v46    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v47    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    goto :goto_1

    .line 17001
    .end local v45    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_5
    :try_start_5
    monitor-exit v5
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_7

    .line 17003
    monitor-enter p0

    .line 17004
    if-eqz v47, :cond_6

    .line 17005
    :try_start_6
    invoke-virtual/range {v47 .. v47}, Ljava/util/ArrayList;->size()I

    move-result v4

    add-int/lit8 v34, v4, -0x1

    :goto_4
    if-ltz v34, :cond_6

    .line 17006
    move-object/from16 v0, v47

    move/from16 v1, v34

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v45

    check-cast v45, Lcom/android/server/am/ProcessRecord;

    .line 17007
    .restart local v45    # "proc":Lcom/android/server/am/ProcessRecord;
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Removing system update proc: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, v45

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 17008
    const/4 v4, 0x1

    const/4 v5, 0x0

    const-string/jumbo v6, "system update done"

    move-object/from16 v0, p0

    move-object/from16 v1, v45

    invoke-direct {v0, v1, v4, v5, v6}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    .line 17005
    add-int/lit8 v34, v34, -0x1

    goto :goto_4

    .line 17001
    .end local v34    # "i":I
    .end local v45    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v47    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v46    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :catchall_1
    move-exception v4

    :goto_5
    :try_start_7
    monitor-exit v5
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    throw v4

    .line 17015
    .end local v46    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v34    # "i":I
    .restart local v47    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_6
    const/4 v4, 0x1

    :try_start_8
    move-object/from16 v0, p0

    iput-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    .line 17016
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    .line 17018
    const-string v4, "ActivityManager"

    const-string v5, "System now ready"

    invoke-static {v4, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 17019
    const/16 v4, 0xbe0

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v8

    invoke-static {v4, v8, v9}, Landroid/util/EventLog;->writeEvent(IJ)I

    .line 17021
    new-instance v28, Landroid/content/IntentFilter;

    const-string v4, "android.intent.action.stk.check_screen_idle"

    move-object/from16 v0, v28

    invoke-direct {v0, v4}, Landroid/content/IntentFilter;-><init>(Ljava/lang/String;)V

    .line 17023
    .local v28, "bootFilter":Landroid/content/IntentFilter;
    const-string v4, "com.samsung.CHECK_COOLDOWN_LEVEL"

    move-object/from16 v0, v28

    invoke-virtual {v0, v4}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 17025
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v5, Lcom/android/server/am/ActivityManagerService$ScreenStatusReceiver;

    move-object/from16 v0, p0

    invoke-direct {v5, v0}, Lcom/android/server/am/ActivityManagerService$ScreenStatusReceiver;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    move-object/from16 v0, v28

    invoke-virtual {v4, v5, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 17027
    monitor-enter p0

    .line 17030
    :try_start_9
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v5, 0x1

    if-ne v4, v5, :cond_7

    .line 17031
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v4

    new-instance v5, Landroid/content/Intent;

    const-string v6, "android.intent.action.FACTORY_TEST"

    invoke-direct {v5, v6}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    const/16 v6, 0x400

    invoke-virtual {v4, v5, v6}, Landroid/content/pm/PackageManager;->resolveActivity(Landroid/content/Intent;I)Landroid/content/pm/ResolveInfo;

    move-result-object v49

    .line 17034
    .local v49, "ri":Landroid/content/pm/ResolveInfo;
    const/16 v32, 0x0

    .line 17035
    .local v32, "errorMsg":Ljava/lang/CharSequence;
    if-eqz v49, :cond_d

    .line 17036
    move-object/from16 v0, v49

    iget-object v0, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    move-object/from16 v25, v0

    .line 17037
    .local v25, "ai":Landroid/content/pm/ActivityInfo;
    move-object/from16 v0, v25

    iget-object v0, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v26, v0

    .line 17038
    .local v26, "app":Landroid/content/pm/ApplicationInfo;
    move-object/from16 v0, v26

    iget v4, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v4, v4, 0x1

    if-eqz v4, :cond_c

    .line 17039
    const-string v4, "android.intent.action.FACTORY_TEST"

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;

    .line 17040
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTopData:Ljava/lang/String;

    .line 17041
    new-instance v4, Landroid/content/ComponentName;

    move-object/from16 v0, v26

    iget-object v5, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v25

    iget-object v6, v0, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v4, v5, v6}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;

    .line 17051
    .end local v25    # "ai":Landroid/content/pm/ActivityInfo;
    .end local v26    # "app":Landroid/content/pm/ApplicationInfo;
    :goto_6
    if-eqz v32, :cond_7

    .line 17052
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;

    .line 17053
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTopData:Ljava/lang/String;

    .line 17054
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;

    .line 17055
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v42

    .line 17056
    .local v42, "msg":Landroid/os/Message;
    const/4 v4, 0x3

    move-object/from16 v0, v42

    iput v4, v0, Landroid/os/Message;->what:I

    .line 17057
    invoke-virtual/range {v42 .. v42}, Landroid/os/Message;->getData()Landroid/os/Bundle;

    move-result-object v4

    const-string/jumbo v5, "msg"

    move-object/from16 v0, v32

    invoke-virtual {v4, v5, v0}, Landroid/os/Bundle;->putCharSequence(Ljava/lang/String;Ljava/lang/CharSequence;)V

    .line 17058
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    move-object/from16 v0, v42

    invoke-virtual {v4, v0}, Lcom/android/server/am/ActivityManagerService$UiHandler;->sendMessage(Landroid/os/Message;)Z

    .line 17061
    .end local v32    # "errorMsg":Ljava/lang/CharSequence;
    .end local v42    # "msg":Landroid/os/Message;
    .end local v49    # "ri":Landroid/content/pm/ResolveInfo;
    :cond_7
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    .line 17063
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->retrieveSettings()V

    .line 17064
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->loadResourcesOnSystemReady()V

    .line 17066
    monitor-enter p0

    .line 17067
    :try_start_a
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->readGrantedUriPermissionsLocked()V

    .line 17068
    monitor-exit p0
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_4

    .line 17072
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mMultiWindowPolicy:Lcom/android/server/am/MultiWindowPolicy;

    invoke-virtual {v4}, Lcom/android/server/am/MultiWindowPolicy;->systemReady()V

    .line 17093
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mVRApplicationPolicy:Lcom/android/server/am/VRApplicationPolicy;

    invoke-virtual {v4}, Lcom/android/server/am/VRApplicationPolicy;->systemReady()V

    .line 17097
    if-eqz p1, :cond_8

    invoke-interface/range {p1 .. p1}, Ljava/lang/Runnable;->run()V

    .line 17100
    :cond_8
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v5, "enterprise_policy"

    invoke-virtual {v4, v5}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v31

    check-cast v31, Landroid/app/enterprise/EnterpriseDeviceManager;

    .line 17102
    .local v31, "edm":Landroid/app/enterprise/EnterpriseDeviceManager;
    if-eqz v31, :cond_9

    .line 17103
    invoke-virtual/range {v31 .. v31}, Landroid/app/enterprise/EnterpriseDeviceManager;->getApplicationPolicy()Landroid/app/enterprise/ApplicationPolicy;

    move-result-object v4

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mApplicationPolicy:Landroid/app/enterprise/ApplicationPolicy;

    .line 17104
    invoke-virtual/range {v31 .. v31}, Landroid/app/enterprise/EnterpriseDeviceManager;->getRestrictionPolicy()Landroid/app/enterprise/RestrictionPolicy;

    move-result-object v4

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRestrictionPolicy:Landroid/app/enterprise/RestrictionPolicy;

    .line 17108
    :cond_9
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const v5, 0x8007

    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-static {v6}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p0

    iget v8, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-virtual {v4, v5, v6, v8}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 17110
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const v5, 0x8008

    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-static {v6}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p0

    iget v8, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-virtual {v4, v5, v6, v8}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 17112
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-virtual {v4, v5}, Lcom/android/server/SystemServiceManager;->startUser(I)V

    .line 17114
    monitor-enter p0

    .line 17115
    :try_start_b
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_5

    const/4 v5, 0x1

    if-eq v4, v5, :cond_e

    .line 17117
    :try_start_c
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    const/16 v5, 0x400

    invoke-interface {v4, v5}, Landroid/content/pm/IPackageManager;->getPersistentApplications(I)Ljava/util/List;

    move-result-object v27

    .line 17119
    .local v27, "apps":Ljava/util/List;
    if-eqz v27, :cond_e

    .line 17120
    invoke-interface/range {v27 .. v27}, Ljava/util/List;->size()I

    move-result v23

    .line 17122
    .local v23, "N":I
    const/16 v34, 0x0

    :goto_7
    move/from16 v0, v34

    move/from16 v1, v23

    if-ge v0, v1, :cond_e

    .line 17123
    move-object/from16 v0, v27

    move/from16 v1, v34

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v38

    check-cast v38, Landroid/content/pm/ApplicationInfo;

    .line 17125
    .local v38, "info":Landroid/content/pm/ApplicationInfo;
    if-eqz v38, :cond_b

    move-object/from16 v0, v38

    iget-boolean v4, v0, Landroid/content/pm/ApplicationInfo;->enabled:Z

    if-eqz v4, :cond_b

    move-object/from16 v0, v38

    iget-object v4, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const-string v5, "android"

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_b

    move-object/from16 v0, v38

    iget-object v4, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const-string/jumbo v5, "sec_container_"

    invoke-virtual {v4, v5}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v4

    if-nez v4, :cond_b

    .line 17128
    move-object/from16 v0, v38

    iget-object v4, v0, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    const-string v5, "com.android.phone"

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_a

    move-object/from16 v0, v38

    iget-object v4, v0, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    const-string v5, "com.android.nfc"

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_a

    move-object/from16 v0, v38

    iget-object v4, v0, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    const-string v5, "com.android.systemui"

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_b

    .line 17129
    :cond_a
    const/4 v4, 0x0

    const/4 v5, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v38

    invoke-virtual {v0, v1, v4, v5}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;ZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;
    :try_end_c
    .catch Landroid/os/RemoteException; {:try_start_c .. :try_end_c} :catch_0
    .catchall {:try_start_c .. :try_end_c} :catchall_5

    .line 17122
    :cond_b
    add-int/lit8 v34, v34, 0x1

    goto :goto_7

    .line 17016
    .end local v23    # "N":I
    .end local v27    # "apps":Ljava/util/List;
    .end local v28    # "bootFilter":Landroid/content/IntentFilter;
    .end local v31    # "edm":Landroid/app/enterprise/EnterpriseDeviceManager;
    .end local v38    # "info":Landroid/content/pm/ApplicationInfo;
    :catchall_2
    move-exception v4

    :try_start_d
    monitor-exit p0
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_2

    throw v4

    .line 17044
    .restart local v25    # "ai":Landroid/content/pm/ActivityInfo;
    .restart local v26    # "app":Landroid/content/pm/ApplicationInfo;
    .restart local v28    # "bootFilter":Landroid/content/IntentFilter;
    .restart local v32    # "errorMsg":Ljava/lang/CharSequence;
    .restart local v49    # "ri":Landroid/content/pm/ResolveInfo;
    :cond_c
    :try_start_e
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v4

    const v5, 0x10402cf

    invoke-virtual {v4, v5}, Landroid/content/res/Resources;->getText(I)Ljava/lang/CharSequence;

    move-result-object v32

    goto/16 :goto_6

    .line 17048
    .end local v25    # "ai":Landroid/content/pm/ActivityInfo;
    .end local v26    # "app":Landroid/content/pm/ApplicationInfo;
    :cond_d
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v4

    const v5, 0x10402d0

    invoke-virtual {v4, v5}, Landroid/content/res/Resources;->getText(I)Ljava/lang/CharSequence;

    move-result-object v32

    goto/16 :goto_6

    .line 17061
    .end local v32    # "errorMsg":Ljava/lang/CharSequence;
    .end local v49    # "ri":Landroid/content/pm/ResolveInfo;
    :catchall_3
    move-exception v4

    monitor-exit p0
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_3

    throw v4

    .line 17068
    :catchall_4
    move-exception v4

    :try_start_f
    monitor-exit p0
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_4

    throw v4

    .line 17134
    .restart local v31    # "edm":Landroid/app/enterprise/EnterpriseDeviceManager;
    :catch_0
    move-exception v4

    .line 17140
    :cond_e
    const/4 v4, 0x1

    :try_start_10
    move-object/from16 v0, p0

    iput-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 17151
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    const-string/jumbo v5, "systemReady"

    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->startHomeActivityLocked(ILjava/lang/String;)Z

    .line 17154
    const-string/jumbo v4, "ro.alarm_boot"

    const/4 v5, 0x0

    invoke-static {v4, v5}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v40

    .line 17155
    .local v40, "isAlarmBoot":Z
    if-eqz v40, :cond_f

    .line 17156
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->startAlarmActivityLocked()V
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_5

    .line 17163
    :cond_f
    :try_start_11
    new-instance v39, Ljava/util/ArrayList;

    invoke-direct/range {v39 .. v39}, Ljava/util/ArrayList;-><init>()V

    .line 17165
    .local v39, "intents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    new-instance v7, Landroid/content/Intent;

    const-string v4, "android.content.pm.action.REQUEST_PERMISSIONS"

    invoke-direct {v7, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 17166
    .local v7, "intent":Landroid/content/Intent;
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    invoke-interface {v4}, Landroid/content/pm/IPackageManager;->getPermissionControllerPackageName()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v7, v4}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    .line 17167
    move-object/from16 v0, v39

    invoke-virtual {v0, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 17169
    new-instance v7, Landroid/content/Intent;

    .end local v7    # "intent":Landroid/content/Intent;
    const-string v4, "android.intent.action.MANAGE_PERMISSIONS"

    invoke-direct {v7, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 17170
    .restart local v7    # "intent":Landroid/content/Intent;
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    invoke-interface {v4}, Landroid/content/pm/IPackageManager;->getPermissionControllerPackageName()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v7, v4}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    .line 17171
    move-object/from16 v0, v39

    invoke-virtual {v0, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 17173
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPermissionRequestActivities:Ljava/util/ArrayList;

    .line 17174
    invoke-virtual/range {v39 .. v39}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v35

    .local v35, "i$":Ljava/util/Iterator;
    :cond_10
    :goto_8
    invoke-interface/range {v35 .. v35}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_11

    invoke-interface/range {v35 .. v35}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v24

    check-cast v24, Landroid/content/Intent;

    .line 17175
    .local v24, "aIntent":Landroid/content/Intent;
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    const/4 v5, 0x0

    const v6, 0x10400

    move-object/from16 v0, p0

    iget v8, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    move-object/from16 v0, v24

    invoke-interface {v4, v0, v5, v6, v8}, Landroid/content/pm/IPackageManager;->resolveIntent(Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/pm/ResolveInfo;

    move-result-object v48

    .line 17179
    .local v48, "rInfo":Landroid/content/pm/ResolveInfo;
    if-eqz v48, :cond_10

    .line 17180
    new-instance v29, Landroid/content/ComponentName;

    move-object/from16 v0, v48

    iget-object v4, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v4, v4, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v48

    iget-object v5, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v5, v5, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    move-object/from16 v0, v29

    invoke-direct {v0, v4, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 17181
    .local v29, "component":Landroid/content/ComponentName;
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPermissionRequestActivities:Ljava/util/ArrayList;

    invoke-virtual/range {v29 .. v29}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_11
    .catch Landroid/os/RemoteException; {:try_start_11 .. :try_end_11} :catch_1
    .catchall {:try_start_11 .. :try_end_11} :catchall_5

    goto :goto_8

    .line 17184
    .end local v7    # "intent":Landroid/content/Intent;
    .end local v24    # "aIntent":Landroid/content/Intent;
    .end local v29    # "component":Landroid/content/ComponentName;
    .end local v35    # "i$":Ljava/util/Iterator;
    .end local v39    # "intents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v48    # "rInfo":Landroid/content/pm/ResolveInfo;
    :catch_1
    move-exception v33

    .line 17185
    .local v33, "exception":Landroid/os/RemoteException;
    const/4 v4, 0x0

    :try_start_12
    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mGrantPermissionsActivityName:Ljava/lang/String;

    .line 17191
    .end local v33    # "exception":Landroid/os/RemoteException;
    :cond_11
    const-string/jumbo v4, "ro.alarm_boot"

    const/4 v5, 0x0

    invoke-static {v4, v5}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v40

    .line 17192
    if-eqz v40, :cond_12

    .line 17193
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->startAlarmActivityLocked()V
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_5

    .line 17197
    :cond_12
    :try_start_13
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    invoke-interface {v4}, Landroid/content/pm/IPackageManager;->hasSystemUidErrors()Z

    move-result v4

    if-eqz v4, :cond_13

    .line 17198
    const-string v4, "ActivityManager"

    const-string v5, "UIDs on the system are inconsistent, you need to wipe your data partition or your device will be unstable."

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 17200
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    const/16 v5, 0xe

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$UiHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v4

    invoke-virtual {v4}, Landroid/os/Message;->sendToTarget()V
    :try_end_13
    .catch Landroid/os/RemoteException; {:try_start_13 .. :try_end_13} :catch_3
    .catchall {:try_start_13 .. :try_end_13} :catchall_5

    .line 17205
    :cond_13
    :goto_9
    :try_start_14
    invoke-static {}, Landroid/os/Build;->isBuildConsistent()Z

    move-result v4

    if-nez v4, :cond_14

    .line 17206
    const-string v4, "ActivityManager"

    const-string v5, "Build fingerprint is not consistent, warning user"

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 17207
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUiHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    const/16 v5, 0xf

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$UiHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v4

    invoke-virtual {v4}, Landroid/os/Message;->sendToTarget()V

    .line 17210
    :cond_14
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_5

    move-result-wide v36

    .line 17212
    .local v36, "ident":J
    :try_start_15
    new-instance v7, Landroid/content/Intent;

    const-string v4, "android.intent.action.USER_STARTED"

    invoke-direct {v7, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 17213
    .restart local v7    # "intent":Landroid/content/Intent;
    const/high16 v4, 0x50000000

    invoke-virtual {v7, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 17215
    const-string v4, "android.intent.extra.user_handle"

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-virtual {v7, v4, v5}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 17216
    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, -0x1

    const/4 v15, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x0

    sget v18, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v19, 0x3e8

    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    move/from16 v20, v0

    move-object/from16 v4, p0

    invoke-direct/range {v4 .. v20}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 17219
    new-instance v7, Landroid/content/Intent;

    .end local v7    # "intent":Landroid/content/Intent;
    const-string v4, "android.intent.action.USER_STARTING"

    invoke-direct {v7, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 17220
    .restart local v7    # "intent":Landroid/content/Intent;
    const/high16 v4, 0x40000000    # 2.0f

    invoke-virtual {v7, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 17221
    const-string v4, "android.intent.extra.user_handle"

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-virtual {v7, v4, v5}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 17222
    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v8, 0x0

    new-instance v9, Lcom/android/server/am/ActivityManagerService$19;

    move-object/from16 v0, p0

    invoke-direct {v9, v0}, Lcom/android/server/am/ActivityManagerService$19;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v4, 0x1

    new-array v13, v4, [Ljava/lang/String;

    const/4 v4, 0x0

    const-string v14, "android.permission.INTERACT_ACROSS_USERS"

    aput-object v14, v13, v4

    const/4 v14, -0x1

    const/4 v15, 0x0

    const/16 v16, 0x1

    const/16 v17, 0x0

    sget v18, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v19, 0x3e8

    const/16 v20, -0x1

    move-object/from16 v4, p0

    invoke-direct/range {v4 .. v20}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I
    :try_end_15
    .catch Ljava/lang/Throwable; {:try_start_15 .. :try_end_15} :catch_2
    .catchall {:try_start_15 .. :try_end_15} :catchall_6

    .line 17235
    :try_start_16
    invoke-static/range {v36 .. v37}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 17256
    .end local v7    # "intent":Landroid/content/Intent;
    :goto_a
    invoke-static {}, Landroid/os/Debug;->isProductShip()I

    move-result v4

    if-nez v4, :cond_15

    .line 17257
    const-string v21, "/sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq"

    .line 17258
    .local v21, "CPU_FREQ_CPU0":Ljava/lang/String;
    const-string v22, "/sys/devices/system/cpu/online"

    .line 17260
    .local v22, "CPU_ONLINE":Ljava/lang/String;
    new-instance v8, Lcom/android/server/am/ActivityManagerService$20;

    const-wide/16 v10, 0x7530

    const-wide/16 v12, 0x7d0

    move-object/from16 v9, p0

    invoke-direct/range {v8 .. v13}, Lcom/android/server/am/ActivityManagerService$20;-><init>(Lcom/android/server/am/ActivityManagerService;JJ)V

    invoke-virtual {v8}, Lcom/android/server/am/ActivityManagerService$20;->start()Landroid/os/CountDownTimer;

    move-result-object v4

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->cpuCheckTimer:Landroid/os/CountDownTimer;

    .line 17293
    .end local v21    # "CPU_FREQ_CPU0":Ljava/lang/String;
    .end local v22    # "CPU_ONLINE":Ljava/lang/String;
    :cond_15
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    .line 17294
    const/4 v4, -0x1

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->sendUserSwitchBroadcastsLocked(II)V

    .line 17297
    const-string v4, "2.0"

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->knoxVersionInfo:Landroid/os/Bundle;

    const-string/jumbo v6, "version"

    invoke-virtual {v5, v6}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_19

    .line 17298
    const/16 v41, -0x1

    .line 17299
    .local v41, "kioskPersonaId":I
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v44

    .line 17300
    .local v44, "pms":Lcom/android/server/pm/PersonaManagerService;
    if-eqz v44, :cond_19

    .line 17301
    const/4 v4, 0x1

    move-object/from16 v0, v44

    invoke-virtual {v0, v4}, Lcom/android/server/pm/PersonaManagerService;->getPersonas(Z)Ljava/util/List;

    move-result-object v43

    .line 17302
    .local v43, "personaList":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/PersonaInfo;>;"
    invoke-interface/range {v43 .. v43}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v35

    .restart local v35    # "i$":Ljava/util/Iterator;
    :cond_16
    invoke-interface/range {v35 .. v35}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_18

    invoke-interface/range {v35 .. v35}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v38

    check-cast v38, Landroid/content/pm/PersonaInfo;

    .line 17303
    .local v38, "info":Landroid/content/pm/PersonaInfo;
    if-eqz v38, :cond_16

    move-object/from16 v0, v38

    iget-boolean v4, v0, Landroid/content/pm/PersonaInfo;->isKioskModeEnabled:Z

    if-eqz v4, :cond_16

    .line 17304
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v4

    if-eqz v4, :cond_17

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v4

    sget-object v5, Landroid/content/pm/PersonaState;->SUPER_LOCKED:Landroid/content/pm/PersonaState;

    move-object/from16 v0, v38

    iget v6, v0, Landroid/content/pm/PersonaInfo;->id:I

    invoke-virtual {v4, v5, v6}, Lcom/android/server/pm/PersonaManagerService;->inState(Landroid/content/pm/PersonaState;I)Z

    move-result v4

    if-eqz v4, :cond_17

    .line 17305
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->ensureBootCompleted()V

    .line 17307
    :cond_17
    move-object/from16 v0, v38

    iget v0, v0, Landroid/content/pm/PersonaInfo;->id:I

    move/from16 v41, v0

    .line 17311
    .end local v38    # "info":Landroid/content/pm/PersonaInfo;
    :cond_18
    const/4 v4, -0x1

    move/from16 v0, v41

    if-eq v0, v4, :cond_19

    .line 17313
    move-object/from16 v0, p0

    move/from16 v1, v41

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->startUserInBackground(I)Z

    .line 17314
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "AMS is calling launchPersonaHome for kiosk container "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, v41

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 17315
    invoke-virtual/range {v44 .. v44}, Lcom/android/server/pm/PersonaManagerService;->setDefaultSettingsValueforCOM()V

    .line 17316
    move-object/from16 v0, v44

    move/from16 v1, v41

    invoke-virtual {v0, v1}, Lcom/android/server/pm/PersonaManagerService;->launchPersonaHome(I)Z

    .line 17321
    .end local v35    # "i$":Ljava/util/Iterator;
    .end local v41    # "kioskPersonaId":I
    .end local v43    # "personaList":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/PersonaInfo;>;"
    .end local v44    # "pms":Lcom/android/server/pm/PersonaManagerService;
    :cond_19
    monitor-exit p0

    goto/16 :goto_0

    .end local v36    # "ident":J
    .end local v40    # "isAlarmBoot":Z
    :catchall_5
    move-exception v4

    monitor-exit p0
    :try_end_16
    .catchall {:try_start_16 .. :try_end_16} :catchall_5

    throw v4

    .line 17232
    .restart local v36    # "ident":J
    .restart local v40    # "isAlarmBoot":Z
    :catch_2
    move-exception v50

    .line 17233
    .local v50, "t":Ljava/lang/Throwable;
    :try_start_17
    const-string v4, "ActivityManager"

    const-string v5, "Failed sending first user broadcasts"

    move-object/from16 v0, v50

    invoke-static {v4, v5, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_17
    .catchall {:try_start_17 .. :try_end_17} :catchall_6

    .line 17235
    :try_start_18
    invoke-static/range {v36 .. v37}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto/16 :goto_a

    .end local v50    # "t":Ljava/lang/Throwable;
    :catchall_6
    move-exception v4

    invoke-static/range {v36 .. v37}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4
    :try_end_18
    .catchall {:try_start_18 .. :try_end_18} :catchall_5

    .line 17202
    .end local v36    # "ident":J
    :catch_3
    move-exception v4

    goto/16 :goto_9

    .line 17001
    .end local v28    # "bootFilter":Landroid/content/IntentFilter;
    .end local v31    # "edm":Landroid/app/enterprise/EnterpriseDeviceManager;
    .end local v40    # "isAlarmBoot":Z
    :catchall_7
    move-exception v4

    move-object/from16 v46, v47

    .end local v47    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v46    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    goto/16 :goto_5

    .end local v46    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v45    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v47    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_1a
    move-object/from16 v46, v47

    .end local v47    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v46    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    goto/16 :goto_2

    .end local v46    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v47    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_1b
    move-object/from16 v46, v47

    .end local v47    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v46    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    goto/16 :goto_3
.end method

.method public takePersistableUriPermission(Landroid/net/Uri;II)V
    .locals 10
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "modeFlags"    # I
    .param p3, "userId"    # I

    .prologue
    const/4 v6, 0x1

    const/4 v7, 0x0

    .line 12252
    const-string/jumbo v8, "takePersistableUriPermission"

    invoke-virtual {p0, v8}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 12254
    const/4 v8, 0x3

    invoke-static {p2, v8}, Lcom/android/internal/util/Preconditions;->checkFlagsArgument(II)V

    .line 12257
    monitor-enter p0

    .line 12258
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 12259
    .local v0, "callingUid":I
    const/4 v4, 0x0

    .line 12260
    .local v4, "persistChanged":Z
    new-instance v3, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v8, 0x0

    invoke-direct {v3, p3, p1, v8}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    .line 12262
    .local v3, "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    new-instance v8, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v9, 0x0

    invoke-direct {v8, p3, p1, v9}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-direct {p0, v0, v8}, Lcom/android/server/am/ActivityManagerService;->findUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object v1

    .line 12264
    .local v1, "exactPerm":Lcom/android/server/am/UriPermission;
    new-instance v8, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v9, 0x1

    invoke-direct {v8, p3, p1, v9}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-direct {p0, v0, v8}, Lcom/android/server/am/ActivityManagerService;->findUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object v5

    .line 12267
    .local v5, "prefixPerm":Lcom/android/server/am/UriPermission;
    if-eqz v1, :cond_0

    iget v8, v1, Lcom/android/server/am/UriPermission;->persistableModeFlags:I

    and-int/2addr v8, p2

    if-ne v8, p2, :cond_0

    move v2, v6

    .line 12269
    .local v2, "exactValid":Z
    :goto_0
    if-eqz v5, :cond_1

    iget v8, v5, Lcom/android/server/am/UriPermission;->persistableModeFlags:I

    and-int/2addr v8, p2

    if-ne v8, p2, :cond_1

    .line 12272
    .local v6, "prefixValid":Z
    :goto_1
    if-nez v2, :cond_2

    if-nez v6, :cond_2

    .line 12273
    new-instance v7, Ljava/lang/SecurityException;

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "No persistable permission grants found for UID "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " and Uri "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v3}, Lcom/android/server/am/ActivityManagerService$GrantUri;->toSafeString()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-direct {v7, v8}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 12289
    .end local v0    # "callingUid":I
    .end local v1    # "exactPerm":Lcom/android/server/am/UriPermission;
    .end local v2    # "exactValid":Z
    .end local v3    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    .end local v4    # "persistChanged":Z
    .end local v5    # "prefixPerm":Lcom/android/server/am/UriPermission;
    .end local v6    # "prefixValid":Z
    :catchall_0
    move-exception v7

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v7

    .restart local v0    # "callingUid":I
    .restart local v1    # "exactPerm":Lcom/android/server/am/UriPermission;
    .restart local v3    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    .restart local v4    # "persistChanged":Z
    .restart local v5    # "prefixPerm":Lcom/android/server/am/UriPermission;
    :cond_0
    move v2, v7

    .line 12267
    goto :goto_0

    .restart local v2    # "exactValid":Z
    :cond_1
    move v6, v7

    .line 12269
    goto :goto_1

    .line 12277
    .restart local v6    # "prefixValid":Z
    :cond_2
    if-eqz v2, :cond_3

    .line 12278
    :try_start_1
    invoke-virtual {v1, p2}, Lcom/android/server/am/UriPermission;->takePersistableModes(I)Z

    move-result v7

    or-int/2addr v4, v7

    .line 12280
    :cond_3
    if-eqz v6, :cond_4

    .line 12281
    invoke-virtual {v5, p2}, Lcom/android/server/am/UriPermission;->takePersistableModes(I)Z

    move-result v7

    or-int/2addr v4, v7

    .line 12284
    :cond_4
    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->maybePrunePersistedUriGrantsLocked(I)Z

    move-result v7

    or-int/2addr v4, v7

    .line 12286
    if-eqz v4, :cond_5

    .line 12287
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->schedulePersistUriGrants()V

    .line 12289
    :cond_5
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 12290
    return-void
.end method

.method public testIsSystemReady()Z
    .locals 1

    .prologue
    .line 16668
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    return v0
.end method

.method timeoutUserSwitch(Lcom/android/server/am/UserState;II)V
    .locals 3
    .param p1, "uss"    # Lcom/android/server/am/UserState;
    .param p2, "oldUserId"    # I
    .param p3, "newUserId"    # I

    .prologue
    .line 27784
    monitor-enter p0

    .line 27785
    :try_start_0
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "User switch timeout: from "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " to "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 27786
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->sendContinueUserSwitchLocked(Lcom/android/server/am/UserState;II)V

    .line 27787
    monitor-exit p0

    .line 27788
    return-void

    .line 27787
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public triggerRTCC()V
    .locals 3

    .prologue
    .line 29430
    monitor-enter p0

    .line 29431
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v2, 0x3f

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 29432
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v2, 0x3f

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    .line 29433
    .local v0, "msg":Landroid/os/Message;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 29434
    monitor-exit p0

    .line 29435
    return-void

    .line 29434
    .end local v0    # "msg":Landroid/os/Message;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method final trimApplications()V
    .locals 7

    .prologue
    const/4 v3, 0x0

    .line 26995
    monitor-enter p0

    .line 27000
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v1, v2, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_4

    .line 27001
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 27002
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-nez v2, :cond_1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->curReceiver:Lcom/android/server/am/BroadcastRecord;

    if-nez v2, :cond_1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v2}, Landroid/util/ArraySet;->size()I

    move-result v2

    if-nez v2, :cond_1

    .line 27004
    const-string v4, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Exiting empty application process "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v5, " ("

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_2

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v2}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    :goto_1
    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v5, ")\n"

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v4, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 27009
    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v2, :cond_3

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v4, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v2, v4, :cond_3

    .line 27010
    const-string/jumbo v2, "empty"

    const/4 v4, 0x0

    invoke-virtual {v0, v2, v4}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 27013
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v2

    const-string v4, "CscFeature_Common_SupportDeviceReporting"

    invoke-virtual {v2, v4}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 27016
    const/16 v2, 0x190

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    const/4 v6, 0x0

    invoke-direct {p0, v2, v4, v5, v6}, Lcom/android/server/am/ActivityManagerService;->sendAppStateMsg(ILjava/lang/String;II)V

    .line 27027
    :cond_0
    :goto_2
    const/4 v2, 0x0

    const/4 v4, 0x1

    const/4 v5, -0x1

    invoke-direct {p0, v0, v2, v4, v5}, Lcom/android/server/am/ActivityManagerService;->cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;ZZI)Z

    .line 27028
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 27030
    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v2, :cond_1

    .line 27031
    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    const/4 v4, 0x0

    const/4 v5, 0x0

    invoke-virtual {p0, v2, v4, v5}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;ZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 27000
    :cond_1
    add-int/lit8 v1, v1, -0x1

    goto/16 :goto_0

    :cond_2
    move-object v2, v3

    .line 27004
    goto :goto_1

    .line 27022
    :cond_3
    :try_start_1
    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v2}, Landroid/app/IApplicationThread;->scheduleExit()V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_2

    .line 27023
    :catch_0
    move-exception v2

    goto :goto_2

    .line 27037
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_4
    :try_start_2
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 27038
    monitor-exit p0

    .line 27039
    return-void

    .line 27038
    .end local v1    # "i":I
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v2
.end method

.method public unFreezeApp(Ljava/lang/String;I)V
    .locals 0
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I

    .prologue
    .line 22739
    return-void
.end method

.method public unbindBackupAgent(Landroid/content/pm/ApplicationInfo;)V
    .locals 5
    .param p1, "appInfo"    # Landroid/content/pm/ApplicationInfo;

    .prologue
    .line 22328
    if-nez p1, :cond_0

    .line 22329
    const-string v2, "ActivityManager"

    const-string/jumbo v3, "unbind backup agent for null app"

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22364
    :goto_0
    return-void

    .line 22333
    :cond_0
    monitor-enter p0

    .line 22335
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    if-nez v2, :cond_1

    .line 22336
    const-string v2, "ActivityManager"

    const-string v3, "Unbinding backup agent with no active backup"

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 22360
    const/4 v2, 0x0

    :try_start_1
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 22361
    const/4 v2, 0x0

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    monitor-exit p0

    goto :goto_0

    .line 22363
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v2

    .line 22340
    :cond_1
    :try_start_2
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    iget-object v3, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_2

    .line 22341
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Unbind of "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " but is not the current backup target"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 22360
    const/4 v2, 0x0

    :try_start_3
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 22361
    const/4 v2, 0x0

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_0

    .line 22346
    :cond_2
    :try_start_4
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v1, v2, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 22347
    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z

    .line 22350
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    if-eqz v2, :cond_3

    .line 22352
    :try_start_5
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v3

    invoke-interface {v2, p1, v3}, Landroid/app/IApplicationThread;->scheduleDestroyBackupAgent(Landroid/content/pm/ApplicationInfo;Landroid/content/res/CompatibilityInfo;)V
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_0
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 22360
    :cond_3
    :goto_1
    const/4 v2, 0x0

    :try_start_6
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 22361
    const/4 v2, 0x0

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    .line 22363
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    goto :goto_0

    .line 22354
    :catch_0
    move-exception v0

    .line 22355
    .local v0, "e":Ljava/lang/Exception;
    :try_start_7
    const-string v2, "ActivityManager"

    const-string v3, "Exception when unbinding backup agent:"

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 22356
    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    goto :goto_1

    .line 22360
    .end local v0    # "e":Ljava/lang/Exception;
    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_1
    move-exception v2

    const/4 v3, 0x0

    :try_start_8
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 22361
    const/4 v3, 0x0

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    throw v2
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0
.end method

.method public unbindFinished(Landroid/os/IBinder;Landroid/content/Intent;Z)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "doRebind"    # Z

    .prologue
    .line 22195
    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    .line 22196
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 22199
    :cond_0
    monitor-enter p0

    .line 22200
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    check-cast p1, Lcom/android/server/am/ServiceRecord;

    .end local p1    # "token":Landroid/os/IBinder;
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->unbindFinishedLocked(Lcom/android/server/am/ServiceRecord;Landroid/content/Intent;Z)V

    .line 22201
    monitor-exit p0

    .line 22202
    return-void

    .line 22201
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public unbindService(Landroid/app/IServiceConnection;)Z
    .locals 1
    .param p1, "connection"    # Landroid/app/IServiceConnection;

    .prologue
    .line 22174
    monitor-enter p0

    .line 22175
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActiveServices;->unbindServiceLocked(Landroid/app/IServiceConnection;)Z

    move-result v0

    monitor-exit p0

    return v0

    .line 22176
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public final unbroadcastIntent(Landroid/app/IApplicationThread;Landroid/content/Intent;I)V
    .locals 14
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "userId"    # I

    .prologue
    .line 23593
    if-eqz p2, :cond_0

    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v1

    const/4 v2, 0x1

    if-ne v1, v2, :cond_0

    .line 23594
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "File descriptors passed in Intent"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 23597
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    const/4 v5, 0x1

    const/4 v6, 0x0

    const-string/jumbo v7, "removeStickyBroadcast"

    const/4 v8, 0x0

    move-object v1, p0

    move/from16 v4, p3

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p3

    .line 23600
    monitor-enter p0

    .line 23601
    :try_start_0
    const-string v1, "android.permission.BROADCAST_STICKY"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_1

    .line 23603
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: unbroadcastIntent() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "android.permission.BROADCAST_STICKY"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    .line 23607
    .local v12, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 23608
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v12}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 23630
    .end local v12    # "msg":Ljava/lang/String;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 23610
    :cond_1
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, p3

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Landroid/util/ArrayMap;

    .line 23611
    .local v13, "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    if-eqz v13, :cond_4

    .line 23612
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v13, v1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Ljava/util/ArrayList;

    .line 23613
    .local v11, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    if-eqz v11, :cond_3

    .line 23614
    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v9

    .line 23616
    .local v9, "N":I
    const/4 v10, 0x0

    .local v10, "i":I
    :goto_0
    if-ge v10, v9, :cond_2

    .line 23617
    invoke-virtual {v11, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/Intent;

    move-object/from16 v0, p2

    invoke-virtual {v0, v1}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z

    move-result v1

    if-eqz v1, :cond_5

    .line 23618
    invoke-virtual {v11, v10}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 23622
    :cond_2
    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-gtz v1, :cond_3

    .line 23623
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v13, v1}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 23626
    .end local v9    # "N":I
    .end local v10    # "i":I
    :cond_3
    invoke-virtual {v13}, Landroid/util/ArrayMap;->size()I

    move-result v1

    if-gtz v1, :cond_4

    .line 23627
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, p3

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->remove(I)V

    .line 23630
    .end local v11    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :cond_4
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 23631
    return-void

    .line 23616
    .restart local v9    # "N":I
    .restart local v10    # "i":I
    .restart local v11    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :cond_5
    add-int/lit8 v10, v10, 0x1

    goto :goto_0
.end method

.method public unhandledBack()V
    .locals 4

    .prologue
    .line 15166
    const-string v2, "android.permission.FORCE_BACK"

    const-string/jumbo v3, "unhandledBack()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 15169
    monitor-enter p0

    .line 15170
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v0

    .line 15172
    .local v0, "origId":J
    :try_start_1
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStack;->unhandledBackLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 15174
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 15176
    monitor-exit p0

    .line 15177
    return-void

    .line 15174
    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .line 15176
    .end local v0    # "origId":J
    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v2
.end method

.method public unregisterProcessObserver(Landroid/app/IProcessObserver;)V
    .locals 1
    .param p1, "observer"    # Landroid/app/IProcessObserver;

    .prologue
    .line 16062
    monitor-enter p0

    .line 16063
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    .line 16064
    monitor-exit p0

    .line 16065
    return-void

    .line 16064
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public unregisterReceiver(Landroid/content/IIntentReceiver;)V
    .locals 12
    .param p1, "receiver"    # Landroid/content/IIntentReceiver;

    .prologue
    .line 22588
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v10

    .line 22590
    .local v10, "origId":J
    const/4 v8, 0x0

    .line 22592
    .local v8, "doTrim":Z
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 22593
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-interface {p1}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/am/ReceiverList;

    .line 22594
    .local v9, "rl":Lcom/android/server/am/ReceiverList;
    if-eqz v9, :cond_2

    .line 22595
    iget-object v1, v9, Lcom/android/server/am/ReceiverList;->curBroadcast:Lcom/android/server/am/BroadcastRecord;

    .line 22596
    .local v1, "r":Lcom/android/server/am/BroadcastRecord;
    if-eqz v1, :cond_0

    iget-object v0, v1, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    invoke-virtual {v0, v1}, Lcom/android/server/am/BroadcastQueue;->getMatchingOrderedReceiver(Landroid/os/IBinder;)Lcom/android/server/am/BroadcastRecord;

    move-result-object v0

    if-ne v1, v0, :cond_0

    .line 22597
    iget-object v0, v1, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    iget v2, v1, Lcom/android/server/am/BroadcastRecord;->resultCode:I

    iget-object v3, v1, Lcom/android/server/am/BroadcastRecord;->resultData:Ljava/lang/String;

    iget-object v4, v1, Lcom/android/server/am/BroadcastRecord;->resultExtras:Landroid/os/Bundle;

    iget-boolean v5, v1, Lcom/android/server/am/BroadcastRecord;->resultAbort:Z

    const/4 v6, 0x0

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/BroadcastQueue;->finishReceiverLocked(Lcom/android/server/am/BroadcastRecord;ILjava/lang/String;Landroid/os/Bundle;ZZ)Z

    move-result v7

    .line 22600
    .local v7, "doNext":Z
    if-eqz v7, :cond_0

    .line 22601
    const/4 v8, 0x1

    .line 22602
    iget-object v0, v1, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    const/4 v2, 0x0

    invoke-virtual {v0, v2}, Lcom/android/server/am/BroadcastQueue;->processNextBroadcast(Z)V

    .line 22606
    .end local v7    # "doNext":Z
    :cond_0
    iget-object v0, v9, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v0, :cond_1

    .line 22607
    iget-object v0, v9, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->receivers:Landroid/util/ArraySet;

    invoke-virtual {v0, v9}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 22609
    :cond_1
    invoke-virtual {p0, v9}, Lcom/android/server/am/ActivityManagerService;->removeReceiverLocked(Lcom/android/server/am/ReceiverList;)V

    .line 22610
    iget-boolean v0, v9, Lcom/android/server/am/ReceiverList;->linkedToDeath:Z

    if-eqz v0, :cond_2

    .line 22611
    const/4 v0, 0x0

    iput-boolean v0, v9, Lcom/android/server/am/ReceiverList;->linkedToDeath:Z

    .line 22612
    iget-object v0, v9, Lcom/android/server/am/ReceiverList;->receiver:Landroid/content/IIntentReceiver;

    invoke-interface {v0}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    const/4 v2, 0x0

    invoke-interface {v0, v9, v2}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 22615
    .end local v1    # "r":Lcom/android/server/am/BroadcastRecord;
    :cond_2
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 22619
    if-eqz v8, :cond_3

    .line 22620
    :try_start_2
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->trimApplications()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 22625
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 22627
    :goto_0
    return-void

    .line 22615
    .end local v9    # "rl":Lcom/android/server/am/ReceiverList;
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 22625
    :catchall_1
    move-exception v0

    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0

    .restart local v9    # "rl":Lcom/android/server/am/ReceiverList;
    :cond_3
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0
.end method

.method public unregisterUidObserver(Landroid/app/IUidObserver;)V
    .locals 1
    .param p1, "observer"    # Landroid/app/IUidObserver;

    .prologue
    .line 16077
    monitor-enter p0

    .line 16078
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUidObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    .line 16079
    monitor-exit p0

    .line 16080
    return-void

    .line 16079
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public unregisterUserSwitchObserver(Landroid/app/IUserSwitchObserver;)V
    .locals 1
    .param p1, "observer"    # Landroid/app/IUserSwitchObserver;

    .prologue
    .line 28321
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    .line 28322
    return-void
.end method

.method unsafeConvertIncomingUser(I)I
    .locals 1
    .param p1, "userId"    # I

    .prologue
    .line 21976
    const/4 v0, -0x2

    if-eq p1, v0, :cond_0

    const/4 v0, -0x3

    if-ne p1, v0, :cond_1

    :cond_0
    iget p1, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    .end local p1    # "userId":I
    :cond_1
    return p1
.end method

.method public unstableProviderDied(Landroid/os/IBinder;)V
    .locals 12
    .param p1, "connection"    # Landroid/os/IBinder;

    .prologue
    .line 14904
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/ContentProviderConnection;

    move-object v2, v0
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    .line 14911
    .local v2, "conn":Lcom/android/server/am/ContentProviderConnection;
    if-nez v2, :cond_0

    .line 14912
    new-instance v9, Ljava/lang/NullPointerException;

    const-string v10, "connection is null"

    invoke-direct {v9, v10}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v9

    .line 14905
    .end local v2    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :catch_0
    move-exception v3

    .line 14906
    .local v3, "e":Ljava/lang/ClassCastException;
    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v10, "refContentProvider: "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " not a ContentProviderConnection"

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 14908
    .local v6, "msg":Ljava/lang/String;
    const-string v9, "ActivityManager"

    invoke-static {v9, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14909
    new-instance v9, Ljava/lang/IllegalArgumentException;

    invoke-direct {v9, v6}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v9

    .line 14917
    .end local v3    # "e":Ljava/lang/ClassCastException;
    .end local v6    # "msg":Ljava/lang/String;
    .restart local v2    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :cond_0
    monitor-enter p0

    .line 14918
    :try_start_1
    iget-object v9, v2, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v8, v9, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    .line 14919
    .local v8, "provider":Landroid/content/IContentProvider;
    monitor-exit p0

    .line 14921
    if-nez v8, :cond_1

    .line 14960
    :goto_0
    return-void

    .line 14919
    .end local v8    # "provider":Landroid/content/IContentProvider;
    :catchall_0
    move-exception v9

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v9

    .line 14927
    .restart local v8    # "provider":Landroid/content/IContentProvider;
    :cond_1
    invoke-interface {v8}, Landroid/content/IContentProvider;->asBinder()Landroid/os/IBinder;

    move-result-object v9

    invoke-interface {v9}, Landroid/os/IBinder;->pingBinder()Z

    move-result v9

    if-eqz v9, :cond_2

    .line 14929
    monitor-enter p0

    .line 14930
    :try_start_2
    const-string v9, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "unstableProviderDied: caller "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v11

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " says "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " died, but we don\'t agree"

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14932
    monitor-exit p0

    goto :goto_0

    .line 14933
    :catchall_1
    move-exception v9

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v9

    .line 14937
    :cond_2
    monitor-enter p0

    .line 14938
    :try_start_3
    iget-object v9, v2, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v9, v9, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    if-eq v9, v8, :cond_3

    .line 14940
    monitor-exit p0

    goto :goto_0

    .line 14959
    :catchall_2
    move-exception v9

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    throw v9

    .line 14943
    :cond_3
    :try_start_4
    iget-object v9, v2, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v7, v9, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    .line 14944
    .local v7, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v7, :cond_4

    iget-object v9, v7, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v9, :cond_5

    .line 14946
    :cond_4
    monitor-exit p0

    goto :goto_0

    .line 14951
    :cond_5
    const-string v9, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Process "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget-object v11, v7, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " (pid "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget v11, v7, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, ") early provider death"

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 14953
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    move-result-wide v4

    .line 14955
    .local v4, "ident":J
    :try_start_5
    invoke-virtual {p0, v7}, Lcom/android/server/am/ActivityManagerService;->appDiedLocked(Lcom/android/server/am/ProcessRecord;)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    .line 14957
    :try_start_6
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14959
    monitor-exit p0

    goto/16 :goto_0

    .line 14957
    :catchall_3
    move-exception v9

    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v9
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2
.end method

.method public updateConfiguration(Landroid/content/res/Configuration;)V
    .locals 5
    .param p1, "values"    # Landroid/content/res/Configuration;

    .prologue
    .line 24101
    const-string v2, "android.permission.CHANGE_CONFIGURATION"

    const-string/jumbo v3, "updateConfiguration()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 24104
    monitor-enter p0

    .line 24150
    if-nez p1, :cond_0

    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz v2, :cond_0

    .line 24152
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowManagerService;->computeNewConfiguration()Landroid/content/res/Configuration;

    move-result-object p1

    .line 24155
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz v2, :cond_1

    .line 24156
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v2, v3}, Lcom/android/server/am/ProcessList;->applyDisplaySize(Lcom/android/server/wm/WindowManagerService;)V

    .line 24159
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 24160
    .local v0, "origId":J
    if-eqz p1, :cond_2

    .line 24161
    invoke-static {p1}, Landroid/provider/Settings$System;->clearConfiguration(Landroid/content/res/Configuration;)V

    .line 24163
    :cond_2
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x0

    invoke-virtual {p0, p1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z

    .line 24164
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 24168
    monitor-exit p0

    .line 24169
    return-void

    .line 24168
    .end local v0    # "origId":J
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z
    .locals 35
    .param p1, "values"    # Landroid/content/res/Configuration;
    .param p2, "starting"    # Lcom/android/server/am/ActivityRecord;
    .param p3, "persistent"    # Z
    .param p4, "initLocale"    # Z

    .prologue
    .line 24250
    const/16 v22, 0x0

    .line 24252
    .local v22, "changes":I
    if-eqz p1, :cond_a

    .line 24253
    new-instance v30, Landroid/content/res/Configuration;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v0, v30

    invoke-direct {v0, v3}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .line 24254
    .local v30, "newConfig":Landroid/content/res/Configuration;
    move-object/from16 v0, v30

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Landroid/content/res/Configuration;->updateFrom(Landroid/content/res/Configuration;)I

    move-result v22

    .line 24255
    if-eqz v22, :cond_a

    .line 24259
    const/16 v3, 0xa9f

    move/from16 v0, v22

    invoke-static {v3, v0}, Landroid/util/EventLog;->writeEvent(II)I

    .line 24261
    if-nez p4, :cond_0

    move-object/from16 v0, p1

    iget-object v3, v0, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;

    if-eqz v3, :cond_0

    move-object/from16 v0, p1

    iget-boolean v3, v0, Landroid/content/res/Configuration;->userSetLocale:Z

    if-eqz v3, :cond_0

    .line 24262
    move-object/from16 v0, p1

    iget-object v3, v0, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;

    invoke-virtual {v3}, Ljava/util/Locale;->toLanguageTag()Ljava/lang/String;

    move-result-object v27

    .line 24263
    .local v27, "languageTag":Ljava/lang/String;
    const-string/jumbo v3, "persist.sys.locale"

    move-object/from16 v0, v27

    invoke-static {v3, v0}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 24264
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x2f

    move-object/from16 v0, p1

    iget-object v7, v0, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;

    invoke-virtual {v4, v5, v7}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 24268
    .end local v27    # "languageTag":Ljava/lang/String;
    :cond_0
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    .line 24269
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    if-gtz v3, :cond_1

    .line 24270
    const/4 v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    .line 24272
    :cond_1
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    move-object/from16 v0, v30

    iput v3, v0, Landroid/content/res/Configuration;->seq:I

    .line 24273
    move-object/from16 v0, v30

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    .line 24274
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Config changes="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-static/range {v22 .. v22}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, v30

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 24275
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    move-object/from16 v0, v30

    invoke-virtual {v3, v0, v4}, Landroid/app/usage/UsageStatsManagerInternal;->reportConfigurationChange(Landroid/content/res/Configuration;I)V

    .line 24278
    new-instance v23, Landroid/content/res/Configuration;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v0, v23

    invoke-direct {v0, v3}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .line 24282
    .local v23, "configCopy":Landroid/content/res/Configuration;
    invoke-static/range {v30 .. v30}, Lcom/android/server/am/ActivityManagerService;->shouldShowDialogs(Landroid/content/res/Configuration;)Z

    move-result v3

    move-object/from16 v0, p0

    iput-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mShowDialogs:Z

    .line 24284
    invoke-static {}, Lcom/android/server/AttributeCache;->instance()Lcom/android/server/AttributeCache;

    move-result-object v20

    .line 24285
    .local v20, "ac":Lcom/android/server/AttributeCache;
    if-eqz v20, :cond_2

    .line 24286
    move-object/from16 v0, v20

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Lcom/android/server/AttributeCache;->updateConfiguration(Landroid/content/res/Configuration;)V

    .line 24296
    :cond_2
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    move-object/from16 v0, v23

    invoke-virtual {v3, v0}, Landroid/app/ActivityThread;->applyConfigurationToResources(Landroid/content/res/Configuration;)V

    .line 24301
    move/from16 v0, v22

    and-int/lit16 v3, v0, 0x80

    if-eqz v3, :cond_3

    .line 24303
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mMultiWindowPolicy:Lcom/android/server/am/MultiWindowPolicy;

    const/4 v4, 0x0

    invoke-virtual {v3, v4}, Lcom/android/server/am/MultiWindowPolicy;->updateConfigurationLockedLa(I)V

    .line 24310
    :cond_3
    move/from16 v0, v22

    and-int/lit16 v3, v0, 0x400

    if-eqz v3, :cond_4

    .line 24311
    invoke-static {}, Lcom/android/server/am/VirtualScreenManagerService;->self()Lcom/android/server/am/VirtualScreenManagerService;

    move-result-object v3

    invoke-virtual {v3}, Lcom/android/server/am/VirtualScreenManagerService;->updateConfigurationLocked()V

    .line 24316
    :cond_4
    if-eqz p3, :cond_5

    invoke-static/range {v22 .. v22}, Landroid/provider/Settings$System;->hasInterestingConfigurationChanges(I)Z

    move-result v3

    if-eqz v3, :cond_5

    .line 24317
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/4 v4, 0x4

    invoke-virtual {v3, v4}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v29

    .line 24318
    .local v29, "msg":Landroid/os/Message;
    new-instance v3, Landroid/content/res/Configuration;

    move-object/from16 v0, v23

    invoke-direct {v3, v0}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    move-object/from16 v0, v29

    iput-object v3, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 24319
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, v29

    invoke-virtual {v3, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 24322
    .end local v29    # "msg":Landroid/os/Message;
    :cond_5
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v4, 0x0

    invoke-virtual {v3, v4}, Lcom/android/server/am/ActivityStackSupervisor;->getGlobalTaskHistoryLocked(I)Ljava/util/ArrayList;

    move-result-object v24

    .line 24325
    .local v24, "globalTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/TaskRecord;>;"
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v25, v3, -0x1

    .local v25, "i":I
    :goto_0
    if-ltz v25, :cond_8

    .line 24326
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v25

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v21

    check-cast v21, Lcom/android/server/am/ProcessRecord;

    .line 24328
    .local v21, "app":Lcom/android/server/am/ProcessRecord;
    :try_start_0
    move-object/from16 v0, v21

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_6

    .line 24334
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mScaledAppNames:Ljava/util/Map;

    move-object/from16 v0, v21

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-interface {v3, v4}, Ljava/util/Map;->containsKey(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_7

    .line 24335
    new-instance v33, Landroid/content/res/Configuration;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v0, v33

    invoke-direct {v0, v3}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .line 24337
    .local v33, "scaledConfig":Landroid/content/res/Configuration;
    move-object/from16 v0, v21

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3}, Ljava/lang/String;->toString()Ljava/lang/String;

    move-result-object v31

    .line 24338
    .local v31, "packageName":Ljava/lang/String;
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mDssHelper:Landroid/os/DssHelper;

    move-object/from16 v0, v31

    invoke-virtual {v3, v0}, Landroid/os/DssHelper;->getScalingFactorAdss(Ljava/lang/String;)F

    move-result v32

    .line 24339
    .local v32, "resolutionFactorf":F
    move-object/from16 v0, v33

    iget v3, v0, Landroid/content/res/Configuration;->densityDpi:I

    int-to-float v3, v3

    mul-float v3, v3, v32

    float-to-int v3, v3

    move-object/from16 v0, v33

    iput v3, v0, Landroid/content/res/Configuration;->densityDpi:I

    .line 24340
    move-object/from16 v0, v21

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move-object/from16 v0, v33

    invoke-interface {v3, v0}, Landroid/app/IApplicationThread;->scheduleConfigurationChanged(Landroid/content/res/Configuration;)V

    .line 24325
    .end local v31    # "packageName":Ljava/lang/String;
    .end local v32    # "resolutionFactorf":F
    .end local v33    # "scaledConfig":Landroid/content/res/Configuration;
    :cond_6
    :goto_1
    add-int/lit8 v25, v25, -0x1

    goto :goto_0

    .line 24342
    :cond_7
    move-object/from16 v0, v21

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move-object/from16 v0, v23

    invoke-interface {v3, v0}, Landroid/app/IApplicationThread;->scheduleConfigurationChanged(Landroid/content/res/Configuration;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_1

    .line 24346
    :catch_0
    move-exception v3

    goto :goto_1

    .line 24349
    .end local v21    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_8
    new-instance v6, Landroid/content/Intent;

    const-string v3, "android.intent.action.CONFIGURATION_CHANGED"

    invoke-direct {v6, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 24350
    .local v6, "intent":Landroid/content/Intent;
    const/high16 v3, 0x70000000

    invoke-virtual {v6, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 24353
    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, -0x1

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, 0x0

    sget v17, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v18, 0x3e8

    const/16 v19, -0x1

    move-object/from16 v3, p0

    invoke-direct/range {v3 .. v19}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 24356
    and-int/lit8 v3, v22, 0x4

    if-eqz v3, :cond_a

    .line 24357
    new-instance v6, Landroid/content/Intent;

    .end local v6    # "intent":Landroid/content/Intent;
    const-string v3, "android.intent.action.LOCALE_CHANGED"

    invoke-direct {v6, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 24358
    .restart local v6    # "intent":Landroid/content/Intent;
    const/high16 v3, 0x10000000

    invoke-virtual {v6, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 24359
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v3, :cond_9

    .line 24360
    const/high16 v3, 0x40000000    # 2.0f

    invoke-virtual {v6, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 24362
    :cond_9
    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, -0x1

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, 0x0

    sget v17, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v18, 0x3e8

    const/16 v19, -0x1

    move-object/from16 v3, p0

    invoke-direct/range {v3 .. v19}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 24369
    .end local v6    # "intent":Landroid/content/Intent;
    .end local v20    # "ac":Lcom/android/server/AttributeCache;
    .end local v23    # "configCopy":Landroid/content/res/Configuration;
    .end local v24    # "globalTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/TaskRecord;>;"
    .end local v25    # "i":I
    .end local v30    # "newConfig":Landroid/content/res/Configuration;
    :cond_a
    const/16 v26, 0x1

    .line 24370
    .local v26, "kept":Z
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v28

    .line 24372
    .local v28, "mainStack":Lcom/android/server/am/ActivityStack;
    if-eqz v28, :cond_c

    .line 24373
    if-eqz v22, :cond_b

    if-nez p2, :cond_b

    .line 24377
    const/4 v3, 0x0

    move-object/from16 v0, v28

    invoke-virtual {v0, v3}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Lcom/android/server/am/ActivityRecord;)Lcom/android/server/am/ActivityRecord;

    move-result-object p2

    .line 24380
    :cond_b
    if-eqz p2, :cond_c

    .line 24384
    move-object/from16 v0, p2

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    if-eqz v3, :cond_e

    move-object/from16 v0, p2

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v0, v3, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    move-object/from16 v34, v0

    .line 24385
    .local v34, "startingStack":Lcom/android/server/am/ActivityStack;
    :goto_2
    if-eqz v34, :cond_f

    move-object/from16 v0, v34

    move-object/from16 v1, v28

    if-eq v0, v1, :cond_f

    .line 24387
    move-object/from16 v0, v34

    move-object/from16 v1, p2

    move/from16 v2, v22

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ActivityStack;->ensureActivityConfigurationLocked(Lcom/android/server/am/ActivityRecord;I)Z

    move-result v26

    .line 24396
    :goto_3
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, p2

    move/from16 v1, v22

    invoke-virtual {v3, v0, v1}, Lcom/android/server/am/ActivityStackSupervisor;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;I)V

    .line 24400
    .end local v34    # "startingStack":Lcom/android/server/am/ActivityStack;
    :cond_c
    if-eqz p1, :cond_d

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz v3, :cond_d

    .line 24401
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService;->setNewConfiguration(Landroid/content/res/Configuration;)V

    .line 24404
    :cond_d
    return v26

    .line 24384
    :cond_e
    const/16 v34, 0x0

    goto :goto_2

    .line 24390
    .restart local v34    # "startingStack":Lcom/android/server/am/ActivityStack;
    :cond_f
    move-object/from16 v0, v28

    move-object/from16 v1, p2

    move/from16 v2, v22

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ActivityStack;->ensureActivityConfigurationLocked(Lcom/android/server/am/ActivityRecord;I)Z

    move-result v26

    goto :goto_3
.end method

.method updateConfigurationLocked(Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;Lcom/android/server/am/ActivityRecord;ZZ)Z
    .locals 43
    .param p2, "starting"    # Lcom/android/server/am/ActivityRecord;
    .param p3, "persistent"    # Z
    .param p4, "initLocale"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList",
            "<",
            "Landroid/content/res/Configuration;",
            ">;",
            "Lcom/android/server/am/ActivityRecord;",
            "ZZ)Z"
        }
    .end annotation

    .prologue
    .line 24410
    .local p1, "values":Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;, "Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList<Landroid/content/res/Configuration;>;"
    const/16 v29, 0x0

    .line 24411
    .local v29, "hasChanges":Z
    const/16 v30, 0x0

    .line 24413
    .local v30, "hasLocaleChanges":Z
    new-instance v23, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;

    invoke-direct/range {v23 .. v23}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;-><init>()V

    .line 24415
    .local v23, "changes":Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;, "Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList<Ljava/lang/Integer;>;"
    if-eqz p1, :cond_f

    .line 24416
    const/16 v31, 0x0

    .local v31, "i":I
    :goto_0
    invoke-virtual/range {p1 .. p1}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->size()I

    move-result v3

    move/from16 v0, v31

    if-ge v0, v3, :cond_0

    .line 24417
    new-instance v3, Ljava/lang/Integer;

    const/4 v4, 0x0

    invoke-direct {v3, v4}, Ljava/lang/Integer;-><init>(I)V

    move-object/from16 v0, v23

    move/from16 v1, v31

    invoke-virtual {v0, v1, v3}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 24416
    add-int/lit8 v31, v31, 0x1

    goto :goto_0

    .line 24419
    :cond_0
    invoke-virtual/range {p1 .. p1}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v32

    .local v32, "i$":Ljava/util/Iterator;
    :cond_1
    :goto_1
    invoke-interface/range {v32 .. v32}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_7

    invoke-interface/range {v32 .. v32}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v42

    check-cast v42, Landroid/content/res/Configuration;

    .line 24420
    .local v42, "value":Landroid/content/res/Configuration;
    if-eqz v42, :cond_1

    move-object/from16 v0, v42

    iget v3, v0, Landroid/content/res/Configuration;->displayId:I

    const/4 v4, 0x2

    if-eq v3, v4, :cond_1

    .line 24423
    new-instance v39, Landroid/content/res/Configuration;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurations:Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;

    move-object/from16 v0, v42

    iget v4, v0, Landroid/content/res/Configuration;->displayId:I

    invoke-virtual {v3, v4}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/res/Configuration;

    move-object/from16 v0, v39

    invoke-direct {v0, v3}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .line 24424
    .local v39, "newConfig":Landroid/content/res/Configuration;
    move-object/from16 v0, v42

    iget v3, v0, Landroid/content/res/Configuration;->displayId:I

    move-object/from16 v0, v39

    move-object/from16 v1, v42

    invoke-virtual {v0, v1}, Landroid/content/res/Configuration;->updateFrom(Landroid/content/res/Configuration;)I

    move-result v4

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    move-object/from16 v0, v23

    invoke-virtual {v0, v3, v4}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 24425
    move-object/from16 v0, v42

    iget v3, v0, Landroid/content/res/Configuration;->displayId:I

    move-object/from16 v0, v23

    invoke-virtual {v0, v3}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/Integer;

    invoke-virtual {v3}, Ljava/lang/Integer;->intValue()I

    move-result v22

    .line 24426
    .local v22, "change":I
    if-eqz v22, :cond_1

    .line 24427
    const/16 v29, 0x1

    .line 24432
    const v3, 0x12ec24

    const/4 v4, 0x2

    new-array v4, v4, [Ljava/lang/Object;

    const/4 v5, 0x0

    move-object/from16 v0, v42

    iget v7, v0, Landroid/content/res/Configuration;->displayId:I

    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v4, v5

    const/4 v5, 0x1

    invoke-static/range {v22 .. v22}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v4, v5

    invoke-static {v3, v4}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 24434
    move-object/from16 v0, v42

    iget v3, v0, Landroid/content/res/Configuration;->displayId:I

    if-nez v3, :cond_2

    .line 24435
    if-nez p4, :cond_2

    move-object/from16 v0, v42

    iget-object v3, v0, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;

    if-eqz v3, :cond_2

    move-object/from16 v0, v42

    iget-boolean v3, v0, Landroid/content/res/Configuration;->userSetLocale:Z

    if-eqz v3, :cond_2

    .line 24436
    move-object/from16 v0, v42

    iget-object v3, v0, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;

    invoke-virtual {v3}, Ljava/util/Locale;->toLanguageTag()Ljava/lang/String;

    move-result-object v35

    .line 24437
    .local v35, "languageTag":Ljava/lang/String;
    const-string/jumbo v3, "persist.sys.locale"

    move-object/from16 v0, v35

    invoke-static {v3, v0}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 24438
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x2f

    move-object/from16 v0, v42

    iget-object v7, v0, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;

    invoke-virtual {v4, v5, v7}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 24443
    .end local v35    # "languageTag":Ljava/lang/String;
    :cond_2
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeqs:[I

    move-object/from16 v0, v42

    iget v4, v0, Landroid/content/res/Configuration;->displayId:I

    aget v5, v3, v4

    add-int/lit8 v5, v5, 0x1

    aput v5, v3, v4

    .line 24444
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeqs:[I

    move-object/from16 v0, v42

    iget v4, v0, Landroid/content/res/Configuration;->displayId:I

    aget v3, v3, v4

    if-gtz v3, :cond_3

    .line 24445
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeqs:[I

    move-object/from16 v0, v42

    iget v4, v0, Landroid/content/res/Configuration;->displayId:I

    const/4 v5, 0x1

    aput v5, v3, v4

    .line 24447
    :cond_3
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeqs:[I

    move-object/from16 v0, v42

    iget v4, v0, Landroid/content/res/Configuration;->displayId:I

    aget v3, v3, v4

    move-object/from16 v0, v39

    iput v3, v0, Landroid/content/res/Configuration;->seq:I

    .line 24448
    move-object/from16 v0, v42

    iget v3, v0, Landroid/content/res/Configuration;->displayId:I

    move-object/from16 v0, v39

    iput v3, v0, Landroid/content/res/Configuration;->displayId:I

    .line 24449
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurations:Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;

    move-object/from16 v0, v42

    iget v4, v0, Landroid/content/res/Configuration;->displayId:I

    move-object/from16 v0, v39

    invoke-virtual {v3, v4, v0}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 24450
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Config changes="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-static/range {v22 .. v22}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, v39

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 24451
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    move-object/from16 v0, v39

    invoke-virtual {v3, v0, v4}, Landroid/app/usage/UsageStatsManagerInternal;->reportConfigurationChange(Landroid/content/res/Configuration;I)V

    .line 24454
    new-instance v26, Landroid/content/res/Configuration;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurations:Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;

    move-object/from16 v0, v42

    iget v4, v0, Landroid/content/res/Configuration;->displayId:I

    invoke-virtual {v3, v4}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/res/Configuration;

    move-object/from16 v0, v26

    invoke-direct {v0, v3}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .line 24456
    .local v26, "configCopy":Landroid/content/res/Configuration;
    move-object/from16 v0, v42

    iget v3, v0, Landroid/content/res/Configuration;->displayId:I

    if-nez v3, :cond_5

    .line 24459
    invoke-static/range {v39 .. v39}, Lcom/android/server/am/ActivityManagerService;->shouldShowDialogs(Landroid/content/res/Configuration;)Z

    move-result v3

    move-object/from16 v0, p0

    iput-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mShowDialogs:Z

    .line 24461
    invoke-static {}, Lcom/android/server/AttributeCache;->instance()Lcom/android/server/AttributeCache;

    move-result-object v20

    .line 24462
    .local v20, "ac":Lcom/android/server/AttributeCache;
    if-eqz v20, :cond_4

    .line 24463
    move-object/from16 v0, v20

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Lcom/android/server/AttributeCache;->updateConfiguration(Landroid/content/res/Configuration;)V

    .line 24473
    :cond_4
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    move-object/from16 v0, v26

    invoke-virtual {v3, v0}, Landroid/app/ActivityThread;->applyConfigurationToResources(Landroid/content/res/Configuration;)V

    .line 24478
    move/from16 v0, v22

    and-int/lit16 v3, v0, 0x80

    if-eqz v3, :cond_5

    .line 24480
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mMultiWindowPolicy:Lcom/android/server/am/MultiWindowPolicy;

    const/4 v4, 0x0

    invoke-virtual {v3, v4}, Lcom/android/server/am/MultiWindowPolicy;->updateConfigurationLockedLa(I)V

    .line 24486
    .end local v20    # "ac":Lcom/android/server/AttributeCache;
    :cond_5
    if-eqz p3, :cond_6

    invoke-static/range {v22 .. v22}, Landroid/provider/Settings$System;->hasInterestingConfigurationChanges(I)Z

    move-result v3

    if-eqz v3, :cond_6

    .line 24487
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/4 v4, 0x4

    invoke-virtual {v3, v4}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v38

    .line 24488
    .local v38, "msg":Landroid/os/Message;
    new-instance v3, Landroid/content/res/Configuration;

    move-object/from16 v0, v26

    invoke-direct {v3, v0}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    move-object/from16 v0, v38

    iput-object v3, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 24489
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, v38

    invoke-virtual {v3, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 24492
    .end local v38    # "msg":Landroid/os/Message;
    :cond_6
    and-int/lit8 v3, v22, 0x4

    if-eqz v3, :cond_1

    .line 24493
    const/16 v30, 0x1

    goto/16 :goto_1

    .line 24498
    .end local v22    # "change":I
    .end local v26    # "configCopy":Landroid/content/res/Configuration;
    .end local v39    # "newConfig":Landroid/content/res/Configuration;
    .end local v42    # "value":Landroid/content/res/Configuration;
    :cond_7
    if-eqz v29, :cond_f

    .line 24499
    new-instance v27, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;

    invoke-direct/range {v27 .. v27}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;-><init>()V

    .line 24502
    .local v27, "configs":Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;, "Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList<Landroid/content/res/Configuration;>;"
    new-instance v36, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;

    invoke-direct/range {v36 .. v36}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;-><init>()V

    .line 24504
    .local v36, "mScaledConfigurations":Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;, "Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList<Landroid/content/res/Configuration;>;"
    invoke-virtual/range {p1 .. p1}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v32

    :cond_8
    :goto_2
    invoke-interface/range {v32 .. v32}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_9

    invoke-interface/range {v32 .. v32}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v42

    check-cast v42, Landroid/content/res/Configuration;

    .line 24505
    .restart local v42    # "value":Landroid/content/res/Configuration;
    if-eqz v42, :cond_8

    move-object/from16 v0, v42

    iget v3, v0, Landroid/content/res/Configuration;->displayId:I

    move-object/from16 v0, v23

    invoke-virtual {v0, v3}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/Integer;

    invoke-virtual {v3}, Ljava/lang/Integer;->intValue()I

    move-result v3

    if-eqz v3, :cond_8

    .line 24506
    move-object/from16 v0, v42

    iget v4, v0, Landroid/content/res/Configuration;->displayId:I

    new-instance v5, Landroid/content/res/Configuration;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurations:Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;

    move-object/from16 v0, v42

    iget v7, v0, Landroid/content/res/Configuration;->displayId:I

    invoke-virtual {v3, v7}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/res/Configuration;

    invoke-direct {v5, v3}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    move-object/from16 v0, v27

    invoke-virtual {v0, v4, v5}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 24508
    move-object/from16 v0, v42

    iget v4, v0, Landroid/content/res/Configuration;->displayId:I

    new-instance v5, Landroid/content/res/Configuration;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurations:Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;

    move-object/from16 v0, v42

    iget v7, v0, Landroid/content/res/Configuration;->displayId:I

    invoke-virtual {v3, v7}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/res/Configuration;

    invoke-direct {v5, v3}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    move-object/from16 v0, v36

    invoke-virtual {v0, v4, v5}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    goto :goto_2

    .line 24513
    .end local v42    # "value":Landroid/content/res/Configuration;
    :cond_9
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v31, v3, -0x1

    :goto_3
    if-ltz v31, :cond_e

    .line 24514
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v31

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v21

    check-cast v21, Lcom/android/server/am/ProcessRecord;

    .line 24516
    .local v21, "app":Lcom/android/server/am/ProcessRecord;
    :try_start_0
    move-object/from16 v0, v21

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_b

    .line 24521
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mScaledAppNames:Ljava/util/Map;

    move-object/from16 v0, v21

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-interface {v3, v4}, Ljava/util/Map;->containsKey(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_d

    .line 24523
    move-object/from16 v0, v21

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3}, Ljava/lang/String;->toString()Ljava/lang/String;

    move-result-object v40

    .line 24524
    .local v40, "packageName":Ljava/lang/String;
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mDssHelper:Landroid/os/DssHelper;

    move-object/from16 v0, v40

    invoke-virtual {v3, v0}, Landroid/os/DssHelper;->getScalingFactorAdss(Ljava/lang/String;)F

    move-result v41

    .line 24525
    .local v41, "resolutionFactorf":F
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurations:Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;

    invoke-virtual {v3}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v32

    :cond_a
    :goto_4
    invoke-interface/range {v32 .. v32}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_c

    invoke-interface/range {v32 .. v32}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v24

    check-cast v24, Landroid/content/res/Configuration;

    .line 24526
    .local v24, "config":Landroid/content/res/Configuration;
    move-object/from16 v0, v24

    iget v3, v0, Landroid/content/res/Configuration;->displayId:I

    move-object/from16 v0, v36

    invoke-virtual {v0, v3}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/res/Configuration;

    iget v3, v3, Landroid/content/res/Configuration;->densityDpi:I

    move-object/from16 v0, v24

    iget v4, v0, Landroid/content/res/Configuration;->densityDpi:I

    if-ne v3, v4, :cond_a

    .line 24527
    move-object/from16 v0, v24

    iget v3, v0, Landroid/content/res/Configuration;->displayId:I

    move-object/from16 v0, v36

    invoke-virtual {v0, v3}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/res/Configuration;

    iget v4, v3, Landroid/content/res/Configuration;->densityDpi:I

    int-to-float v4, v4

    mul-float v4, v4, v41

    float-to-int v4, v4

    iput v4, v3, Landroid/content/res/Configuration;->densityDpi:I

    goto :goto_4

    .line 24536
    .end local v24    # "config":Landroid/content/res/Configuration;
    .end local v40    # "packageName":Ljava/lang/String;
    .end local v41    # "resolutionFactorf":F
    :catch_0
    move-exception v3

    .line 24513
    :cond_b
    :goto_5
    add-int/lit8 v31, v31, -0x1

    goto :goto_3

    .line 24530
    .restart local v40    # "packageName":Ljava/lang/String;
    .restart local v41    # "resolutionFactorf":F
    :cond_c
    move-object/from16 v0, v21

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move-object/from16 v0, v36

    invoke-interface {v3, v0}, Landroid/app/IApplicationThread;->scheduleConfigurationsChanged(Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;)V

    goto :goto_5

    .line 24532
    .end local v40    # "packageName":Ljava/lang/String;
    .end local v41    # "resolutionFactorf":F
    :cond_d
    move-object/from16 v0, v21

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move-object/from16 v0, v27

    invoke-interface {v3, v0}, Landroid/app/IApplicationThread;->scheduleConfigurationsChanged(Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_5

    .line 24540
    .end local v21    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_e
    new-instance v6, Landroid/content/Intent;

    const-string v3, "android.intent.action.CONFIGURATION_CHANGED"

    invoke-direct {v6, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 24541
    .local v6, "intent":Landroid/content/Intent;
    const/high16 v3, 0x70000000

    invoke-virtual {v6, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 24544
    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, -0x1

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, 0x0

    sget v17, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v18, 0x3e8

    const/16 v19, -0x1

    move-object/from16 v3, p0

    invoke-direct/range {v3 .. v19}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 24548
    if-eqz v30, :cond_f

    .line 24549
    new-instance v6, Landroid/content/Intent;

    .end local v6    # "intent":Landroid/content/Intent;
    const-string v3, "android.intent.action.LOCALE_CHANGED"

    invoke-direct {v6, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 24550
    .restart local v6    # "intent":Landroid/content/Intent;
    const/high16 v3, 0x10000000

    invoke-virtual {v6, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 24551
    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, -0x1

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, 0x0

    sget v17, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v18, 0x3e8

    const/16 v19, -0x1

    move-object/from16 v3, p0

    invoke-direct/range {v3 .. v19}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;ILandroid/os/Bundle;ZZIII)I

    .line 24558
    .end local v6    # "intent":Landroid/content/Intent;
    .end local v27    # "configs":Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;, "Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList<Landroid/content/res/Configuration;>;"
    .end local v31    # "i":I
    .end local v32    # "i$":Ljava/util/Iterator;
    .end local v36    # "mScaledConfigurations":Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;, "Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList<Landroid/content/res/Configuration;>;"
    :cond_f
    const/16 v34, 0x1

    .line 24559
    .local v34, "kept":Z
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v37

    .line 24561
    .local v37, "mainStack":Lcom/android/server/am/ActivityStack;
    if-eqz v37, :cond_11

    .line 24562
    if-eqz v29, :cond_10

    if-nez p2, :cond_10

    .line 24566
    const/4 v3, 0x0

    move-object/from16 v0, v37

    invoke-virtual {v0, v3}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Lcom/android/server/am/ActivityRecord;)Lcom/android/server/am/ActivityRecord;

    move-result-object p2

    .line 24569
    :cond_10
    if-eqz p2, :cond_11

    .line 24570
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/am/ActivityRecord;->getDisplayId()I

    move-result v28

    .line 24571
    .local v28, "displayId":I
    move-object/from16 v0, v23

    move/from16 v1, v28

    invoke-virtual {v0, v1}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/Integer;

    invoke-virtual {v3}, Ljava/lang/Integer;->intValue()I

    move-result v25

    .line 24572
    .local v25, "configChanges":I
    move-object/from16 v0, v37

    move-object/from16 v1, p2

    move/from16 v2, v25

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ActivityStack;->ensureActivityConfigurationLocked(Lcom/android/server/am/ActivityRecord;I)Z

    move-result v34

    .line 24575
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, p2

    move/from16 v1, v25

    invoke-virtual {v3, v0, v1}, Lcom/android/server/am/ActivityStackSupervisor;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;I)V

    .line 24579
    .end local v25    # "configChanges":I
    .end local v28    # "displayId":I
    :cond_11
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz v3, :cond_14

    if-eqz p1, :cond_14

    .line 24580
    const/16 v33, 0x0

    .line 24581
    .local v33, "isSetNewConfiguration":Z
    invoke-virtual/range {p1 .. p1}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v32

    .restart local v32    # "i$":Ljava/util/Iterator;
    :cond_12
    :goto_6
    invoke-interface/range {v32 .. v32}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_13

    invoke-interface/range {v32 .. v32}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v42

    check-cast v42, Landroid/content/res/Configuration;

    .line 24582
    .restart local v42    # "value":Landroid/content/res/Configuration;
    if-eqz v42, :cond_12

    move-object/from16 v0, v42

    iget v3, v0, Landroid/content/res/Configuration;->displayId:I

    const/4 v4, 0x2

    if-eq v3, v4, :cond_12

    .line 24586
    if-eqz v42, :cond_12

    .line 24587
    const/16 v33, 0x1

    .line 24588
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurations:Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;

    move-object/from16 v0, v42

    iget v5, v0, Landroid/content/res/Configuration;->displayId:I

    invoke-virtual {v3, v5}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/res/Configuration;

    const/4 v5, 0x0

    invoke-virtual {v4, v3, v5}, Lcom/android/server/wm/WindowManagerService;->setNewConfiguration(Landroid/content/res/Configuration;Z)V

    goto :goto_6

    .line 24591
    .end local v42    # "value":Landroid/content/res/Configuration;
    :cond_13
    if-eqz v33, :cond_14

    .line 24592
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowManagerService;->performLayoutForAppTransition()V

    .line 24596
    .end local v32    # "i$":Ljava/util/Iterator;
    .end local v33    # "isSetNewConfiguration":Z
    :cond_14
    return v34
.end method

.method updateCpuStats()V
    .locals 6

    .prologue
    .line 4000
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    .line 4001
    .local v0, "now":J
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    invoke-virtual {v2}, Ljava/util/concurrent/atomic/AtomicLong;->get()J

    move-result-wide v2

    const-wide/16 v4, 0x3e8

    sub-long v4, v0, v4

    cmp-long v2, v2, v4

    if-ltz v2, :cond_1

    .line 4009
    :cond_0
    :goto_0
    return-void

    .line 4004
    :cond_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuMutexFree:Ljava/util/concurrent/atomic/AtomicBoolean;

    const/4 v3, 0x1

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Ljava/util/concurrent/atomic/AtomicBoolean;->compareAndSet(ZZ)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 4005
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuThread:Ljava/lang/Thread;

    monitor-enter v3

    .line 4006
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuThread:Ljava/lang/Thread;

    invoke-virtual {v2}, Ljava/lang/Object;->notify()V

    .line 4007
    monitor-exit v3

    goto :goto_0

    :catchall_0
    move-exception v2

    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method updateCpuStatsNow()V
    .locals 36

    .prologue
    .line 4012
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v29, v0

    monitor-enter v29

    .line 4013
    :try_start_0
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuMutexFree:Ljava/util/concurrent/atomic/AtomicBoolean;

    move-object/from16 v28, v0

    const/16 v30, 0x0

    move-object/from16 v0, v28

    move/from16 v1, v30

    invoke-virtual {v0, v1}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 4014
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v20

    .line 4015
    .local v20, "now":J
    const/4 v14, 0x0

    .line 4017
    .local v14, "haveNewCpuStats":Z
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Ljava/util/concurrent/atomic/AtomicLong;->get()J

    move-result-wide v30

    const-wide/16 v32, 0x3e8

    sub-long v32, v20, v32

    cmp-long v28, v30, v32

    if-gez v28, :cond_1

    .line 4019
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    move-object/from16 v28, v0

    move-object/from16 v0, v28

    move-wide/from16 v1, v20

    invoke-virtual {v0, v1, v2}, Ljava/util/concurrent/atomic/AtomicLong;->set(J)V

    .line 4020
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->update()V

    .line 4021
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->hasGoodLastStats()Z

    move-result v28

    if-eqz v28, :cond_1

    .line 4022
    const/4 v14, 0x1

    .line 4028
    const-string/jumbo v28, "true"

    const-string/jumbo v30, "events.cpu"

    invoke-static/range {v30 .. v30}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v30

    move-object/from16 v0, v28

    move-object/from16 v1, v30

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v28

    if-eqz v28, :cond_1

    .line 4029
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastUserTime()I

    move-result v27

    .line 4030
    .local v27, "user":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastSystemTime()I

    move-result v25

    .line 4031
    .local v25, "system":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastIoWaitTime()I

    move-result v17

    .line 4032
    .local v17, "iowait":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastIrqTime()I

    move-result v18

    .line 4033
    .local v18, "irq":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastSoftIrqTime()I

    move-result v23

    .line 4034
    .local v23, "softIrq":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastIdleTime()I

    move-result v16

    .line 4036
    .local v16, "idle":I
    add-int v28, v27, v25

    add-int v28, v28, v17

    add-int v28, v28, v18

    add-int v28, v28, v23

    add-int v26, v28, v16

    .line 4037
    .local v26, "total":I
    if-nez v26, :cond_0

    const/16 v26, 0x1

    .line 4039
    :cond_0
    const/16 v28, 0xaa1

    const/16 v30, 0x6

    move/from16 v0, v30

    new-array v0, v0, [Ljava/lang/Object;

    move-object/from16 v30, v0

    const/16 v31, 0x0

    add-int v32, v27, v25

    add-int v32, v32, v17

    add-int v32, v32, v18

    add-int v32, v32, v23

    mul-int/lit8 v32, v32, 0x64

    div-int v32, v32, v26

    invoke-static/range {v32 .. v32}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v32

    aput-object v32, v30, v31

    const/16 v31, 0x1

    mul-int/lit8 v32, v27, 0x64

    div-int v32, v32, v26

    invoke-static/range {v32 .. v32}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v32

    aput-object v32, v30, v31

    const/16 v31, 0x2

    mul-int/lit8 v32, v25, 0x64

    div-int v32, v32, v26

    invoke-static/range {v32 .. v32}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v32

    aput-object v32, v30, v31

    const/16 v31, 0x3

    mul-int/lit8 v32, v17, 0x64

    div-int v32, v32, v26

    invoke-static/range {v32 .. v32}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v32

    aput-object v32, v30, v31

    const/16 v31, 0x4

    mul-int/lit8 v32, v18, 0x64

    div-int v32, v32, v26

    invoke-static/range {v32 .. v32}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v32

    aput-object v32, v30, v31

    const/16 v31, 0x5

    mul-int/lit8 v32, v23, 0x64

    div-int v32, v32, v26

    invoke-static/range {v32 .. v32}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v32

    aput-object v32, v30, v31

    move/from16 v0, v28

    move-object/from16 v1, v30

    invoke-static {v0, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 4051
    .end local v16    # "idle":I
    .end local v17    # "iowait":I
    .end local v18    # "irq":I
    .end local v23    # "softIrq":I
    .end local v25    # "system":I
    .end local v26    # "total":I
    .end local v27    # "user":I
    :cond_1
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v4

    .line 4052
    .local v4, "bstats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 4053
    :try_start_1
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move-object/from16 v30, v0

    monitor-enter v30
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 4054
    if-eqz v14, :cond_9

    .line 4055
    :try_start_2
    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl;->startAddingCpuLocked()Z

    move-result v28

    if-eqz v28, :cond_9

    .line 4056
    const/4 v5, 0x0

    .line 4057
    .local v5, "totalUTime":I
    const/4 v6, 0x0

    .line 4058
    .local v6, "totalSTime":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->countStats()I

    move-result v13

    .line 4059
    .local v13, "N":I
    const/4 v15, 0x0

    .local v15, "i":I
    :goto_0
    if-ge v15, v13, :cond_8

    .line 4060
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    move-object/from16 v0, v28

    invoke-virtual {v0, v15}, Lcom/android/internal/os/ProcessCpuTracker;->getStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v24

    .line 4061
    .local v24, "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    move-object/from16 v0, v24

    iget-boolean v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->working:Z

    move/from16 v28, v0

    if-nez v28, :cond_2

    .line 4059
    :goto_1
    add-int/lit8 v15, v15, 0x1

    goto :goto_0

    .line 4064
    :cond_2
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move-object/from16 v28, v0

    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move/from16 v31, v0

    move-object/from16 v0, v28

    move/from16 v1, v31

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Lcom/android/server/am/ProcessRecord;

    .line 4065
    .local v19, "pr":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_utime:I

    move/from16 v28, v0

    add-int v5, v5, v28

    .line 4066
    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_stime:I

    move/from16 v28, v0

    add-int v6, v6, v28

    .line 4067
    if-eqz v19, :cond_5

    .line 4068
    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->curProcBatteryStats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-object/from16 v22, v0

    .line 4069
    .local v22, "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    if-eqz v22, :cond_3

    invoke-virtual/range {v22 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->isActive()Z

    move-result v28

    if-nez v28, :cond_4

    .line 4070
    :cond_3
    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v28, v0

    move-object/from16 v0, v28

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v28, v0

    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v31, v0

    move/from16 v0, v28

    move-object/from16 v1, v31

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-result-object v22

    move-object/from16 v0, v22

    move-object/from16 v1, v19

    iput-object v0, v1, Lcom/android/server/am/ProcessRecord;->curProcBatteryStats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    .line 4073
    :cond_4
    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_utime:I

    move/from16 v28, v0

    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_stime:I

    move/from16 v31, v0

    move-object/from16 v0, v22

    move/from16 v1, v28

    move/from16 v2, v31

    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->addCpuTimeLocked(II)V

    .line 4075
    move-object/from16 v0, v19

    iget-wide v0, v0, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    move-wide/from16 v32, v0

    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_utime:I

    move/from16 v28, v0

    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_stime:I

    move/from16 v31, v0

    add-int v28, v28, v31

    move/from16 v0, v28

    int-to-long v0, v0

    move-wide/from16 v34, v0

    add-long v32, v32, v34

    move-wide/from16 v0, v32

    move-object/from16 v2, v19

    iput-wide v0, v2, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    goto/16 :goto_1

    .line 4099
    .end local v5    # "totalUTime":I
    .end local v6    # "totalSTime":I
    .end local v13    # "N":I
    .end local v15    # "i":I
    .end local v19    # "pr":Lcom/android/server/am/ProcessRecord;
    .end local v22    # "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    .end local v24    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :catchall_0
    move-exception v28

    monitor-exit v30
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v28

    .line 4105
    :catchall_1
    move-exception v28

    monitor-exit v4
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    throw v28

    .line 4106
    .end local v4    # "bstats":Lcom/android/internal/os/BatteryStatsImpl;
    .end local v14    # "haveNewCpuStats":Z
    .end local v20    # "now":J
    :catchall_2
    move-exception v28

    monitor-exit v29
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    throw v28

    .line 4077
    .restart local v4    # "bstats":Lcom/android/internal/os/BatteryStatsImpl;
    .restart local v5    # "totalUTime":I
    .restart local v6    # "totalSTime":I
    .restart local v13    # "N":I
    .restart local v14    # "haveNewCpuStats":Z
    .restart local v15    # "i":I
    .restart local v19    # "pr":Lcom/android/server/am/ProcessRecord;
    .restart local v20    # "now":J
    .restart local v24    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :cond_5
    :try_start_5
    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->batteryStats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-object/from16 v22, v0

    .line 4078
    .restart local v22    # "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    if-eqz v22, :cond_6

    invoke-virtual/range {v22 .. v22}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->isActive()Z

    move-result v28

    if-nez v28, :cond_7

    .line 4079
    :cond_6
    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->uid:I

    move/from16 v28, v0

    move/from16 v0, v28

    invoke-virtual {v4, v0}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v28

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    move-object/from16 v31, v0

    move/from16 v0, v28

    move-object/from16 v1, v31

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-result-object v22

    move-object/from16 v0, v22

    move-object/from16 v1, v24

    iput-object v0, v1, Lcom/android/internal/os/ProcessCpuTracker$Stats;->batteryStats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    .line 4083
    :cond_7
    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_utime:I

    move/from16 v28, v0

    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_stime:I

    move/from16 v31, v0

    move-object/from16 v0, v22

    move/from16 v1, v28

    move/from16 v2, v31

    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->addCpuTimeLocked(II)V

    goto/16 :goto_1

    .line 4088
    .end local v19    # "pr":Lcom/android/server/am/ProcessRecord;
    .end local v22    # "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    .end local v24    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :cond_8
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastUserTime()I

    move-result v7

    .line 4089
    .local v7, "userTime":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastSystemTime()I

    move-result v8

    .line 4090
    .local v8, "systemTime":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastIoWaitTime()I

    move-result v9

    .line 4091
    .local v9, "iowaitTime":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastIrqTime()I

    move-result v10

    .line 4092
    .local v10, "irqTime":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastSoftIrqTime()I

    move-result v11

    .line 4093
    .local v11, "softIrqTime":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/internal/os/ProcessCpuTracker;->getLastIdleTime()I

    move-result v12

    .line 4094
    .local v12, "idleTime":I
    invoke-virtual/range {v4 .. v12}, Lcom/android/internal/os/BatteryStatsImpl;->finishAddingCpuLocked(IIIIIIII)V

    .line 4099
    .end local v5    # "totalUTime":I
    .end local v6    # "totalSTime":I
    .end local v7    # "userTime":I
    .end local v8    # "systemTime":I
    .end local v9    # "iowaitTime":I
    .end local v10    # "irqTime":I
    .end local v11    # "softIrqTime":I
    .end local v12    # "idleTime":I
    .end local v13    # "N":I
    .end local v15    # "i":I
    :cond_9
    monitor-exit v30
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 4101
    :try_start_6
    move-object/from16 v0, p0

    iget-wide v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastWriteTime:J

    move-wide/from16 v30, v0

    const-wide/32 v32, 0x1b7740

    sub-long v32, v20, v32

    cmp-long v28, v30, v32

    if-gez v28, :cond_a

    .line 4102
    move-wide/from16 v0, v20

    move-object/from16 v2, p0

    iput-wide v0, v2, Lcom/android/server/am/ActivityManagerService;->mLastWriteTime:J

    .line 4103
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/server/am/BatteryStatsService;->scheduleWriteToDisk()V

    .line 4105
    :cond_a
    monitor-exit v4
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 4106
    :try_start_7
    monitor-exit v29
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    .line 4107
    return-void
.end method

.method public updateDeviceOwner(Ljava/lang/String;)V
    .locals 3
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    .line 13563
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 13564
    .local v0, "callingUid":I
    if-eqz v0, :cond_0

    const/16 v1, 0x3e8

    if-eq v0, v1, :cond_0

    .line 13565
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v2, "updateDeviceOwner called from non-system process"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 13567
    :cond_0
    monitor-enter p0

    .line 13568
    :try_start_0
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mDeviceOwnerName:Ljava/lang/String;

    .line 13569
    monitor-exit p0

    .line 13570
    return-void

    .line 13569
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public updateKnoxContainerRuntimeState(II)V
    .locals 3
    .param p1, "containerId"    # I
    .param p2, "runtimeState"    # I

    .prologue
    .line 27349
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/UserState;

    .line 27350
    .local v0, "knoxContainerUser":Lcom/android/server/am/UserState;
    if-eqz v0, :cond_0

    .line 27352
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v2

    if-eqz v2, :cond_1

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v2

    invoke-virtual {v2, p1}, Lcom/android/server/pm/PersonaManagerService;->getPersonaInfo(I)Landroid/content/pm/PersonaInfo;

    move-result-object v1

    .line 27353
    .local v1, "personaInfo":Landroid/content/pm/PersonaInfo;
    :goto_0
    if-eqz v1, :cond_0

    .line 27355
    iget-boolean v2, v1, Landroid/content/pm/PersonaInfo;->isUserManaged:Z

    if-eqz v2, :cond_2

    const/4 v2, 0x4

    if-ne p2, v2, :cond_2

    .line 27356
    invoke-virtual {v1}, Landroid/content/pm/PersonaInfo;->getAdminUid()I

    move-result v2

    iput v2, v0, Lcom/android/server/am/UserState;->mAdminUid:I

    .line 27360
    :goto_1
    iput p2, v0, Lcom/android/server/am/UserState;->mContainerState:I

    .line 27365
    .end local v1    # "personaInfo":Landroid/content/pm/PersonaInfo;
    :cond_0
    return-void

    .line 27352
    :cond_1
    const/4 v1, 0x0

    goto :goto_0

    .line 27358
    .restart local v1    # "personaInfo":Landroid/content/pm/PersonaInfo;
    :cond_2
    const/4 v2, 0x0

    iput v2, v0, Lcom/android/server/am/UserState;->mAdminUid:I

    goto :goto_1
.end method

.method public updateLockTaskPackages(I[Ljava/lang/String;)V
    .locals 3
    .param p1, "userId"    # I
    .param p2, "packages"    # [Ljava/lang/String;

    .prologue
    .line 13574
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 13575
    .local v0, "callingUid":I
    if-eqz v0, :cond_0

    const/16 v1, 0x3e8

    if-eq v0, v1, :cond_0

    .line 13576
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v2, "updateLockTaskPackage called from non-system process"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 13578
    :cond_0
    monitor-enter p0

    .line 13581
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLockTaskPackages:Landroid/util/SparseArray;

    invoke-virtual {v1, p1, p2}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 13582
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->onLockTaskPackagesUpdatedLocked()V

    .line 13583
    monitor-exit p0

    .line 13584
    return-void

    .line 13583
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method final updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V
    .locals 30
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "activityChange"    # Z
    .param p3, "client"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 4648
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-gtz v2, :cond_0

    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hasClientActivities:Z

    if-nez v2, :cond_0

    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->treatLikeActivity:Z

    if-eqz v2, :cond_2

    :cond_0
    const/16 v20, 0x1

    .line 4650
    .local v20, "hasActivity":Z
    :goto_0
    const/16 v21, 0x0

    .line 4651
    .local v21, "hasService":Z
    if-nez p2, :cond_3

    if-eqz v20, :cond_3

    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v2, :cond_1

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, p1

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_3

    .line 4851
    :cond_1
    :goto_1
    return-void

    .line 4648
    .end local v20    # "hasActivity":Z
    .end local v21    # "hasService":Z
    :cond_2
    const/16 v20, 0x0

    goto :goto_0

    .line 4663
    .restart local v20    # "hasActivity":Z
    .restart local v21    # "hasService":Z
    :cond_3
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    add-int/lit8 v2, v2, 0x1

    move-object/from16 v0, p0

    iput v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    .line 4664
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    .line 4665
    .local v4, "now":J
    move-object/from16 v0, p1

    iput-wide v4, v0, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J

    .line 4667
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move-object/from16 v29, v0

    monitor-enter v29

    .line 4670
    if-eqz v20, :cond_4

    .line 4671
    :try_start_0
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v18

    .line 4672
    .local v18, "N":I
    if-lez v18, :cond_5

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    add-int/lit8 v3, v18, -0x1

    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    move-object/from16 v0, p1

    if-ne v2, v0, :cond_5

    .line 4674
    monitor-exit v29

    goto :goto_1

    .line 4850
    .end local v18    # "N":I
    :catchall_0
    move-exception v2

    monitor-exit v29
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2

    .line 4677
    :cond_4
    :try_start_1
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    if-lez v2, :cond_5

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    add-int/lit8 v3, v3, -0x1

    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    move-object/from16 v0, p1

    if-ne v2, v0, :cond_5

    .line 4680
    monitor-exit v29

    goto :goto_1

    .line 4684
    :cond_5
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, p1

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->lastIndexOf(Ljava/lang/Object;)I

    move-result v25

    .line 4686
    .local v25, "lrui":I
    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v2, :cond_6

    if-ltz v25, :cond_6

    .line 4690
    monitor-exit v29

    goto :goto_1

    .line 4726
    :cond_6
    if-ltz v25, :cond_9

    .line 4727
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    move/from16 v0, v25

    if-ge v0, v2, :cond_7

    .line 4728
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    add-int/lit8 v2, v2, -0x1

    move-object/from16 v0, p0

    iput v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    .line 4730
    :cond_7
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    move/from16 v0, v25

    if-ge v0, v2, :cond_8

    .line 4731
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    add-int/lit8 v2, v2, -0x1

    move-object/from16 v0, p0

    iput v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    .line 4741
    :cond_8
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v25

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 4755
    :cond_9
    if-eqz v20, :cond_e

    .line 4756
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v18

    .line 4757
    .restart local v18    # "N":I
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-nez v2, :cond_b

    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    add-int/lit8 v3, v18, -0x1

    if-ge v2, v3, :cond_b

    .line 4762
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    add-int/lit8 v3, v18, -0x1

    move-object/from16 v0, p1

    invoke-virtual {v2, v3, v0}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 4765
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v28, v0

    .line 4766
    .local v28, "uid":I
    add-int/lit8 v22, v18, -0x2

    .local v22, "i":I
    :goto_2
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    move/from16 v0, v22

    if-le v0, v2, :cond_c

    .line 4767
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v22

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v26

    check-cast v26, Lcom/android/server/am/ProcessRecord;

    .line 4768
    .local v26, "subProc":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, v26

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v0, v28

    if-ne v2, v0, :cond_c

    .line 4772
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    add-int/lit8 v3, v22, -0x1

    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v0, v28

    if-eq v2, v0, :cond_a

    .line 4775
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v22

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v27

    check-cast v27, Lcom/android/server/am/ProcessRecord;

    .line 4776
    .local v27, "tmp":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    add-int/lit8 v7, v22, -0x1

    invoke-virtual {v3, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    move/from16 v0, v22

    invoke-virtual {v2, v0, v3}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 4777
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    add-int/lit8 v3, v22, -0x1

    move-object/from16 v0, v27

    invoke-virtual {v2, v3, v0}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 4778
    add-int/lit8 v22, v22, -0x1

    .line 4766
    .end local v27    # "tmp":Lcom/android/server/am/ProcessRecord;
    :cond_a
    add-int/lit8 v22, v22, -0x1

    goto :goto_2

    .line 4788
    .end local v22    # "i":I
    .end local v26    # "subProc":Lcom/android/server/am/ProcessRecord;
    .end local v28    # "uid":I
    :cond_b
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, p1

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 4790
    sget-boolean v2, Lcom/android/server/am/ActivityManagerService;->SNN_PRIORITY_ENABLED:Z

    if-eqz v2, :cond_c

    .line 4791
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackageName:Ljava/lang/String;

    .line 4792
    const-string v2, "com.sec.android.app.launcher"

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_c

    .line 4793
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPrioritiseProcess:Lcom/android/server/am/PrioritizeLRUProcess;

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Lcom/android/server/am/PrioritizeLRUProcess;->updateAppLaunchCount(Ljava/lang/String;)V

    .line 4794
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, " Launching "

    invoke-virtual {v3, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v7, v7, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v3, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v7, ", updated priority"

    invoke-virtual {v3, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 4799
    :cond_c
    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    .line 4833
    .end local v18    # "N":I
    .local v6, "nextIndex":I
    :goto_3
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->connections:Landroid/util/ArraySet;

    invoke-virtual {v2}, Landroid/util/ArraySet;->size()I

    move-result v2

    add-int/lit8 v24, v2, -0x1

    .local v24, "j":I
    :goto_4
    if-ltz v24, :cond_11

    .line 4834
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->connections:Landroid/util/ArraySet;

    move/from16 v0, v24

    invoke-virtual {v2, v0}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/am/ConnectionRecord;

    .line 4835
    .local v8, "cr":Lcom/android/server/am/ConnectionRecord;
    iget-object v2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    if-eqz v2, :cond_d

    iget-boolean v2, v8, Lcom/android/server/am/ConnectionRecord;->serviceDead:Z

    if-nez v2, :cond_d

    iget-object v2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v2, v2, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    if-eqz v2, :cond_d

    iget-object v2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v2, v2, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    iget-object v2, v2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_d

    iget-object v2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v2, v2, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    iget-object v2, v2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v2, v2, Lcom/android/server/am/ProcessRecord;->lruSeq:I

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    if-eq v2, v3, :cond_d

    iget-object v2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v2, v2, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    iget-object v2, v2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-boolean v2, v2, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-nez v2, :cond_d

    .line 4839
    iget-object v2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v2, v2, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    iget-object v3, v2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    const-string/jumbo v7, "service connection"

    move-object/from16 v2, p0

    move-object/from16 v9, p1

    invoke-direct/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessInternalLocked(Lcom/android/server/am/ProcessRecord;JILjava/lang/String;Ljava/lang/Object;Lcom/android/server/am/ProcessRecord;)I

    move-result v6

    .line 4833
    :cond_d
    add-int/lit8 v24, v24, -0x1

    goto :goto_4

    .line 4808
    .end local v6    # "nextIndex":I
    .end local v8    # "cr":Lcom/android/server/am/ConnectionRecord;
    .end local v24    # "j":I
    :cond_e
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    move/from16 v23, v0

    .line 4809
    .local v23, "index":I
    if-eqz p3, :cond_10

    .line 4812
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, p3

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->lastIndexOf(Ljava/lang/Object;)I

    move-result v19

    .line 4815
    .local v19, "clientIndex":I
    move/from16 v0, v19

    move/from16 v1, v25

    if-gt v0, v1, :cond_f

    .line 4818
    move/from16 v19, v25

    .line 4820
    :cond_f
    if-ltz v19, :cond_10

    move/from16 v0, v23

    move/from16 v1, v19

    if-le v0, v1, :cond_10

    .line 4821
    move/from16 v23, v19

    .line 4825
    .end local v19    # "clientIndex":I
    :cond_10
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v23

    move-object/from16 v1, p1

    invoke-virtual {v2, v0, v1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 4826
    add-int/lit8 v6, v23, -0x1

    .line 4827
    .restart local v6    # "nextIndex":I
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    add-int/lit8 v2, v2, 0x1

    move-object/from16 v0, p0

    iput v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    .line 4828
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    add-int/lit8 v2, v2, 0x1

    move-object/from16 v0, p0

    iput v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    goto/16 :goto_3

    .line 4843
    .end local v23    # "index":I
    .restart local v24    # "j":I
    :cond_11
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v24, v2, -0x1

    :goto_5
    if-ltz v24, :cond_13

    .line 4844
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    move/from16 v0, v24

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ContentProviderConnection;

    iget-object v0, v2, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    move-object/from16 v16, v0

    .line 4845
    .local v16, "cpr":Lcom/android/server/am/ContentProviderRecord;
    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_12

    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    iget v2, v2, Lcom/android/server/am/ProcessRecord;->lruSeq:I

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    if-eq v2, v3, :cond_12

    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    iget-boolean v2, v2, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-nez v2, :cond_12

    .line 4846
    move-object/from16 v0, v16

    iget-object v11, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    const-string/jumbo v15, "provider reference"

    move-object/from16 v10, p0

    move-wide v12, v4

    move v14, v6

    move-object/from16 v17, p1

    invoke-direct/range {v10 .. v17}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessInternalLocked(Lcom/android/server/am/ProcessRecord;JILjava/lang/String;Ljava/lang/Object;Lcom/android/server/am/ProcessRecord;)I

    move-result v6

    .line 4843
    :cond_12
    add-int/lit8 v24, v24, -0x1

    goto :goto_5

    .line 4850
    .end local v16    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_13
    monitor-exit v29
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto/16 :goto_1
.end method

.method final updateOomAdjLocked()V
    .locals 68

    .prologue
    .line 26228
    sget-boolean v3, Lcom/android/server/am/SmartAdjustManager;->SAMP_DEBUG_TRACE:Z

    if-eqz v3, :cond_0

    .line 26229
    const-wide/16 v10, 0x40

    const-string/jumbo v3, "updateOomAdjLocked"

    const/4 v5, 0x0

    invoke-static {v10, v11, v3, v5}, Landroid/os/Trace;->asyncTraceBegin(JLjava/lang/String;I)V

    .line 26230
    :cond_0
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->resumedAppLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v18

    .line 26231
    .local v18, "TOP_ACT":Lcom/android/server/am/ActivityRecord;
    if-eqz v18, :cond_5

    move-object/from16 v0, v18

    iget-object v6, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 26232
    .local v6, "TOP_APP":Lcom/android/server/am/ProcessRecord;
    :goto_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v8

    .line 26233
    .local v8, "now":J
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v16

    .line 26234
    .local v16, "nowElapsed":J
    const-wide/32 v10, 0x1b7740

    sub-long v54, v8, v10

    .line 26235
    .local v54, "oldTime":J
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v2

    .line 26242
    .local v2, "N":I
    if-nez v6, :cond_6

    const/16 v65, 0x0

    .line 26245
    .local v65, "topState":I
    :goto_1
    sget v3, Lcom/android/server/am/ActivityManagerService;->curTopState:I

    move/from16 v0, v65

    if-eq v3, v0, :cond_1

    sput v65, Lcom/android/server/am/ActivityManagerService;->curTopState:I

    .line 26247
    :cond_1
    const/16 v35, 0x0

    .line 26248
    .local v35, "isPreCachedMaxKill":Z
    const/16 v36, 0x0

    .line 26249
    .local v36, "isPreEmptyMaxKill":Z
    sget-boolean v3, Lcom/android/server/am/ProcessList;->PRE_MAX_KILL_ENABLE:Z

    if-eqz v3, :cond_4

    const/4 v3, 0x3

    move/from16 v0, v65

    if-eq v0, v3, :cond_2

    if-nez v65, :cond_4

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v3, :cond_4

    .line 26250
    :cond_2
    sget-boolean v3, Lcom/android/server/am/ProcessList;->PRE_EMPTY_KILL:Z

    if-eqz v3, :cond_3

    .line 26251
    const/16 v36, 0x1

    .line 26252
    :cond_3
    sget-boolean v3, Lcom/android/server/am/ProcessList;->PRE_CACHED_KILL:Z

    if-eqz v3, :cond_4

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v3, :cond_4

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    if-eq v6, v3, :cond_4

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-lez v3, :cond_4

    .line 26253
    const/16 v35, 0x1

    .line 26256
    :cond_4
    const/16 v40, 0x0

    .line 26257
    .local v40, "lastCachedProcess":Lcom/android/server/am/ProcessRecord;
    const/16 v53, 0x0

    .line 26260
    .local v53, "preventAggressiveKill":Z
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    add-int/lit8 v29, v3, -0x1

    .local v29, "i":I
    :goto_2
    if-ltz v29, :cond_9

    .line 26261
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    move/from16 v0, v29

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v67

    check-cast v67, Lcom/android/server/am/UidRecord;

    .line 26264
    .local v67, "uidRec":Lcom/android/server/am/UidRecord;
    invoke-virtual/range {v67 .. v67}, Lcom/android/server/am/UidRecord;->reset()V

    .line 26260
    add-int/lit8 v29, v29, -0x1

    goto :goto_2

    .line 26231
    .end local v2    # "N":I
    .end local v6    # "TOP_APP":Lcom/android/server/am/ProcessRecord;
    .end local v8    # "now":J
    .end local v16    # "nowElapsed":J
    .end local v29    # "i":I
    .end local v35    # "isPreCachedMaxKill":Z
    .end local v36    # "isPreEmptyMaxKill":Z
    .end local v40    # "lastCachedProcess":Lcom/android/server/am/ProcessRecord;
    .end local v53    # "preventAggressiveKill":Z
    .end local v54    # "oldTime":J
    .end local v65    # "topState":I
    .end local v67    # "uidRec":Lcom/android/server/am/UidRecord;
    :cond_5
    const/4 v6, 0x0

    goto :goto_0

    .line 26242
    .restart local v2    # "N":I
    .restart local v6    # "TOP_APP":Lcom/android/server/am/ProcessRecord;
    .restart local v8    # "now":J
    .restart local v16    # "nowElapsed":J
    .restart local v54    # "oldTime":J
    :cond_6
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    if-ne v6, v3, :cond_7

    const/16 v65, 0x1

    goto :goto_1

    :cond_7
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mRecentsProcess:Lcom/android/server/am/ProcessRecord;

    if-ne v6, v3, :cond_8

    const/16 v65, 0x2

    goto :goto_1

    :cond_8
    const/16 v65, 0x3

    goto :goto_1

    .line 26267
    .restart local v29    # "i":I
    .restart local v35    # "isPreCachedMaxKill":Z
    .restart local v36    # "isPreEmptyMaxKill":Z
    .restart local v40    # "lastCachedProcess":Lcom/android/server/am/ProcessRecord;
    .restart local v53    # "preventAggressiveKill":Z
    .restart local v65    # "topState":I
    :cond_9
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    .line 26268
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    .line 26269
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumAServiceProcs:I

    .line 26273
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    if-gtz v3, :cond_12

    .line 26274
    const/16 v21, 0x0

    .local v21, "cachedProcessLimit":I
    move/from16 v26, v21

    .line 26304
    .local v26, "emptyProcessLimit":I
    :cond_a
    :goto_3
    sget-boolean v3, Lcom/android/server/am/ProcessList;->DEBUG:Z

    if-eqz v3, :cond_b

    sget-boolean v3, Lcom/android/server/am/ProcessList;->LDHA_ES_ENABLE:Z

    if-eqz v3, :cond_b

    .line 26305
    const-string v3, "ActivityManager_LDHA_ES"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "cachedProcessLimit: "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, v21

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, " emptyProcessLimit: "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, v26

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v3, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 26312
    :cond_b
    const/16 v51, 0x3

    .line 26314
    .local v51, "numSlots":I
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    sub-int v3, v2, v3

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    sub-int v50, v3, v5

    .line 26315
    .local v50, "numEmptyProcs":I
    move/from16 v0, v50

    move/from16 v1, v21

    if-le v0, v1, :cond_c

    .line 26322
    move/from16 v50, v21

    .line 26324
    :cond_c
    div-int v25, v50, v51

    .line 26325
    .local v25, "emptyFactor":I
    const/4 v3, 0x1

    move/from16 v0, v25

    if-ge v0, v3, :cond_d

    const/16 v25, 0x1

    .line 26326
    :cond_d
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    if-lez v3, :cond_18

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    :goto_4
    div-int v20, v3, v51

    .line 26327
    .local v20, "cachedFactor":I
    const/4 v3, 0x1

    move/from16 v0, v20

    if-ge v0, v3, :cond_e

    const/16 v20, 0x1

    .line 26329
    :cond_e
    const/16 v63, 0x0

    .line 26330
    .local v63, "stepCached":I
    const/16 v64, 0x0

    .line 26331
    .local v64, "stepEmpty":I
    const/16 v47, 0x0

    .line 26332
    .local v47, "numCached":I
    const/16 v49, 0x0

    .line 26333
    .local v49, "numEmpty":I
    const/16 v52, 0x0

    .line 26335
    .local v52, "numTrimming":I
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget v3, Lcom/android/server/am/ProcessList;->mWhitelistEnable:I

    const/4 v5, 0x3

    if-ne v3, v5, :cond_f

    const/16 v3, 0xe0

    sput v3, Lcom/android/server/am/ActivityManagerService;->white_list_key:I

    .line 26339
    :cond_f
    const/16 v22, 0x9

    .line 26340
    .local v22, "curCachedAdj":I
    add-int/lit8 v44, v22, 0x1

    .line 26341
    .local v44, "nextCachedAdj":I
    sget-boolean v3, Lcom/android/server/am/ProcessList;->DHA_ADJ_CACHED_FACTOR:Z

    if-eqz v3, :cond_10

    .line 26342
    const/16 v44, 0xf

    .line 26343
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    const/4 v5, 0x2

    if-le v3, v5, :cond_10

    .line 26344
    add-int/lit8 v44, v44, -0x1

    .line 26345
    const/16 v3, 0x9

    move/from16 v0, v44

    if-ge v0, v3, :cond_10

    .line 26346
    const/16 v44, 0x9

    .line 26349
    :cond_10
    const/16 v23, 0x9

    .line 26350
    .local v23, "curEmptyAdj":I
    add-int/lit8 v45, v23, 0x2

    .line 26351
    .local v45, "nextEmptyAdj":I
    const/16 v57, 0x0

    .line 26352
    .local v57, "selectedAppRecord":Lcom/android/server/am/ProcessRecord;
    const-wide/16 v58, 0x0

    .line 26353
    .local v58, "serviceLastActivity":J
    const/16 v46, 0x0

    .line 26355
    .local v46, "numBServices":I
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    .line 26356
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    .line 26358
    add-int/lit8 v29, v2, -0x1

    :goto_5
    if-ltz v29, :cond_69

    .line 26359
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v29

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 26360
    .local v4, "app":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mEnableBServicePropagation:Z

    if-eqz v3, :cond_1b

    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->serviceb:Z

    if-eqz v3, :cond_1b

    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curAdj:I

    const/16 v5, 0x8

    if-ne v3, v5, :cond_1b

    .line 26362
    add-int/lit8 v46, v46, 0x1

    .line 26363
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    add-int/lit8 v56, v3, -0x1

    .local v56, "s":I
    :goto_6
    if-ltz v56, :cond_1b

    .line 26364
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    move/from16 v0, v56

    invoke-virtual {v3, v0}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v61

    check-cast v61, Lcom/android/server/am/ServiceRecord;

    .line 26369
    .local v61, "sr":Lcom/android/server/am/ServiceRecord;
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v10

    move-object/from16 v0, v61

    iget-wide v12, v0, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    sub-long/2addr v10, v12

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mMinBServiceAgingTime:I

    int-to-long v12, v3

    cmp-long v3, v10, v12

    if-gez v3, :cond_19

    .line 26363
    :cond_11
    :goto_7
    add-int/lit8 v56, v56, -0x1

    goto :goto_6

    .line 26275
    .end local v4    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v20    # "cachedFactor":I
    .end local v21    # "cachedProcessLimit":I
    .end local v22    # "curCachedAdj":I
    .end local v23    # "curEmptyAdj":I
    .end local v25    # "emptyFactor":I
    .end local v26    # "emptyProcessLimit":I
    .end local v44    # "nextCachedAdj":I
    .end local v45    # "nextEmptyAdj":I
    .end local v46    # "numBServices":I
    .end local v47    # "numCached":I
    .end local v49    # "numEmpty":I
    .end local v50    # "numEmptyProcs":I
    .end local v51    # "numSlots":I
    .end local v52    # "numTrimming":I
    .end local v56    # "s":I
    .end local v57    # "selectedAppRecord":Lcom/android/server/am/ProcessRecord;
    .end local v58    # "serviceLastActivity":J
    .end local v61    # "sr":Lcom/android/server/am/ServiceRecord;
    .end local v63    # "stepCached":I
    .end local v64    # "stepEmpty":I
    :cond_12
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    const/4 v5, 0x1

    if-ne v3, v5, :cond_13

    .line 26276
    const/16 v26, 0x1

    .line 26277
    .restart local v26    # "emptyProcessLimit":I
    const/16 v21, 0x0

    .restart local v21    # "cachedProcessLimit":I
    goto/16 :goto_3

    .line 26279
    .end local v21    # "cachedProcessLimit":I
    .end local v26    # "emptyProcessLimit":I
    :cond_13
    sget-boolean v3, Lcom/android/server/am/ProcessList;->LDHA_ES_ENABLE:Z

    if-eqz v3, :cond_17

    .line 26280
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    invoke-static {v3}, Lcom/android/server/am/ProcessList;->computeDHAEmptyProcessLimit(I)I

    move-result v26

    .line 26281
    .restart local v26    # "emptyProcessLimit":I
    sget v21, Lcom/android/server/am/ProcessList;->mMaxCached:I

    .line 26283
    .restart local v21    # "cachedProcessLimit":I
    sget v3, Lcom/android/server/am/ProcessList;->MIN_EMPTY_APPS_FOR_DHA:I

    move/from16 v0, v26

    if-ge v0, v3, :cond_14

    .line 26284
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    sget v5, Lcom/android/server/am/ProcessList;->MIN_EMPTY_APPS_FOR_DHA:I

    sget v7, Lcom/android/server/am/ProcessList;->MIN_CACHED_APPS:I

    add-int/2addr v5, v7

    if-gt v3, v5, :cond_15

    .line 26285
    sget v26, Lcom/android/server/am/ProcessList;->MIN_EMPTY_APPS_FOR_DHA:I

    .line 26291
    :cond_14
    :goto_8
    sget v3, Lcom/android/server/am/ProcessList;->MIN_CACHED_APPS:I

    move/from16 v0, v21

    if-ge v0, v3, :cond_a

    .line 26292
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    sget v5, Lcom/android/server/am/ProcessList;->MIN_EMPTY_APPS_FOR_DHA:I

    sget v7, Lcom/android/server/am/ProcessList;->MIN_CACHED_APPS:I

    add-int/2addr v5, v7

    if-gt v3, v5, :cond_16

    .line 26293
    sget v21, Lcom/android/server/am/ProcessList;->MIN_CACHED_APPS:I

    goto/16 :goto_3

    .line 26288
    :cond_15
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    move/from16 v26, v0

    goto :goto_8

    .line 26296
    :cond_16
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    move/from16 v21, v0

    goto/16 :goto_3

    .line 26300
    .end local v21    # "cachedProcessLimit":I
    .end local v26    # "emptyProcessLimit":I
    :cond_17
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    move/from16 v26, v0

    .line 26301
    .restart local v26    # "emptyProcessLimit":I
    sget v21, Lcom/android/server/am/ProcessList;->mMaxCached:I

    .restart local v21    # "cachedProcessLimit":I
    goto/16 :goto_3

    .line 26326
    .restart local v25    # "emptyFactor":I
    .restart local v50    # "numEmptyProcs":I
    .restart local v51    # "numSlots":I
    :cond_18
    const/4 v3, 0x1

    goto/16 :goto_4

    .line 26376
    .restart local v4    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v20    # "cachedFactor":I
    .restart local v22    # "curCachedAdj":I
    .restart local v23    # "curEmptyAdj":I
    .restart local v44    # "nextCachedAdj":I
    .restart local v45    # "nextEmptyAdj":I
    .restart local v46    # "numBServices":I
    .restart local v47    # "numCached":I
    .restart local v49    # "numEmpty":I
    .restart local v52    # "numTrimming":I
    .restart local v56    # "s":I
    .restart local v57    # "selectedAppRecord":Lcom/android/server/am/ProcessRecord;
    .restart local v58    # "serviceLastActivity":J
    .restart local v61    # "sr":Lcom/android/server/am/ServiceRecord;
    .restart local v63    # "stepCached":I
    .restart local v64    # "stepEmpty":I
    :cond_19
    const-wide/16 v10, 0x0

    cmp-long v3, v58, v10

    if-nez v3, :cond_1a

    .line 26377
    move-object/from16 v0, v61

    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    move-wide/from16 v58, v0

    .line 26378
    move-object/from16 v57, v4

    goto :goto_7

    .line 26379
    :cond_1a
    move-object/from16 v0, v61

    iget-wide v10, v0, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    cmp-long v3, v10, v58

    if-gez v3, :cond_11

    .line 26380
    move-object/from16 v0, v61

    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    move-wide/from16 v58, v0

    .line 26381
    move-object/from16 v57, v4

    goto/16 :goto_7

    .line 26390
    .end local v56    # "s":I
    .end local v61    # "sr":Lcom/android/server/am/ServiceRecord;
    :cond_1b
    if-eqz v4, :cond_1c

    const/4 v3, 0x0

    iput-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->hasProviderClient:Z

    .line 26393
    :cond_1c
    sget-boolean v3, Lcom/android/server/am/ProcessList;->ENABLE_B_SERVICE_PROPAGATION:Z

    if-eqz v3, :cond_20

    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->serviceb:Z

    if-eqz v3, :cond_20

    .line 26394
    add-int/lit8 v46, v46, 0x1

    .line 26395
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    add-int/lit8 v56, v3, -0x1

    .restart local v56    # "s":I
    :goto_9
    if-ltz v56, :cond_20

    .line 26396
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    move/from16 v0, v56

    invoke-virtual {v3, v0}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v61

    check-cast v61, Lcom/android/server/am/ServiceRecord;

    .line 26401
    .restart local v61    # "sr":Lcom/android/server/am/ServiceRecord;
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v10

    move-object/from16 v0, v61

    iget-wide v12, v0, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    sub-long/2addr v10, v12

    sget v3, Lcom/android/server/am/ProcessList;->MIN_BSERVICE_AGING_TIME:I

    int-to-long v12, v3

    cmp-long v3, v10, v12

    if-gez v3, :cond_1e

    .line 26395
    :cond_1d
    :goto_a
    add-int/lit8 v56, v56, -0x1

    goto :goto_9

    .line 26407
    :cond_1e
    const-wide/16 v10, 0x0

    cmp-long v3, v58, v10

    if-nez v3, :cond_1f

    .line 26408
    move-object/from16 v0, v61

    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    move-wide/from16 v58, v0

    .line 26409
    move-object/from16 v57, v4

    goto :goto_a

    .line 26410
    :cond_1f
    move-object/from16 v0, v61

    iget-wide v10, v0, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    cmp-long v3, v10, v58

    if-gez v3, :cond_1d

    .line 26411
    move-object/from16 v0, v61

    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    move-wide/from16 v58, v0

    .line 26412
    move-object/from16 v57, v4

    goto :goto_a

    .line 26419
    .end local v56    # "s":I
    .end local v61    # "sr":Lcom/android/server/am/ServiceRecord;
    :cond_20
    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v3, :cond_22

    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_22

    .line 26420
    const/4 v3, 0x0

    iput-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    .line 26421
    const/16 v5, 0x10

    const/4 v7, 0x1

    move-object/from16 v3, p0

    invoke-direct/range {v3 .. v9}, Lcom/android/server/am/ActivityManagerService;->computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)I

    .line 26425
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curAdj:I

    const/16 v5, 0x10

    if-lt v3, v5, :cond_21

    .line 26426
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    packed-switch v3, :pswitch_data_0

    .line 26455
    move/from16 v0, v23

    iput v0, v4, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 26456
    move/from16 v0, v23

    invoke-virtual {v4, v0}, Lcom/android/server/am/ProcessRecord;->modifyRawOomAdj(I)I

    move-result v3

    iput v3, v4, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 26460
    move/from16 v0, v23

    move/from16 v1, v45

    if-eq v0, v1, :cond_21

    .line 26461
    add-int/lit8 v64, v64, 0x1

    .line 26462
    move/from16 v0, v64

    move/from16 v1, v25

    if-lt v0, v1, :cond_21

    .line 26463
    const/16 v64, 0x0

    .line 26464
    move/from16 v23, v45

    .line 26465
    add-int/lit8 v45, v45, 0x2

    .line 26466
    const/16 v3, 0xf

    move/from16 v0, v45

    if-le v0, v3, :cond_21

    .line 26467
    const/16 v45, 0xf

    .line 26475
    :cond_21
    :goto_b
    const/4 v13, 0x1

    move-object/from16 v11, p0

    move-object v12, v4

    move-wide v14, v8

    invoke-direct/range {v11 .. v17}, Lcom/android/server/am/ActivityManagerService;->applyOomAdjLocked(Lcom/android/server/am/ProcessRecord;ZJJ)Z

    .line 26482
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget-boolean v3, Lcom/android/server/am/ProcessList;->FHA_Enable:Z

    if-nez v3, :cond_26

    .line 26483
    sget-boolean v3, Lcom/android/server/am/ProcessList;->mAMSExceptionEnable:Z

    if-eqz v3, :cond_23

    .line 26486
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v3

    const/16 v5, 0x64

    if-ge v3, v5, :cond_23

    const-string v3, "android.process.acore"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_22

    const-string v3, "com.sec.android.provider.logsprovider"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_22

    const-string v3, "com.samsung.klmsagent"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_22

    const-string v3, "com.android.contacts"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_22

    const-string v3, "android.process.media"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_22

    const-string v3, "com.android.managedprovisioning"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_23

    .line 26358
    :cond_22
    :goto_c
    add-int/lit8 v29, v29, -0x1

    goto/16 :goto_5

    .line 26432
    :pswitch_0
    move/from16 v0, v22

    iput v0, v4, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 26433
    move/from16 v0, v22

    invoke-virtual {v4, v0}, Lcom/android/server/am/ProcessRecord;->modifyRawOomAdj(I)I

    move-result v3

    iput v3, v4, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 26437
    move/from16 v0, v22

    move/from16 v1, v44

    if-eq v0, v1, :cond_21

    .line 26438
    add-int/lit8 v63, v63, 0x1

    .line 26439
    move/from16 v0, v63

    move/from16 v1, v20

    if-lt v0, v1, :cond_21

    .line 26440
    const/16 v63, 0x0

    .line 26441
    move/from16 v22, v44

    .line 26442
    add-int/lit8 v44, v44, 0x2

    .line 26443
    const/16 v3, 0xf

    move/from16 v0, v44

    if-le v0, v3, :cond_21

    .line 26444
    const/16 v44, 0xf

    goto/16 :goto_b

    .line 26498
    :cond_23
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget v3, Lcom/android/server/am/ProcessList;->mWhitelistEnable:I

    const/4 v5, 0x1

    if-eq v3, v5, :cond_24

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget v3, Lcom/android/server/am/ProcessList;->mWhitelistEnable:I

    const/4 v5, 0x3

    if-ne v3, v5, :cond_26

    .line 26499
    :cond_24
    const/16 v38, 0x0

    .line 26500
    .local v38, "isWhite":Z
    const/16 v30, 0x0

    .local v30, "idx":I
    :goto_d
    sget-object v3, Lcom/android/server/am/ActivityManagerService;->WHITE_LIST_ARRAY:[Ljava/lang/String;

    array-length v3, v3

    move/from16 v0, v30

    if-ge v0, v3, :cond_25

    .line 26501
    sget v3, Lcom/android/server/am/ActivityManagerService;->white_list_key:I

    shr-int v3, v3, v30

    and-int/lit8 v3, v3, 0x1

    const/4 v5, 0x1

    if-ne v3, v5, :cond_29

    .line 26502
    sget-object v3, Lcom/android/server/am/ActivityManagerService;->WHITE_LIST_ARRAY:[Ljava/lang/String;

    aget-object v3, v3, v30

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_29

    .line 26503
    const/16 v38, 0x1

    .line 26508
    :cond_25
    if-nez v38, :cond_22

    .line 26514
    .end local v30    # "idx":I
    .end local v38    # "isWhite":Z
    :cond_26
    sget-boolean v3, Lcom/android/server/am/SmartAdjustManager;->SAMP_ENABLE:Z

    if-eqz v3, :cond_2a

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimitOverride:I

    if-gez v3, :cond_2a

    .line 26689
    :cond_27
    :goto_e
    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v3, :cond_68

    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    if-gtz v3, :cond_68

    .line 26696
    const-string/jumbo v3, "isolated not needed"

    const/4 v5, 0x1

    invoke-virtual {v4, v3, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 26705
    :cond_28
    :goto_f
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/16 v5, 0xc

    if-lt v3, v5, :cond_22

    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v3, :cond_22

    .line 26707
    add-int/lit8 v52, v52, 0x1

    goto/16 :goto_c

    .line 26500
    .restart local v30    # "idx":I
    .restart local v38    # "isWhite":Z
    :cond_29
    add-int/lit8 v30, v30, 0x1

    goto :goto_d

    .line 26521
    .end local v30    # "idx":I
    .end local v38    # "isWhite":Z
    :cond_2a
    const/16 v39, 0x0

    .line 26522
    .local v39, "killedBy":Ljava/lang/String;
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    packed-switch v3, :pswitch_data_1

    .line 26628
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    .line 26629
    sget-boolean v3, Lcom/android/server/am/ProcessList;->MDHA_SSR_ENABLE:Z

    if-eqz v3, :cond_4f

    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/16 v5, 0xa

    if-ne v3, v5, :cond_4f

    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curAdj:I

    const/4 v5, 0x5

    if-eq v3, v5, :cond_2b

    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curAdj:I

    const/16 v5, 0x8

    if-ne v3, v5, :cond_4f

    :cond_2b
    iget-wide v10, v4, Lcom/android/server/am/ProcessRecord;->lastStateTime:J

    sub-long v10, v8, v10

    sget v3, Lcom/android/server/am/ProcessList;->MDHA_SSR_MAX_SERVICE_TIME:I

    int-to-long v12, v3

    cmp-long v3, v10, v12

    if-lez v3, :cond_4f

    iget-wide v10, v4, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J

    sub-long v10, v8, v10

    sget v3, Lcom/android/server/am/ProcessList;->MDHA_SSR_MAX_SERVICE_TIME:I

    int-to-long v12, v3

    cmp-long v3, v10, v12

    if-lez v3, :cond_4f

    .line 26631
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    add-int/lit8 v3, v3, -0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    .line 26632
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "SSR - service for lastStateTime "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget-wide v10, v4, Lcom/android/server/am/ProcessRecord;->lastStateTime:J

    sub-long v10, v8, v10

    const-wide/16 v12, 0x3e8

    div-long/2addr v10, v12

    invoke-virtual {v3, v10, v11}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string/jumbo v5, "s, lastActivityTime "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget-wide v10, v4, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J

    sub-long v10, v8, v10

    const-wide/16 v12, 0x3e8

    div-long/2addr v10, v12

    invoke-virtual {v3, v10, v11}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string/jumbo v5, "s"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const/4 v5, 0x1

    invoke-virtual {v4, v3, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    goto/16 :goto_e

    .line 26525
    :pswitch_1
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    .line 26526
    add-int/lit8 v47, v47, 0x1

    .line 26527
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget-boolean v3, Lcom/android/server/am/ProcessList;->FHA_Enable:Z

    if-eqz v3, :cond_2d

    .line 26528
    sget v3, Lcom/android/server/am/ProcessList;->MAX_CACHED_APPS_FOR_FHA:I

    move/from16 v0, v47

    if-le v0, v3, :cond_27

    .line 26530
    invoke-static {}, Landroid/util/GateConfig;->isGateEnabled()Z

    move-result v3

    if-eqz v3, :cond_2c

    .line 26531
    const-string v3, "com.android.vending"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_2c

    .line 26532
    const-string v3, "GATE"

    const-string v5, "<GATE-M> MARKET_LAUNCHED_FAIL </GATE-M>"

    invoke-static {v3, v5}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 26536
    :cond_2c
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "cached #"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, v47

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const/4 v5, 0x1

    invoke-virtual {v4, v3, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    goto/16 :goto_e

    .line 26539
    :cond_2d
    move/from16 v0, v47

    move/from16 v1, v21

    if-gt v0, v1, :cond_2e

    sget-boolean v3, Lcom/android/server/am/ProcessList;->LDHA_ES_ENABLE:Z

    if-eqz v3, :cond_37

    add-int v3, v47, v49

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    if-le v3, v5, :cond_37

    :cond_2e
    const/16 v32, 0x1

    .line 26540
    .local v32, "isDhaKill":Z
    :goto_10
    if-eqz v35, :cond_38

    move/from16 v0, v47

    move/from16 v1, v21

    if-ge v0, v1, :cond_2f

    sget-boolean v3, Lcom/android/server/am/ProcessList;->LDHA_ES_ENABLE:Z

    if-eqz v3, :cond_38

    add-int v3, v47, v49

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    if-lt v3, v5, :cond_38

    :cond_2f
    const/16 v37, 0x1

    .line 26541
    .local v37, "isPreKill":Z
    :goto_11
    sget-boolean v3, Lcom/android/server/am/ProcessList;->LDHA_EXT_ENABLE:Z

    if-eqz v3, :cond_39

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget v3, Lcom/android/server/am/ProcessList;->LDHA_EXT_LIMIT1:I

    move/from16 v0, v47

    if-le v0, v3, :cond_30

    iget-wide v10, v4, Lcom/android/server/am/ProcessRecord;->lastPss:J

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget-wide v12, Lcom/android/server/am/ProcessList;->LDHA_EXT_TH1:J

    cmp-long v3, v10, v12

    if-gtz v3, :cond_31

    :cond_30
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget v3, Lcom/android/server/am/ProcessList;->LDHA_EXT_LIMIT2:I

    move/from16 v0, v47

    if-le v0, v3, :cond_39

    iget-wide v10, v4, Lcom/android/server/am/ProcessRecord;->lastPss:J

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget-wide v12, Lcom/android/server/am/ProcessList;->LDHA_EXT_TH2:J

    cmp-long v3, v10, v12

    if-lez v3, :cond_39

    :cond_31
    const/16 v33, 0x1

    .line 26543
    .local v33, "isExtKill":Z
    :goto_12
    const/16 v34, 0x0

    .line 26544
    .local v34, "isGoldenKill":Z
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget v3, Lcom/android/server/am/ProcessList;->mGoldenlistEnable:I

    const/4 v5, 0x1

    if-ne v3, v5, :cond_32

    const/4 v3, 0x1

    move/from16 v0, v47

    if-le v0, v3, :cond_32

    .line 26545
    const/16 v30, 0x0

    .restart local v30    # "idx":I
    :goto_13
    sget-object v3, Lcom/android/server/am/ActivityManagerService;->GOLDEN_LIST_ARRAY:[Ljava/lang/String;

    array-length v3, v3

    move/from16 v0, v30

    if-ge v0, v3, :cond_32

    .line 26546
    sget v3, Lcom/android/server/am/ActivityManagerService;->golden_list_key:I

    shr-int v3, v3, v30

    and-int/lit8 v3, v3, 0x1

    const/4 v5, 0x1

    if-ne v3, v5, :cond_3a

    .line 26547
    sget-object v3, Lcom/android/server/am/ActivityManagerService;->GOLDEN_LIST_ARRAY:[Ljava/lang/String;

    aget-object v3, v3, v30

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_3a

    .line 26548
    const/16 v34, 0x1

    .line 26549
    const-string v3, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "GDL - Cached : "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v7, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v3, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 26555
    .end local v30    # "idx":I
    :cond_32
    if-eqz v32, :cond_3b

    const-string v39, "DHA"

    .line 26560
    :cond_33
    :goto_14
    if-eqz v39, :cond_41

    .line 26562
    invoke-static {}, Landroid/util/GateConfig;->isGateEnabled()Z

    move-result v3

    if-eqz v3, :cond_34

    .line 26563
    const-string v3, "com.android.vending"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_34

    .line 26564
    const-string v3, "GATE"

    const-string v5, "<GATE-M> MARKET_LAUNCHED_FAIL </GATE-M>"

    invoke-static {v3, v5}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 26568
    :cond_34
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget v3, Lcom/android/server/am/ProcessList;->mCPREnable:I

    const/4 v5, 0x1

    if-eq v3, v5, :cond_35

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget v3, Lcom/android/server/am/ProcessList;->mCPREnable:I

    const/4 v5, 0x2

    if-ne v3, v5, :cond_3e

    const-string v3, "com.android.vending"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_3e

    .line 26569
    :cond_35
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v39

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, ":"

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, "Convert from hidden to empty"

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v3, v4, v5}, Lcom/android/server/am/ActivityStackSupervisor;->scheduleDestroyAllActivities(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)V

    .line 26570
    add-int/lit8 v49, v49, 0x1

    .line 26579
    :cond_36
    :goto_15
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    add-int/lit8 v3, v3, -0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    .line 26580
    add-int/lit8 v47, v47, -0x1

    goto/16 :goto_e

    .line 26539
    .end local v32    # "isDhaKill":Z
    .end local v33    # "isExtKill":Z
    .end local v34    # "isGoldenKill":Z
    .end local v37    # "isPreKill":Z
    :cond_37
    const/16 v32, 0x0

    goto/16 :goto_10

    .line 26540
    .restart local v32    # "isDhaKill":Z
    :cond_38
    const/16 v37, 0x0

    goto/16 :goto_11

    .line 26541
    .restart local v37    # "isPreKill":Z
    :cond_39
    const/16 v33, 0x0

    goto/16 :goto_12

    .line 26545
    .restart local v30    # "idx":I
    .restart local v33    # "isExtKill":Z
    .restart local v34    # "isGoldenKill":Z
    :cond_3a
    add-int/lit8 v30, v30, 0x1

    goto/16 :goto_13

    .line 26556
    .end local v30    # "idx":I
    :cond_3b
    if-eqz v37, :cond_3c

    const-string v39, "PMK"

    goto :goto_14

    .line 26557
    :cond_3c
    if-eqz v33, :cond_3d

    const-string v39, "EXT"

    goto :goto_14

    .line 26558
    :cond_3d
    if-eqz v34, :cond_33

    const-string v39, "GDL"

    goto/16 :goto_14

    .line 26571
    :cond_3e
    sget v3, Lcom/android/server/am/ProcessList;->mPremiumWhitelistEnable:I

    const/4 v5, 0x1

    if-ne v3, v5, :cond_40

    const-string v3, "com.sec.android.app.camera"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_3f

    const-string v3, "com.sec.android.gallery3d"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_3f

    const-string v3, "com.android.mms"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_3f

    const-string v3, "com.google.android.music:ui"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_3f

    const-string v3, "com.google.android.music:main"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_40

    .line 26572
    :cond_3f
    const-string v3, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "PWHL - "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v7, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, " in Cached"

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v3, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 26573
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v39

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, ":"

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, "Convert from hidden to empty"

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v3, v4, v5}, Lcom/android/server/am/ActivityStackSupervisor;->scheduleDestroyAllActivities(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)V

    goto/16 :goto_15

    .line 26575
    :cond_40
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v39

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v5, ":"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v5, "cached #"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, v47

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const/4 v5, 0x1

    invoke-virtual {v4, v3, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 26576
    if-nez v32, :cond_36

    if-nez v53, :cond_36

    .line 26577
    const/16 v53, 0x1

    goto/16 :goto_15

    .line 26582
    :cond_41
    move-object/from16 v40, v4

    .line 26585
    goto/16 :goto_e

    .line 26587
    .end local v32    # "isDhaKill":Z
    .end local v33    # "isExtKill":Z
    .end local v34    # "isGoldenKill":Z
    .end local v37    # "isPreKill":Z
    :pswitch_2
    sget v3, Lcom/android/server/am/ProcessList;->TRIM_EMPTY_APPS:I

    move/from16 v0, v49

    if-le v0, v3, :cond_42

    iget-wide v10, v4, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J

    cmp-long v3, v10, v54

    if-gez v3, :cond_42

    .line 26589
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "empty for "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-wide/32 v10, 0x1b7740

    add-long v10, v10, v54

    iget-wide v12, v4, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J

    sub-long/2addr v10, v12

    const-wide/16 v12, 0x3e8

    div-long/2addr v10, v12

    invoke-virtual {v3, v10, v11}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string/jumbo v5, "s"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const/4 v5, 0x1

    invoke-virtual {v4, v3, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    goto/16 :goto_e

    .line 26593
    :cond_42
    add-int/lit8 v49, v49, 0x1

    .line 26594
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget-boolean v3, Lcom/android/server/am/ProcessList;->FHA_Enable:Z

    if-eqz v3, :cond_43

    .line 26595
    sget v3, Lcom/android/server/am/ProcessList;->MAX_EMPTY_APPS_FOR_FHA:I

    move/from16 v0, v49

    if-le v0, v3, :cond_27

    .line 26596
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "empty #"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, v49

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const/4 v5, 0x1

    invoke-virtual {v4, v3, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    goto/16 :goto_e

    .line 26599
    :cond_43
    move/from16 v0, v49

    move/from16 v1, v26

    if-gt v0, v1, :cond_44

    sget-boolean v3, Lcom/android/server/am/ProcessList;->LDHA_ES_ENABLE:Z

    if-eqz v3, :cond_49

    add-int v3, v47, v49

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    if-le v3, v5, :cond_49

    :cond_44
    const/16 v32, 0x1

    .line 26600
    .restart local v32    # "isDhaKill":Z
    :goto_16
    if-eqz v36, :cond_4a

    move/from16 v0, v49

    move/from16 v1, v26

    if-ge v0, v1, :cond_45

    sget-boolean v3, Lcom/android/server/am/ProcessList;->LDHA_ES_ENABLE:Z

    if-eqz v3, :cond_4a

    add-int v3, v47, v49

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    if-lt v3, v5, :cond_4a

    :cond_45
    const/16 v37, 0x1

    .line 26601
    .restart local v37    # "isPreKill":Z
    :goto_17
    const/16 v34, 0x0

    .line 26602
    .restart local v34    # "isGoldenKill":Z
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget v3, Lcom/android/server/am/ProcessList;->mGoldenlistEnable:I

    const/4 v5, 0x1

    if-ne v3, v5, :cond_46

    .line 26603
    const/16 v30, 0x0

    .restart local v30    # "idx":I
    :goto_18
    sget-object v3, Lcom/android/server/am/ActivityManagerService;->GOLDEN_LIST_ARRAY:[Ljava/lang/String;

    array-length v3, v3

    move/from16 v0, v30

    if-ge v0, v3, :cond_46

    .line 26604
    sget v3, Lcom/android/server/am/ActivityManagerService;->golden_list_key:I

    shr-int v3, v3, v30

    and-int/lit8 v3, v3, 0x1

    const/4 v5, 0x1

    if-ne v3, v5, :cond_4b

    .line 26605
    sget-object v3, Lcom/android/server/am/ActivityManagerService;->GOLDEN_LIST_ARRAY:[Ljava/lang/String;

    aget-object v3, v3, v30

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_4b

    .line 26606
    const/16 v34, 0x1

    .line 26607
    const-string v3, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "GDL - Empty : "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v7, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v3, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 26613
    .end local v30    # "idx":I
    :cond_46
    if-eqz v32, :cond_4c

    const-string v39, "DHA"

    .line 26617
    :cond_47
    :goto_19
    sget v3, Lcom/android/server/am/ProcessList;->mPremiumWhitelistEnable:I

    const/4 v5, 0x1

    if-ne v3, v5, :cond_4e

    const-string v3, "com.sec.android.app.camera"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_48

    const-string v3, "com.sec.android.gallery3d"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_48

    const-string v3, "com.android.mms"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_48

    const-string v3, "com.google.android.music:ui"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_48

    const-string v3, "com.google.android.music:main"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_4e

    .line 26618
    :cond_48
    add-int/lit8 v49, v49, -0x1

    goto/16 :goto_e

    .line 26599
    .end local v32    # "isDhaKill":Z
    .end local v34    # "isGoldenKill":Z
    .end local v37    # "isPreKill":Z
    :cond_49
    const/16 v32, 0x0

    goto/16 :goto_16

    .line 26600
    .restart local v32    # "isDhaKill":Z
    :cond_4a
    const/16 v37, 0x0

    goto/16 :goto_17

    .line 26603
    .restart local v30    # "idx":I
    .restart local v34    # "isGoldenKill":Z
    .restart local v37    # "isPreKill":Z
    :cond_4b
    add-int/lit8 v30, v30, 0x1

    goto/16 :goto_18

    .line 26614
    .end local v30    # "idx":I
    :cond_4c
    if-eqz v37, :cond_4d

    const-string v39, "PMK"

    goto :goto_19

    .line 26615
    :cond_4d
    if-eqz v34, :cond_47

    const-string v39, "GDL"

    goto :goto_19

    .line 26620
    :cond_4e
    if-eqz v39, :cond_27

    .line 26621
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v39

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v5, ":"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string/jumbo v5, "empty #"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, v49

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const/4 v5, 0x1

    invoke-virtual {v4, v3, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 26622
    add-int/lit8 v49, v49, -0x1

    goto/16 :goto_e

    .line 26634
    .end local v32    # "isDhaKill":Z
    .end local v34    # "isGoldenKill":Z
    .end local v37    # "isPreKill":Z
    :cond_4f
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget-boolean v3, Lcom/android/server/am/ProcessList;->FHA_Enable:Z

    if-nez v3, :cond_27

    sget-boolean v3, Lcom/android/server/am/ProcessList;->LDHA_SPC_ENABLE:Z

    if-eqz v3, :cond_27

    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curAdj:I

    const/16 v5, 0x9

    if-lt v3, v5, :cond_27

    .line 26635
    sget v3, Lcom/android/server/am/ProcessList;->mPremiumWhitelistEnable:I

    const/4 v5, 0x1

    if-ne v3, v5, :cond_51

    const-string v3, "com.sec.android.app.camera"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_50

    const-string v3, "com.sec.android.gallery3d"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_50

    const-string v3, "com.android.mms"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_50

    const-string v3, "com.google.android.music:ui"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_50

    const-string v3, "com.google.android.music:main"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_51

    .line 26636
    :cond_50
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    add-int/lit8 v3, v3, -0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    goto/16 :goto_e

    .line 26640
    :cond_51
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-lez v3, :cond_61

    .line 26641
    add-int/lit8 v47, v47, 0x1

    .line 26642
    move/from16 v0, v47

    move/from16 v1, v21

    if-gt v0, v1, :cond_52

    sget-boolean v3, Lcom/android/server/am/ProcessList;->LDHA_ES_ENABLE:Z

    if-eqz v3, :cond_5a

    add-int v3, v47, v49

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    if-le v3, v5, :cond_5a

    :cond_52
    const/16 v32, 0x1

    .line 26643
    .restart local v32    # "isDhaKill":Z
    :goto_1a
    if-eqz v35, :cond_5b

    move/from16 v0, v47

    move/from16 v1, v21

    if-ge v0, v1, :cond_53

    sget-boolean v3, Lcom/android/server/am/ProcessList;->LDHA_ES_ENABLE:Z

    if-eqz v3, :cond_5b

    add-int v3, v47, v49

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    if-lt v3, v5, :cond_5b

    :cond_53
    const/16 v37, 0x1

    .line 26644
    .restart local v37    # "isPreKill":Z
    :goto_1b
    sget-boolean v3, Lcom/android/server/am/ProcessList;->LDHA_EXT_ENABLE:Z

    if-eqz v3, :cond_5c

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget v3, Lcom/android/server/am/ProcessList;->LDHA_EXT_LIMIT1:I

    move/from16 v0, v47

    if-le v0, v3, :cond_54

    iget-wide v10, v4, Lcom/android/server/am/ProcessRecord;->lastPss:J

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget-wide v12, Lcom/android/server/am/ProcessList;->LDHA_EXT_TH1:J

    cmp-long v3, v10, v12

    if-gtz v3, :cond_55

    :cond_54
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget v3, Lcom/android/server/am/ProcessList;->LDHA_EXT_LIMIT2:I

    move/from16 v0, v47

    if-le v0, v3, :cond_5c

    iget-wide v10, v4, Lcom/android/server/am/ProcessRecord;->lastPss:J

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget-wide v12, Lcom/android/server/am/ProcessList;->LDHA_EXT_TH2:J

    cmp-long v3, v10, v12

    if-lez v3, :cond_5c

    :cond_55
    const/16 v33, 0x1

    .line 26646
    .restart local v33    # "isExtKill":Z
    :goto_1c
    if-eqz v32, :cond_5d

    const-string v39, "DHA"

    .line 26650
    :cond_56
    :goto_1d
    if-eqz v39, :cond_60

    .line 26652
    invoke-static {}, Landroid/util/GateConfig;->isGateEnabled()Z

    move-result v3

    if-eqz v3, :cond_57

    .line 26653
    const-string v3, "com.android.vending"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_57

    .line 26654
    const-string v3, "GATE"

    const-string v5, "<GATE-M> MARKET_LAUNCHED_FAIL </GATE-M>"

    invoke-static {v3, v5}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 26658
    :cond_57
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget v3, Lcom/android/server/am/ProcessList;->mCPREnable:I

    const/4 v5, 0x1

    if-eq v3, v5, :cond_58

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget v3, Lcom/android/server/am/ProcessList;->mCPREnable:I

    const/4 v5, 0x2

    if-ne v3, v5, :cond_5f

    const-string v3, "com.android.vending"

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_5f

    .line 26659
    :cond_58
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-string v5, "Convert from hidden to empty"

    invoke-virtual {v3, v4, v5}, Lcom/android/server/am/ActivityStackSupervisor;->scheduleDestroyAllActivities(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)V

    .line 26660
    add-int/lit8 v49, v49, 0x1

    .line 26667
    :cond_59
    :goto_1e
    add-int/lit8 v47, v47, -0x1

    goto/16 :goto_e

    .line 26642
    .end local v32    # "isDhaKill":Z
    .end local v33    # "isExtKill":Z
    .end local v37    # "isPreKill":Z
    :cond_5a
    const/16 v32, 0x0

    goto/16 :goto_1a

    .line 26643
    .restart local v32    # "isDhaKill":Z
    :cond_5b
    const/16 v37, 0x0

    goto :goto_1b

    .line 26644
    .restart local v37    # "isPreKill":Z
    :cond_5c
    const/16 v33, 0x0

    goto :goto_1c

    .line 26647
    .restart local v33    # "isExtKill":Z
    :cond_5d
    if-eqz v37, :cond_5e

    const-string v39, "PMK"

    goto :goto_1d

    .line 26648
    :cond_5e
    if-eqz v33, :cond_56

    const-string v39, "EXT"

    goto :goto_1d

    .line 26662
    :cond_5f
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    add-int/lit8 v3, v3, -0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    .line 26663
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v39

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v5, ":"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v5, "SPC_cached #"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, v47

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const/4 v5, 0x1

    invoke-virtual {v4, v3, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 26664
    if-nez v32, :cond_59

    if-nez v53, :cond_59

    .line 26665
    const/16 v53, 0x1

    goto :goto_1e

    .line 26669
    :cond_60
    move-object/from16 v40, v4

    goto/16 :goto_e

    .line 26672
    .end local v32    # "isDhaKill":Z
    .end local v33    # "isExtKill":Z
    .end local v37    # "isPreKill":Z
    :cond_61
    add-int/lit8 v49, v49, 0x1

    .line 26673
    move/from16 v0, v49

    move/from16 v1, v26

    if-gt v0, v1, :cond_62

    sget-boolean v3, Lcom/android/server/am/ProcessList;->LDHA_ES_ENABLE:Z

    if-eqz v3, :cond_65

    add-int v3, v47, v49

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    if-le v3, v5, :cond_65

    :cond_62
    const/16 v32, 0x1

    .line 26674
    .restart local v32    # "isDhaKill":Z
    :goto_1f
    if-eqz v36, :cond_66

    move/from16 v0, v49

    move/from16 v1, v26

    if-ge v0, v1, :cond_63

    sget-boolean v3, Lcom/android/server/am/ProcessList;->LDHA_ES_ENABLE:Z

    if-eqz v3, :cond_66

    add-int v3, v47, v49

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    if-lt v3, v5, :cond_66

    :cond_63
    const/16 v37, 0x1

    .line 26675
    .restart local v37    # "isPreKill":Z
    :goto_20
    if-eqz v32, :cond_67

    const-string v39, "DHA"

    .line 26678
    :cond_64
    :goto_21
    if-eqz v39, :cond_27

    .line 26679
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    add-int/lit8 v3, v3, -0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    .line 26680
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v39

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v5, ":"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v5, "SPC_empty #"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, v49

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const/4 v5, 0x1

    invoke-virtual {v4, v3, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 26681
    add-int/lit8 v49, v49, -0x1

    goto/16 :goto_e

    .line 26673
    .end local v32    # "isDhaKill":Z
    .end local v37    # "isPreKill":Z
    :cond_65
    const/16 v32, 0x0

    goto :goto_1f

    .line 26674
    .restart local v32    # "isDhaKill":Z
    :cond_66
    const/16 v37, 0x0

    goto :goto_20

    .line 26676
    .restart local v37    # "isPreKill":Z
    :cond_67
    if-eqz v37, :cond_64

    const-string v39, "PMK"

    goto :goto_21

    .line 26699
    .end local v32    # "isDhaKill":Z
    .end local v37    # "isPreKill":Z
    .end local v39    # "killedBy":Ljava/lang/String;
    :cond_68
    iget-object v0, v4, Lcom/android/server/am/ProcessRecord;->uidRecord:Lcom/android/server/am/UidRecord;

    move-object/from16 v67, v0

    .line 26700
    .restart local v67    # "uidRec":Lcom/android/server/am/UidRecord;
    if-eqz v67, :cond_28

    move-object/from16 v0, v67

    iget v3, v0, Lcom/android/server/am/UidRecord;->curProcState:I

    iget v5, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    if-le v3, v5, :cond_28

    .line 26701
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    move-object/from16 v0, v67

    iput v3, v0, Lcom/android/server/am/UidRecord;->curProcState:I

    goto/16 :goto_f

    .line 26713
    .end local v4    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v67    # "uidRec":Lcom/android/server/am/UidRecord;
    :cond_69
    sget-boolean v3, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    if-eqz v3, :cond_6a

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    if-eqz v3, :cond_6a

    .line 26714
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    iget-boolean v3, v3, Lcom/android/server/am/MARsPolicyManager;->spcmPolicyTrigger:Z

    if-eqz v3, :cond_6a

    .line 26715
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    const/4 v5, 0x1

    invoke-virtual {v3, v5}, Lcom/android/server/am/MARsPolicyManager;->isPolicyEnabled(I)Z

    move-result v60

    .line 26717
    .local v60, "spcmPolicyEnabled":Z
    if-eqz v60, :cond_6a

    .line 26718
    new-instance v31, Landroid/content/Intent;

    invoke-direct/range {v31 .. v31}, Landroid/content/Intent;-><init>()V

    .line 26719
    .local v31, "intent":Landroid/content/Intent;
    const/high16 v3, 0x40000000    # 2.0f

    move-object/from16 v0, v31

    invoke-virtual {v0, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 26720
    const-string v3, "com.android.server.am.ACTION_ADJ14BG_KILLED"

    move-object/from16 v0, v31

    invoke-virtual {v0, v3}, Landroid/content/Intent;->setAction(Ljava/lang/String;)Landroid/content/Intent;

    .line 26722
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    move-object/from16 v0, v31

    invoke-virtual {v3, v0}, Landroid/content/Context;->sendBroadcast(Landroid/content/Intent;)V

    .line 26724
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mMARsPolicyManager:Lcom/android/server/am/MARsPolicyManager;

    const/4 v5, 0x0

    iput-boolean v5, v3, Lcom/android/server/am/MARsPolicyManager;->spcmPolicyTrigger:Z

    .line 26730
    .end local v31    # "intent":Landroid/content/Intent;
    .end local v60    # "spcmPolicyEnabled":Z
    :cond_6a
    sget-boolean v3, Lcom/android/server/am/SmartAdjustManager;->SAMP_ENABLE:Z

    if-eqz v3, :cond_78

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimitOverride:I

    if-gez v3, :cond_78

    .line 26732
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mSmartAdjustManager:Lcom/android/server/am/SmartAdjustManager;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3, v5, v6}, Lcom/android/server/am/SmartAdjustManager;->smartAdjustProcessesLocked(Ljava/util/ArrayList;Lcom/android/server/am/ProcessRecord;)V

    .line 26735
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mSmartAdjustManager:Lcom/android/server/am/SmartAdjustManager;

    const/4 v5, 0x1

    invoke-virtual {v3, v5}, Lcom/android/server/am/SmartAdjustManager;->getBgProcCount(I)I

    move-result v47

    .line 26737
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mSmartAdjustManager:Lcom/android/server/am/SmartAdjustManager;

    const/4 v5, 0x2

    invoke-virtual {v3, v5}, Lcom/android/server/am/SmartAdjustManager;->getBgProcCount(I)I

    move-result v49

    .line 26739
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mSmartAdjustManager:Lcom/android/server/am/SmartAdjustManager;

    const/4 v5, 0x3

    invoke-virtual {v3, v5}, Lcom/android/server/am/SmartAdjustManager;->getBgProcCount(I)I

    move-result v3

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    .line 26741
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mSmartAdjustManager:Lcom/android/server/am/SmartAdjustManager;

    const/4 v5, 0x4

    invoke-virtual {v3, v5}, Lcom/android/server/am/SmartAdjustManager;->getBgProcCount(I)I

    move-result v3

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    .line 26755
    :cond_6b
    :goto_22
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mBServiceAppThreshold:I

    move/from16 v0, v46

    if-le v0, v3, :cond_6c

    const/4 v3, 0x1

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    if-ne v3, v5, :cond_6c

    if-eqz v57, :cond_6c

    .line 26757
    move-object/from16 v0, v57

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, v57

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    const/16 v7, 0xf

    invoke-static {v3, v5, v7}, Lcom/android/server/am/ProcessList;->setOomAdj(III)V

    .line 26759
    move-object/from16 v0, v57

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    move-object/from16 v0, v57

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 26764
    :cond_6c
    sget v3, Lcom/android/server/am/ProcessList;->BSERVICE_APP_THRESHOLD:I

    move/from16 v0, v46

    if-le v0, v3, :cond_6d

    const/4 v3, 0x1

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    if-ne v3, v5, :cond_6d

    if-eqz v57, :cond_6d

    .line 26765
    move-object/from16 v0, v57

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, v57

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    const/16 v7, 0xf

    invoke-static {v3, v5, v7}, Lcom/android/server/am/ProcessList;->setOomAdj(III)V

    .line 26766
    move-object/from16 v0, v57

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    move-object/from16 v0, v57

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 26772
    :cond_6d
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I

    .line 26780
    add-int v48, v47, v49

    .line 26782
    .local v48, "numCachedAndEmpty":I
    sget v3, Lcom/android/server/am/ProcessList;->TRIM_CACHED_APPS:I

    move/from16 v0, v47

    if-gt v0, v3, :cond_7c

    sget v3, Lcom/android/server/am/ProcessList;->TRIM_EMPTY_APPS:I

    move/from16 v0, v49

    if-gt v0, v3, :cond_7c

    .line 26784
    sget v3, Lcom/android/server/am/ProcessList;->TRIM_CRITICAL_THRESHOLD:I

    move/from16 v0, v48

    if-gt v0, v3, :cond_7a

    .line 26785
    const/16 v42, 0x3

    .line 26801
    .local v42, "memFactor":I
    :goto_23
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    move/from16 v0, v42

    if-le v0, v3, :cond_6f

    .line 26802
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    if-eqz v3, :cond_6e

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mLastNumProcesses:I

    if-lt v3, v5, :cond_6f

    .line 26803
    :cond_6e
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    move/from16 v42, v0

    .line 26807
    :cond_6f
    move/from16 v0, v42

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    .line 26808
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastNumProcesses:I

    .line 26809
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->isSleeping()Z

    move-result v3

    if-nez v3, :cond_7d

    const/4 v3, 0x1

    :goto_24
    move/from16 v0, v42

    invoke-virtual {v5, v0, v3, v8, v9}, Lcom/android/server/am/ProcessStatsService;->setMemFactorLocked(IZJ)Z

    move-result v19

    .line 26810
    .local v19, "allChanged":Z
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v3}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    move-result v66

    .line 26811
    .local v66, "trackerMemFactor":I
    if-eqz v42, :cond_85

    .line 26812
    move-object/from16 v0, p0

    iget-wide v10, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    const-wide/16 v12, 0x0

    cmp-long v3, v10, v12

    if-nez v3, :cond_70

    .line 26813
    move-object/from16 v0, p0

    iput-wide v8, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    .line 26815
    :cond_70
    const/16 v62, 0x0

    .line 26817
    .local v62, "step":I
    packed-switch v42, :pswitch_data_2

    .line 26825
    const/16 v28, 0x5

    .line 26828
    .local v28, "fgTrimLevel":I
    :goto_25
    div-int/lit8 v27, v52, 0x3

    .line 26829
    .local v27, "factor":I
    const/16 v43, 0x2

    .line 26830
    .local v43, "minFactor":I
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v3, :cond_71

    add-int/lit8 v43, v43, 0x1

    .line 26831
    :cond_71
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v3, :cond_72

    add-int/lit8 v43, v43, 0x1

    .line 26832
    :cond_72
    move/from16 v0, v27

    move/from16 v1, v43

    if-ge v0, v1, :cond_73

    move/from16 v27, v43

    .line 26833
    :cond_73
    const/16 v24, 0x50

    .line 26834
    .local v24, "curLevel":I
    add-int/lit8 v29, v2, -0x1

    :goto_26
    if-ltz v29, :cond_8c

    .line 26835
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v29

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 26836
    .restart local v4    # "app":Lcom/android/server/am/ProcessRecord;
    if-nez v19, :cond_74

    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    if-eqz v3, :cond_75

    .line 26837
    :cond_74
    move-object/from16 v0, p0

    move/from16 v1, v66

    invoke-direct {v0, v4, v1, v8, v9}, Lcom/android/server/am/ActivityManagerService;->setProcessTrackerStateLocked(Lcom/android/server/am/ProcessRecord;IJ)V

    .line 26838
    const/4 v3, 0x0

    iput-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    .line 26840
    :cond_75
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/16 v5, 0xc

    if-lt v3, v5, :cond_7e

    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v3, :cond_7e

    .line 26842
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    move/from16 v0, v24

    if-ge v3, v0, :cond_76

    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_76

    .line 26846
    :try_start_0
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move/from16 v0, v24

    invoke-interface {v3, v0}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_4

    .line 26863
    :cond_76
    :goto_27
    move/from16 v0, v24

    iput v0, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    .line 26864
    add-int/lit8 v62, v62, 0x1

    .line 26865
    move/from16 v0, v62

    move/from16 v1, v27

    if-lt v0, v1, :cond_77

    .line 26866
    const/16 v62, 0x0

    .line 26867
    sparse-switch v24, :sswitch_data_0

    .line 26834
    :cond_77
    :goto_28
    add-int/lit8 v29, v29, -0x1

    goto :goto_26

    .line 26747
    .end local v4    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v19    # "allChanged":Z
    .end local v24    # "curLevel":I
    .end local v27    # "factor":I
    .end local v28    # "fgTrimLevel":I
    .end local v42    # "memFactor":I
    .end local v43    # "minFactor":I
    .end local v48    # "numCachedAndEmpty":I
    .end local v62    # "step":I
    .end local v66    # "trackerMemFactor":I
    :cond_78
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimitOverride:I

    if-gez v3, :cond_79

    .line 26748
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    sget-boolean v3, Lcom/android/server/am/ProcessList;->FHA_Enable:Z

    if-nez v3, :cond_6b

    .line 26749
    move-object/from16 v0, p0

    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    move-object/from16 v0, p0

    iget v11, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    move/from16 v12, v47

    move/from16 v13, v49

    move-object/from16 v14, v40

    move/from16 v15, v53

    invoke-virtual/range {v10 .. v15}, Lcom/android/server/am/ProcessList;->updateHiddenAppNum(IIILcom/android/server/am/ProcessRecord;Z)I

    move-result v3

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    goto/16 :goto_22

    .line 26752
    :cond_79
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimitOverride:I

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    goto/16 :goto_22

    .line 26786
    .restart local v48    # "numCachedAndEmpty":I
    :cond_7a
    sget v3, Lcom/android/server/am/ProcessList;->TRIM_LOW_THRESHOLD:I

    move/from16 v0, v48

    if-gt v0, v3, :cond_7b

    .line 26787
    const/16 v42, 0x2

    .restart local v42    # "memFactor":I
    goto/16 :goto_23

    .line 26789
    .end local v42    # "memFactor":I
    :cond_7b
    const/16 v42, 0x1

    .restart local v42    # "memFactor":I
    goto/16 :goto_23

    .line 26792
    .end local v42    # "memFactor":I
    :cond_7c
    const/16 v42, 0x0

    .restart local v42    # "memFactor":I
    goto/16 :goto_23

    .line 26809
    :cond_7d
    const/4 v3, 0x0

    goto/16 :goto_24

    .line 26819
    .restart local v19    # "allChanged":Z
    .restart local v62    # "step":I
    .restart local v66    # "trackerMemFactor":I
    :pswitch_3
    const/16 v28, 0xf

    .line 26820
    .restart local v28    # "fgTrimLevel":I
    goto/16 :goto_25

    .line 26822
    .end local v28    # "fgTrimLevel":I
    :pswitch_4
    const/16 v28, 0xa

    .line 26823
    .restart local v28    # "fgTrimLevel":I
    goto/16 :goto_25

    .line 26869
    .restart local v4    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v24    # "curLevel":I
    .restart local v27    # "factor":I
    .restart local v43    # "minFactor":I
    :sswitch_0
    const/16 v24, 0x3c

    .line 26870
    goto :goto_28

    .line 26872
    :sswitch_1
    const/16 v24, 0x28

    goto :goto_28

    .line 26876
    :cond_7e
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/16 v5, 0x9

    if-ne v3, v5, :cond_80

    .line 26877
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    const/16 v5, 0x28

    if-ge v3, v5, :cond_7f

    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_7f

    .line 26883
    :try_start_1
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    const/16 v5, 0x28

    invoke-interface {v3, v5}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_3

    .line 26888
    :cond_7f
    :goto_29
    const/16 v3, 0x28

    iput v3, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    goto :goto_28

    .line 26890
    :cond_80
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v5, 0x7

    if-ge v3, v5, :cond_81

    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    if-eqz v3, :cond_83

    :cond_81
    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z

    if-eqz v3, :cond_83

    .line 26895
    const/16 v41, 0x14

    .line 26896
    .local v41, "level":I
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    const/16 v5, 0x14

    if-ge v3, v5, :cond_82

    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_82

    .line 26901
    :try_start_2
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    const/16 v5, 0x14

    invoke-interface {v3, v5}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_2

    .line 26905
    :cond_82
    :goto_2a
    const/4 v3, 0x0

    iput-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z

    .line 26907
    .end local v41    # "level":I
    :cond_83
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    move/from16 v0, v28

    if-ge v3, v0, :cond_84

    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_84

    .line 26912
    :try_start_3
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move/from16 v0, v28

    invoke-interface {v3, v0}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_1

    .line 26916
    :cond_84
    :goto_2b
    move/from16 v0, v28

    iput v0, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    goto/16 :goto_28

    .line 26920
    .end local v4    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v24    # "curLevel":I
    .end local v27    # "factor":I
    .end local v28    # "fgTrimLevel":I
    .end local v43    # "minFactor":I
    .end local v62    # "step":I
    :cond_85
    move-object/from16 v0, p0

    iget-wide v10, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    const-wide/16 v12, 0x0

    cmp-long v3, v10, v12

    if-eqz v3, :cond_86

    .line 26921
    move-object/from16 v0, p0

    iget-wide v10, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamTimeSinceLastIdle:J

    move-object/from16 v0, p0

    iget-wide v12, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    sub-long v12, v8, v12

    add-long/2addr v10, v12

    move-object/from16 v0, p0

    iput-wide v10, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamTimeSinceLastIdle:J

    .line 26922
    const-wide/16 v10, 0x0

    move-object/from16 v0, p0

    iput-wide v10, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    .line 26924
    :cond_86
    add-int/lit8 v29, v2, -0x1

    :goto_2c
    if-ltz v29, :cond_8c

    .line 26925
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v29

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 26926
    .restart local v4    # "app":Lcom/android/server/am/ProcessRecord;
    if-nez v19, :cond_87

    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    if-eqz v3, :cond_88

    .line 26927
    :cond_87
    move-object/from16 v0, p0

    move/from16 v1, v66

    invoke-direct {v0, v4, v1, v8, v9}, Lcom/android/server/am/ActivityManagerService;->setProcessTrackerStateLocked(Lcom/android/server/am/ProcessRecord;IJ)V

    .line 26928
    const/4 v3, 0x0

    iput-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    .line 26930
    :cond_88
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v5, 0x7

    if-ge v3, v5, :cond_89

    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    if-eqz v3, :cond_8b

    :cond_89
    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z

    if-eqz v3, :cond_8b

    .line 26932
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    const/16 v5, 0x14

    if-ge v3, v5, :cond_8a

    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_8a

    .line 26938
    :try_start_4
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    const/16 v5, 0x14

    invoke-interface {v3, v5}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0

    .line 26943
    :cond_8a
    :goto_2d
    const/4 v3, 0x0

    iput-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z

    .line 26945
    :cond_8b
    const/4 v3, 0x0

    iput v3, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    .line 26924
    add-int/lit8 v29, v29, -0x1

    goto :goto_2c

    .line 26949
    .end local v4    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_8c
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    if-eqz v3, :cond_8d

    .line 26952
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v5, 0x0

    const-string v7, "always-finish"

    invoke-virtual {v3, v5, v7}, Lcom/android/server/am/ActivityStackSupervisor;->scheduleDestroyAllActivities(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)V

    .line 26955
    :cond_8d
    if-eqz v19, :cond_8e

    .line 26956
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v5}, Lcom/android/server/am/ProcessStatsService;->isMemFactorLowered()Z

    move-result v5

    move-object/from16 v0, p0

    invoke-virtual {v0, v8, v9, v3, v5}, Lcom/android/server/am/ActivityManagerService;->requestPssAllProcsLocked(JZZ)V

    .line 26960
    :cond_8e
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    add-int/lit8 v29, v3, -0x1

    :goto_2e
    if-ltz v29, :cond_90

    .line 26961
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mActiveUids:Landroid/util/SparseArray;

    move/from16 v0, v29

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v67

    check-cast v67, Lcom/android/server/am/UidRecord;

    .line 26962
    .restart local v67    # "uidRec":Lcom/android/server/am/UidRecord;
    move-object/from16 v0, v67

    iget v3, v0, Lcom/android/server/am/UidRecord;->setProcState:I

    move-object/from16 v0, v67

    iget v5, v0, Lcom/android/server/am/UidRecord;->curProcState:I

    if-eq v3, v5, :cond_8f

    .line 26966
    move-object/from16 v0, v67

    iget v3, v0, Lcom/android/server/am/UidRecord;->curProcState:I

    move-object/from16 v0, v67

    iput v3, v0, Lcom/android/server/am/UidRecord;->setProcState:I

    .line 26967
    const/4 v3, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v67

    invoke-direct {v0, v1, v3}, Lcom/android/server/am/ActivityManagerService;->enqueueUidChangeLocked(Lcom/android/server/am/UidRecord;Z)V

    .line 26960
    :cond_8f
    add-int/lit8 v29, v29, -0x1

    goto :goto_2e

    .line 26971
    .end local v67    # "uidRec":Lcom/android/server/am/UidRecord;
    :cond_90
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v3, v8, v9}, Lcom/android/server/am/ProcessStatsService;->shouldWriteNowLocked(J)Z

    move-result v3

    if-eqz v3, :cond_91

    .line 26972
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v5, Lcom/android/server/am/ActivityManagerService$30;

    move-object/from16 v0, p0

    invoke-direct {v5, v0}, Lcom/android/server/am/ActivityManagerService$30;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v3, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 26990
    :cond_91
    sget-boolean v3, Lcom/android/server/am/SmartAdjustManager;->SAMP_DEBUG_TRACE:Z

    if-eqz v3, :cond_92

    .line 26991
    const-wide/16 v10, 0x40

    const-string/jumbo v3, "updateOomAdjLocked"

    const/4 v5, 0x0

    invoke-static {v10, v11, v3, v5}, Landroid/os/Trace;->asyncTraceEnd(JLjava/lang/String;I)V

    .line 26992
    :cond_92
    return-void

    .line 26940
    .restart local v4    # "app":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v3

    goto/16 :goto_2d

    .line 26913
    .restart local v24    # "curLevel":I
    .restart local v27    # "factor":I
    .restart local v28    # "fgTrimLevel":I
    .restart local v43    # "minFactor":I
    .restart local v62    # "step":I
    :catch_1
    move-exception v3

    goto/16 :goto_2b

    .line 26902
    .restart local v41    # "level":I
    :catch_2
    move-exception v3

    goto/16 :goto_2a

    .line 26885
    .end local v41    # "level":I
    :catch_3
    move-exception v3

    goto/16 :goto_29

    .line 26847
    :catch_4
    move-exception v3

    goto/16 :goto_27

    .line 26426
    nop

    :pswitch_data_0
    .packed-switch 0xe
        :pswitch_0
        :pswitch_0
    .end packed-switch

    .line 26522
    :pswitch_data_1
    .packed-switch 0xe
        :pswitch_1
        :pswitch_1
        :pswitch_2
    .end packed-switch

    .line 26817
    :pswitch_data_2
    .packed-switch 0x2
        :pswitch_4
        :pswitch_3
    .end packed-switch

    .line 26867
    :sswitch_data_0
    .sparse-switch
        0x3c -> :sswitch_1
        0x50 -> :sswitch_0
    .end sparse-switch
.end method

.method final updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z
    .locals 11
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    const/16 v10, 0x10

    .line 26205
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->resumedAppLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 26206
    .local v0, "TOP_ACT":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_2

    iget-object v4, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 26207
    .local v4, "TOP_APP":Lcom/android/server/am/ProcessRecord;
    :goto_0
    iget-boolean v9, p1, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 26209
    .local v9, "wasCached":Z
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    add-int/lit8 v1, v1, 0x1

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    .line 26215
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    const/16 v2, 0x9

    if-lt v1, v2, :cond_3

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 26217
    .local v3, "cachedAdj":I
    :goto_1
    const/4 v5, 0x0

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    move-object v1, p0

    move-object v2, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)Z

    move-result v8

    .line 26219
    .local v8, "success":Z
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->cached:Z

    if-ne v9, v1, :cond_0

    iget v1, p1, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    if-ne v1, v10, :cond_1

    .line 26222
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 26224
    :cond_1
    return v8

    .line 26206
    .end local v3    # "cachedAdj":I
    .end local v4    # "TOP_APP":Lcom/android/server/am/ProcessRecord;
    .end local v8    # "success":Z
    .end local v9    # "wasCached":Z
    :cond_2
    const/4 v4, 0x0

    goto :goto_0

    .restart local v4    # "TOP_APP":Lcom/android/server/am/ProcessRecord;
    .restart local v9    # "wasCached":Z
    :cond_3
    move v3, v10

    .line 26215
    goto :goto_1
.end method

.method public updatePersistentConfiguration(Landroid/content/res/Configuration;)V
    .locals 5
    .param p1, "values"    # Landroid/content/res/Configuration;

    .prologue
    .line 24034
    const-string v2, "android.permission.CHANGE_CONFIGURATION"

    const-string/jumbo v3, "updateConfiguration()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 24036
    const-string/jumbo v2, "updateConfiguration()"

    invoke-direct {p0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceWriteSettingsPermission(Ljava/lang/String;)V

    .line 24037
    if-nez p1, :cond_0

    .line 24038
    new-instance v2, Ljava/lang/NullPointerException;

    const-string v3, "Configuration must not be null"

    invoke-direct {v2, v3}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 24041
    :cond_0
    monitor-enter p0

    .line 24042
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 24061
    .local v0, "origId":J
    const/4 v2, 0x0

    const/4 v3, 0x1

    const/4 v4, 0x0

    invoke-virtual {p0, p1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z

    .line 24065
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 24066
    monitor-exit p0

    .line 24067
    return-void

    .line 24066
    .end local v0    # "origId":J
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method public updateProcessConfiguration(IIZ)V
    .locals 9
    .param p1, "targetPid"    # I
    .param p2, "displayIdConfigChanged"    # I
    .param p3, "forcedChange"    # Z

    .prologue
    .line 24001
    monitor-enter p0

    .line 24002
    :try_start_0
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mConfigurations:Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;

    invoke-virtual {v6, p2}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    if-nez v6, :cond_1

    .line 24003
    sget-boolean v6, Lcom/android/server/am/ActivityManagerDebugConfig;->SAFE_DEBUG:Z

    if-eqz v6, :cond_0

    const-string v6, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "There is no Configuration for displayId("

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, ")"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 24004
    :cond_0
    monitor-exit p0

    .line 24030
    :goto_0
    return-void

    .line 24006
    :cond_1
    const/4 v5, 0x0

    .line 24007
    .local v5, "proc":Lcom/android/server/am/ProcessRecord;
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v7
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 24008
    :try_start_1
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v6, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    move-object v0, v6

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    move-object v5, v0

    .line 24009
    monitor-exit v7
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 24010
    if-nez v5, :cond_3

    .line 24011
    :try_start_2
    sget-boolean v6, Lcom/android/server/am/ActivityManagerDebugConfig;->SAFE_DEBUG:Z

    if-eqz v6, :cond_2

    const-string v6, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "There is no ProcessRecord for pid("

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, ")"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 24029
    :cond_2
    :goto_1
    monitor-exit p0

    goto :goto_0

    .end local v5    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v6

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v6

    .line 24009
    .restart local v5    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_1
    move-exception v6

    :try_start_3
    monitor-exit v7
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    throw v6

    .line 24013
    :cond_3
    new-instance v2, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;

    invoke-direct {v2}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;-><init>()V

    .line 24014
    .local v2, "configs":Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;, "Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList<Landroid/content/res/Configuration;>;"
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mConfigurations:Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;

    invoke-virtual {v6}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v4

    .local v4, "i$":Ljava/util/Iterator;
    :cond_4
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_5

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/res/Configuration;

    .line 24015
    .local v1, "config":Landroid/content/res/Configuration;
    iget v6, v1, Landroid/content/res/Configuration;->displayId:I

    if-ne v6, p2, :cond_4

    .line 24016
    iget v6, v1, Landroid/content/res/Configuration;->displayId:I

    new-instance v7, Landroid/content/res/Configuration;

    invoke-direct {v7, v1}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    invoke-virtual {v2, v6, v7}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 24020
    .end local v1    # "config":Landroid/content/res/Configuration;
    :cond_5
    if-eqz p3, :cond_6

    .line 24021
    invoke-virtual {v2, p2}, Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/content/res/Configuration;

    const/4 v7, 0x0

    iput v7, v6, Landroid/content/res/Configuration;->seq:I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 24024
    :cond_6
    :try_start_5
    iget-object v6, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v6, v2}, Landroid/app/IApplicationThread;->scheduleConfigurationsChanged(Lcom/samsung/android/multidisplay/common/UnRestrictedArrayList;)V
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_0
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    goto :goto_1

    .line 24025
    :catch_0
    move-exception v3

    .line 24026
    .local v3, "e":Landroid/os/RemoteException;
    :try_start_6
    invoke-virtual {v3}, Landroid/os/RemoteException;->printStackTrace()V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    goto :goto_1
.end method

.method final updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
    .locals 5
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "isForeground"    # Z
    .param p3, "oomAdj"    # Z

    .prologue
    .line 26144
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    if-eq p2, v1, :cond_2

    .line 26145
    iput-boolean p2, p1, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    .line 26146
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2, v3}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/ArrayList;

    .line 26148
    .local v0, "curProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    if-eqz p2, :cond_3

    .line 26149
    if-nez v0, :cond_0

    .line 26150
    new-instance v0, Ljava/util/ArrayList;

    .end local v0    # "curProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 26151
    .restart local v0    # "curProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2, v3, v0}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    .line 26153
    :cond_0
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_1

    .line 26154
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 26155
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const v2, 0x8002

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2, v3, v4}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 26170
    :cond_1
    :goto_0
    if-eqz p3, :cond_2

    .line 26171
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 26174
    .end local v0    # "curProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_2
    return-void

    .line 26159
    .restart local v0    # "curProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_3
    if-eqz v0, :cond_1

    .line 26160
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 26161
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const/16 v2, 0x4002

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2, v3, v4}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 26164
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-gtz v1, :cond_1

    .line 26165
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2, v3}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)Ljava/lang/Object;

    goto :goto_0
.end method

.method public updateProxyConfigurationForKnoxVpn(Ljava/util/HashMap;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
    .locals 11
    .param p2, "proxyServer"    # Ljava/lang/String;
    .param p3, "proxyPort"    # Ljava/lang/String;
    .param p4, "username"    # Ljava/lang/String;
    .param p5, "password"    # Ljava/lang/String;
    .param p6, "excludeUid"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/HashMap",
            "<",
            "Ljava/lang/Integer;",
            "Ljava/lang/Boolean;",
            ">;",
            "Ljava/lang/String;",
            "Ljava/lang/String;",
            "Ljava/lang/String;",
            "Ljava/lang/String;",
            "I)V"
        }
    .end annotation

    .prologue
    .line 29647
    .local p1, "uidList":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/Integer;Ljava/lang/Boolean;>;"
    monitor-enter p0

    .line 29649
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    add-int/lit8 v9, v1, -0x1

    .local v9, "j":I
    :goto_0
    if-ltz v9, :cond_2

    .line 29650
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/am/ProcessRecord;

    .line 29651
    .local v10, "r":Lcom/android/server/am/ProcessRecord;
    iget v1, v10, Lcom/android/server/am/ProcessRecord;->uid:I

    move/from16 v0, p6

    if-ne v1, v0, :cond_1

    iget-object v1, v10, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v1, :cond_1

    .line 29652
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "knox vpn proxy setting is not going to be set for the uid in AMS "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget v3, v10, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 29649
    :cond_0
    :goto_1
    add-int/lit8 v9, v9, -0x1

    goto :goto_0

    .line 29655
    :cond_1
    iget-object v1, v10, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v1, :cond_3

    iget v1, v10, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-virtual {p1, v1}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_3

    .line 29656
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "knox vpn proxy setting has been set for the uid of the knox vpn application in AMS "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget v3, v10, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 29657
    iget-object v1, v10, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    const/4 v6, 0x0

    sget-object v7, Landroid/net/Uri;->EMPTY:Landroid/net/Uri;

    move-object v2, p2

    move-object v3, p3

    move-object v4, p4

    move-object/from16 v5, p5

    invoke-interface/range {v1 .. v7}, Landroid/app/IApplicationThread;->setHttpProxy(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_1

    .line 29663
    .end local v9    # "j":I
    .end local v10    # "r":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v8

    .line 29664
    .local v8, "e":Ljava/lang/Exception;
    :try_start_1
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Exeption occured while updating the proxy configuration for knox vpn profile "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-static {v8}, Landroid/util/Log;->getStackTraceString(Ljava/lang/Throwable;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 29666
    .end local v8    # "e":Ljava/lang/Exception;
    :cond_2
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 29667
    return-void

    .line 29658
    .restart local v9    # "j":I
    .restart local v10    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_3
    :try_start_2
    iget-object v1, v10, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v1, :cond_0

    iget v1, v10, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-virtual {p1, v1}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 29659
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "knox vpn proxy setting has been set for the user in AMS "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget v3, v10, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 29660
    iget-object v1, v10, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    const/4 v6, 0x0

    sget-object v7, Landroid/net/Uri;->EMPTY:Landroid/net/Uri;

    move-object v2, p2

    move-object v3, p3

    move-object v4, p4

    move-object/from16 v5, p5

    invoke-interface/range {v1 .. v7}, Landroid/app/IApplicationThread;->setHttpProxy(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto/16 :goto_1

    .line 29666
    .end local v9    # "j":I
    .end local v10    # "r":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    throw v1
.end method

.method public updateProxyPacConfigurationForKnoxVpn(Ljava/util/HashMap;ILandroid/net/ProxyInfo;)V
    .locals 6
    .param p2, "excludeUid"    # I
    .param p3, "proxyInfo"    # Landroid/net/ProxyInfo;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/HashMap",
            "<",
            "Ljava/lang/Integer;",
            "Ljava/lang/Boolean;",
            ">;I",
            "Landroid/net/ProxyInfo;",
            ")V"
        }
    .end annotation

    .prologue
    .line 29670
    .local p1, "uidList":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/Integer;Ljava/lang/Boolean;>;"
    monitor-enter p0

    .line 29672
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v1, v3, -0x1

    .local v1, "j":I
    :goto_0
    if-ltz v1, :cond_2

    .line 29673
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 29674
    .local v2, "r":Lcom/android/server/am/ProcessRecord;
    iget v3, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    if-ne v3, p2, :cond_1

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_1

    .line 29675
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "knox vpn pac proxy setting is not going to be set for the uid in AMS"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget v5, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 29672
    :cond_0
    :goto_1
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 29678
    :cond_1
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_3

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-virtual {p1, v3}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_3

    .line 29679
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "knox vpn pac proxy setting has been set for the uid of the knox vpn application in AMS "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget v5, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 29680
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v3, p3}, Landroid/app/IApplicationThread;->setHttpProxy(Landroid/net/ProxyInfo;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_1

    .line 29686
    .end local v1    # "j":I
    .end local v2    # "r":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v0

    .line 29687
    .local v0, "e":Ljava/lang/Exception;
    :try_start_1
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Exeption occured while updating the proxy configuration for knox vpn profile "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-static {v0}, Landroid/util/Log;->getStackTraceString(Ljava/lang/Throwable;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 29689
    .end local v0    # "e":Ljava/lang/Exception;
    :cond_2
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 29690
    return-void

    .line 29681
    .restart local v1    # "j":I
    .restart local v2    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_3
    :try_start_2
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_0

    iget v3, v2, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-virtual {p1, v3}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 29682
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "knox vpn pac proxy setting has been set for the user in AMS "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget v5, v2, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 29683
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v3, p3}, Landroid/app/IApplicationThread;->setHttpProxy(Landroid/net/ProxyInfo;)V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto/16 :goto_1

    .line 29689
    .end local v1    # "j":I
    .end local v2    # "r":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v3

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    throw v3
.end method

.method updateSleepIfNeededLocked()V
    .locals 6

    .prologue
    const/16 v5, 0x1b

    const/4 v3, 0x1

    const/4 v2, 0x0

    .line 15289
    iget-boolean v4, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    if-nez v4, :cond_0

    iget v4, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    if-eqz v4, :cond_1

    :cond_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Landroid/service/voice/IVoiceInteractionSession;

    if-eqz v4, :cond_3

    .line 15290
    :cond_1
    iget-boolean v4, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    if-nez v4, :cond_2

    iget-boolean v4, p0, Lcom/android/server/am/ActivityManagerService;->mKeyguardGoingAway:Z

    if-eqz v4, :cond_5

    :cond_2
    move v0, v3

    .line 15291
    .local v0, "needResumed":Z
    :goto_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4, v0}, Lcom/android/server/am/ActivityStackSupervisor;->updateCascadeHiddenFlag(Z)V

    .line 15295
    .end local v0    # "needResumed":Z
    :cond_3
    iget-boolean v4, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    if-eqz v4, :cond_6

    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->shouldSleepLocked()Z

    move-result v4

    if-nez v4, :cond_6

    .line 15296
    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    .line 15297
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->startTimeTrackingFocusedActivityLocked()V

    .line 15298
    const/4 v2, 0x2

    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mTopProcessState:I

    .line 15299
    iput-boolean v3, p0, Lcom/android/server/am/ActivityManagerService;->mIsCommingFromLockScreenPath:Z

    .line 15301
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStackSupervisor;->comeOutOfSleepIfNeededLocked()V

    .line 15302
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 15318
    :cond_4
    :goto_1
    return-void

    :cond_5
    move v0, v2

    .line 15290
    goto :goto_0

    .line 15303
    :cond_6
    iget-boolean v4, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    if-nez v4, :cond_4

    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->shouldSleepLocked()Z

    move-result v4

    if-eqz v4, :cond_4

    .line 15304
    iput-boolean v3, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    .line 15305
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    if-eqz v3, :cond_7

    .line 15306
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurAppTimeTracker:Lcom/android/server/am/AppTimeTracker;

    invoke-virtual {v3}, Lcom/android/server/am/AppTimeTracker;->stop()V

    .line 15308
    :cond_7
    const/4 v3, 0x5

    iput v3, p0, Lcom/android/server/am/ActivityManagerService;->mTopProcessState:I

    .line 15309
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->goingToSleepLocked()V

    .line 15310
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 15313
    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkExcessivePowerUsageLocked(Z)V

    .line 15314
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v2, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 15315
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v2, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v1

    .line 15316
    .local v1, "nmsg":Landroid/os/Message;
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-wide/32 v4, 0xdbba0

    invoke-virtual {v2, v1, v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    goto :goto_1
.end method

.method updateSubWindowState(Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ProcessRecord;)V
    .locals 6
    .param p1, "r"    # Lcom/android/server/am/ActivityRecord;
    .param p2, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 24222
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v3}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v3

    if-eqz v3, :cond_1

    .line 24223
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->getLastStack()Lcom/android/server/am/ActivityStack;

    move-result-object v2

    .line 24224
    .local v2, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v2, :cond_2

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Lcom/android/server/am/ActivityRecord;)Lcom/android/server/am/ActivityRecord;

    move-result-object v1

    .line 24225
    .local v1, "prev":Lcom/android/server/am/ActivityRecord;
    :goto_0
    if-eqz v1, :cond_0

    invoke-virtual {v1}, Lcom/android/server/am/ActivityRecord;->hasSubWindow()Z

    move-result v3

    invoke-virtual {p1}, Lcom/android/server/am/ActivityRecord;->hasSubWindow()Z

    move-result v4

    if-eq v3, v4, :cond_1

    .line 24228
    :cond_0
    invoke-static {}, Landroid/hardware/display/DisplayManagerGlobal;->getInstance()Landroid/hardware/display/DisplayManagerGlobal;

    move-result-object v3

    const/4 v4, 0x0

    iget-object v5, p1, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    invoke-virtual {v3, v4, v5}, Landroid/hardware/display/DisplayManagerGlobal;->getDisplayInfo(ILandroid/os/IBinder;)Landroid/view/DisplayInfo;

    move-result-object v0

    .line 24229
    .local v0, "displayInfo":Landroid/view/DisplayInfo;
    if-eqz p2, :cond_1

    iget-object v3, p2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_1

    if-eqz v0, :cond_1

    .line 24231
    :try_start_0
    iget-object v3, p2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v3, v0}, Landroid/app/IApplicationThread;->scheduleDisplayMetricsChanged(Landroid/view/DisplayInfo;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 24237
    .end local v0    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v1    # "prev":Lcom/android/server/am/ActivityRecord;
    .end local v2    # "stack":Lcom/android/server/am/ActivityStack;
    :cond_1
    :goto_1
    return-void

    .line 24224
    .restart local v2    # "stack":Lcom/android/server/am/ActivityStack;
    :cond_2
    const/4 v1, 0x0

    goto :goto_0

    .line 24232
    .restart local v0    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v1    # "prev":Lcom/android/server/am/ActivityRecord;
    :catch_0
    move-exception v3

    goto :goto_1
.end method

.method updateUsageStats(Lcom/android/server/am/ActivityRecord;Z)V
    .locals 7
    .param p1, "component"    # Lcom/android/server/am/ActivityRecord;
    .param p2, "resumed"    # Z

    .prologue
    .line 5602
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v2}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v1

    .line 5603
    .local v1, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    if-eqz p2, :cond_3

    .line 5604
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v2, :cond_1

    .line 5607
    new-instance v0, Lcom/android/server/enterprise/application/ApplicationUsage;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v0, v2}, Lcom/android/server/enterprise/application/ApplicationUsage;-><init>(Landroid/content/Context;)V

    .line 5608
    .local v0, "appControl":Lcom/android/server/enterprise/application/ApplicationUsage;
    iget-object v2, p1, Lcom/android/server/am/ActivityRecord;->realActivity:Landroid/content/ComponentName;

    invoke-virtual {v2}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v2

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentPackage:Ljava/lang/String;

    .line 5609
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPreviousPackage:Ljava/lang/String;

    invoke-virtual {v2}, Ljava/lang/String;->length()I

    move-result v2

    if-nez v2, :cond_2

    .line 5610
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentPackage:Ljava/lang/String;

    iget v3, p1, Lcom/android/server/am/ActivityRecord;->userId:I

    invoke-virtual {v0, v2, v3}, Lcom/android/server/enterprise/application/ApplicationUsage;->appLaunchCount(Ljava/lang/String;I)V

    .line 5620
    :cond_0
    :goto_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    iget-object v3, p1, Lcom/android/server/am/ActivityRecord;->realActivity:Landroid/content/ComponentName;

    iget-object v4, p1, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    iget v5, p1, Lcom/android/server/am/ActivityRecord;->userId:I

    const/4 v6, 0x1

    invoke-virtual {v2, v3, v4, v5, v6}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Landroid/content/ComponentName;Landroid/content/Intent;II)V

    .line 5623
    .end local v0    # "appControl":Lcom/android/server/enterprise/application/ApplicationUsage;
    :cond_1
    monitor-enter v1

    .line 5624
    :try_start_0
    iget-object v2, p1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v2, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteActivityResumedLocked(I)V

    .line 5625
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 5638
    :goto_1
    return-void

    .line 5613
    .restart local v0    # "appControl":Lcom/android/server/enterprise/application/ApplicationUsage;
    :cond_2
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentPackage:Ljava/lang/String;

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPreviousPackage:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_0

    .line 5614
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPreviousPackage:Ljava/lang/String;

    iget v3, p1, Lcom/android/server/am/ActivityRecord;->userId:I

    invoke-virtual {v0, v2, v3}, Lcom/android/server/enterprise/application/ApplicationUsage;->appPauseTime(Ljava/lang/String;I)V

    .line 5615
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentPackage:Ljava/lang/String;

    iget v3, p1, Lcom/android/server/am/ActivityRecord;->userId:I

    invoke-virtual {v0, v2, v3}, Lcom/android/server/enterprise/application/ApplicationUsage;->appLaunchCount(Ljava/lang/String;I)V

    goto :goto_0

    .line 5625
    .end local v0    # "appControl":Lcom/android/server/enterprise/application/ApplicationUsage;
    :catchall_0
    move-exception v2

    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v2

    .line 5627
    :cond_3
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v2, :cond_4

    .line 5629
    iget-object v2, p1, Lcom/android/server/am/ActivityRecord;->realActivity:Landroid/content/ComponentName;

    invoke-virtual {v2}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v2

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPreviousPackage:Ljava/lang/String;

    .line 5631
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    iget-object v3, p1, Lcom/android/server/am/ActivityRecord;->realActivity:Landroid/content/ComponentName;

    iget-object v4, p1, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    iget v5, p1, Lcom/android/server/am/ActivityRecord;->userId:I

    const/4 v6, 0x2

    invoke-virtual {v2, v3, v4, v5, v6}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Landroid/content/ComponentName;Landroid/content/Intent;II)V

    .line 5634
    :cond_4
    monitor-enter v1

    .line 5635
    :try_start_2
    iget-object v2, p1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v2, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->noteActivityPausedLocked(I)V

    .line 5636
    monitor-exit v1

    goto :goto_1

    :catchall_1
    move-exception v2

    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v2
.end method

.method final verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;
    .locals 4
    .param p1, "intent"    # Landroid/content/Intent;

    .prologue
    .line 23507
    if-eqz p1, :cond_0

    invoke-virtual {p1}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v1

    const/4 v2, 0x1

    if-ne v1, v2, :cond_0

    .line 23508
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "File descriptors passed in Intent"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 23511
    :cond_0
    invoke-virtual {p1}, Landroid/content/Intent;->getFlags()I

    move-result v0

    .line 23513
    .local v0, "flags":I
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v1, :cond_1

    .line 23516
    const/high16 v1, 0x4000000

    and-int/2addr v1, v0

    if-eqz v1, :cond_2

    .line 23525
    :cond_1
    const/high16 v1, 0x2000000

    and-int/2addr v1, v0

    if-eqz v1, :cond_3

    .line 23526
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "Can\'t use FLAG_RECEIVER_BOOT_UPGRADE here"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 23518
    :cond_2
    const/high16 v1, 0x40000000    # 2.0f

    and-int/2addr v1, v0

    if-nez v1, :cond_1

    .line 23519
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Attempt to launch receivers of broadcast intent "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " before boot completion"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 23521
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Cannot broadcast before boot completed"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 23530
    :cond_3
    return-object p1
.end method

.method public willActivityBeVisible(Landroid/os/IBinder;)Z
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 7272
    monitor-enter p0

    .line 7273
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .line 7274
    .local v0, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v0, :cond_0

    .line 7275
    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStack;->willActivityBeVisibleLocked(Landroid/os/IBinder;)Z

    move-result v1

    monitor-exit p0

    .line 7277
    :goto_0
    return v1

    :cond_0
    const/4 v1, 0x0

    monitor-exit p0

    goto :goto_0

    .line 7278
    .end local v0    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method
