From 43373df8c22743651712a74e5467b7a4522a8b62 Mon Sep 17 00:00:00 2001
From: wangtongli <tongliwang@tju.edu.cn>
Date: Fri, 3 Feb 2017 22:43:27 +0800
Subject: [PATCH] fix cdma fc

---
 .../smali/com/android/server/telecom/Call.smali    |  76 +++++++++++-
 .../com/android/server/telecom/CallsManager.smali  |  64 +++++++++++
 .../telecom/ConnectionServiceWrapper$Adapter.smali | 128 +++++++++++++++++++++
 .../android/server/telecom/SimpleFeatures.smali    |  51 ++++++++
 4 files changed, 317 insertions(+), 2 deletions(-)

--- a/Telecom/smali/com/android/server/telecom/Call.smali
+++ b/Telecom/smali/com/android/server/telecom/Call.smali
@@ -101,6 +101,8 @@
 
 .field private mIntentExtras:Landroid/os/Bundle;
 
+.field private mIsCdmaRealActived:Z
+
 .field private mIsConference:Z
 
 .field private mIsEmergencyCall:Z
@@ -294,6 +296,10 @@
 
     iput-boolean v2, p0, Lcom/android/server/telecom/Call;->mIsLocallyDisconnecting:Z
 
+    const/4 v2, 0x0
+
+    iput-boolean v2, p0, Lcom/android/server/telecom/Call;->mIsCdmaRealActived:Z
+
     if-eqz p12, :cond_0
 
     const/4 v2, 0x5
@@ -1574,9 +1580,9 @@
 
     iget-wide v2, p0, Lcom/android/server/telecom/Call;->mDisconnectTimeMillis:J
 
-    cmp-long v0, v2, v0
+    cmp-long v2, v2, v0
 
-    if-nez v0, :cond_3
+    if-nez v2, :cond_3
 
     invoke-static {}, Ljava/lang/System;->currentTimeMillis()J
 
@@ -1589,6 +1595,37 @@
     goto :goto_0
 
     :cond_3
+    iget-boolean v2, p0, Lcom/android/server/telecom/Call;->mIsIncoming:Z
+
+    if-nez v2, :cond_4
+
+    iget-boolean v2, p0, Lcom/android/server/telecom/Call;->mIsCdmaRealActived:Z
+
+    if-nez v2, :cond_4
+
+    invoke-static {p0}, Lcom/android/server/telecom/SimpleFeatures;->isCdmaSupportRealActiveTime(Lcom/android/server/telecom/Call;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_4
+
+    invoke-virtual {p0}, Lcom/android/server/telecom/Call;->isConference()Z
+
+    move-result v2
+
+    if-nez v2, :cond_4
+
+    const-string v2, "getDurationMillis: return 0 for not real active cdma"
+
+    const/4 v3, 0x0
+
+    new-array v3, v3, [Ljava/lang/Object;
+
+    invoke-static {p0, v2, v3}, Lcom/android/server/telecom/Log;->i(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V
+
+    goto :goto_0
+
+    :cond_4
     iget-wide v0, p0, Lcom/android/server/telecom/Call;->mDisconnectTimeMillis:J
 
     iget-wide v2, p0, Lcom/android/server/telecom/Call;->mConnectTimeMillis:J
@@ -2821,6 +2858,25 @@
     return-void
 .end method
 
+.method setCdmaRealActived()V
+    .locals 2
+
+    .prologue
+    const-string v0, "setCdmaRealActived"
+
+    const/4 v1, 0x0
+
+    new-array v1, v1, [Ljava/lang/Object;
+
+    invoke-static {p0, v0, v1}, Lcom/android/server/telecom/Log;->i(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V
+
+    const/4 v0, 0x1
+
+    iput-boolean v0, p0, Lcom/android/server/telecom/Call;->mIsCdmaRealActived:Z
+
+    return-void
+.end method
+
 .method setConferenceableCalls(Ljava/util/List;)V
     .locals 3
     .annotation system Ldalvik/annotation/Signature;
@@ -2873,6 +2929,16 @@
     return-void
 .end method
 
+.method public setConnectTimeMillis(J)V
+    .locals 1
+    .param p1, "connectTimeMillis"    # J
+
+    .prologue
+    iput-wide p1, p0, Lcom/android/server/telecom/Call;->mConnectTimeMillis:J
+
+    return-void
+.end method
+
 .method setConnectionCapabilities(I)V
     .locals 1
     .param p1, "connectionCapabilities"    # I
--- a/Telecom/smali/com/android/server/telecom/CallsManager.smali
+++ b/Telecom/smali/com/android/server/telecom/CallsManager.smali
@@ -4489,6 +4489,63 @@
     goto :goto_0
 .end method
 
+.method resetCdmaConnectionTime(Lcom/android/server/telecom/Call;)V
+    .locals 5
+    .param p1, "call"    # Lcom/android/server/telecom/Call;
+
+    .prologue
+    const/4 v4, 0x5
+
+    invoke-virtual {p1}, Lcom/android/server/telecom/Call;->setCdmaRealActived()V
+
+    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J
+
+    move-result-wide v2
+
+    invoke-virtual {p1, v2, v3}, Lcom/android/server/telecom/Call;->setConnectTimeMillis(J)V
+
+    iget-object v2, p0, Lcom/android/server/telecom/CallsManager;->mCalls:Ljava/util/Set;
+
+    invoke-interface {v2, p1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_1
+
+    iget-object v2, p0, Lcom/android/server/telecom/CallsManager;->mListeners:Ljava/util/Set;
+
+    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;
+
+    move-result-object v0
+
+    .local v0, "i$":Ljava/util/Iterator;
+    :goto_0
+    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_0
+
+    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/telecom/CallsManager$CallsManagerListener;
+
+    .local v1, "listener":Lcom/android/server/telecom/CallsManager$CallsManagerListener;
+    invoke-interface {v1, p1, v4, v4}, Lcom/android/server/telecom/CallsManager$CallsManagerListener;->onCallStateChanged(Lcom/android/server/telecom/Call;II)V
+
+    goto :goto_0
+
+    .end local v1    # "listener":Lcom/android/server/telecom/CallsManager$CallsManagerListener;
+    :cond_0
+    invoke-direct {p0}, Lcom/android/server/telecom/CallsManager;->updateForegroundCall()V
+
+    .end local v0    # "i$":Ljava/util/Iterator;
+    :cond_1
+    return-void
+.end method
+
 .method setAudioRoute(I)V
     .locals 1
     .param p1, "route"    # I
--- a/Telecom/smali/com/android/server/telecom/ConnectionServiceWrapper$Adapter.smali
+++ b/Telecom/smali/com/android/server/telecom/ConnectionServiceWrapper$Adapter.smali
@@ -936,6 +936,122 @@
     throw v1
 .end method
 
+.method public resetCdmaConnectionTime(Ljava/lang/String;)V
+    .locals 8
+    .param p1, "callId"    # Ljava/lang/String;
+
+    .prologue
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v2
+
+    .local v2, "token":J
+    :try_start_0
+    iget-object v1, p0, Lcom/android/server/telecom/ConnectionServiceWrapper$Adapter;->this$0:Lcom/android/server/telecom/ConnectionServiceWrapper;
+
+    iget-object v4, v1, Lcom/android/server/telecom/ConnectionServiceWrapper;->mLock:Lcom/android/server/telecom/TelecomSystem$SyncRoot;
+
+    monitor-enter v4
+    :try_end_0
+    .catchall {:try_start_0 .. :try_end_0} :catchall_1
+
+    :try_start_1
+    iget-object v1, p0, Lcom/android/server/telecom/ConnectionServiceWrapper$Adapter;->this$0:Lcom/android/server/telecom/ConnectionServiceWrapper;
+
+    const-string v5, "resetCdmaConnectionTime %s"
+
+    const/4 v6, 0x1
+
+    new-array v6, v6, [Ljava/lang/Object;
+
+    const/4 v7, 0x0
+
+    aput-object p1, v6, v7
+
+    # invokes: Lcom/android/server/telecom/ConnectionServiceWrapper;->logIncoming(Ljava/lang/String;[Ljava/lang/Object;)V
+    invoke-static {v1, v5, v6}, Lcom/android/server/telecom/ConnectionServiceWrapper;->access$000(Lcom/android/server/telecom/ConnectionServiceWrapper;Ljava/lang/String;[Ljava/lang/Object;)V
+
+    iget-object v1, p0, Lcom/android/server/telecom/ConnectionServiceWrapper$Adapter;->this$0:Lcom/android/server/telecom/ConnectionServiceWrapper;
+
+    # getter for: Lcom/android/server/telecom/ConnectionServiceWrapper;->mCallIdMapper:Lcom/android/server/telecom/CallIdMapper;
+    invoke-static {v1}, Lcom/android/server/telecom/ConnectionServiceWrapper;->access$100(Lcom/android/server/telecom/ConnectionServiceWrapper;)Lcom/android/server/telecom/CallIdMapper;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p1}, Lcom/android/server/telecom/CallIdMapper;->isValidCallId(Ljava/lang/String;)Z
+
+    move-result v1
+
+    if-nez v1, :cond_0
+
+    iget-object v1, p0, Lcom/android/server/telecom/ConnectionServiceWrapper$Adapter;->this$0:Lcom/android/server/telecom/ConnectionServiceWrapper;
+
+    # getter for: Lcom/android/server/telecom/ConnectionServiceWrapper;->mCallIdMapper:Lcom/android/server/telecom/CallIdMapper;
+    invoke-static {v1}, Lcom/android/server/telecom/ConnectionServiceWrapper;->access$100(Lcom/android/server/telecom/ConnectionServiceWrapper;)Lcom/android/server/telecom/CallIdMapper;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p1}, Lcom/android/server/telecom/CallIdMapper;->isValidConferenceId(Ljava/lang/String;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_1
+
+    :cond_0
+    iget-object v1, p0, Lcom/android/server/telecom/ConnectionServiceWrapper$Adapter;->this$0:Lcom/android/server/telecom/ConnectionServiceWrapper;
+
+    # getter for: Lcom/android/server/telecom/ConnectionServiceWrapper;->mCallIdMapper:Lcom/android/server/telecom/CallIdMapper;
+    invoke-static {v1}, Lcom/android/server/telecom/ConnectionServiceWrapper;->access$100(Lcom/android/server/telecom/ConnectionServiceWrapper;)Lcom/android/server/telecom/CallIdMapper;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p1}, Lcom/android/server/telecom/CallIdMapper;->getCall(Ljava/lang/Object;)Lcom/android/server/telecom/Call;
+
+    move-result-object v0
+
+    .local v0, "call":Lcom/android/server/telecom/Call;
+    if-eqz v0, :cond_1
+
+    iget-object v1, p0, Lcom/android/server/telecom/ConnectionServiceWrapper$Adapter;->this$0:Lcom/android/server/telecom/ConnectionServiceWrapper;
+
+    # getter for: Lcom/android/server/telecom/ConnectionServiceWrapper;->mCallsManager:Lcom/android/server/telecom/CallsManager;
+    invoke-static {v1}, Lcom/android/server/telecom/ConnectionServiceWrapper;->access$300(Lcom/android/server/telecom/ConnectionServiceWrapper;)Lcom/android/server/telecom/CallsManager;
+
+    move-result-object v1
+
+    invoke-virtual {v1, v0}, Lcom/android/server/telecom/CallsManager;->resetCdmaConnectionTime(Lcom/android/server/telecom/Call;)V
+
+    .end local v0    # "call":Lcom/android/server/telecom/Call;
+    :cond_1
+    monitor-exit v4
+    :try_end_1
+    .catchall {:try_start_1 .. :try_end_1} :catchall_0
+
+    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    return-void
+
+    :catchall_0
+    move-exception v1
+
+    :try_start_2
+    monitor-exit v4
+    :try_end_2
+    .catchall {:try_start_2 .. :try_end_2} :catchall_0
+
+    :try_start_3
+    throw v1
+    :try_end_3
+    .catchall {:try_start_3 .. :try_end_3} :catchall_1
+
+    :catchall_1
+    move-exception v1
+
+    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    throw v1
+.end method
+
 .method public setActive(Ljava/lang/String;)V
     .locals 8
     .param p1, "callId"    # Ljava/lang/String;
--- a/Telecom/smali/com/android/server/telecom/SimpleFeatures.smali
+++ b/Telecom/smali/com/android/server/telecom/SimpleFeatures.smali
@@ -845,6 +845,52 @@
     goto :goto_0
 .end method
 
+.method public static isCdmaSupportRealActiveTime(Lcom/android/server/telecom/Call;)Z
+    .locals 4
+    .param p0, "call"    # Lcom/android/server/telecom/Call;
+
+    .prologue
+    invoke-static {p0}, Lcom/android/server/telecom/SimpleFeatures;->getSubId(Lcom/android/server/telecom/Call;)I
+
+    move-result v1
+
+    .local v1, "subId":I
+    invoke-static {}, Lmiui/telephony/TelephonyManager;->getDefault()Lmiui/telephony/TelephonyManager;
+
+    move-result-object v2
+
+    invoke-virtual {v2, v1}, Lmiui/telephony/TelephonyManager;->getNetworkOperatorForSubscription(I)Ljava/lang/String;
+
+    move-result-object v0
+
+    .local v0, "operator":Ljava/lang/String;
+    if-eqz v0, :cond_0
+
+    invoke-virtual {v0}, Ljava/lang/String;->isEmpty()Z
+
+    move-result v2
+
+    if-nez v2, :cond_0
+
+    invoke-static {}, Lmiui/telephony/TelephonyManager;->getDefault()Lmiui/telephony/TelephonyManager;
+
+    move-result-object v2
+
+    const-string v3, "46003"
+
+    invoke-virtual {v2, v3, v0}, Lmiui/telephony/TelephonyManager;->isSameOperator(Ljava/lang/String;Ljava/lang/String;)Z
+
+    move-result v2
+
+    :goto_0
+    return v2
+
+    :cond_0
+    const/4 v2, 0x0
+
+    goto :goto_0
+.end method
+
 .method public static logCall(Lcom/android/internal/telephony/CallerInfo;Landroid/content/Context;Ljava/lang/String;IILandroid/telecom/PhoneAccountHandle;JIILcom/android/server/telecom/SimpleFeatures$CallLogArgsExtra;)Landroid/net/Uri;
     .locals 24
     .param p0, "ci"    # Lcom/android/internal/telephony/CallerInfo;
-- 
1.9.1

